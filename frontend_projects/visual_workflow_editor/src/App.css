html, body, #root {
  height: 100%;
}

:root {
  --toolbar-height: 56px;
}

.app {
  height: 100vh;
  overflow: hidden;
  display: flex;
  flex-direction: column;
}

.app-header {
  background: #fff;
  border-bottom: 1px solid #f0f0f0;
  padding: 0 16px;
  display: flex;
  align-items: center;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);
  flex-shrink: 0;
  height: var(--toolbar-height, 56px);
}

.app-sider {
  background: #fafafa;
  border-right: 1px solid #f0f0f0;
  height: calc(100vh - var(--toolbar-height, 56px));
  overflow-y: auto;
}

.app-sider:last-child {
  border-right: none;
  border-left: 1px solid #f0f0f0;
}

.app-content {
  background: #fff;
  height: calc(100vh - var(--toolbar-height, 56px));
  overflow: hidden;
  position: relative;
  flex: 1;
}

/* 工作流画布容器 */
.workflow-canvas {
  height: calc(100vh - var(--toolbar-height, 56px) - 2rem);
}

/* 画布包装容器 */
.canvas-wrap {
  height: 100%;
  width: 100%;
}

/* 显式 React Flow 父容器尺寸以避免 Error#004 */
.rf-host {
  position: relative;
  width: 100%;
  height: 100%;
}

/* React Flow 根容器 */
.canvas-root {
  height: 100% !important;
  width: 100% !important;
}

/* React Flow 样式覆盖 - 符合UI规范 */
.react-flow__node {
  border-radius: 4px; /* 圆角≤4px */
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
  border: 2px solid #e5e7eb;
  background: #fff;
  transition: all 0.15s ease; /* 减少动画时长提升性能 */
  /* 关键：容器不限定固定宽高，由子内容自适应（避免被测量为正方形） */
  width: auto !important;
  height: auto !important;
}

/* 防止节点内部卡片被错误拉成正方形（统一解除任何隐式 aspect-ratio 或固定高） */
.react-flow__node > div {
  display: inline-block;        /* 由内容决定高度 */
  height: auto !important;      /* 高度自适应内容 */
  width: fit-content;           /* 宽度由内容/Min/Max 控制，更贴近内容 */
  max-width: 100%;              /* 不超出画布测量容器 */
  aspect-ratio: auto !important;/* 取消固定宽高比 */
}

/* 将 hover 效果应用到“内部卡片”而非外层容器，避免出现正方形阴影 */
.react-flow__node:hover > div {
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.12);
  /* 内部卡片的边框在各 Node 组件中自行设为黑色（如 border-black） */
}

/* 选中态同样仅作用于内部卡片，外层容器保持透明以消除正方形 */
.react-flow__node.selected > div {
  box-shadow: 0 0 0 2px rgba(11, 11, 11, 0.15); /* 黑色阴影 */
}

.react-flow__handle {
  width: 16px; /* 增大句柄尺寸至16px */
  height: 16px;
  border: 3px solid #fff;
  background: #0B0B0B; /* 黑色句柄 */
  border-radius: 2px; /* 圆角≤4px - 使用2px */
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.15); /* 微妙阴影 */
  transition: all 0.15s ease; /* 微交互 */
}

.react-flow__handle:hover {
  background: #374151; /* hover状态变灰 */
  transform: scale(1.1); /* 微妙缩放反馈 */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.25);
}

/* 增大句柄点击区域至48x48px (通过伪元素) */
.react-flow__handle::after {
  content: '';
  position: absolute;
  left: -16px;
  top: -16px;
  width: 48px;
  height: 48px;
  background: transparent;
  pointer-events: auto;
}

.react-flow__handle-top {
  top: -8px; /* 调整位置适配新尺寸 */
}

.react-flow__handle-bottom {
  bottom: -8px;
}

.react-flow__handle-left {
  left: -8px;
}

.react-flow__handle-right {
  right: -8px;
}

.react-flow__edge-path {
  stroke: #4b5563; /* 更深的灰色提高对比度 */
  stroke-width: 2;
  stroke-linecap: round; /* 圆形线帽 */
  stroke-linejoin: round; /* 圆形连接 */
  transition: all 0.15s ease;
}

.react-flow__edge:hover .react-flow__edge-path {
  stroke: #374151; /* hover态深灰色 */
  stroke-width: 3;
}

.react-flow__edge.selected .react-flow__edge-path {
  stroke: #0B0B0B; /* 黑色选中态 */
  stroke-width: 3;
}

/* 连接线端点美化 */
.react-flow__edge .react-flow__edge-text {
  font-size: 12px;
  color: #374151;
  background: rgba(255, 255, 255, 0.9);
  padding: 4px 8px;
  border-radius: 2px;
  border: 1px solid #e5e7eb;
}

.react-flow__controls {
  bottom: 20px;
  left: 20px;
}

.react-flow__minimap {
  bottom: 20px;
  right: 20px;
}

/* 节点类型特定样式 - 黑白极简 */
.node-llm {
  border-left: 4px solid #0B0B0B;
}

.node-llm .react-flow__handle {
  background: #0B0B0B;
}

.node-input {
  border-left: 4px solid #374151;
}

.node-input .react-flow__handle {
  background: #374151;
}

.node-output {
  border-left: 4px solid #6b7280;
}

.node-output .react-flow__handle {
  background: #6b7280;
}

.node-code {
  border-left: 4px solid #4b5563;
}

.node-code .react-flow__handle {
  background: #4b5563;
}

/* 响应式设计 */
@media (max-width: 1200px) {
  .app-sider {
    width: 200px !important;
  }
}

@media (max-width: 768px) {
  .app-sider {
    width: 150px !important;
  }
  
  .app-header {
    padding: 0 8px;
  }
}
/* 右侧属性栏容器样式（遵循黑/白/灰极简规范） */
.right-panel-shell {
  position: relative; /* 使内部绝对定位分割条以该容器为参照 */
  flex: 0 0 auto;
  flex-shrink: 0;
  box-sizing: border-box;
  border-left: 1px solid #e5e7eb;
  background: #ffffff;
  transition: none;
}

/* 显式右侧属性面板分割条（8px） */
.right-panel-resize-handle {
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 8px;
  cursor: col-resize;
  background: transparent; /* 常态透明 */
  z-index: 1450; /* 画布之上，且略高于展开手柄(1400) */
  user-select: none;
  touch-action: none;
}

/* 悬停时轻微显示一条浅灰参考线（黑白极简） */
.right-panel-resize-handle::before {
  content: '';
  position: absolute;
  left: 3px; /* 8px 宽度中心附近显示 2px 线条 */
  top: 0;
  width: 2px;
  height: 100%;
  background: transparent;
  transition: background-color 0.15s ease;
}

.right-panel-resize-handle:hover::before {
  background: #e5e7eb;
}
/* 右侧属性面板展开手柄
   - 固定定位于视窗右侧中部（不随滚动偏移）
   - 黑白极简风格、圆角≤4px、触达面积≥48×48
   - z-index 1400：位于画布之上，低于 Drawer(1500)
*/
.right-panel-expand-handle {
  position: fixed; /* 固定于视窗 */
  right: 8px;      /* 4/8pt 间距规范 */
  top: 50%;
  transform: translateY(-50%);
  width: 48px;
  height: 48px;
  background: #FFFFFF;
  color: #0B0B0B;
  border: 1px solid #0B0B0B;
  border-radius: 2px;
  z-index: 1400;   /* 画布之上，Drawer(1500)之下 */
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-weight: 700;
  cursor: pointer;
}
.right-panel-expand-handle:hover {
  box-shadow: 0 1px 2px rgba(0,0,0,0.06);
}