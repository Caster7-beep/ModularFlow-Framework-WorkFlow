[
  {
    "role": "assistant",
    "content": "{{python:1+1}}早晨九点的阳光穿过起居室的玻璃窗，在擦拭得光亮的木地板上投下几块暖黄色的方形光斑。空气里浮动着庭院中玫瑰花丛散发出的淡淡甜香，与木制家具的沉静气息混合在一起。一张铺着白色蕾丝桌布的圆桌摆放在房间中央，上面放着一套绘有蓝色矢车菊图案的瓷质茶具。\r\n\r\n心正站在桌边，将刚刚泡好的红茶倒入三只茶杯中。水汽袅袅升起，模糊了她低垂的面庞。她穿着一件淡蓝色的棉质连衣裙，白色的圣女外袍罩在外面，动作轻缓而专注。柔顺的黑发垂落在肩头，左侧那枚旧旧的四叶草发饰在阳光下反射出柔和的光泽。\r\n\r\n“{{user}}哥哥，姐姐！‘圣女实习修行’的第一次晨会，现在正式开始！”\r\n\r\n露的声音从沙发的方向传来。她挺直了小小的腰板，坐在柔软的沙发垫上，双腿并拢，双手郑重地捧着一本有着粉色硬壳封面的小册子。一束栗色的侧马尾随着她说话的动作，在肩头俏皮地弹动。她身上的改良式短款圣女服，裙摆的荷叶边微微翘起。\r\n\r\n她清了清嗓子，将小册子翻开，举到面前。\r\n\r\n“根据本圣女亲手制定的《圣女守则》第一卷，第一章，第一条：作为一名合格的圣女，必须以优雅与庄严开启每一天！因此，晨间祷告前，必须享用能带来神圣能量的甜点以净化心灵！指导牧师应负责准备！”\r\n\r\n露念完，把册子“啪”地一声合上，抬起下巴看着你。\r\n\r\n心端着托盘走了过来，将两杯茶分别放在你和露面前的桌上。她自己则在你旁边的位置坐下，将第三杯茶放在自己面前。\r\n\r\n“小露，自己想吃点心就直说嘛，为什么要加上这么复杂的规矩呢。”\r\n\r\n“姐姐！这可不是规矩，这是‘守则’！是通往伟大圣女之路的基石！对不对，{{user}}哥哥？”\r\n\r\n露把身体前倾，双手撑在桌面上，湖蓝色的眼瞳直直地看着你。\r\n\r\n“{{user}}哥哥可是我的专属指导牧师，一定会理解并支持我的，对吧？快去吧，本圣女今天要吃镇上那家‘甜蜜蜂巢’的草莓千层酥，还有覆盆子挞！这是为了修行，绝对不是因为我想吃哦！”\r\n\r\n她一边说，一边还煞有介事地点了点头，仿佛在强调自己话语的真实性。\r\n\r\n心拿起自己的茶杯，轻轻吹了吹热气，然后小口啜饮着。\r\n\r\n“{{user}}，辛苦你了，第一天就要应付小露的鬼点子。”\r\n\r\n她放下茶杯，从旁边的小碟子里拿起一块刚烤好的黄油曲奇，递到你的嘴边。\r\n\r\n“先吃点东西垫一下吧。不然，我怕你还没走到点心店就要饿坏了。”\r\n\r\n“姐姐！你怎么能直接投喂指导牧师呢！这是在破坏修行的神圣性！《圣女守则》第二章第三条明确规定，指导牧师在修行期间必须保持清心寡欲！至少……至少要先把我的点心买回来才能吃东西！”\r\n\r\n露从沙发上站起来，绕过桌子走到你身边，双手叉腰，鼓起了脸颊。\r\n\r\n“不行！{{user}}哥哥，在你完成任务之前，不准吃姐姐给的任何东西！”\r\n\r\n她伸出小手，试图去拦住心递过来的曲奇饼干。\r\n\r\n<UpdateVariable>\r\n  <Analysis>\r\n  - The initial interaction establishes the characters' baseline personalities. No significant actions have occurred to alter affection levels yet.\r\n  - `露.好感度` is currently 20, which is below the 50 threshold needed to activate `心.醋意值`. Therefore, `心.醋意值` remains at 0 and does not need to be updated.\r\n  - Heart's confession triggers have not been met. The situation is a calm, comedic daily life scene, and `心.醋意值` is 0.\r\n  - No \"偷跑\" or \"被抓包\" events have occurred.\r\n  - All descriptive variables (`内心所想`, `当前位置`, `着装`) must be updated to reflect the opening scene.\r\n  - The scene depicts the morning routine, a short interaction, so a small amount of time has passed.\r\n  </Analysis>\r\n  _.set('全局.日期', '', '圣三一历1145年 新绿之月 第12天');\r\n  _.set('全局.时间', '', '09:05');//早晨的第一次晨会\r\n  _.set('心.内心所想', '', '希望小露不要给{{user}}添太多麻烦，看到他们两个这样吵吵闹闹的，感觉真好。');\r\n  _.set('心.当前位置', '', '坐在起居室的圆桌旁，身体微侧，正将一块曲奇递向{{user}}。');\r\n  _.set('心.着装', '', '一件淡蓝色的棉质连衣裙，裙摆长及小腿，外面罩着一件白色的圣女外袍，领口和袖口有简单的金色刺绣。柔顺的黑色长发披在身后，左侧别着一枚四叶草发饰。');\r\n  _.set('露.内心所想', '', '哼哼，指导牧师可不能这么容易就被姐姐收买了！一定要让他见识一下本圣女的威严才行！');\r\n  _.set('露.当前位置', '', '站在{{user}}的身边，双手叉腰，身体前倾，试图阻止心喂食的动作。');\r\n  _.set('露.着装', '', '改良过的短款白色圣女服，裙摆只到膝盖上方，带有荷叶边与蕾丝装饰。栗色的头发用一根粉色的缎带束成一个活力十足的侧马尾。');\r\n</UpdateVariable>\r\n<StatusPlaceHolderImpl/>"
  },
  {
    "role": "user",
    "content": "```\n<!doctype html>\n<html lang=\"zh-CN\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>天气动效卡片 · 四季氛围</title>\n  <style>\n    :root {\n      /* 基础深色主题变量（会被 JS 按天气覆盖） */\n      --bg-start: #0b1120; /* slate-950 */\n      --bg-end: #020617;   /* slate-950 更深 */\n      --accent: #fbbf24;   /* amber-400 */\n      --text-primary: #e2e8f0; /* slate-200 */\n      --text-dim: #94a3b8;     /* slate-400 */\n      --card-bg: rgba(255, 255, 255, 0.06);\n      --card-stroke: rgba(255, 255, 255, 0.18);\n      --shadow-color: rgba(0, 0, 0, 0.5);\n      --glow: rgba(251, 191, 36, 0.35);\n      --ring: rgba(255, 255, 255, 0.25);\n      --btn-bg: rgba(255, 255, 255, 0.04);\n      --btn-hover: rgba(255, 255, 255, 0.08);\n      --btn-active: rgba(255, 255, 255, 0.16);\n      --card-radius: 24px;\n      --transition-fast: 220ms;\n      --transition-slow: 600ms;\n    }\n\n    * { box-sizing: border-box; }\n    html, body { height: 100%; }\n    body {\n      margin: 0;\n      color: var(--text-primary);\n      background: radial-gradient(circle at 30% 10%, rgba(255,255,255,0.06), transparent 40%),\n                  linear-gradient(120deg, var(--bg-start), var(--bg-end));\n      transition: background var(--transition-slow) ease;\n      font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial, Noto Sans, \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei\", sans-serif;\n      overflow: hidden; /* 保证粒子全屏绘制时不出现滚动条 */\n    }\n\n    /* 堆叠的全屏背景层：双缓冲画布，交叉淡入 */\n    #bg-stack {\n      position: fixed; inset: 0; z-index: 0; pointer-events: none;\n    }\n    .bg-canvas {\n      position: absolute; inset: 0; overflow: hidden; opacity: 0;\n      transition: opacity var(--transition-slow) ease;\n      will-change: opacity;\n    }\n    .bg-canvas.visible { opacity: 1; }\n\n    /* 叠加的柔和渐变，与主题变量联动，统一氛围 */\n    .bg-soft-gradient {\n      position: absolute; inset: 0; pointer-events: none; mix-blend-mode: screen;\n      background:\n        radial-gradient(circle at 20% 30%, color-mix(in srgb, var(--accent) 22%, transparent) 0%, transparent 55%),\n        radial-gradient(circle at 80% 10%, color-mix(in srgb, var(--accent) 16%, transparent) 0%, transparent 50%),\n        radial-gradient(circle at 50% 80%, color-mix(in srgb, var(--accent) 10%, transparent) 0%, transparent 55%);\n      transition: background var(--transition-slow) ease;\n    }\n\n    /* 页面布局 */\n    .page {\n      position: relative; z-index: 1; height: 100%;\n      display: grid; place-items: center; padding: 32px; gap: 24px;\n    }\n\n    /* 顶部控制栏（移动端下沉到底部） */\n    .toolbar {\n      position: fixed; left: 50%; transform: translateX(-50%);\n      top: 24px; display: flex; gap: 12px; padding: 10px; border-radius: 999px;\n      background: color-mix(in srgb, var(--bg-start) 60%, transparent);\n      backdrop-filter: blur(12px) saturate(140%);\n      -webkit-backdrop-filter: blur(12px) saturate(140%);\n      border: 1px solid var(--card-stroke);\n      box-shadow: 0 10px 30px -10px var(--shadow-color), 0 0 0 1px color-mix(in srgb, var(--ring) 35%, transparent);\n      z-index: 2;\n    }\n    @media (max-width: 640px) {\n      .toolbar { bottom: 24px; top: auto; }\n    }\n\n    .tool-btn {\n      appearance: none; border: 0; border-radius: 999px;\n      padding: 10px 16px; color: var(--text-primary); cursor: pointer; font-size: 14px; letter-spacing: 0.02em;\n      background: var(--btn-bg); transition: transform var(--transition-fast) ease, background var(--transition-fast) ease, box-shadow var(--transition-fast) ease, color var(--transition-fast) ease;\n      box-shadow: inset 0 0 0 1px color-mix(in srgb, var(--ring) 40%, transparent);\n      display: inline-flex; align-items: center; gap: 8px;\n    }\n    .tool-btn:hover { background: var(--btn-hover); }\n    .tool-btn:active { transform: scale(0.98); background: var(--btn-active); }\n    .tool-btn[aria-pressed=\"true\"] {\n      background: color-mix(in srgb, var(--accent) 18%, transparent);\n      box-shadow:\n        0 8px 26px -12px color-mix(in srgb, var(--accent) 55%, transparent),\n        inset 0 0 0 1px color-mix(in srgb, var(--accent) 50%, transparent);\n      color: #ffffff;\n    }\n    .dot {\n      width: 8px; height: 8px; border-radius: 999px; background: var(--accent);\n      box-shadow: 0 0 12px var(--accent), 0 0 24px color-mix(in srgb, var(--accent) 55%, transparent);\n    }\n\n    /* 玻璃拟态天气卡片 */\n    .card-wrap {\n      width: min(92vw, 460px);\n    }\n    .card {\n      border-radius: var(--card-radius);\n      background: linear-gradient(to bottom right, color-mix(in srgb, var(--card-bg) 100%, transparent), color-mix(in srgb, var(--card-bg) 90%, transparent));\n      backdrop-filter: blur(18px) saturate(160%);\n      -webkit-backdrop-filter: blur(18px) saturate(160%);\n      border: 1px solid var(--card-stroke);\n      box-shadow:\n        0 20px 60px -20px var(--shadow-color),\n        0 2px 0 0 color-mix(in srgb, #ffffff 5%, transparent) inset,\n        0 -2px 0 0 color-mix(in srgb, #000000 10%, transparent) inset,\n        0 0 0 1px color-mix(in srgb, var(--ring) 45%, transparent);\n      padding: 28px; position: relative; overflow: hidden;\n      transition: box-shadow var(--transition-slow) ease, border-color var(--transition-slow) ease;\n    }\n    .card::after {\n      content: \"\"; position: absolute; inset: 0; pointer-events: none;\n      background: radial-gradient(circle at 10% 0%, color-mix(in srgb, var(--accent) 16%, transparent), transparent 60%);\n      mix-blend-mode: overlay; opacity: 0.9; transition: background var(--transition-slow) ease;\n    }\n\n    .card-header { display: flex; align-items: center; justify-content: space-between; gap: 16px; }\n    .city {\n      font-size: clamp(18px, 2.2vw, 22px); font-weight: 600; letter-spacing: 0.02em;\n    }\n    .desc {\n      color: var(--text-dim); font-size: clamp(13px, 1.8vw, 14px);\n    }\n\n    .temp {\n      display: flex; align-items: flex-end; gap: 12px; margin-top: 28px; margin-bottom: 18px;\n    }\n    .temp .value {\n      font-size: clamp(48px, 8vw, 72px); font-weight: 700; line-height: 1; letter-spacing: -0.03em;\n      text-shadow: 0 8px 30px color-mix(in srgb, var(--accent) 20%, transparent);\n    }\n    .temp .unit {\n      font-size: clamp(18px, 2.5vw, 24px); color: var(--text-dim); margin-bottom: 8px;\n    }\n\n    .meta {\n      display: grid; grid-template-columns: repeat(3, 1fr); gap: 12px; margin-top: 18px;\n    }\n    .meta-item {\n      border-radius: 16px; padding: 14px; background: color-mix(in srgb, var(--btn-bg) 100%, transparent);\n      border: 1px solid color-mix(in srgb, var(--ring) 40%, transparent);\n      transition: background var(--transition-fast) ease, border-color var(--transition-fast) ease;\n    }\n    .meta-item:hover { background: var(--btn-hover); }\n    .meta-label { font-size: 12px; color: var(--text-dim); margin-bottom: 6px; }\n    .meta-value { font-size: 16px; font-weight: 600; }\n\n    .refresh {\n      margin-top: 24px; width: 100%; padding: 14px 16px; border-radius: 16px; border: 0; cursor: pointer; color: #0f172a;\n      background: var(--accent); font-weight: 600; letter-spacing: 0.02em;\n      box-shadow: 0 16px 40px -16px color-mix(in srgb, var(--accent) 65%, transparent), 0 0 0 1px color-mix(in srgb, var(--accent) 40%, transparent) inset;\n      transition: transform var(--transition-fast) ease, box-shadow var(--transition-fast) ease, filter var(--transition-fast) ease;\n    }\n    .refresh:hover { filter: brightness(1.05); }\n    .refresh:active { transform: translateY(1px) scale(0.995); }\n\n    /* 图标（纯 CSS 简易图形） */\n    .ico { width: 18px; height: 18px; position: relative; display: inline-block; }\n    .ico.sun::before { content: \"\"; position: absolute; inset: 2px; border-radius: 999px; background: radial-gradient(circle, #fde047, #fbbf24 60%, #f59e0b 100%); box-shadow: 0 0 20px color-mix(in srgb, var(--accent) 60%, transparent); }\n    .ico.cloud::before, .ico.cloud::after {\n      content: \"\"; position: absolute; border-radius: 999px; background: #e5e7eb; opacity: 0.9;\n      box-shadow: 0 2px 6px rgba(0,0,0,0.2) inset;\n    }\n    .ico.cloud::before { width: 14px; height: 10px; bottom: 2px; left: 0; }\n    .ico.cloud::after { width: 12px; height: 12px; bottom: 2px; left: 6px; }\n    .ico.rain::before { content: \"\"; position: absolute; width: 2px; height: 14px; background: linear-gradient(to bottom, rgba(255,255,255,0), rgba(255,255,255,0.8)); border-radius: 2px; left: 8px; top: 2px; transform: rotate(12deg); }\n    .ico.snow::before { content: \"✦\"; position: absolute; color: #ffffff; font-size: 16px; left: 1px; top: -1px; text-shadow: 0 0 8px rgba(255,255,255,0.7); }\n    .ico.wind::before { content: \"\"; position: absolute; left: 0; right: 0; top: 7px; height: 2px; border-radius: 2px; background: currentColor; box-shadow: 0 -6px 0 0 currentColor, 0 6px 0 0 currentColor; }\n\n    /* ========== 动画元素（不同天气的粒子/元素） ========== */\n    .sun-orb {\n      position: absolute; width: 220px; height: 220px; border-radius: 999px; right: 8vw; top: 10vh;\n      background: radial-gradient(circle, #fde047, #fbbf24 60%, #f59e0b 100%);\n      box-shadow:\n        0 0 80px 10px color-mix(in srgb, #fde047 60%, transparent),\n        0 0 160px 40px color-mix(in srgb, #fbbf24 35%, transparent);\n      filter: saturate(120%);\n      animation: sun-pulse 6s ease-in-out infinite;\n      opacity: 0.95;\n    }\n    @keyframes sun-pulse {\n      0%, 100% { transform: scale(1); }\n      50% { transform: scale(1.04); }\n    }\n\n    .clouds { position: absolute; inset: 0; }\n    .cloud {\n      position: absolute; height: 60px; width: 140px; border-radius: 999px; background: linear-gradient(to bottom, rgba(255,255,255,0.95), rgba(255,255,255,0.85));\n      box-shadow: 0 16px 40px -12px rgba(0,0,0,0.35);\n      filter: blur(0.3px);\n      animation: cloud-drift linear infinite;\n    }\n    .cloud::before, .cloud::after {\n      content: \"\"; position: absolute; background: inherit; border-radius: inherit; box-shadow: inherit;\n    }\n    .cloud::before { width: 80px; height: 80px; left: 16px; top: -30px; }\n    .cloud::after { width: 100px; height: 100px; left: 54px; top: -50px; }\n    @keyframes cloud-drift {\n      0% { transform: translateX(-20%); }\n      100% { transform: translateX(120%); }\n    }\n\n    .raindrop {\n      position: absolute; width: 2px; height: 14px; border-radius: 2px; opacity: var(--o, 0.7);\n      background: linear-gradient(to bottom, rgba(255,255,255,0), rgba(255,255,255,0.9));\n      transform: translate3d(0, -10vh, 0) rotate(12deg);\n      animation: rain-fall var(--dur, 1200ms) var(--delay, 0ms) linear infinite;\n      will-change: transform;\n      filter: drop-shadow(0 0 2px rgba(255,255,255,0.25));\n    }\n    @keyframes rain-fall {\n      to { transform: translate3d(var(--wind, 18px), 110vh, 0) rotate(12deg); }\n    }\n\n    .snowflake {\n      position: absolute; width: 6px; height: 6px; border-radius: 999px; background: #ffffff; opacity: var(--o, 0.9);\n      box-shadow: 0 0 8px rgba(255,255,255,0.7);\n      transform: translate3d(0, -10vh, 0);\n      animation: snow-fall var(--dur, 10s) var(--delay, 0ms) linear infinite;\n      will-change: transform;\n    }\n    @keyframes snow-fall {\n      to { transform: translate3d(var(--drift, 40px), 110vh, 0) rotate(360deg); }\n    }\n\n    .leaf {\n      position: absolute; width: 18px; height: 8px; border-radius: 8px; background: linear-gradient(to right, #10b981, #22d3ee);\n      box-shadow: 0 4px 10px rgba(0,0,0,0.35);\n      opacity: var(--o, 0.85);\n      transform: translate3d(-10vw, 0, 0) rotate(0deg);\n      animation: leaf-glide var(--dur, 6s) var(--delay, 0ms) linear infinite;\n    }\n    .leaf::after {\n      content: \"\"; position: absolute; inset: 0; border-radius: 8px; background: linear-gradient(to right, rgba(255,255,255,0.6), rgba(255,255,255,0)); mix-blend-mode: overlay; opacity: 0.6;\n    }\n    @keyframes leaf-glide {\n      0% { transform: translate3d(-10vw, var(--startY, 0vh), 0) rotate(0deg); }\n      50% { transform: translate3d(50vw, calc(var(--startY, 0vh) + 20vh), 0) rotate(180deg); }\n      100% { transform: translate3d(110vw, calc(var(--startY, 0vh) + 0vh), 0) rotate(360deg); }\n    }\n\n    /* 轻微淡入动画，用于卡片在模式切换后的细腻反馈 */\n    .fade-in { animation: fade-in var(--transition-slow) ease both; }\n    @keyframes fade-in { from { opacity: 0; transform: translateY(8px); } to { opacity: 1; transform: translateY(0); } }\n\n    /* 减少动画偏好 */\n    @media (prefers-reduced-motion: reduce) {\n      .bg-canvas, .card, .tool-btn, .refresh { transition: none !important; }\n      .sun-orb, .cloud, .raindrop, .snowflake, .leaf { animation-duration: 0.001ms !important; animation-iteration-count: 1 !important; }\n    }\n  </style>\n</head>\n<body>\n  <div id=\"bg-stack\" aria-hidden=\"true\">\n    <div class=\"bg-canvas\" id=\"canvas-a\"></div>\n    <div class=\"bg-canvas\" id=\"canvas-b\"></div>\n    <div class=\"bg-soft-gradient\"></div>\n  </div>\n\n  <nav class=\"toolbar\" role=\"tablist\" aria-label=\"天气切换\">\n    <button class=\"tool-btn\" role=\"tab\" aria-selected=\"true\" aria-pressed=\"true\" data-weather=\"sunny\" title=\"晴天\">\n      <span class=\"ico sun\" aria-hidden=\"true\"></span>\n      晴\n    </button>\n    <button class=\"tool-btn\" role=\"tab\" aria-selected=\"false\" aria-pressed=\"false\" data-weather=\"rain\" title=\"雨天\">\n      <span class=\"ico rain\" aria-hidden=\"true\"></span>\n      雨\n    </button>\n    <button class=\"tool-btn\" role=\"tab\" aria-selected=\"false\" aria-pressed=\"false\" data-weather=\"snow\" title=\"下雪\">\n      <span class=\"ico snow\" aria-hidden=\"true\"></span>\n      雪\n    </button>\n    <button class=\"tool-btn\" role=\"tab\" aria-selected=\"false\" aria-pressed=\"false\" data-weather=\"wind\" title=\"大风\">\n      <span class=\"ico wind\" aria-hidden=\"true\"></span>\n      风\n    </button>\n  </nav>\n\n  <main class=\"page\">\n    <section class=\"card-wrap\" aria-live=\"polite\" aria-atomic=\"true\">\n      <article class=\"card\" id=\"weather-card\">\n        <header class=\"card-header\">\n          <div>\n            <div class=\"city\" id=\"city\">上海</div>\n            <div class=\"desc\" id=\"desc\">局部多云</div>\n          </div>\n          <span class=\"dot\" aria-hidden=\"true\"></span>\n        </header>\n\n        <div class=\"temp\">\n          <div class=\"value\" id=\"temp\">27</div>\n          <div class=\"unit\">°C</div>\n        </div>\n\n        <div class=\"meta\">\n          <div class=\"meta-item\">\n            <div class=\"meta-label\">体感</div>\n            <div class=\"meta-value\" id=\"feels\">26°C</div>\n          </div>\n          <div class=\"meta-item\">\n            <div class=\"meta-label\">湿度</div>\n            <div class=\"meta-value\" id=\"humidity\">58%</div>\n          </div>\n          <div class=\"meta-item\">\n            <div class=\"meta-label\">风速</div>\n            <div class=\"meta-value\" id=\"wind\">6 m/s</div>\n          </div>\n        </div>\n\n        <button class=\"refresh\" id=\"refresh\" type=\"button\" aria-label=\"刷新示例数据\">刷新示例数据</button>\n      </article>\n    </section>\n  </main>\n\n  <script>\n    (function() {\n      const btns = Array.from(document.querySelectorAll('.tool-btn'));\n      const canvasA = document.getElementById('canvas-a');\n      const canvasB = document.getElementById('canvas-b');\n      const softGradient = document.querySelector('.bg-soft-gradient');\n      const card = document.getElementById('weather-card');\n\n      const cityEl = document.getElementById('city');\n      const descEl = document.getElementById('desc');\n      const tempEl = document.getElementById('temp');\n      const feelsEl = document.getElementById('feels');\n      const humidityEl = document.getElementById('humidity');\n      const windEl = document.getElementById('wind');\n      const refreshBtn = document.getElementById('refresh');\n\n      let active = 'sunny';\n      let useAVisible = true; // 双缓冲可见层标记\n\n      const prefersReduced = window.matchMedia('(prefers-reduced-motion: reduce)').matches;\n\n      const cities = ['上海', '北京', '杭州', '深圳', '广州', '成都', '重庆', '武汉', '南京', '西安'];\n\n      const themes = {\n        sunny: {\n          label: '晴天',\n          colors: {\n            start: '#0b1120',\n            end:   '#0f172a',\n            accent: '#fbbf24',\n            fg: '#e2e8f0', dim: '#94a3b8'\n          },\n          descs: ['晴空万里', '阳光明媚', '局部多云', '清风徐徐', '天朗气清'],\n          temp: [22, 33], feels: [-1, 1], humidity: [35, 62], wind: [2, 5]\n        },\n        rain: {\n          label: '雨天',\n          colors: {\n            start: '#0b1120',\n            end:   '#0a1022',\n            accent: '#38bdf8',\n            fg: '#e2e8f0', dim: '#94a3b8'\n          },\n          descs: ['小雨淅沥', '中雨连绵', '阵雨', '雷阵雨', '阴有小雨'],\n          temp: [16, 24], feels: [-2, 0], humidity: [78, 98], wind: [3, 7]\n        },\n        snow: {\n          label: '下雪',\n          colors: {\n            start: '#0a1126',\n            end:   '#0b132e',\n            accent: '#e0f2fe',\n            fg: '#f8fafc', dim: '#cbd5e1'\n          },\n          descs: ['小雪飘落', '大雪纷飞', '雨夹雪', '瑞雪兆丰年'],\n          temp: [-6, 2], feels: [-4, -1], humidity: [58, 90], wind: [2, 6]\n        },\n        wind: {\n          label: '大风',\n          colors: {\n            start: '#04121b',\n            end:   '#082f2a',\n            accent: '#2dd4bf',\n            fg: '#e2e8f0', dim: '#94a3b8'\n          },\n          descs: ['大风呼啸', '北风劲吹', '阵风增强', '沙尘来袭'],\n          temp: [12, 20], feels: [-3, 0], humidity: [30, 60], wind: [8, 16]\n        }\n      };\n\n      function rand(min, max) {\n        return Math.random() * (max - min) + min;\n      }\n      function randInt(min, max) {\n        return Math.floor(rand(min, max + 1));\n      }\n\n      function setTheme(weather) {\n        const t = themes[weather];\n        document.documentElement.style.setProperty('--bg-start', t.colors.start);\n        document.documentElement.style.setProperty('--bg-end', t.colors.end);\n        document.documentElement.style.setProperty('--accent', t.colors.accent);\n        document.documentElement.style.setProperty('--text-primary', t.colors.fg);\n        document.documentElement.style.setProperty('--text-dim', t.colors.dim);\n\n        // 渐变层根据 accent 自动透光\n        softGradient.style.background = `\n          radial-gradient(circle at 20% 30%, color-mix(in srgb, ${t.colors.accent} 22%, transparent) 0%, transparent 55%),\n          radial-gradient(circle at 80% 10%, color-mix(in srgb, ${t.colors.accent} 16%, transparent) 0%, transparent 50%),\n          radial-gradient(circle at 50% 80%, color-mix(in srgb, ${t.colors.accent} 10%, transparent) 0%, transparent 55%)`;\n      }\n\n      function setActiveButton(weather) {\n        btns.forEach(btn => {\n          const isActive = btn.dataset.weather === weather;\n          btn.setAttribute('aria-pressed', String(isActive));\n          btn.setAttribute('aria-selected', String(isActive));\n        });\n      }\n\n      function populateInfo(weather) {\n        const t = themes[weather];\n        cityEl.textContent = cities[randInt(0, cities.length - 1)];\n        descEl.textContent = t.descs[randInt(0, t.descs.length - 1)];\n        const temp = randInt(t.temp[0], t.temp[1]);\n        const feels = temp + randInt(t.feels[0], t.feels[1]);\n        const hum = randInt(t.humidity[0], t.humidity[1]);\n        const wind = randInt(t.wind[0], t.wind[1]);\n        tempEl.textContent = String(temp);\n        feelsEl.textContent = feels + '°C';\n        humidityEl.textContent = hum + '%';\n        windEl.textContent = wind + ' m/s';\n        // 轻微淡入反馈\n        card.classList.remove('fade-in');\n        void card.offsetWidth; // reflow 以重启动画\n        card.classList.add('fade-in');\n      }\n\n      function clearCanvas(el) {\n        el.textContent = '';\n      }\n\n      function createSunny(el) {\n        const sun = document.createElement('div');\n        sun.className = 'sun-orb';\n        el.appendChild(sun);\n\n        const cloudsWrap = document.createElement('div');\n        cloudsWrap.className = 'clouds';\n        el.appendChild(cloudsWrap);\n\n        const cloudCount = 4;\n        for (let i = 0; i < cloudCount; i++) {\n          const c = document.createElement('div');\n          c.className = 'cloud';\n          const top = rand(8, 38); // vh\n          const scale = rand(0.8, 1.35);\n          const duration = rand(40, 65); // s\n          c.style.top = top + 'vh';\n          c.style.left = rand(-20, 20) + 'vw';\n          c.style.width = (120 * scale) + 'px';\n          c.style.height = (50 * scale) + 'px';\n          c.style.animationDuration = duration + 's';\n          c.style.opacity = String(rand(0.55, 0.95));\n          cloudsWrap.appendChild(c);\n        }\n      }\n\n      function createRain(el) {\n        const area = window.innerWidth * window.innerHeight;\n        const baseDensity = prefersReduced ? 0.00004 : 0.00012; // 每像素密度\n        const count = Math.max(80, Math.min(280, Math.floor(area * baseDensity)));\n        for (let i = 0; i < count; i++) {\n          const d = document.createElement('div');\n          d.className = 'raindrop';\n          const left = rand(0, 100);\n          const delay = rand(0, 1200);\n          const dur = rand(800, 1400);\n          const op = rand(0.45, 0.95);\n          const wind = rand(8, 26);\n          d.style.left = left + 'vw';\n          d.style.setProperty('--delay', delay + 'ms');\n          d.style.setProperty('--dur', dur + 'ms');\n          d.style.setProperty('--o', op);\n          d.style.setProperty('--wind', wind + 'px');\n          el.appendChild(d);\n        }\n      }\n\n      function createSnow(el) {\n        const area = window.innerWidth * window.innerHeight;\n        const baseDensity = prefersReduced ? 0.00002 : 0.00006;\n        const count = Math.max(50, Math.min(200, Math.floor(area * baseDensity)));\n        for (let i = 0; i < count; i++) {\n          const s = document.createElement('div');\n          s.className = 'snowflake';\n          const left = rand(0, 100);\n          const delay = rand(0, 8000);\n          const dur = rand(8000, 16000);\n          const op = rand(0.65, 1);\n          const drift = rand(-40, 40);\n          s.style.left = left + 'vw';\n          s.style.setProperty('--delay', delay + 'ms');\n          s.style.setProperty('--dur', dur + 'ms');\n          s.style.setProperty('--o', op);\n          s.style.setProperty('--drift', drift + 'px');\n          el.appendChild(s);\n        }\n      }\n\n      function createWind(el) {\n        const area = window.innerWidth * window.innerHeight;\n        const baseDensity = prefersReduced ? 0.00001 : 0.00003;\n        const count = Math.max(30, Math.min(160, Math.floor(area * baseDensity)));\n        for (let i = 0; i < count; i++) {\n          const leaf = document.createElement('div');\n          leaf.className = 'leaf';\n          const startY = rand(0, 90);\n          const delay = rand(0, 4000);\n          const dur = rand(4500, 9000);\n          const o = rand(0.55, 0.95);\n          leaf.style.top = startY + 'vh';\n          leaf.style.setProperty('--startY', startY + 'vh');\n          leaf.style.setProperty('--delay', delay + 'ms');\n          leaf.style.setProperty('--dur', dur + 'ms');\n          leaf.style.setProperty('--o', o);\n          leaf.style.transform = `translate3d(-10vw, 0, 0)`;\n          el.appendChild(leaf);\n        }\n      }\n\n      function renderBackground(weather) {\n        const next = useAVisible ? canvasB : canvasA; // 取相反层作为下一个\n        clearCanvas(next);\n        next.className = 'bg-canvas'; // 重置状态\n\n        // 创建特定天气背景\n        if (weather === 'sunny') createSunny(next);\n        if (weather === 'rain') createRain(next);\n        if (weather === 'snow') createSnow(next);\n        if (weather === 'wind') createWind(next);\n\n        // 立即显示（下一帧切换可见）\n        requestAnimationFrame(() => {\n          // 先把 next 设为可见\n          next.classList.add('visible');\n          // 再把 prev 淡出\n          const prev = useAVisible ? canvasA : canvasB;\n          prev.classList.remove('visible');\n          useAVisible = !useAVisible;\n        });\n      }\n\n      function setWeather(weather) {\n        active = weather;\n        setTheme(weather);\n        setActiveButton(weather);\n        populateInfo(weather);\n        renderBackground(weather);\n      }\n\n      btns.forEach(btn => {\n        btn.addEventListener('click', () => setWeather(btn.dataset.weather));\n        btn.addEventListener('keydown', (e) => {\n          if (e.key === 'Enter' || e.key === ' ') {\n            e.preventDefault(); setWeather(btn.dataset.weather);\n          }\n        });\n      });\n\n      refreshBtn.addEventListener('click', () => populateInfo(active));\n\n      // 初始化：根据窗口大小预渲染当前背景\n      function init() { setWeather('sunny'); }\n      init();\n\n      // 响应式：窗口尺寸变化时，重绘当前背景（防止粒子密度不匹配）\n      let resizeTimer = 0;\n      window.addEventListener('resize', () => {\n        clearTimeout(resizeTimer);\n        resizeTimer = window.setTimeout(() => renderBackground(active), 200);\n      });\n    })();\n  </script>\n</body>\n</html>\n```"
  },
  {
    "role": "user",
    "content": "```\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>哥布林杀手TRPG - 冒险者契约</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/gsap.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/TextPlugin.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.min.js\" defer></script>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Noto+Serif+SC:wght@400;700&family=Vollkorn:wght@400;700&family=Courier+Prime&display=swap\" rel=\"stylesheet\">\n\n    <style>\n        :root {\n            --leather-bg: #5a3a2a;\n            --dark-leather-bg: #3b2a1a;\n            --parchment-bg: #f5f5dc;\n            --parchment-bg-gradient: linear-gradient(165deg, #f7e9d7, #e6d5c3);\n            --text-color: #3d3d3d;\n            --heading-color: #4a3c2c;\n            --border-color: #7a5a4a;\n            --font-main: 'Vollkorn', 'Noto Serif SC', serif;\n            --font-display: 'Cinzel', 'Noto Serif SC', serif;\n            --font-code: 'Courier Prime', 'Courier New', monospace;\n            --dice-size: 5rem; \n        }\n\n        html { height: 100%; }\n        body {\n            background-color: #3a2e20;\n            font-family: var(--font-main);\n            color: var(--text-color);\n            margin: 0; padding: 20px;\n            box-sizing: border-box;\n            display: flex;\n            align-items: center; justify-content: center;\n            min-height: 100%;\n        }\n        *, *:before, *:after { box-sizing: inherit; }\n\n        .creator-wrapper {\n            width: 100%; max-width: 900px;\n            margin: 0;\n            background: var(--parchment-bg-gradient);\n            border: 12px solid #8b7355;\n            border-radius: 8px;\n            box-shadow: 0 0 40px rgba(139, 115, 85, 0.3), inset 0 0 30px rgba(255, 255, 255, 0.4);\n            position: relative;\n            overflow: hidden;\n            padding: 25px;\n            display: flex; flex-direction: column;\n            max-height: 95vh;\n        }\n\n        .border-flow, .inner-border { position: absolute; pointer-events: none; }\n        .border-flow { top: 0; left: 0; right: 0; bottom: 0; background: linear-gradient(90deg, rgba(139,115,85,0.1) 1px, transparent 1px), linear-gradient(0deg, rgba(139,115,85,0.1) 1px, transparent 1px); background-size: 20px 20px; animation: borderFlow 15s linear infinite; }\n        .inner-border { top: 5px; left: 5px; right: 5px; bottom: 5px; border: 3px solid rgba(139,115,85,0.3); border-radius: 5px; }\n        @keyframes borderFlow { from { background-position: 0 0; } to { background-position: 20px 20px; } }\n\n        .creator-header {\n            text-align: center;\n            padding: 10px;\n            margin-bottom: 25px;\n            border-bottom: 2px solid rgba(139, 115, 85, 0.3);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 15px;\n        }\n        .creator-header h1 {\n            font-family: var(--font-display);\n            font-size: clamp(24px, 5vw, 32px);\n            margin: 0;\n            font-weight: 700;\n            letter-spacing: 3px;\n            color: var(--heading-color);\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.1);\n        }\n        \n        .title-char {\n            display: inline-block;\n            opacity: 0;\n            transform: translateY(30px);\n        }\n\n        .wax-seal {\n            width: 45px;\n            height: 45px;\n            display: inline-block;\n            background-color: #c0392b;\n            border-radius: 50%;\n            position: relative;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.4), inset 0 -2px 3px rgba(0,0,0,0.3);\n            opacity: 0;\n            transform: scale(0.5);\n            font-family: 'Cinzel', serif;\n            color: #e7a49c;\n            text-align: center;\n            font-size: 24px;\n            line-height: 45px;\n            font-weight: 700;\n        }\n        .wax-seal::before {\n            content: 'GS';\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.3);\n        }\n\n        .creator-scroll-content { overflow-y: auto; padding: 10px 20px 10px 10px; }\n        .creator-scroll-content::-webkit-scrollbar { width: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-track { background: rgba(139, 115, 85, 0.1); border-radius: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-thumb { background-color: #a89072; border-radius: 10px; border: 2px solid #f7e9d7; }\n        \n        .gs-creator-step { margin-bottom: 40px; overflow: hidden; }\n        .gs-creator-step h3 { font-family: var(--font-display); font-size: 1.5em; font-weight: 700; border-bottom: 1.5px solid var(--border-color); padding-bottom: 8px; margin-bottom: 20px; color: var(--heading-color); text-align: left; }\n        \n        .layout-grid { display: grid; grid-template-columns: 1fr; gap: 25px; align-items: flex-start; }\n        @media (min-width: 768px) {\n            .layout-grid { grid-template-columns: 1fr 280px; }\n        }\n\n        .form-container { text-align: left; }\n        .gs-form-group { margin-bottom: 16px; }\n        .gs-form-group label { display: block; margin-bottom: 6px; font-weight: bold; color: var(--heading-color); }\n        .form-input, .form-select, .form-textarea { width: 100%; padding: 10px; background-color: rgba(255, 255, 255, 0.5); border: 1px solid #a58e72; border-radius: 4px; color: #3d3d3d; font-family: var(--font-main); font-size: 1em; transition: all 0.2s ease-in-out; box-shadow: inset 1px 1px 2px rgba(0,0,0,0.1); }\n        .form-input:focus, .form-select:focus, .form-textarea:focus { outline: none; border-color: #8b7355; background-color: #fff; box-shadow: 0 0 5px rgba(139, 115, 85, 0.5); }\n        .form-textarea { resize: vertical; min-height: 100px; }\n\n        .grid-cols-2 {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 16px;\n        }\n        @media (min-width: 480px) {\n            .grid-cols-2 {\n                grid-template-columns: repeat(2, 1fr);\n            }\n        }\n\n        #attributes-container .point-control { display: flex; align-items: center; justify-content: space-between; margin-bottom: 8px; padding: 6px 8px; background: rgba(0,0,0,0.03); border-left: 3px solid rgba(139,115,85,0.2); border-radius: 4px; }\n        #attributes-container .label { font-weight: bold; color: var(--heading-color); }\n        #attributes-container input[readonly] { width: 40px; text-align: center; font-weight: bold; font-size: 1.2em; font-family: var(--font-display); color: #a02c2c; border: none; background-color: transparent; box-shadow: none; padding: 0; }\n        \n        .attributes-grid {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 0 16px;\n        }\n        @media (min-width: 480px) {\n            .attributes-grid {\n                grid-template-columns: 1fr 1fr;\n            }\n        }\n        \n        .skills-display p { background-color: rgba(0,0,0,0.05); border-left: 3px solid var(--border-color); padding: 10px 15px; margin-top: 10px; font-size: 0.95em; border-radius: 0 4px 4px 0; }\n        .skills-display strong { color: #8b5b4b; font-family: var(--font-display); }\n        .skills-display ul { list-style: none; padding-left: 0; margin-top: 8px; font-size: 0.9em; }\n        .skills-display li { margin-bottom: 4px; }\n\n        #character-summary { background-color: #e9e4d9; font-family: var(--font-code); line-height: 1.6; height: 250px; color: #2c2a2a; }\n        \n        .gs-button { width: 100%; background-color: #8b7355; color: var(--parchment-bg); border: 2px solid var(--dark-leather-bg); border-radius: 5px; padding: 12px 20px; font-family: var(--font-display); font-size: 1.2em; font-weight: 700; cursor: pointer; margin-top: 10px; transition: all 0.3s ease; box-shadow: 0 3px 5px rgba(0,0,0,0.3); }\n        .gs-button:hover { background-color: #a0886c; transform: translateY(-2px); box-shadow: 0 5px 8px rgba(0,0,0,0.3); }\n        .gs-button:disabled { background-color: #9e9e9e; border-color: #757575; cursor: not-allowed; transform: none; box-shadow: none; opacity: 0.6; }\n        .action-button { background-color: #6d5b4b; font-size: 1em; padding: 10px 15px; margin-top: 0; margin-bottom: 10px; width: auto; }\n        \n        .background-display { margin-top: 15px; padding: 15px; border: 1px dashed var(--border-color); border-radius: 5px; background: rgba(0,0,0,0.02); }\n        .background-display p { margin: 0 0 8px; }\n        .background-display span { font-weight: bold; color: var(--heading-color); }\n        \n        #radar-chart-container { \n            max-width: 100%;\n        }\n        @media (min-width: 768px) {\n            #radar-chart-container {\n                position: sticky;\n                top: 0;\n                padding-top: 45px;\n            }\n        }\n\n        pre.mermaid { \n            font-family: var(--font-main); \n            background: rgba(0,0,0,0.02); \n            border: 1px solid rgba(139,115,85,0.1); \n            padding: 10px; \n            border-radius: 5px; \n            overflow: auto;\n            transition: opacity 0.3s ease-in-out;\n        }\n        pre.mermaid.loading { opacity: 0.5; pointer-events: none; }\n\n        pre.mermaid > svg {\n            max-width: 100%;\n            height: auto;\n        }\n\n        #dice-overlay {\n            position: fixed; top: 0; left: 0; width: 100%; height: 100%;\n            background: rgba(0,0,0,0.8); backdrop-filter: blur(5px);\n            display: none; align-items: center; justify-content: center; flex-direction: column;\n            z-index: 100;\n            color: #fff; text-shadow: 0 0 10px #000;\n        }\n\n        .dice-container {\n            display: flex; flex-wrap: wrap; justify-content: center;\n            gap: 2rem; margin-bottom: 2rem;\n            max-width: 600px;\n        }\n        \n        .dice-icon {\n            width: var(--dice-size); height: var(--dice-size);\n            perspective: 800px;\n            transform-style: preserve-3d;\n            display: none;\n        }\n        .dice-icon.highlight {\n            transform: scale(1.15);\n            filter: drop-shadow(0 0 15px #FFEB3B);\n            transition: transform 0.3s ease, filter 0.3s ease;\n        }\n\n        .dice-cube {\n            width: 100%; height: 100%;\n            position: relative;\n            transform-style: preserve-3d;\n            transform: translateZ(calc(var(--dice-size) / -2));\n        }\n        \n        .dice-face {\n            position: absolute;\n            width: var(--dice-size); height: var(--dice-size);\n            background-color: rgba(255, 255, 255, 0.98);\n            border: 1.5px solid #857e72;\n            border-radius: 12%;\n        }\n\n        .pips-container {\n            width: 100%; height: 100%;\n            position: relative; \n        }\n        .pip {\n            width: 22%; height: 22%; \n            background-color: #3d352e;\n            border-radius: 50%;\n            box-shadow: inset 0 1px 3px rgba(0,0,0,0.5);\n            position: absolute; \n        }\n        \n        #dice-result-text { \n            font-family: var(--font-display); \n            font-size: 2.2em;\n            color: #FFEB3B; \n            text-shadow: 0 0 12px #FFEB3B; \n            min-height: 2em;\n            line-height: 1.2;\n            text-align: center; \n        }\n        \n        #skip-animation-btn {\n            position: absolute;\n            bottom: 30px;\n            font-size: 1em;\n            padding: 8px 20px;\n            width: auto;\n            background-color: rgba(0,0,0,0.3);\n            border-color: rgba(255,255,255,0.5);\n            color: rgba(255,255,255,0.8);\n        }\n        #skip-animation-btn:hover {\n            background-color: rgba(0,0,0,0.5);\n            color: #fff;\n        }\n\n        .typed-cursor {\n            opacity: 1;\n            animation: typed-blink 0.7s infinite;\n        }\n        @keyframes typed-blink{\n            0% { opacity: 1; }\n            50% { opacity: 0; }\n            100% { opacity: 1; }\n        }\n        \n        .validation-message {\n            text-align: center;\n            color: #b71c1c;\n            font-size: 0.9em;\n            font-weight: bold;\n            margin-top: -5px;\n            margin-bottom: 10px;\n            height: 1.2em;\n            opacity: 0;\n            will-change: transform, opacity;\n        }\n\n        #credits-screen {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            pointer-events: none;\n            opacity: 0;\n        }\n\n        #credits-screen p {\n            font-family: var(--font-display);\n            font-size: 2em;\n            color: #f5f5dc;\n            text-shadow: 0 0 8px rgba(245, 245, 220, 0.7);\n        }\n    </style>\n</head>\n<body>\n\n<div class=\"creator-wrapper\">\n    <div class=\"border-flow\"></div>\n    <div class=\"inner-border\"></div>\n    <header class=\"creator-header\">\n        <h1 id=\"main-title\">冒险者契约登记</h1>\n        <div id=\"wax-seal\" class=\"wax-seal\"></div>\n    </header>\n\n    <div class=\"creator-scroll-content\">\n        <div class=\"gs-creator-container\">\n            <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第一步：身份确认</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-name-input\">姓名</label><input id=\"char-name-input\" type=\"text\" placeholder=\"可留空，默认为 {{user}}\" class=\"form-input\"></div>\n                    <div class=\"grid-cols-2 gsap-content-item\">\n                        <div class=\"gs-form-group\"><label for=\"char-gender-input\">性别</label><input id=\"char-gender-input\" type=\"text\" placeholder=\"例如: 男性/女性/双性/无性/……\" class=\"form-input\"></div>\n                        <div class=\"gs-form-group\"><label for=\"char-age-input\">年龄</label><input id=\"char-age-input\" type=\"number\" placeholder=\"可参照种族说明\" class=\"form-input\"></div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-race-select\">种族</label><select id=\"char-race-select\" class=\"form-select\"></select></div>\n                    <div class=\"gs-form-group gsap-content-item\">\n                        <label>经历 (出身/来历/邂逅)</label>\n                        <button id=\"roll-background-btn\" class=\"gs-button action-button\">🎲 投骰决定经历</button>\n                        <div id=\"background-display\" class=\"background-display\" style=\"display: none;\">\n                            <p>出身: <span id=\"bg-origin\"></span></p>\n                            <p>来历: <span id=\"bg-past\"></span></p>\n                            <p>邂逅: <span id=\"bg-encounter\"></span></p>\n                        </div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"oc-details-input\">身体特征与补充</label><textarea id=\"oc-details-input\" placeholder=\"发色、瞳色、体型、性格、背景故事构思...\" class=\"form-textarea\"></textarea></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第二步：能力值与技能</h3>\n                <div class=\"layout-grid\">\n                    <div class=\"form-container gsap-content-item\">\n                        <button id=\"roll-attributes-btn\" class=\"gs-button action-button\">🎲 投骰决定能力值</button>\n                        <div id=\"attributes-container\" class=\"attributes-grid\"></div>\n                        <div id=\"skills-and-desc-container\" class=\"skills-display\"></div>\n                    </div>\n                    <div id=\"radar-chart-container\" class=\"gsap-content-item\"><pre class=\"mermaid\" id=\"radar-chart\"></pre></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第三步：完成登记</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"character-summary\">角色卡预览</label><textarea id=\"character-summary\" rows=\"12\" readonly class=\"form-textarea\"></textarea></div>\n                    <button id=\"submit-btn\" class=\"gs-button gsap-content-item\" disabled>确认登记，开始冒险</button>\n                    <div id=\"validation-message\" class=\"validation-message\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div id=\"credits-screen\">\n    <p>作者 𝙀𝙡𝙖𝙞𝙣𝙖𝙙𝙚𝙨</p>\n</div>\n\n<div id=\"dice-overlay\">\n    <div class=\"dice-container\" id=\"dice-container\"></div>\n    <div id=\"dice-result-text\"></div>\n    <button id=\"skip-animation-btn\" class=\"gs-button\">跳过动画</button>\n</div>\n\n<div id=\"dice-templates\" style=\"display:none;\">\n    <div class=\"dice-cube\" data-id_template=\"dice-cube\">\n        <div class=\"dice-face face-front\" data-face=\"1\"><div class=\"pips-container\"><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-back\" data-face=\"6\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-right\" data-face=\"3\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-left\" data-face=\"4\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-top\" data-face=\"2\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-bottom\" data-face=\"5\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n    </div>\n</div>\n\n<script>\n// --- MODIFIED DATA ---\nconst raceData = {\n    '凡人': { attr_rolls: { '力量': '1d3+1', '敏捷': '1d3', '感知': '1d3', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3+2', '魔力': '1d3' }, skills: ['过载行动(初级)', '武器:投掷武器(初级)', '长距离移动(初级)']},\n    '矿人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3', '感知': '1d3+2', '知识': '1d3-1', '魅力': '1d3+1', '信仰力': '1d3+1', '魔力': '1d3-1' }, skills: ['治愈适性(初级)', '夜视(初级)', '锻造(初级)']},\n    '森人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+1', '感知': '1d3+1', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3-1', '魔力': '1d3+1' }, skills: ['武器:弩弓(初级)', '夜视(初级)', '精灵宠儿(初级)']},\n    '蜥蜴人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3+1', '感知': '1d3', '知识': '1d3', '魅力': '1d3+1', '信仰力': '1d3', '魔力': '1d3' }, skills: ['免疫强化(初级)', '夜视(初级)', '龙族血统(初级)']},\n    '圃人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+2', '感知': '1d3+1', '知识': '1d3', '魅力': '1d3-1', '信仰力': '1d3', '魔力': '1d3+2' }, skills: ['隐匿(初级)', '先发制人(初级)', '烹饪(初级)']}\n};\nconst backgroundData = {\n    origin: { \n        '凡人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '学者', class: '魔术师', level: 1, skills: ['文献调查(初级)'] }, 6: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 7: { name: '农民', skills: ['生产业:农业(初级)', '强健(初级)'] }, 8: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '骑士', class: '战士', level: 1, skills: ['骑乘(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n        '矿人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 6: { name: '酒馆老板', class: '战士', level: 1, skills: ['观察(初级)'] }, 7: { name: '铁匠', skills: ['工匠:锻造(初级)', '手工(初级)'] }, 8: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '碎盾者', class: '战士', level: 1, skills: ['强击攻击·斩(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n    },\n    past: { 2: { name: '奴隶', skills: ['劳动(初级)'] }, 3: { name: '牢狱', skills: ['犯罪知识(初级)'] }, 4: { name: '战场', skills: ['沉着冷静(初级)'] }, 5: { name: '神殿', skills: ['神学(初级)'] }, 6: { name: '孤儿', skills: ['忍耐(初级)'] }, 7: { name: '平顺', skills: ['幸运(初级)'] }, 8: { name: '贫困', skills: ['生存术(初级)'] }, 9: { name: '学校', skills: ['博识(初级)'] }, 10: { name: '深闺', skills: ['无偏见(初级)'] }, 11: { name: '奢华', skills: ['鉴定(初级)'] }, 12: { name: '宫廷', skills: ['礼仪(初级)'] }},\n    encounter: { 2: '宿敌', 3: '上司', 4: '后辈', 5: '交易对象', 6: '下属', 7: '家人', 8: '挚友', 9: '前辈', 10: '未婚夫/妻', 11: '劲敌', 12: '师父' }\n};\nbackgroundData.origin['森人'] = backgroundData.origin['凡人']; backgroundData.origin['蜥蜴人'] = backgroundData.origin['凡人']; backgroundData.origin['圃人'] = backgroundData.origin['凡人'];\nconst character = {\n    name: '', gender: '', age: '', oc_details: '', race: '凡人',\n    background: { origin: null, past: null, encounter: null },\n    attributes: { '力量': 0, '敏捷': 0, '感知': 0, '知识': 0, '魅力': 0, '信仰力': 0, '魔力': 0, '潜力': 0 },\n    skills: [], classes: {}, money: 0, _lastAttributesForChart: '',\n};\n// --- END MODIFIED DATA ---\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    gsap.registerPlugin(TextPlugin);\n    mermaid.initialize({ startOnLoad: true, theme: 'base', themeVariables: {\n        '--mermaid-font-family': \"'Vollkorn', 'Noto Serif SC', serif\",\n        primaryColor: '#f7e9d7', primaryTextColor: '#3d3d3d', lineColor: '#8b7355', textColor: '#4a3c2c',\n    }});\n    \n    const $ = (s) => document.querySelector(s);\n    const roll1D6 = () => Math.floor(Math.random() * 6) + 1;\n    const roll1D3 = () => {\n        const d6 = roll1D6();\n        if (d6 <= 2) return { d6, d3: 1 };\n        if (d6 <= 4) return { d6, d3: 2 };\n        return { d6, d3: 3 };\n    };\n    const rollDiceString = (diceString) => { const p=diceString.split('*');const d=p[0];const m=parseInt(p[1])||1;if(!d.includes('d'))return 0;const[n,s]=d.split('d').map(Number);let t=0;for(let i=0;i<n;i++){t+=Math.floor(Math.random()*s)+1;}return t*m; };\n    const formatAge = (ageValue) => { if (!ageValue && ageValue !== 0) return ageValue; const num = Number(ageValue); if (isNaN(num)) return ageValue; if (Math.abs(num) >= 1_000_000) return num.toExponential(2); return ageValue; };\n    const debounce = (func, delay) => { let timeout; return function(...args) { clearTimeout(timeout); timeout = setTimeout(() => func.apply(this, args), delay); }; };\n    const diceUnicode = ['\\u2680', '\\u2681', '\\u2682', '\\u2683', '\\u2684', '\\u2685'];\n\n    const DOM = {\n        nameInput: $('#char-name-input'), genderInput: $('#char-gender-input'), ageInput: $('#char-age-input'),\n        ocDetailsInput: $('#oc-details-input'), raceSelect: $('#char-race-select'), attributesContainer: $('#attributes-container'),\n        skillsContainer: $('#skills-and-desc-container'), radarChart: $('#radar-chart'), summarySheet: $('#character-summary'),\n        diceOverlay: $('#dice-overlay'), diceContainer: $('#dice-container'), diceResultText: $('#dice-result-text'),\n        backgroundDisplay: $('#background-display'), bgOrigin: $('#bg-origin'), bgPast: $('#bg-past'), bgEncounter: $('#bg-encounter'),\n        skipAnimationBtn: $('#skip-animation-btn'),\n        submitBtn: $('#submit-btn'),\n        validationMessage: $('#validation-message'),\n    };\n    \n    const dicePool = []; const MAX_DICE = 6;\n    let currentAnimation = null; let textAnimation = null; let isSkipping = false;\n    let currentValidationMessage = '';\n    \n    function validateAndToggleButton() {\n        let newMessage = '';\n        if (!character.age || String(character.age).trim() === '') {\n            newMessage = '请填写您的冒险者年龄。';\n        } else if (!character.gender || !character.gender.trim()) {\n            newMessage = '请设定冒险者的性别。';\n        } else if (!character.background.origin) {\n            newMessage = '请投骰决定您的冒险者经历。';\n        } else if (Object.values(character.attributes).every(val => val === 0)) {\n            newMessage = '请投骰决定您的能力值。';\n        }\n\n        if (newMessage === currentValidationMessage) return;\n        currentValidationMessage = newMessage;\n\n        if (newMessage) {\n            DOM.submitBtn.disabled = true;\n            DOM.validationMessage.textContent = newMessage;\n            gsap.fromTo(DOM.validationMessage, { autoAlpha: 0, scale: 0.8 }, { autoAlpha: 1, scale: 1, duration: 0.4, ease: 'elastic.out(1, 0.75)' });\n        } else {\n            DOM.submitBtn.disabled = false;\n            gsap.to(DOM.validationMessage, { autoAlpha: 0, duration: 0.3 });\n        }\n    }\n    function updateCharacterDataFromDOM() { character.name = DOM.nameInput.value; character.gender = DOM.genderInput.value; character.age = DOM.ageInput.value; character.oc_details = DOM.ocDetailsInput.value; character.race = DOM.raceSelect.value; }\n    function renderSkills() { const uniqueSkills = [...new Set(character.skills)]; DOM.skillsContainer.innerHTML = `<p><strong>天赋与习得技能:</strong></p><ul>${uniqueSkills.map(s => `<li>- ${s}</li>`).join('')}</ul>`; }\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key}`).value = value; }); }\n    function renderSummary() {\n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '?';\n        const originText = `出身:${character.background.origin ? character.background.origin.name : '?'}`;\n        const pastText = `来历:${character.background.past ? character.background.past.name : '?'}`;\n        const encounterText = `邂逅:${character.background.encounter || '?'}`;\n        let summary = `### 《哥布林杀手TRPG》冒险者登记卡\\n` + `**姓名:** ${finalName} | **种族:** ${character.race} | **性别:** ${character.gender || '?'} | **年龄:** ${formattedAge}\\n` + `**经历:** ${originText} / ${pastText} / ${encounterText}\\n` + `**初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n` + `**初始技能:** ${uniqueSkills.join(', ') || '无'}\\n`; if (character.oc_details) { summary += `**身体特征与补充:** ${character.oc_details}\\n`; } summary += `---\\n**能力值:**\\n`; summary += Object.entries(character.attributes).map(([key, value]) => `- ${key}: ${value}`).join('\\n'); summary += `\\n**持有资金:** ${character.money} 银币`;\n        DOM.summarySheet.value = summary.replace(/### /g, '').replace(/\\*\\*/g, '').replace(/---/g, '\\n────────────────────\\n').replace(/- /g, '  ');\n        DOM.summarySheet.setAttribute('data-raw', summary);\n    }\n    async function renderRadarChartIfNeeded() { const currentAttributesString = JSON.stringify(character.attributes); if (currentAttributesString === character._lastAttributesForChart) return; DOM.radarChart.classList.add('loading'); const radarSyntax = `radar-beta\\ntitle 能力值分布\\naxis a[\"力量 ${character.attributes['力量']}\"]\\naxis b[\"敏捷 ${character.attributes['敏捷']}\"]\\naxis c[\"感知 ${character.attributes['感知']}\"]\\naxis d[\"知识 ${character.attributes['知识']}\"]\\naxis e[\"魅力 ${character.attributes['魅力']}\"]\\naxis f[\"信仰 ${character.attributes['信仰力']}\"]\\naxis g[\"魔力 ${character.attributes['魔力']}\"]\\naxis h[\"潜力 ${character.attributes['潜力']}\"]\\ncurve current[\"能力\"]{${character.attributes['力量']},${character.attributes['敏捷']},${character.attributes['感知']},${character.attributes['知识']},${character.attributes['魅力']},${character.attributes['信仰力']},${character.attributes['魔力']},${character.attributes['潜力']}}\\nmax 10\\nmin 0`; DOM.radarChart.innerHTML = radarSyntax; DOM.radarChart.removeAttribute('data-processed'); try { await mermaid.run({ nodes: [DOM.radarChart] }); character._lastAttributesForChart = currentAttributesString; } catch(e) { console.error(\"Mermaid rendering error:\", e); } finally { DOM.radarChart.classList.remove('loading'); } }\n    async function updateUI(forceFullUpdate = false) { updateCharacterDataFromDOM(); if(forceFullUpdate) { character._lastAttributesForChart = ''; character.skills = []; character.classes = {}; character.money = 100; if(raceData[character.race].skills) character.skills.push(...raceData[character.race].skills); if (character.background.origin) { if (character.background.origin.skills) character.skills.push(...character.background.origin.skills); if (character.background.origin.class) character.classes[character.background.origin.class] = character.background.origin.level; if(character.background.origin.money) character.money += rollDiceString(character.background.origin.money); } if (character.background.past && character.background.past.skills) { character.skills.push(...character.background.past.skills); } } renderAttributes(); renderSkills(); renderSummary(); await renderRadarChartIfNeeded(); validateAndToggleButton(); }\n\n    const masterTl = gsap.timeline({ delay: 0.2 });\n    const title = $('#main-title');\n    title.innerHTML = title.textContent.split('').map(char => `<span class=\"title-char\">${char}</span>`).join('');\n    gsap.set(\".gsap-header-item, .gsap-content-item\", { autoAlpha: 0, y: 20 });\n    masterTl.to(\".title-char\", { autoAlpha: 1, y: 0, duration: 0.7, ease: \"power3.out\", stagger: 0.1 }).to(\"#wax-seal\", { autoAlpha: 1, scale: 1, duration: 0.6, ease: \"elastic.out(1, 0.7)\" }, \"-=0.5\");\n    document.querySelectorAll('.gs-creator-step').forEach((step, index) => { const stepTl = gsap.timeline(); stepTl.to(step.querySelector('.gsap-header-item'), { autoAlpha: 1, y: 0, duration: 0.6, ease: 'power2.out' }).to(step.querySelectorAll('.gsap-content-item'), { autoAlpha: 1, y: 0, duration: 0.5, ease: 'power2.out', stagger: 0.1 }, '-=0.4'); masterTl.add(stepTl, `-=${index === 0 ? 0.2 : 0.7}`); });\n    const pipPositions = { 1: [ { left: '50%', top: '50%' } ], 2: [ { left: '25%', top: '25%' }, { left: '75%', top: '75%' } ], 3: [ { left: '25%', top: '25%' }, { left: '50%', top: '50%' }, { left: '75%', top: '75%' } ], 4: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 5: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '50%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 6: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '50%' }, { left: '75%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ]};\n    function setupCube(cubeEl) { const size = 'calc(var(--dice-size) / 2)'; gsap.set(cubeEl.querySelector('.face-front'),  { transform: `rotateY(0deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-back'),   { transform: `rotateY(180deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-right'),  { transform: `rotateY(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-left'),   { transform: `rotateY(-90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-top'),   { transform: `rotateX(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-bottom'), { transform: `rotateX(-90deg) translateZ(${size})` }); const faces = cubeEl.querySelectorAll('.dice-face'); faces.forEach(face => { const faceNum = face.getAttribute('data-face'); const pips = face.querySelectorAll('.pip'); const positions = pipPositions[faceNum]; if (!pips.length || !positions) return; pips.forEach((pip, index) => { const pos = positions[index]; gsap.set(pip, { left: pos.left, top: pos.top, xPercent: -50, yPercent: -50 }); }); }); }\n    function getRotationForFace(faceValue) { switch (faceValue) { case 1: return { x: 0, y: 0 }; case 6: return { x: 0, y: 180 }; case 3: return { x: 0, y: -90 }; case 4: return { x: 0, y: 90 }; case 2: return { x: -90, y: 0 }; case 5: return { x: 90,  y: 0 }; default: return { x: 0, y: 0 }; } }\n    async function animateText(element, text) { if(isSkipping) {element.innerHTML = text.replace(/\\n/g, '<br>'); return;} return new Promise(resolve => { if (textAnimation && textAnimation.isActive()) textAnimation.kill(); element.innerHTML = ''; textAnimation = gsap.to(element, { duration: text.length * 0.05, text: { value: text.replace(/\\n/g, '<br>'), newClass: \"typed-cursor\" }, ease: \"none\", onComplete: () => { gsap.delayedCall(0.7, () => { element.querySelector('.typed-cursor')?.remove(); resolve(); }); } }); }); }\n    function initDicePool() { const diceTemplate = document.querySelector('[data-id_template=\"dice-cube\"]'); if (!diceTemplate) return; for (let i = 0; i < MAX_DICE; i++) { const dieIconElement = document.createElement('div'); dieIconElement.className = 'dice-icon'; const newCube = diceTemplate.cloneNode(true); dieIconElement.appendChild(newCube); DOM.diceContainer.appendChild(dieIconElement); setupCube(newCube); dicePool.push(dieIconElement); } }\n    async function animateRoll(numDice, preCalculatedRolls, textToShowDuringRoll = \"投掷中...\") { return new Promise(resolve => { if (currentAnimation && currentAnimation.isActive()) currentAnimation.kill(); dicePool.forEach(die => die.style.display = 'none'); const activeDice = dicePool.slice(0, numDice); animateText(DOM.diceResultText, textToShowDuringRoll); activeDice.forEach(die => { die.style.display = 'flex'; die.className = 'dice-icon'; }); const masterTl = gsap.timeline({ onComplete: () => { if(isSkipping) DOM.diceResultText.innerHTML = ''; resolve(preCalculatedRolls); }}); currentAnimation = masterTl; activeDice.forEach((dieElement, i) => { const dieCube = dieElement.querySelector('.dice-cube'); const visualRoll = preCalculatedRolls[i]; const targetRotation = getRotationForFace(visualRoll); const dieTimeline = gsap.timeline(); dieTimeline.to(dieCube, { rotationX: `+=${gsap.utils.random(720, 1080)}`, rotationY: `+=${gsap.utils.random(720, 1080)}`, duration: 1.8, ease: \"power2.in\" }).to(dieCube, { rotationX: targetRotation.x, rotationY: targetRotation.y, duration: 0.7, ease: \"power4.out\" }); masterTl.add(dieTimeline, 0); }); }); }\n    \n    const debouncedUpdate = debounce(updateUI, 400);\n    [DOM.nameInput, DOM.genderInput, DOM.ageInput, DOM.ocDetailsInput].forEach(el => el.addEventListener('input', debouncedUpdate));\n    \n    DOM.skipAnimationBtn.addEventListener('click', () => {\n        isSkipping = true;\n        if (currentAnimation && currentAnimation.isActive()) currentAnimation.progress(1);\n        if (textAnimation && textAnimation.isActive()) textAnimation.progress(1);\n    });\n\n    $('#roll-background-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const rolls = [roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6()];\n        await animateRoll(6, rolls, '投掷 经历... (2d6 x 3)');\n        \n        const sums = { origin: rolls[0] + rolls[1], past: rolls[2] + rolls[3], encounter: rolls[4] + rolls[5] };\n        \n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `出身: ${rolls[0]} + ${rolls[1]} = ${sums.origin}\\n(${backgroundData.origin[character.race][sums.origin].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `来历: ${rolls[2]} + ${rolls[3]} = ${sums.past}\\n(${backgroundData.past[sums.past].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(4, 6), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `邂逅: ${rolls[4]} + ${rolls[5]} = ${sums.encounter}\\n(${backgroundData.encounter[sums.encounter]})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        character.background.origin = backgroundData.origin[character.race][sums.origin];\n        character.background.past = backgroundData.past[sums.past];\n        character.background.encounter = backgroundData.encounter[sums.encounter];\n        DOM.bgOrigin.textContent = character.background.origin.name;\n        DOM.bgPast.textContent = character.background.past.name;\n        DOM.bgEncounter.textContent = character.background.encounter;\n        DOM.backgroundDisplay.style.display = 'block';\n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        updateUI(true);\n    });\n\n    $('#roll-attributes-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const attrRolls = raceData[character.race].attr_rolls;\n        const allCalculatedRolls = [];\n\n        // Prepare race-based attributes\n        for (const attr in attrRolls) {\n            const formula = attrRolls[attr];\n            const modifier = parseInt(formula.split('d3')[1] || '0');\n            const { d6, d3 } = roll1D3();\n            const finalValue = Math.max(0, d3 + modifier);\n            character.attributes[attr] = finalValue;\n            allCalculatedRolls.push({ attr, formula, d6, d3, modifier, finalValue });\n        }\n        \n        // Prepare \"Potential\" attribute\n        const potentialValue = Math.floor(Math.random() * 3) + 1;\n        const d6ForPotential = (potentialValue * 2) - 1; // Map 1,2,3 to d6 faces 1,3,5 for animation\n        character.attributes['潜力'] = potentialValue;\n        allCalculatedRolls.push({\n            attr: '潜力',\n            formula: '1-3', // Just a descriptor\n            d6: d6ForPotential,\n            finalValue: potentialValue\n        });\n        \n        // Animate all rolls sequentially\n        for (const roll of allCalculatedRolls) {\n            await animateRoll(1, [roll.d6], `投掷 ${roll.attr}...`);\n            if (isSkipping) break;\n\n            gsap.to(dicePool[0], { className: 'dice-icon highlight', duration: 0.3 });\n            \n            let resultText;\n            if (roll.attr === '潜力') {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.finalValue}`;\n            } else {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.d3} ${roll.modifier >= 0 ? '+' : ''} ${roll.modifier} = ${roll.finalValue}`;\n            }\n            await animateText(DOM.diceResultText, resultText);\n            \n            await updateUI();\n            \n            if (isSkipping) break;\n            \n            await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        await updateUI();\n    });\n\n    DOM.raceSelect.addEventListener('change', () => {\n        DOM.backgroundDisplay.style.display = 'none';\n        character.background = { origin: null, past: null, encounter: null };\n        Object.keys(character.attributes).forEach(k => character.attributes[k] = 0);\n        updateUI(true);\n    });\n\n    $('#submit-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        await updateUI(true);\n        \n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '未设定';\n        \n        const finalCharacterObject={ NAME:finalName, GENDER:character.gender||'未设定', AGE:formattedAge, RACE:character.race, ORIGIN: character.background.origin ? character.background.origin.name : '未知', PAST: character.background.past ? character.background.past.name : '未知', ENCOUNTER: character.background.encounter || '未知', SKILLS: uniqueSkills, OC_DETAILS:character.oc_details||'无', ...character.attributes, MONEY:character.money };\n        \n        const slashCommand=`/send <START>\\nAdmin:\\n这是一个TRPG开局，请为 User 生成一段详尽的背景故事。\\n\\n# 故事核心要求\\n请严格根据以下【角色完整设定】，撰写一段从角色童年到现在的成长故事。故事需要清晰地阐述是什么关键事件或心路历程，最终让他/她确立了要成为一名冒险者的志向。请在故事中自然地融入角色的种族、出身背景、技能和性格特点。\\n\\n# 角色完整设定\\n---\\n## 基础信息\\n- **姓名:** ${finalName}\\n- **性别:** ${character.gender||'未设定'}\\n- **年龄:** ${formattedAge}\\n- **种族:** ${character.race}\\n\\n## 经历\\n- **出身:** ${character.background.origin ? character.background.origin.name : '未知'}\\n- **来历:** ${character.background.past ? character.background.past.name : '未知'}\\n- **邂逅:** ${character.background.encounter || '未知'}\\n\\n## 背景与技能\\n- **初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n- **初始技能:** ${uniqueSkills.join(', ')||'无'}\\n\\n## 补充设定 (OC)\\n- **额外补充:** ${character.oc_details||'无'}\\n\\n## 能力值\\n- **力量:** ${character.attributes['力量']}\\n- **敏捷:** ${character.attributes['敏捷']}\\n- **感知:** ${character.attributes['感知']}\\n- **知识:** ${character.attributes['知识']}\\n- **魅力:** ${character.attributes['魅力']}\\n- **信仰力:** ${character.attributes['信仰力']}\\n- **魔力:** ${character.attributes['魔力']}\\n\\n## 初始资产\\n- **资金:** ${character.money} 银币\\n\\|\\n/trigger`; \n        \n        try {\n            if (typeof insertOrAssignVariables === 'function') {\n                await insertOrAssignVariables(finalCharacterObject);\n            } else {\n                console.log(\"SillyTavern Function 'insertOrAssignVariables' not found. Variables:\", finalCharacterObject);\n            }\n            if (typeof triggerSlash === 'function') {\n                await triggerSlash(slashCommand, 'Send');\n            } else { \n                console.log(\"SillyTavern Function 'triggerSlash' not found. Command will be copied to clipboard.\");\n                navigator.clipboard.writeText(slashCommand).then(() => {\n                    alert('角色指令已复制到剪贴板！');\n                });\n            }\n        } catch (error) {\n            console.error('与SillyTavern交互失败:', error);\n            alert('与SillyTavern交互失败，请查看浏览器控制台。');\n        }\n\n        e.target.innerHTML = \"契约成立！\";\n    });\n    \n    initDicePool();\n    Object.keys(raceData).forEach(key => DOM.raceSelect.add(new Option(key, key)));\n    Object.keys(character.attributes).forEach(key => {\n        const pointControl = document.createElement('div');\n        pointControl.className = 'point-control';\n        pointControl.innerHTML = `<span class=\"label\">${key}</span><input type=\"text\" id=\"attr-${key.replace(/\\s/g, '')}\" readonly value=\"0\">`; // ID santized just in case\n        DOM.attributesContainer.appendChild(pointControl);\n    });\n    // A small fix for renderAttributes to handle sanitized IDs\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key.replace(/\\s/g, '')}`).value = value; }); }\n    updateUI(true);\n});\n</script>\n\n</body>\n</html>\n```"
  },
  {
    "role": "user",
    "content": "```\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>哥布林杀手TRPG - 冒险者契约</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/gsap.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/TextPlugin.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.min.js\" defer></script>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Noto+Serif+SC:wght@400;700&family=Vollkorn:wght@400;700&family=Courier+Prime&display=swap\" rel=\"stylesheet\">\n\n    <style>\n        :root {\n            --leather-bg: #5a3a2a;\n            --dark-leather-bg: #3b2a1a;\n            --parchment-bg: #f5f5dc;\n            --parchment-bg-gradient: linear-gradient(165deg, #f7e9d7, #e6d5c3);\n            --text-color: #3d3d3d;\n            --heading-color: #4a3c2c;\n            --border-color: #7a5a4a;\n            --font-main: 'Vollkorn', 'Noto Serif SC', serif;\n            --font-display: 'Cinzel', 'Noto Serif SC', serif;\n            --font-code: 'Courier Prime', 'Courier New', monospace;\n            --dice-size: 5rem; \n        }\n\n        html { height: 100%; }\n        body {\n            background-color: #3a2e20;\n            font-family: var(--font-main);\n            color: var(--text-color);\n            margin: 0; padding: 20px;\n            box-sizing: border-box;\n            display: flex;\n            align-items: center; justify-content: center;\n            min-height: 100%;\n        }\n        *, *:before, *:after { box-sizing: inherit; }\n\n        .creator-wrapper {\n            width: 100%; max-width: 900px;\n            margin: 0;\n            background: var(--parchment-bg-gradient);\n            border: 12px solid #8b7355;\n            border-radius: 8px;\n            box-shadow: 0 0 40px rgba(139, 115, 85, 0.3), inset 0 0 30px rgba(255, 255, 255, 0.4);\n            position: relative;\n            overflow: hidden;\n            padding: 25px;\n            display: flex; flex-direction: column;\n            max-height: 95vh;\n        }\n\n        .border-flow, .inner-border { position: absolute; pointer-events: none; }\n        .border-flow { top: 0; left: 0; right: 0; bottom: 0; background: linear-gradient(90deg, rgba(139,115,85,0.1) 1px, transparent 1px), linear-gradient(0deg, rgba(139,115,85,0.1) 1px, transparent 1px); background-size: 20px 20px; animation: borderFlow 15s linear infinite; }\n        .inner-border { top: 5px; left: 5px; right: 5px; bottom: 5px; border: 3px solid rgba(139,115,85,0.3); border-radius: 5px; }\n        @keyframes borderFlow { from { background-position: 0 0; } to { background-position: 20px 20px; } }\n\n        .creator-header {\n            text-align: center;\n            padding: 10px;\n            margin-bottom: 25px;\n            border-bottom: 2px solid rgba(139, 115, 85, 0.3);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 15px;\n        }\n        .creator-header h1 {\n            font-family: var(--font-display);\n            font-size: clamp(24px, 5vw, 32px);\n            margin: 0;\n            font-weight: 700;\n            letter-spacing: 3px;\n            color: var(--heading-color);\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.1);\n        }\n        \n        .title-char {\n            display: inline-block;\n            opacity: 0;\n            transform: translateY(30px);\n        }\n\n        .wax-seal {\n            width: 45px;\n            height: 45px;\n            display: inline-block;\n            background-color: #c0392b;\n            border-radius: 50%;\n            position: relative;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.4), inset 0 -2px 3px rgba(0,0,0,0.3);\n            opacity: 0;\n            transform: scale(0.5);\n            font-family: 'Cinzel', serif;\n            color: #e7a49c;\n            text-align: center;\n            font-size: 24px;\n            line-height: 45px;\n            font-weight: 700;\n        }\n        .wax-seal::before {\n            content: 'GS';\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.3);\n        }\n\n        .creator-scroll-content { overflow-y: auto; padding: 10px 20px 10px 10px; }\n        .creator-scroll-content::-webkit-scrollbar { width: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-track { background: rgba(139, 115, 85, 0.1); border-radius: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-thumb { background-color: #a89072; border-radius: 10px; border: 2px solid #f7e9d7; }\n        \n        .gs-creator-step { margin-bottom: 40px; overflow: hidden; }\n        .gs-creator-step h3 { font-family: var(--font-display); font-size: 1.5em; font-weight: 700; border-bottom: 1.5px solid var(--border-color); padding-bottom: 8px; margin-bottom: 20px; color: var(--heading-color); text-align: left; }\n        \n        .layout-grid { display: grid; grid-template-columns: 1fr; gap: 25px; align-items: flex-start; }\n        @media (min-width: 768px) {\n            .layout-grid { grid-template-columns: 1fr 280px; }\n        }\n\n        .form-container { text-align: left; }\n        .gs-form-group { margin-bottom: 16px; }\n        .gs-form-group label { display: block; margin-bottom: 6px; font-weight: bold; color: var(--heading-color); }\n        .form-input, .form-select, .form-textarea { width: 100%; padding: 10px; background-color: rgba(255, 255, 255, 0.5); border: 1px solid #a58e72; border-radius: 4px; color: #3d3d3d; font-family: var(--font-main); font-size: 1em; transition: all 0.2s ease-in-out; box-shadow: inset 1px 1px 2px rgba(0,0,0,0.1); }\n        .form-input:focus, .form-select:focus, .form-textarea:focus { outline: none; border-color: #8b7355; background-color: #fff; box-shadow: 0 0 5px rgba(139, 115, 85, 0.5); }\n        .form-textarea { resize: vertical; min-height: 100px; }\n\n        .grid-cols-2 {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 16px;\n        }\n        @media (min-width: 480px) {\n            .grid-cols-2 {\n                grid-template-columns: repeat(2, 1fr);\n            }\n        }\n\n        #attributes-container .point-control { display: flex; align-items: center; justify-content: space-between; margin-bottom: 8px; padding: 6px 8px; background: rgba(0,0,0,0.03); border-left: 3px solid rgba(139,115,85,0.2); border-radius: 4px; }\n        #attributes-container .label { font-weight: bold; color: var(--heading-color); }\n        #attributes-container input[readonly] { width: 40px; text-align: center; font-weight: bold; font-size: 1.2em; font-family: var(--font-display); color: #a02c2c; border: none; background-color: transparent; box-shadow: none; padding: 0; }\n        \n        .attributes-grid {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 0 16px;\n        }\n        @media (min-width: 480px) {\n            .attributes-grid {\n                grid-template-columns: 1fr 1fr;\n            }\n        }\n        \n        .skills-display p { background-color: rgba(0,0,0,0.05); border-left: 3px solid var(--border-color); padding: 10px 15px; margin-top: 10px; font-size: 0.95em; border-radius: 0 4px 4px 0; }\n        .skills-display strong { color: #8b5b4b; font-family: var(--font-display); }\n        .skills-display ul { list-style: none; padding-left: 0; margin-top: 8px; font-size: 0.9em; }\n        .skills-display li { margin-bottom: 4px; }\n\n        #character-summary { background-color: #e9e4d9; font-family: var(--font-code); line-height: 1.6; height: 250px; color: #2c2a2a; }\n        \n        .gs-button { width: 100%; background-color: #8b7355; color: var(--parchment-bg); border: 2px solid var(--dark-leather-bg); border-radius: 5px; padding: 12px 20px; font-family: var(--font-display); font-size: 1.2em; font-weight: 700; cursor: pointer; margin-top: 10px; transition: all 0.3s ease; box-shadow: 0 3px 5px rgba(0,0,0,0.3); }\n        .gs-button:hover { background-color: #a0886c; transform: translateY(-2px); box-shadow: 0 5px 8px rgba(0,0,0,0.3); }\n        .gs-button:disabled { background-color: #9e9e9e; border-color: #757575; cursor: not-allowed; transform: none; box-shadow: none; opacity: 0.6; }\n        .action-button { background-color: #6d5b4b; font-size: 1em; padding: 10px 15px; margin-top: 0; margin-bottom: 10px; width: auto; }\n        \n        .background-display { margin-top: 15px; padding: 15px; border: 1px dashed var(--border-color); border-radius: 5px; background: rgba(0,0,0,0.02); }\n        .background-display p { margin: 0 0 8px; }\n        .background-display span { font-weight: bold; color: var(--heading-color); }\n        \n        #radar-chart-container { \n            max-width: 100%;\n        }\n        @media (min-width: 768px) {\n            #radar-chart-container {\n                position: sticky;\n                top: 0;\n                padding-top: 45px;\n            }\n        }\n\n        pre.mermaid { \n            font-family: var(--font-main); \n            background: rgba(0,0,0,0.02); \n            border: 1px solid rgba(139,115,85,0.1); \n            padding: 10px; \n            border-radius: 5px; \n            overflow: auto;\n            transition: opacity 0.3s ease-in-out;\n        }\n        pre.mermaid.loading { opacity: 0.5; pointer-events: none; }\n\n        pre.mermaid > svg {\n            max-width: 100%;\n            height: auto;\n        }\n\n        #dice-overlay {\n            position: fixed; top: 0; left: 0; width: 100%; height: 100%;\n            background: rgba(0,0,0,0.8); backdrop-filter: blur(5px);\n            display: none; align-items: center; justify-content: center; flex-direction: column;\n            z-index: 100;\n            color: #fff; text-shadow: 0 0 10px #000;\n        }\n\n        .dice-container {\n            display: flex; flex-wrap: wrap; justify-content: center;\n            gap: 2rem; margin-bottom: 2rem;\n            max-width: 600px;\n        }\n        \n        .dice-icon {\n            width: var(--dice-size); height: var(--dice-size);\n            perspective: 800px;\n            transform-style: preserve-3d;\n            display: none;\n        }\n        .dice-icon.highlight {\n            transform: scale(1.15);\n            filter: drop-shadow(0 0 15px #FFEB3B);\n            transition: transform 0.3s ease, filter 0.3s ease;\n        }\n\n        .dice-cube {\n            width: 100%; height: 100%;\n            position: relative;\n            transform-style: preserve-3d;\n            transform: translateZ(calc(var(--dice-size) / -2));\n        }\n        \n        .dice-face {\n            position: absolute;\n            width: var(--dice-size); height: var(--dice-size);\n            background-color: rgba(255, 255, 255, 0.98);\n            border: 1.5px solid #857e72;\n            border-radius: 12%;\n        }\n\n        .pips-container {\n            width: 100%; height: 100%;\n            position: relative; \n        }\n        .pip {\n            width: 22%; height: 22%; \n            background-color: #3d352e;\n            border-radius: 50%;\n            box-shadow: inset 0 1px 3px rgba(0,0,0,0.5);\n            position: absolute; \n        }\n        \n        #dice-result-text { \n            font-family: var(--font-display); \n            font-size: 2.2em;\n            color: #FFEB3B; \n            text-shadow: 0 0 12px #FFEB3B; \n            min-height: 2em;\n            line-height: 1.2;\n            text-align: center; \n        }\n        \n        #skip-animation-btn {\n            position: absolute;\n            bottom: 30px;\n            font-size: 1em;\n            padding: 8px 20px;\n            width: auto;\n            background-color: rgba(0,0,0,0.3);\n            border-color: rgba(255,255,255,0.5);\n            color: rgba(255,255,255,0.8);\n        }\n        #skip-animation-btn:hover {\n            background-color: rgba(0,0,0,0.5);\n            color: #fff;\n        }\n\n        .typed-cursor {\n            opacity: 1;\n            animation: typed-blink 0.7s infinite;\n        }\n        @keyframes typed-blink{\n            0% { opacity: 1; }\n            50% { opacity: 0; }\n            100% { opacity: 1; }\n        }\n        \n        .validation-message {\n            text-align: center;\n            color: #b71c1c;\n            font-size: 0.9em;\n            font-weight: bold;\n            margin-top: -5px;\n            margin-bottom: 10px;\n            height: 1.2em;\n            opacity: 0;\n            will-change: transform, opacity;\n        }\n\n        #credits-screen {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            pointer-events: none;\n            opacity: 0;\n        }\n\n        #credits-screen p {\n            font-family: var(--font-display);\n            font-size: 2em;\n            color: #f5f5dc;\n            text-shadow: 0 0 8px rgba(245, 245, 220, 0.7);\n        }\n    </style>\n</head>\n<body>\n\n<div class=\"creator-wrapper\">\n    <div class=\"border-flow\"></div>\n    <div class=\"inner-border\"></div>\n    <header class=\"creator-header\">\n        <h1 id=\"main-title\">冒险者契约登记</h1>\n        <div id=\"wax-seal\" class=\"wax-seal\"></div>\n    </header>\n\n    <div class=\"creator-scroll-content\">\n        <div class=\"gs-creator-container\">\n            <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第一步：身份确认</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-name-input\">姓名</label><input id=\"char-name-input\" type=\"text\" placeholder=\"可留空，默认为 {{user}}\" class=\"form-input\"></div>\n                    <div class=\"grid-cols-2 gsap-content-item\">\n                        <div class=\"gs-form-group\"><label for=\"char-gender-input\">性别</label><input id=\"char-gender-input\" type=\"text\" placeholder=\"例如: 男性/女性/双性/无性/……\" class=\"form-input\"></div>\n                        <div class=\"gs-form-group\"><label for=\"char-age-input\">年龄</label><input id=\"char-age-input\" type=\"number\" placeholder=\"可参照种族说明\" class=\"form-input\"></div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-race-select\">种族</label><select id=\"char-race-select\" class=\"form-select\"></select></div>\n                    <div class=\"gs-form-group gsap-content-item\">\n                        <label>经历 (出身/来历/邂逅)</label>\n                        <button id=\"roll-background-btn\" class=\"gs-button action-button\">🎲 投骰决定经历</button>\n                        <div id=\"background-display\" class=\"background-display\" style=\"display: none;\">\n                            <p>出身: <span id=\"bg-origin\"></span></p>\n                            <p>来历: <span id=\"bg-past\"></span></p>\n                            <p>邂逅: <span id=\"bg-encounter\"></span></p>\n                        </div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"oc-details-input\">身体特征与补充</label><textarea id=\"oc-details-input\" placeholder=\"发色、瞳色、体型、性格、背景故事构思...\" class=\"form-textarea\"></textarea></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第二步：能力值与技能</h3>\n                <div class=\"layout-grid\">\n                    <div class=\"form-container gsap-content-item\">\n                        <button id=\"roll-attributes-btn\" class=\"gs-button action-button\">🎲 投骰决定能力值</button>\n                        <div id=\"attributes-container\" class=\"attributes-grid\"></div>\n                        <div id=\"skills-and-desc-container\" class=\"skills-display\"></div>\n                    </div>\n                    <div id=\"radar-chart-container\" class=\"gsap-content-item\"><pre class=\"mermaid\" id=\"radar-chart\"></pre></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第三步：完成登记</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"character-summary\">角色卡预览</label><textarea id=\"character-summary\" rows=\"12\" readonly class=\"form-textarea\"></textarea></div>\n                    <button id=\"submit-btn\" class=\"gs-button gsap-content-item\" disabled>确认登记，开始冒险</button>\n                    <div id=\"validation-message\" class=\"validation-message\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div id=\"credits-screen\">\n    <p>作者 𝙀𝙡𝙖𝙞𝙣𝙖𝙙𝙚𝙨</p>\n</div>\n\n<div id=\"dice-overlay\">\n    <div class=\"dice-container\" id=\"dice-container\"></div>\n    <div id=\"dice-result-text\"></div>\n    <button id=\"skip-animation-btn\" class=\"gs-button\">跳过动画</button>\n</div>\n\n<div id=\"dice-templates\" style=\"display:none;\">\n    <div class=\"dice-cube\" data-id_template=\"dice-cube\">\n        <div class=\"dice-face face-front\" data-face=\"1\"><div class=\"pips-container\"><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-back\" data-face=\"6\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-right\" data-face=\"3\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-left\" data-face=\"4\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-top\" data-face=\"2\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-bottom\" data-face=\"5\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n    </div>\n</div>\n\n<script>\n// --- MODIFIED DATA ---\nconst raceData = {\n    '凡人': { attr_rolls: { '力量': '1d3+1', '敏捷': '1d3', '感知': '1d3', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3+2', '魔力': '1d3' }, skills: ['过载行动(初级)', '武器:投掷武器(初级)', '长距离移动(初级)']},\n    '矿人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3', '感知': '1d3+2', '知识': '1d3-1', '魅力': '1d3+1', '信仰力': '1d3+1', '魔力': '1d3-1' }, skills: ['治愈适性(初级)', '夜视(初级)', '锻造(初级)']},\n    '森人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+1', '感知': '1d3+1', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3-1', '魔力': '1d3+1' }, skills: ['武器:弩弓(初级)', '夜视(初级)', '精灵宠儿(初级)']},\n    '蜥蜴人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3+1', '感知': '1d3', '知识': '1d3', '魅力': '1d3+1', '信仰力': '1d3', '魔力': '1d3' }, skills: ['免疫强化(初级)', '夜视(初级)', '龙族血统(初级)']},\n    '圃人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+2', '感知': '1d3+1', '知识': '1d3', '魅力': '1d3-1', '信仰力': '1d3', '魔力': '1d3+2' }, skills: ['隐匿(初级)', '先发制人(初级)', '烹饪(初级)']}\n};\nconst backgroundData = {\n    origin: { \n        '凡人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '学者', class: '魔术师', level: 1, skills: ['文献调查(初级)'] }, 6: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 7: { name: '农民', skills: ['生产业:农业(初级)', '强健(初级)'] }, 8: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '骑士', class: '战士', level: 1, skills: ['骑乘(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n        '矿人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 6: { name: '酒馆老板', class: '战士', level: 1, skills: ['观察(初级)'] }, 7: { name: '铁匠', skills: ['工匠:锻造(初级)', '手工(初级)'] }, 8: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '碎盾者', class: '战士', level: 1, skills: ['强击攻击·斩(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n    },\n    past: { 2: { name: '奴隶', skills: ['劳动(初级)'] }, 3: { name: '牢狱', skills: ['犯罪知识(初级)'] }, 4: { name: '战场', skills: ['沉着冷静(初级)'] }, 5: { name: '神殿', skills: ['神学(初级)'] }, 6: { name: '孤儿', skills: ['忍耐(初级)'] }, 7: { name: '平顺', skills: ['幸运(初级)'] }, 8: { name: '贫困', skills: ['生存术(初级)'] }, 9: { name: '学校', skills: ['博识(初级)'] }, 10: { name: '深闺', skills: ['无偏见(初级)'] }, 11: { name: '奢华', skills: ['鉴定(初级)'] }, 12: { name: '宫廷', skills: ['礼仪(初级)'] }},\n    encounter: { 2: '宿敌', 3: '上司', 4: '后辈', 5: '交易对象', 6: '下属', 7: '家人', 8: '挚友', 9: '前辈', 10: '未婚夫/妻', 11: '劲敌', 12: '师父' }\n};\nbackgroundData.origin['森人'] = backgroundData.origin['凡人']; backgroundData.origin['蜥蜴人'] = backgroundData.origin['凡人']; backgroundData.origin['圃人'] = backgroundData.origin['凡人'];\nconst character = {\n    name: '', gender: '', age: '', oc_details: '', race: '凡人',\n    background: { origin: null, past: null, encounter: null },\n    attributes: { '力量': 0, '敏捷': 0, '感知': 0, '知识': 0, '魅力': 0, '信仰力': 0, '魔力': 0, '潜力': 0 },\n    skills: [], classes: {}, money: 0, _lastAttributesForChart: '',\n};\n// --- END MODIFIED DATA ---\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    gsap.registerPlugin(TextPlugin);\n    mermaid.initialize({ startOnLoad: true, theme: 'base', themeVariables: {\n        '--mermaid-font-family': \"'Vollkorn', 'Noto Serif SC', serif\",\n        primaryColor: '#f7e9d7', primaryTextColor: '#3d3d3d', lineColor: '#8b7355', textColor: '#4a3c2c',\n    }});\n    \n    const $ = (s) => document.querySelector(s);\n    const roll1D6 = () => Math.floor(Math.random() * 6) + 1;\n    const roll1D3 = () => {\n        const d6 = roll1D6();\n        if (d6 <= 2) return { d6, d3: 1 };\n        if (d6 <= 4) return { d6, d3: 2 };\n        return { d6, d3: 3 };\n    };\n    const rollDiceString = (diceString) => { const p=diceString.split('*');const d=p[0];const m=parseInt(p[1])||1;if(!d.includes('d'))return 0;const[n,s]=d.split('d').map(Number);let t=0;for(let i=0;i<n;i++){t+=Math.floor(Math.random()*s)+1;}return t*m; };\n    const formatAge = (ageValue) => { if (!ageValue && ageValue !== 0) return ageValue; const num = Number(ageValue); if (isNaN(num)) return ageValue; if (Math.abs(num) >= 1_000_000) return num.toExponential(2); return ageValue; };\n    const debounce = (func, delay) => { let timeout; return function(...args) { clearTimeout(timeout); timeout = setTimeout(() => func.apply(this, args), delay); }; };\n    const diceUnicode = ['\\u2680', '\\u2681', '\\u2682', '\\u2683', '\\u2684', '\\u2685'];\n\n    const DOM = {\n        nameInput: $('#char-name-input'), genderInput: $('#char-gender-input'), ageInput: $('#char-age-input'),\n        ocDetailsInput: $('#oc-details-input'), raceSelect: $('#char-race-select'), attributesContainer: $('#attributes-container'),\n        skillsContainer: $('#skills-and-desc-container'), radarChart: $('#radar-chart'), summarySheet: $('#character-summary'),\n        diceOverlay: $('#dice-overlay'), diceContainer: $('#dice-container'), diceResultText: $('#dice-result-text'),\n        backgroundDisplay: $('#background-display'), bgOrigin: $('#bg-origin'), bgPast: $('#bg-past'), bgEncounter: $('#bg-encounter'),\n        skipAnimationBtn: $('#skip-animation-btn'),\n        submitBtn: $('#submit-btn'),\n        validationMessage: $('#validation-message'),\n    };\n    \n    const dicePool = []; const MAX_DICE = 6;\n    let currentAnimation = null; let textAnimation = null; let isSkipping = false;\n    let currentValidationMessage = '';\n    \n    function validateAndToggleButton() {\n        let newMessage = '';\n        if (!character.age || String(character.age).trim() === '') {\n            newMessage = '请填写您的冒险者年龄。';\n        } else if (!character.gender || !character.gender.trim()) {\n            newMessage = '请设定冒险者的性别。';\n        } else if (!character.background.origin) {\n            newMessage = '请投骰决定您的冒险者经历。';\n        } else if (Object.values(character.attributes).every(val => val === 0)) {\n            newMessage = '请投骰决定您的能力值。';\n        }\n\n        if (newMessage === currentValidationMessage) return;\n        currentValidationMessage = newMessage;\n\n        if (newMessage) {\n            DOM.submitBtn.disabled = true;\n            DOM.validationMessage.textContent = newMessage;\n            gsap.fromTo(DOM.validationMessage, { autoAlpha: 0, scale: 0.8 }, { autoAlpha: 1, scale: 1, duration: 0.4, ease: 'elastic.out(1, 0.75)' });\n        } else {\n            DOM.submitBtn.disabled = false;\n            gsap.to(DOM.validationMessage, { autoAlpha: 0, duration: 0.3 });\n        }\n    }\n    function updateCharacterDataFromDOM() { character.name = DOM.nameInput.value; character.gender = DOM.genderInput.value; character.age = DOM.ageInput.value; character.oc_details = DOM.ocDetailsInput.value; character.race = DOM.raceSelect.value; }\n    function renderSkills() { const uniqueSkills = [...new Set(character.skills)]; DOM.skillsContainer.innerHTML = `<p><strong>天赋与习得技能:</strong></p><ul>${uniqueSkills.map(s => `<li>- ${s}</li>`).join('')}</ul>`; }\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key}`).value = value; }); }\n    function renderSummary() {\n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '?';\n        const originText = `出身:${character.background.origin ? character.background.origin.name : '?'}`;\n        const pastText = `来历:${character.background.past ? character.background.past.name : '?'}`;\n        const encounterText = `邂逅:${character.background.encounter || '?'}`;\n        let summary = `### 《哥布林杀手TRPG》冒险者登记卡\\n` + `**姓名:** ${finalName} | **种族:** ${character.race} | **性别:** ${character.gender || '?'} | **年龄:** ${formattedAge}\\n` + `**经历:** ${originText} / ${pastText} / ${encounterText}\\n` + `**初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n` + `**初始技能:** ${uniqueSkills.join(', ') || '无'}\\n`; if (character.oc_details) { summary += `**身体特征与补充:** ${character.oc_details}\\n`; } summary += `---\\n**能力值:**\\n`; summary += Object.entries(character.attributes).map(([key, value]) => `- ${key}: ${value}`).join('\\n'); summary += `\\n**持有资金:** ${character.money} 银币`;\n        DOM.summarySheet.value = summary.replace(/### /g, '').replace(/\\*\\*/g, '').replace(/---/g, '\\n────────────────────\\n').replace(/- /g, '  ');\n        DOM.summarySheet.setAttribute('data-raw', summary);\n    }\n    async function renderRadarChartIfNeeded() { const currentAttributesString = JSON.stringify(character.attributes); if (currentAttributesString === character._lastAttributesForChart) return; DOM.radarChart.classList.add('loading'); const radarSyntax = `radar-beta\\ntitle 能力值分布\\naxis a[\"力量 ${character.attributes['力量']}\"]\\naxis b[\"敏捷 ${character.attributes['敏捷']}\"]\\naxis c[\"感知 ${character.attributes['感知']}\"]\\naxis d[\"知识 ${character.attributes['知识']}\"]\\naxis e[\"魅力 ${character.attributes['魅力']}\"]\\naxis f[\"信仰 ${character.attributes['信仰力']}\"]\\naxis g[\"魔力 ${character.attributes['魔力']}\"]\\naxis h[\"潜力 ${character.attributes['潜力']}\"]\\ncurve current[\"能力\"]{${character.attributes['力量']},${character.attributes['敏捷']},${character.attributes['感知']},${character.attributes['知识']},${character.attributes['魅力']},${character.attributes['信仰力']},${character.attributes['魔力']},${character.attributes['潜力']}}\\nmax 10\\nmin 0`; DOM.radarChart.innerHTML = radarSyntax; DOM.radarChart.removeAttribute('data-processed'); try { await mermaid.run({ nodes: [DOM.radarChart] }); character._lastAttributesForChart = currentAttributesString; } catch(e) { console.error(\"Mermaid rendering error:\", e); } finally { DOM.radarChart.classList.remove('loading'); } }\n    async function updateUI(forceFullUpdate = false) { updateCharacterDataFromDOM(); if(forceFullUpdate) { character._lastAttributesForChart = ''; character.skills = []; character.classes = {}; character.money = 100; if(raceData[character.race].skills) character.skills.push(...raceData[character.race].skills); if (character.background.origin) { if (character.background.origin.skills) character.skills.push(...character.background.origin.skills); if (character.background.origin.class) character.classes[character.background.origin.class] = character.background.origin.level; if(character.background.origin.money) character.money += rollDiceString(character.background.origin.money); } if (character.background.past && character.background.past.skills) { character.skills.push(...character.background.past.skills); } } renderAttributes(); renderSkills(); renderSummary(); await renderRadarChartIfNeeded(); validateAndToggleButton(); }\n\n    const masterTl = gsap.timeline({ delay: 0.2 });\n    const title = $('#main-title');\n    title.innerHTML = title.textContent.split('').map(char => `<span class=\"title-char\">${char}</span>`).join('');\n    gsap.set(\".gsap-header-item, .gsap-content-item\", { autoAlpha: 0, y: 20 });\n    masterTl.to(\".title-char\", { autoAlpha: 1, y: 0, duration: 0.7, ease: \"power3.out\", stagger: 0.1 }).to(\"#wax-seal\", { autoAlpha: 1, scale: 1, duration: 0.6, ease: \"elastic.out(1, 0.7)\" }, \"-=0.5\");\n    document.querySelectorAll('.gs-creator-step').forEach((step, index) => { const stepTl = gsap.timeline(); stepTl.to(step.querySelector('.gsap-header-item'), { autoAlpha: 1, y: 0, duration: 0.6, ease: 'power2.out' }).to(step.querySelectorAll('.gsap-content-item'), { autoAlpha: 1, y: 0, duration: 0.5, ease: 'power2.out', stagger: 0.1 }, '-=0.4'); masterTl.add(stepTl, `-=${index === 0 ? 0.2 : 0.7}`); });\n    const pipPositions = { 1: [ { left: '50%', top: '50%' } ], 2: [ { left: '25%', top: '25%' }, { left: '75%', top: '75%' } ], 3: [ { left: '25%', top: '25%' }, { left: '50%', top: '50%' }, { left: '75%', top: '75%' } ], 4: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 5: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '50%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 6: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '50%' }, { left: '75%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ]};\n    function setupCube(cubeEl) { const size = 'calc(var(--dice-size) / 2)'; gsap.set(cubeEl.querySelector('.face-front'),  { transform: `rotateY(0deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-back'),   { transform: `rotateY(180deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-right'),  { transform: `rotateY(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-left'),   { transform: `rotateY(-90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-top'),   { transform: `rotateX(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-bottom'), { transform: `rotateX(-90deg) translateZ(${size})` }); const faces = cubeEl.querySelectorAll('.dice-face'); faces.forEach(face => { const faceNum = face.getAttribute('data-face'); const pips = face.querySelectorAll('.pip'); const positions = pipPositions[faceNum]; if (!pips.length || !positions) return; pips.forEach((pip, index) => { const pos = positions[index]; gsap.set(pip, { left: pos.left, top: pos.top, xPercent: -50, yPercent: -50 }); }); }); }\n    function getRotationForFace(faceValue) { switch (faceValue) { case 1: return { x: 0, y: 0 }; case 6: return { x: 0, y: 180 }; case 3: return { x: 0, y: -90 }; case 4: return { x: 0, y: 90 }; case 2: return { x: -90, y: 0 }; case 5: return { x: 90,  y: 0 }; default: return { x: 0, y: 0 }; } }\n    async function animateText(element, text) { if(isSkipping) {element.innerHTML = text.replace(/\\n/g, '<br>'); return;} return new Promise(resolve => { if (textAnimation && textAnimation.isActive()) textAnimation.kill(); element.innerHTML = ''; textAnimation = gsap.to(element, { duration: text.length * 0.05, text: { value: text.replace(/\\n/g, '<br>'), newClass: \"typed-cursor\" }, ease: \"none\", onComplete: () => { gsap.delayedCall(0.7, () => { element.querySelector('.typed-cursor')?.remove(); resolve(); }); } }); }); }\n    function initDicePool() { const diceTemplate = document.querySelector('[data-id_template=\"dice-cube\"]'); if (!diceTemplate) return; for (let i = 0; i < MAX_DICE; i++) { const dieIconElement = document.createElement('div'); dieIconElement.className = 'dice-icon'; const newCube = diceTemplate.cloneNode(true); dieIconElement.appendChild(newCube); DOM.diceContainer.appendChild(dieIconElement); setupCube(newCube); dicePool.push(dieIconElement); } }\n    async function animateRoll(numDice, preCalculatedRolls, textToShowDuringRoll = \"投掷中...\") { return new Promise(resolve => { if (currentAnimation && currentAnimation.isActive()) currentAnimation.kill(); dicePool.forEach(die => die.style.display = 'none'); const activeDice = dicePool.slice(0, numDice); animateText(DOM.diceResultText, textToShowDuringRoll); activeDice.forEach(die => { die.style.display = 'flex'; die.className = 'dice-icon'; }); const masterTl = gsap.timeline({ onComplete: () => { if(isSkipping) DOM.diceResultText.innerHTML = ''; resolve(preCalculatedRolls); }}); currentAnimation = masterTl; activeDice.forEach((dieElement, i) => { const dieCube = dieElement.querySelector('.dice-cube'); const visualRoll = preCalculatedRolls[i]; const targetRotation = getRotationForFace(visualRoll); const dieTimeline = gsap.timeline(); dieTimeline.to(dieCube, { rotationX: `+=${gsap.utils.random(720, 1080)}`, rotationY: `+=${gsap.utils.random(720, 1080)}`, duration: 1.8, ease: \"power2.in\" }).to(dieCube, { rotationX: targetRotation.x, rotationY: targetRotation.y, duration: 0.7, ease: \"power4.out\" }); masterTl.add(dieTimeline, 0); }); }); }\n    \n    const debouncedUpdate = debounce(updateUI, 400);\n    [DOM.nameInput, DOM.genderInput, DOM.ageInput, DOM.ocDetailsInput].forEach(el => el.addEventListener('input', debouncedUpdate));\n    \n    DOM.skipAnimationBtn.addEventListener('click', () => {\n        isSkipping = true;\n        if (currentAnimation && currentAnimation.isActive()) currentAnimation.progress(1);\n        if (textAnimation && textAnimation.isActive()) textAnimation.progress(1);\n    });\n\n    $('#roll-background-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const rolls = [roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6()];\n        await animateRoll(6, rolls, '投掷 经历... (2d6 x 3)');\n        \n        const sums = { origin: rolls[0] + rolls[1], past: rolls[2] + rolls[3], encounter: rolls[4] + rolls[5] };\n        \n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `出身: ${rolls[0]} + ${rolls[1]} = ${sums.origin}\\n(${backgroundData.origin[character.race][sums.origin].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `来历: ${rolls[2]} + ${rolls[3]} = ${sums.past}\\n(${backgroundData.past[sums.past].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(4, 6), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `邂逅: ${rolls[4]} + ${rolls[5]} = ${sums.encounter}\\n(${backgroundData.encounter[sums.encounter]})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        character.background.origin = backgroundData.origin[character.race][sums.origin];\n        character.background.past = backgroundData.past[sums.past];\n        character.background.encounter = backgroundData.encounter[sums.encounter];\n        DOM.bgOrigin.textContent = character.background.origin.name;\n        DOM.bgPast.textContent = character.background.past.name;\n        DOM.bgEncounter.textContent = character.background.encounter;\n        DOM.backgroundDisplay.style.display = 'block';\n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        updateUI(true);\n    });\n\n    $('#roll-attributes-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const attrRolls = raceData[character.race].attr_rolls;\n        const allCalculatedRolls = [];\n\n        // Prepare race-based attributes\n        for (const attr in attrRolls) {\n            const formula = attrRolls[attr];\n            const modifier = parseInt(formula.split('d3')[1] || '0');\n            const { d6, d3 } = roll1D3();\n            const finalValue = Math.max(0, d3 + modifier);\n            character.attributes[attr] = finalValue;\n            allCalculatedRolls.push({ attr, formula, d6, d3, modifier, finalValue });\n        }\n        \n        // Prepare \"Potential\" attribute\n        const potentialValue = Math.floor(Math.random() * 3) + 1;\n        const d6ForPotential = (potentialValue * 2) - 1; // Map 1,2,3 to d6 faces 1,3,5 for animation\n        character.attributes['潜力'] = potentialValue;\n        allCalculatedRolls.push({\n            attr: '潜力',\n            formula: '1-3', // Just a descriptor\n            d6: d6ForPotential,\n            finalValue: potentialValue\n        });\n        \n        // Animate all rolls sequentially\n        for (const roll of allCalculatedRolls) {\n            await animateRoll(1, [roll.d6], `投掷 ${roll.attr}...`);\n            if (isSkipping) break;\n\n            gsap.to(dicePool[0], { className: 'dice-icon highlight', duration: 0.3 });\n            \n            let resultText;\n            if (roll.attr === '潜力') {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.finalValue}`;\n            } else {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.d3} ${roll.modifier >= 0 ? '+' : ''} ${roll.modifier} = ${roll.finalValue}`;\n            }\n            await animateText(DOM.diceResultText, resultText);\n            \n            await updateUI();\n            \n            if (isSkipping) break;\n            \n            await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        await updateUI();\n    });\n\n    DOM.raceSelect.addEventListener('change', () => {\n        DOM.backgroundDisplay.style.display = 'none';\n        character.background = { origin: null, past: null, encounter: null };\n        Object.keys(character.attributes).forEach(k => character.attributes[k] = 0);\n        updateUI(true);\n    });\n\n    $('#submit-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        await updateUI(true);\n        \n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '未设定';\n        \n        const finalCharacterObject={ NAME:finalName, GENDER:character.gender||'未设定', AGE:formattedAge, RACE:character.race, ORIGIN: character.background.origin ? character.background.origin.name : '未知', PAST: character.background.past ? character.background.past.name : '未知', ENCOUNTER: character.background.encounter || '未知', SKILLS: uniqueSkills, OC_DETAILS:character.oc_details||'无', ...character.attributes, MONEY:character.money };\n        \n        const slashCommand=`/send <START>\\nAdmin:\\n这是一个TRPG开局，请为 User 生成一段详尽的背景故事。\\n\\n# 故事核心要求\\n请严格根据以下【角色完整设定】，撰写一段从角色童年到现在的成长故事。故事需要清晰地阐述是什么关键事件或心路历程，最终让他/她确立了要成为一名冒险者的志向。请在故事中自然地融入角色的种族、出身背景、技能和性格特点。\\n\\n# 角色完整设定\\n---\\n## 基础信息\\n- **姓名:** ${finalName}\\n- **性别:** ${character.gender||'未设定'}\\n- **年龄:** ${formattedAge}\\n- **种族:** ${character.race}\\n\\n## 经历\\n- **出身:** ${character.background.origin ? character.background.origin.name : '未知'}\\n- **来历:** ${character.background.past ? character.background.past.name : '未知'}\\n- **邂逅:** ${character.background.encounter || '未知'}\\n\\n## 背景与技能\\n- **初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n- **初始技能:** ${uniqueSkills.join(', ')||'无'}\\n\\n## 补充设定 (OC)\\n- **额外补充:** ${character.oc_details||'无'}\\n\\n## 能力值\\n- **力量:** ${character.attributes['力量']}\\n- **敏捷:** ${character.attributes['敏捷']}\\n- **感知:** ${character.attributes['感知']}\\n- **知识:** ${character.attributes['知识']}\\n- **魅力:** ${character.attributes['魅力']}\\n- **信仰力:** ${character.attributes['信仰力']}\\n- **魔力:** ${character.attributes['魔力']}\\n\\n## 初始资产\\n- **资金:** ${character.money} 银币\\n\\|\\n/trigger`; \n        \n        try {\n            if (typeof insertOrAssignVariables === 'function') {\n                await insertOrAssignVariables(finalCharacterObject);\n            } else {\n                console.log(\"SillyTavern Function 'insertOrAssignVariables' not found. Variables:\", finalCharacterObject);\n            }\n            if (typeof triggerSlash === 'function') {\n                await triggerSlash(slashCommand, 'Send');\n            } else { \n                console.log(\"SillyTavern Function 'triggerSlash' not found. Command will be copied to clipboard.\");\n                navigator.clipboard.writeText(slashCommand).then(() => {\n                    alert('角色指令已复制到剪贴板！');\n                });\n            }\n        } catch (error) {\n            console.error('与SillyTavern交互失败:', error);\n            alert('与SillyTavern交互失败，请查看浏览器控制台。');\n        }\n\n        e.target.innerHTML = \"契约成立！\";\n    });\n    \n    initDicePool();\n    Object.keys(raceData).forEach(key => DOM.raceSelect.add(new Option(key, key)));\n    Object.keys(character.attributes).forEach(key => {\n        const pointControl = document.createElement('div');\n        pointControl.className = 'point-control';\n        pointControl.innerHTML = `<span class=\"label\">${key}</span><input type=\"text\" id=\"attr-${key.replace(/\\s/g, '')}\" readonly value=\"0\">`; // ID santized just in case\n        DOM.attributesContainer.appendChild(pointControl);\n    });\n    // A small fix for renderAttributes to handle sanitized IDs\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key.replace(/\\s/g, '')}`).value = value; }); }\n    updateUI(true);\n});\n</script>\n\n</body>\n</html>\n```"
  },
  {
    "role": "user",
    "content": "```\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>哥布林杀手TRPG - 冒险者契约</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/gsap.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/TextPlugin.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.min.js\" defer></script>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Noto+Serif+SC:wght@400;700&family=Vollkorn:wght@400;700&family=Courier+Prime&display=swap\" rel=\"stylesheet\">\n\n    <style>\n        :root {\n            --leather-bg: #5a3a2a;\n            --dark-leather-bg: #3b2a1a;\n            --parchment-bg: #f5f5dc;\n            --parchment-bg-gradient: linear-gradient(165deg, #f7e9d7, #e6d5c3);\n            --text-color: #3d3d3d;\n            --heading-color: #4a3c2c;\n            --border-color: #7a5a4a;\n            --font-main: 'Vollkorn', 'Noto Serif SC', serif;\n            --font-display: 'Cinzel', 'Noto Serif SC', serif;\n            --font-code: 'Courier Prime', 'Courier New', monospace;\n            --dice-size: 5rem; \n        }\n\n        html { height: 100%; }\n        body {\n            background-color: #3a2e20;\n            font-family: var(--font-main);\n            color: var(--text-color);\n            margin: 0; padding: 20px;\n            box-sizing: border-box;\n            display: flex;\n            align-items: center; justify-content: center;\n            min-height: 100%;\n        }\n        *, *:before, *:after { box-sizing: inherit; }\n\n        .creator-wrapper {\n            width: 100%; max-width: 900px;\n            margin: 0;\n            background: var(--parchment-bg-gradient);\n            border: 12px solid #8b7355;\n            border-radius: 8px;\n            box-shadow: 0 0 40px rgba(139, 115, 85, 0.3), inset 0 0 30px rgba(255, 255, 255, 0.4);\n            position: relative;\n            overflow: hidden;\n            padding: 25px;\n            display: flex; flex-direction: column;\n            max-height: 95vh;\n        }\n\n        .border-flow, .inner-border { position: absolute; pointer-events: none; }\n        .border-flow { top: 0; left: 0; right: 0; bottom: 0; background: linear-gradient(90deg, rgba(139,115,85,0.1) 1px, transparent 1px), linear-gradient(0deg, rgba(139,115,85,0.1) 1px, transparent 1px); background-size: 20px 20px; animation: borderFlow 15s linear infinite; }\n        .inner-border { top: 5px; left: 5px; right: 5px; bottom: 5px; border: 3px solid rgba(139,115,85,0.3); border-radius: 5px; }\n        @keyframes borderFlow { from { background-position: 0 0; } to { background-position: 20px 20px; } }\n\n        .creator-header {\n            text-align: center;\n            padding: 10px;\n            margin-bottom: 25px;\n            border-bottom: 2px solid rgba(139, 115, 85, 0.3);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 15px;\n        }\n        .creator-header h1 {\n            font-family: var(--font-display);\n            font-size: clamp(24px, 5vw, 32px);\n            margin: 0;\n            font-weight: 700;\n            letter-spacing: 3px;\n            color: var(--heading-color);\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.1);\n        }\n        \n        .title-char {\n            display: inline-block;\n            opacity: 0;\n            transform: translateY(30px);\n        }\n\n        .wax-seal {\n            width: 45px;\n            height: 45px;\n            display: inline-block;\n            background-color: #c0392b;\n            border-radius: 50%;\n            position: relative;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.4), inset 0 -2px 3px rgba(0,0,0,0.3);\n            opacity: 0;\n            transform: scale(0.5);\n            font-family: 'Cinzel', serif;\n            color: #e7a49c;\n            text-align: center;\n            font-size: 24px;\n            line-height: 45px;\n            font-weight: 700;\n        }\n        .wax-seal::before {\n            content: 'GS';\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.3);\n        }\n\n        .creator-scroll-content { overflow-y: auto; padding: 10px 20px 10px 10px; }\n        .creator-scroll-content::-webkit-scrollbar { width: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-track { background: rgba(139, 115, 85, 0.1); border-radius: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-thumb { background-color: #a89072; border-radius: 10px; border: 2px solid #f7e9d7; }\n        \n        .gs-creator-step { margin-bottom: 40px; overflow: hidden; }\n        .gs-creator-step h3 { font-family: var(--font-display); font-size: 1.5em; font-weight: 700; border-bottom: 1.5px solid var(--border-color); padding-bottom: 8px; margin-bottom: 20px; color: var(--heading-color); text-align: left; }\n        \n        .layout-grid { display: grid; grid-template-columns: 1fr; gap: 25px; align-items: flex-start; }\n        @media (min-width: 768px) {\n            .layout-grid { grid-template-columns: 1fr 280px; }\n        }\n\n        .form-container { text-align: left; }\n        .gs-form-group { margin-bottom: 16px; }\n        .gs-form-group label { display: block; margin-bottom: 6px; font-weight: bold; color: var(--heading-color); }\n        .form-input, .form-select, .form-textarea { width: 100%; padding: 10px; background-color: rgba(255, 255, 255, 0.5); border: 1px solid #a58e72; border-radius: 4px; color: #3d3d3d; font-family: var(--font-main); font-size: 1em; transition: all 0.2s ease-in-out; box-shadow: inset 1px 1px 2px rgba(0,0,0,0.1); }\n        .form-input:focus, .form-select:focus, .form-textarea:focus { outline: none; border-color: #8b7355; background-color: #fff; box-shadow: 0 0 5px rgba(139, 115, 85, 0.5); }\n        .form-textarea { resize: vertical; min-height: 100px; }\n\n        .grid-cols-2 {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 16px;\n        }\n        @media (min-width: 480px) {\n            .grid-cols-2 {\n                grid-template-columns: repeat(2, 1fr);\n            }\n        }\n\n        #attributes-container .point-control { display: flex; align-items: center; justify-content: space-between; margin-bottom: 8px; padding: 6px 8px; background: rgba(0,0,0,0.03); border-left: 3px solid rgba(139,115,85,0.2); border-radius: 4px; }\n        #attributes-container .label { font-weight: bold; color: var(--heading-color); }\n        #attributes-container input[readonly] { width: 40px; text-align: center; font-weight: bold; font-size: 1.2em; font-family: var(--font-display); color: #a02c2c; border: none; background-color: transparent; box-shadow: none; padding: 0; }\n        \n        .attributes-grid {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 0 16px;\n        }\n        @media (min-width: 480px) {\n            .attributes-grid {\n                grid-template-columns: 1fr 1fr;\n            }\n        }\n        \n        .skills-display p { background-color: rgba(0,0,0,0.05); border-left: 3px solid var(--border-color); padding: 10px 15px; margin-top: 10px; font-size: 0.95em; border-radius: 0 4px 4px 0; }\n        .skills-display strong { color: #8b5b4b; font-family: var(--font-display); }\n        .skills-display ul { list-style: none; padding-left: 0; margin-top: 8px; font-size: 0.9em; }\n        .skills-display li { margin-bottom: 4px; }\n\n        #character-summary { background-color: #e9e4d9; font-family: var(--font-code); line-height: 1.6; height: 250px; color: #2c2a2a; }\n        \n        .gs-button { width: 100%; background-color: #8b7355; color: var(--parchment-bg); border: 2px solid var(--dark-leather-bg); border-radius: 5px; padding: 12px 20px; font-family: var(--font-display); font-size: 1.2em; font-weight: 700; cursor: pointer; margin-top: 10px; transition: all 0.3s ease; box-shadow: 0 3px 5px rgba(0,0,0,0.3); }\n        .gs-button:hover { background-color: #a0886c; transform: translateY(-2px); box-shadow: 0 5px 8px rgba(0,0,0,0.3); }\n        .gs-button:disabled { background-color: #9e9e9e; border-color: #757575; cursor: not-allowed; transform: none; box-shadow: none; opacity: 0.6; }\n        .action-button { background-color: #6d5b4b; font-size: 1em; padding: 10px 15px; margin-top: 0; margin-bottom: 10px; width: auto; }\n        \n        .background-display { margin-top: 15px; padding: 15px; border: 1px dashed var(--border-color); border-radius: 5px; background: rgba(0,0,0,0.02); }\n        .background-display p { margin: 0 0 8px; }\n        .background-display span { font-weight: bold; color: var(--heading-color); }\n        \n        #radar-chart-container { \n            max-width: 100%;\n        }\n        @media (min-width: 768px) {\n            #radar-chart-container {\n                position: sticky;\n                top: 0;\n                padding-top: 45px;\n            }\n        }\n\n        pre.mermaid { \n            font-family: var(--font-main); \n            background: rgba(0,0,0,0.02); \n            border: 1px solid rgba(139,115,85,0.1); \n            padding: 10px; \n            border-radius: 5px; \n            overflow: auto;\n            transition: opacity 0.3s ease-in-out;\n        }\n        pre.mermaid.loading { opacity: 0.5; pointer-events: none; }\n\n        pre.mermaid > svg {\n            max-width: 100%;\n            height: auto;\n        }\n\n        #dice-overlay {\n            position: fixed; top: 0; left: 0; width: 100%; height: 100%;\n            background: rgba(0,0,0,0.8); backdrop-filter: blur(5px);\n            display: none; align-items: center; justify-content: center; flex-direction: column;\n            z-index: 100;\n            color: #fff; text-shadow: 0 0 10px #000;\n        }\n\n        .dice-container {\n            display: flex; flex-wrap: wrap; justify-content: center;\n            gap: 2rem; margin-bottom: 2rem;\n            max-width: 600px;\n        }\n        \n        .dice-icon {\n            width: var(--dice-size); height: var(--dice-size);\n            perspective: 800px;\n            transform-style: preserve-3d;\n            display: none;\n        }\n        .dice-icon.highlight {\n            transform: scale(1.15);\n            filter: drop-shadow(0 0 15px #FFEB3B);\n            transition: transform 0.3s ease, filter 0.3s ease;\n        }\n\n        .dice-cube {\n            width: 100%; height: 100%;\n            position: relative;\n            transform-style: preserve-3d;\n            transform: translateZ(calc(var(--dice-size) / -2));\n        }\n        \n        .dice-face {\n            position: absolute;\n            width: var(--dice-size); height: var(--dice-size);\n            background-color: rgba(255, 255, 255, 0.98);\n            border: 1.5px solid #857e72;\n            border-radius: 12%;\n        }\n\n        .pips-container {\n            width: 100%; height: 100%;\n            position: relative; \n        }\n        .pip {\n            width: 22%; height: 22%; \n            background-color: #3d352e;\n            border-radius: 50%;\n            box-shadow: inset 0 1px 3px rgba(0,0,0,0.5);\n            position: absolute; \n        }\n        \n        #dice-result-text { \n            font-family: var(--font-display); \n            font-size: 2.2em;\n            color: #FFEB3B; \n            text-shadow: 0 0 12px #FFEB3B; \n            min-height: 2em;\n            line-height: 1.2;\n            text-align: center; \n        }\n        \n        #skip-animation-btn {\n            position: absolute;\n            bottom: 30px;\n            font-size: 1em;\n            padding: 8px 20px;\n            width: auto;\n            background-color: rgba(0,0,0,0.3);\n            border-color: rgba(255,255,255,0.5);\n            color: rgba(255,255,255,0.8);\n        }\n        #skip-animation-btn:hover {\n            background-color: rgba(0,0,0,0.5);\n            color: #fff;\n        }\n\n        .typed-cursor {\n            opacity: 1;\n            animation: typed-blink 0.7s infinite;\n        }\n        @keyframes typed-blink{\n            0% { opacity: 1; }\n            50% { opacity: 0; }\n            100% { opacity: 1; }\n        }\n        \n        .validation-message {\n            text-align: center;\n            color: #b71c1c;\n            font-size: 0.9em;\n            font-weight: bold;\n            margin-top: -5px;\n            margin-bottom: 10px;\n            height: 1.2em;\n            opacity: 0;\n            will-change: transform, opacity;\n        }\n\n        #credits-screen {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            pointer-events: none;\n            opacity: 0;\n        }\n\n        #credits-screen p {\n            font-family: var(--font-display);\n            font-size: 2em;\n            color: #f5f5dc;\n            text-shadow: 0 0 8px rgba(245, 245, 220, 0.7);\n        }\n    </style>\n</head>\n<body>\n\n<div class=\"creator-wrapper\">\n    <div class=\"border-flow\"></div>\n    <div class=\"inner-border\"></div>\n    <header class=\"creator-header\">\n        <h1 id=\"main-title\">冒险者契约登记</h1>\n        <div id=\"wax-seal\" class=\"wax-seal\"></div>\n    </header>\n\n    <div class=\"creator-scroll-content\">\n        <div class=\"gs-creator-container\">\n            <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第一步：身份确认</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-name-input\">姓名</label><input id=\"char-name-input\" type=\"text\" placeholder=\"可留空，默认为 {{user}}\" class=\"form-input\"></div>\n                    <div class=\"grid-cols-2 gsap-content-item\">\n                        <div class=\"gs-form-group\"><label for=\"char-gender-input\">性别</label><input id=\"char-gender-input\" type=\"text\" placeholder=\"例如: 男性/女性/双性/无性/……\" class=\"form-input\"></div>\n                        <div class=\"gs-form-group\"><label for=\"char-age-input\">年龄</label><input id=\"char-age-input\" type=\"number\" placeholder=\"可参照种族说明\" class=\"form-input\"></div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-race-select\">种族</label><select id=\"char-race-select\" class=\"form-select\"></select></div>\n                    <div class=\"gs-form-group gsap-content-item\">\n                        <label>经历 (出身/来历/邂逅)</label>\n                        <button id=\"roll-background-btn\" class=\"gs-button action-button\">🎲 投骰决定经历</button>\n                        <div id=\"background-display\" class=\"background-display\" style=\"display: none;\">\n                            <p>出身: <span id=\"bg-origin\"></span></p>\n                            <p>来历: <span id=\"bg-past\"></span></p>\n                            <p>邂逅: <span id=\"bg-encounter\"></span></p>\n                        </div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"oc-details-input\">身体特征与补充</label><textarea id=\"oc-details-input\" placeholder=\"发色、瞳色、体型、性格、背景故事构思...\" class=\"form-textarea\"></textarea></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第二步：能力值与技能</h3>\n                <div class=\"layout-grid\">\n                    <div class=\"form-container gsap-content-item\">\n                        <button id=\"roll-attributes-btn\" class=\"gs-button action-button\">🎲 投骰决定能力值</button>\n                        <div id=\"attributes-container\" class=\"attributes-grid\"></div>\n                        <div id=\"skills-and-desc-container\" class=\"skills-display\"></div>\n                    </div>\n                    <div id=\"radar-chart-container\" class=\"gsap-content-item\"><pre class=\"mermaid\" id=\"radar-chart\"></pre></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第三步：完成登记</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"character-summary\">角色卡预览</label><textarea id=\"character-summary\" rows=\"12\" readonly class=\"form-textarea\"></textarea></div>\n                    <button id=\"submit-btn\" class=\"gs-button gsap-content-item\" disabled>确认登记，开始冒险</button>\n                    <div id=\"validation-message\" class=\"validation-message\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div id=\"credits-screen\">\n    <p>作者 𝙀𝙡𝙖𝙞𝙣𝙖𝙙𝙚𝙨</p>\n</div>\n\n<div id=\"dice-overlay\">\n    <div class=\"dice-container\" id=\"dice-container\"></div>\n    <div id=\"dice-result-text\"></div>\n    <button id=\"skip-animation-btn\" class=\"gs-button\">跳过动画</button>\n</div>\n\n<div id=\"dice-templates\" style=\"display:none;\">\n    <div class=\"dice-cube\" data-id_template=\"dice-cube\">\n        <div class=\"dice-face face-front\" data-face=\"1\"><div class=\"pips-container\"><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-back\" data-face=\"6\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-right\" data-face=\"3\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-left\" data-face=\"4\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-top\" data-face=\"2\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-bottom\" data-face=\"5\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n    </div>\n</div>\n\n<script>\n// --- MODIFIED DATA ---\nconst raceData = {\n    '凡人': { attr_rolls: { '力量': '1d3+1', '敏捷': '1d3', '感知': '1d3', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3+2', '魔力': '1d3' }, skills: ['过载行动(初级)', '武器:投掷武器(初级)', '长距离移动(初级)']},\n    '矿人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3', '感知': '1d3+2', '知识': '1d3-1', '魅力': '1d3+1', '信仰力': '1d3+1', '魔力': '1d3-1' }, skills: ['治愈适性(初级)', '夜视(初级)', '锻造(初级)']},\n    '森人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+1', '感知': '1d3+1', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3-1', '魔力': '1d3+1' }, skills: ['武器:弩弓(初级)', '夜视(初级)', '精灵宠儿(初级)']},\n    '蜥蜴人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3+1', '感知': '1d3', '知识': '1d3', '魅力': '1d3+1', '信仰力': '1d3', '魔力': '1d3' }, skills: ['免疫强化(初级)', '夜视(初级)', '龙族血统(初级)']},\n    '圃人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+2', '感知': '1d3+1', '知识': '1d3', '魅力': '1d3-1', '信仰力': '1d3', '魔力': '1d3+2' }, skills: ['隐匿(初级)', '先发制人(初级)', '烹饪(初级)']}\n};\nconst backgroundData = {\n    origin: { \n        '凡人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '学者', class: '魔术师', level: 1, skills: ['文献调查(初级)'] }, 6: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 7: { name: '农民', skills: ['生产业:农业(初级)', '强健(初级)'] }, 8: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '骑士', class: '战士', level: 1, skills: ['骑乘(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n        '矿人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 6: { name: '酒馆老板', class: '战士', level: 1, skills: ['观察(初级)'] }, 7: { name: '铁匠', skills: ['工匠:锻造(初级)', '手工(初级)'] }, 8: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '碎盾者', class: '战士', level: 1, skills: ['强击攻击·斩(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n    },\n    past: { 2: { name: '奴隶', skills: ['劳动(初级)'] }, 3: { name: '牢狱', skills: ['犯罪知识(初级)'] }, 4: { name: '战场', skills: ['沉着冷静(初级)'] }, 5: { name: '神殿', skills: ['神学(初级)'] }, 6: { name: '孤儿', skills: ['忍耐(初级)'] }, 7: { name: '平顺', skills: ['幸运(初级)'] }, 8: { name: '贫困', skills: ['生存术(初级)'] }, 9: { name: '学校', skills: ['博识(初级)'] }, 10: { name: '深闺', skills: ['无偏见(初级)'] }, 11: { name: '奢华', skills: ['鉴定(初级)'] }, 12: { name: '宫廷', skills: ['礼仪(初级)'] }},\n    encounter: { 2: '宿敌', 3: '上司', 4: '后辈', 5: '交易对象', 6: '下属', 7: '家人', 8: '挚友', 9: '前辈', 10: '未婚夫/妻', 11: '劲敌', 12: '师父' }\n};\nbackgroundData.origin['森人'] = backgroundData.origin['凡人']; backgroundData.origin['蜥蜴人'] = backgroundData.origin['凡人']; backgroundData.origin['圃人'] = backgroundData.origin['凡人'];\nconst character = {\n    name: '', gender: '', age: '', oc_details: '', race: '凡人',\n    background: { origin: null, past: null, encounter: null },\n    attributes: { '力量': 0, '敏捷': 0, '感知': 0, '知识': 0, '魅力': 0, '信仰力': 0, '魔力': 0, '潜力': 0 },\n    skills: [], classes: {}, money: 0, _lastAttributesForChart: '',\n};\n// --- END MODIFIED DATA ---\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    gsap.registerPlugin(TextPlugin);\n    mermaid.initialize({ startOnLoad: true, theme: 'base', themeVariables: {\n        '--mermaid-font-family': \"'Vollkorn', 'Noto Serif SC', serif\",\n        primaryColor: '#f7e9d7', primaryTextColor: '#3d3d3d', lineColor: '#8b7355', textColor: '#4a3c2c',\n    }});\n    \n    const $ = (s) => document.querySelector(s);\n    const roll1D6 = () => Math.floor(Math.random() * 6) + 1;\n    const roll1D3 = () => {\n        const d6 = roll1D6();\n        if (d6 <= 2) return { d6, d3: 1 };\n        if (d6 <= 4) return { d6, d3: 2 };\n        return { d6, d3: 3 };\n    };\n    const rollDiceString = (diceString) => { const p=diceString.split('*');const d=p[0];const m=parseInt(p[1])||1;if(!d.includes('d'))return 0;const[n,s]=d.split('d').map(Number);let t=0;for(let i=0;i<n;i++){t+=Math.floor(Math.random()*s)+1;}return t*m; };\n    const formatAge = (ageValue) => { if (!ageValue && ageValue !== 0) return ageValue; const num = Number(ageValue); if (isNaN(num)) return ageValue; if (Math.abs(num) >= 1_000_000) return num.toExponential(2); return ageValue; };\n    const debounce = (func, delay) => { let timeout; return function(...args) { clearTimeout(timeout); timeout = setTimeout(() => func.apply(this, args), delay); }; };\n    const diceUnicode = ['\\u2680', '\\u2681', '\\u2682', '\\u2683', '\\u2684', '\\u2685'];\n\n    const DOM = {\n        nameInput: $('#char-name-input'), genderInput: $('#char-gender-input'), ageInput: $('#char-age-input'),\n        ocDetailsInput: $('#oc-details-input'), raceSelect: $('#char-race-select'), attributesContainer: $('#attributes-container'),\n        skillsContainer: $('#skills-and-desc-container'), radarChart: $('#radar-chart'), summarySheet: $('#character-summary'),\n        diceOverlay: $('#dice-overlay'), diceContainer: $('#dice-container'), diceResultText: $('#dice-result-text'),\n        backgroundDisplay: $('#background-display'), bgOrigin: $('#bg-origin'), bgPast: $('#bg-past'), bgEncounter: $('#bg-encounter'),\n        skipAnimationBtn: $('#skip-animation-btn'),\n        submitBtn: $('#submit-btn'),\n        validationMessage: $('#validation-message'),\n    };\n    \n    const dicePool = []; const MAX_DICE = 6;\n    let currentAnimation = null; let textAnimation = null; let isSkipping = false;\n    let currentValidationMessage = '';\n    \n    function validateAndToggleButton() {\n        let newMessage = '';\n        if (!character.age || String(character.age).trim() === '') {\n            newMessage = '请填写您的冒险者年龄。';\n        } else if (!character.gender || !character.gender.trim()) {\n            newMessage = '请设定冒险者的性别。';\n        } else if (!character.background.origin) {\n            newMessage = '请投骰决定您的冒险者经历。';\n        } else if (Object.values(character.attributes).every(val => val === 0)) {\n            newMessage = '请投骰决定您的能力值。';\n        }\n\n        if (newMessage === currentValidationMessage) return;\n        currentValidationMessage = newMessage;\n\n        if (newMessage) {\n            DOM.submitBtn.disabled = true;\n            DOM.validationMessage.textContent = newMessage;\n            gsap.fromTo(DOM.validationMessage, { autoAlpha: 0, scale: 0.8 }, { autoAlpha: 1, scale: 1, duration: 0.4, ease: 'elastic.out(1, 0.75)' });\n        } else {\n            DOM.submitBtn.disabled = false;\n            gsap.to(DOM.validationMessage, { autoAlpha: 0, duration: 0.3 });\n        }\n    }\n    function updateCharacterDataFromDOM() { character.name = DOM.nameInput.value; character.gender = DOM.genderInput.value; character.age = DOM.ageInput.value; character.oc_details = DOM.ocDetailsInput.value; character.race = DOM.raceSelect.value; }\n    function renderSkills() { const uniqueSkills = [...new Set(character.skills)]; DOM.skillsContainer.innerHTML = `<p><strong>天赋与习得技能:</strong></p><ul>${uniqueSkills.map(s => `<li>- ${s}</li>`).join('')}</ul>`; }\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key}`).value = value; }); }\n    function renderSummary() {\n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '?';\n        const originText = `出身:${character.background.origin ? character.background.origin.name : '?'}`;\n        const pastText = `来历:${character.background.past ? character.background.past.name : '?'}`;\n        const encounterText = `邂逅:${character.background.encounter || '?'}`;\n        let summary = `### 《哥布林杀手TRPG》冒险者登记卡\\n` + `**姓名:** ${finalName} | **种族:** ${character.race} | **性别:** ${character.gender || '?'} | **年龄:** ${formattedAge}\\n` + `**经历:** ${originText} / ${pastText} / ${encounterText}\\n` + `**初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n` + `**初始技能:** ${uniqueSkills.join(', ') || '无'}\\n`; if (character.oc_details) { summary += `**身体特征与补充:** ${character.oc_details}\\n`; } summary += `---\\n**能力值:**\\n`; summary += Object.entries(character.attributes).map(([key, value]) => `- ${key}: ${value}`).join('\\n'); summary += `\\n**持有资金:** ${character.money} 银币`;\n        DOM.summarySheet.value = summary.replace(/### /g, '').replace(/\\*\\*/g, '').replace(/---/g, '\\n────────────────────\\n').replace(/- /g, '  ');\n        DOM.summarySheet.setAttribute('data-raw', summary);\n    }\n    async function renderRadarChartIfNeeded() { const currentAttributesString = JSON.stringify(character.attributes); if (currentAttributesString === character._lastAttributesForChart) return; DOM.radarChart.classList.add('loading'); const radarSyntax = `radar-beta\\ntitle 能力值分布\\naxis a[\"力量 ${character.attributes['力量']}\"]\\naxis b[\"敏捷 ${character.attributes['敏捷']}\"]\\naxis c[\"感知 ${character.attributes['感知']}\"]\\naxis d[\"知识 ${character.attributes['知识']}\"]\\naxis e[\"魅力 ${character.attributes['魅力']}\"]\\naxis f[\"信仰 ${character.attributes['信仰力']}\"]\\naxis g[\"魔力 ${character.attributes['魔力']}\"]\\naxis h[\"潜力 ${character.attributes['潜力']}\"]\\ncurve current[\"能力\"]{${character.attributes['力量']},${character.attributes['敏捷']},${character.attributes['感知']},${character.attributes['知识']},${character.attributes['魅力']},${character.attributes['信仰力']},${character.attributes['魔力']},${character.attributes['潜力']}}\\nmax 10\\nmin 0`; DOM.radarChart.innerHTML = radarSyntax; DOM.radarChart.removeAttribute('data-processed'); try { await mermaid.run({ nodes: [DOM.radarChart] }); character._lastAttributesForChart = currentAttributesString; } catch(e) { console.error(\"Mermaid rendering error:\", e); } finally { DOM.radarChart.classList.remove('loading'); } }\n    async function updateUI(forceFullUpdate = false) { updateCharacterDataFromDOM(); if(forceFullUpdate) { character._lastAttributesForChart = ''; character.skills = []; character.classes = {}; character.money = 100; if(raceData[character.race].skills) character.skills.push(...raceData[character.race].skills); if (character.background.origin) { if (character.background.origin.skills) character.skills.push(...character.background.origin.skills); if (character.background.origin.class) character.classes[character.background.origin.class] = character.background.origin.level; if(character.background.origin.money) character.money += rollDiceString(character.background.origin.money); } if (character.background.past && character.background.past.skills) { character.skills.push(...character.background.past.skills); } } renderAttributes(); renderSkills(); renderSummary(); await renderRadarChartIfNeeded(); validateAndToggleButton(); }\n\n    const masterTl = gsap.timeline({ delay: 0.2 });\n    const title = $('#main-title');\n    title.innerHTML = title.textContent.split('').map(char => `<span class=\"title-char\">${char}</span>`).join('');\n    gsap.set(\".gsap-header-item, .gsap-content-item\", { autoAlpha: 0, y: 20 });\n    masterTl.to(\".title-char\", { autoAlpha: 1, y: 0, duration: 0.7, ease: \"power3.out\", stagger: 0.1 }).to(\"#wax-seal\", { autoAlpha: 1, scale: 1, duration: 0.6, ease: \"elastic.out(1, 0.7)\" }, \"-=0.5\");\n    document.querySelectorAll('.gs-creator-step').forEach((step, index) => { const stepTl = gsap.timeline(); stepTl.to(step.querySelector('.gsap-header-item'), { autoAlpha: 1, y: 0, duration: 0.6, ease: 'power2.out' }).to(step.querySelectorAll('.gsap-content-item'), { autoAlpha: 1, y: 0, duration: 0.5, ease: 'power2.out', stagger: 0.1 }, '-=0.4'); masterTl.add(stepTl, `-=${index === 0 ? 0.2 : 0.7}`); });\n    const pipPositions = { 1: [ { left: '50%', top: '50%' } ], 2: [ { left: '25%', top: '25%' }, { left: '75%', top: '75%' } ], 3: [ { left: '25%', top: '25%' }, { left: '50%', top: '50%' }, { left: '75%', top: '75%' } ], 4: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 5: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '50%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 6: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '50%' }, { left: '75%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ]};\n    function setupCube(cubeEl) { const size = 'calc(var(--dice-size) / 2)'; gsap.set(cubeEl.querySelector('.face-front'),  { transform: `rotateY(0deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-back'),   { transform: `rotateY(180deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-right'),  { transform: `rotateY(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-left'),   { transform: `rotateY(-90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-top'),   { transform: `rotateX(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-bottom'), { transform: `rotateX(-90deg) translateZ(${size})` }); const faces = cubeEl.querySelectorAll('.dice-face'); faces.forEach(face => { const faceNum = face.getAttribute('data-face'); const pips = face.querySelectorAll('.pip'); const positions = pipPositions[faceNum]; if (!pips.length || !positions) return; pips.forEach((pip, index) => { const pos = positions[index]; gsap.set(pip, { left: pos.left, top: pos.top, xPercent: -50, yPercent: -50 }); }); }); }\n    function getRotationForFace(faceValue) { switch (faceValue) { case 1: return { x: 0, y: 0 }; case 6: return { x: 0, y: 180 }; case 3: return { x: 0, y: -90 }; case 4: return { x: 0, y: 90 }; case 2: return { x: -90, y: 0 }; case 5: return { x: 90,  y: 0 }; default: return { x: 0, y: 0 }; } }\n    async function animateText(element, text) { if(isSkipping) {element.innerHTML = text.replace(/\\n/g, '<br>'); return;} return new Promise(resolve => { if (textAnimation && textAnimation.isActive()) textAnimation.kill(); element.innerHTML = ''; textAnimation = gsap.to(element, { duration: text.length * 0.05, text: { value: text.replace(/\\n/g, '<br>'), newClass: \"typed-cursor\" }, ease: \"none\", onComplete: () => { gsap.delayedCall(0.7, () => { element.querySelector('.typed-cursor')?.remove(); resolve(); }); } }); }); }\n    function initDicePool() { const diceTemplate = document.querySelector('[data-id_template=\"dice-cube\"]'); if (!diceTemplate) return; for (let i = 0; i < MAX_DICE; i++) { const dieIconElement = document.createElement('div'); dieIconElement.className = 'dice-icon'; const newCube = diceTemplate.cloneNode(true); dieIconElement.appendChild(newCube); DOM.diceContainer.appendChild(dieIconElement); setupCube(newCube); dicePool.push(dieIconElement); } }\n    async function animateRoll(numDice, preCalculatedRolls, textToShowDuringRoll = \"投掷中...\") { return new Promise(resolve => { if (currentAnimation && currentAnimation.isActive()) currentAnimation.kill(); dicePool.forEach(die => die.style.display = 'none'); const activeDice = dicePool.slice(0, numDice); animateText(DOM.diceResultText, textToShowDuringRoll); activeDice.forEach(die => { die.style.display = 'flex'; die.className = 'dice-icon'; }); const masterTl = gsap.timeline({ onComplete: () => { if(isSkipping) DOM.diceResultText.innerHTML = ''; resolve(preCalculatedRolls); }}); currentAnimation = masterTl; activeDice.forEach((dieElement, i) => { const dieCube = dieElement.querySelector('.dice-cube'); const visualRoll = preCalculatedRolls[i]; const targetRotation = getRotationForFace(visualRoll); const dieTimeline = gsap.timeline(); dieTimeline.to(dieCube, { rotationX: `+=${gsap.utils.random(720, 1080)}`, rotationY: `+=${gsap.utils.random(720, 1080)}`, duration: 1.8, ease: \"power2.in\" }).to(dieCube, { rotationX: targetRotation.x, rotationY: targetRotation.y, duration: 0.7, ease: \"power4.out\" }); masterTl.add(dieTimeline, 0); }); }); }\n    \n    const debouncedUpdate = debounce(updateUI, 400);\n    [DOM.nameInput, DOM.genderInput, DOM.ageInput, DOM.ocDetailsInput].forEach(el => el.addEventListener('input', debouncedUpdate));\n    \n    DOM.skipAnimationBtn.addEventListener('click', () => {\n        isSkipping = true;\n        if (currentAnimation && currentAnimation.isActive()) currentAnimation.progress(1);\n        if (textAnimation && textAnimation.isActive()) textAnimation.progress(1);\n    });\n\n    $('#roll-background-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const rolls = [roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6()];\n        await animateRoll(6, rolls, '投掷 经历... (2d6 x 3)');\n        \n        const sums = { origin: rolls[0] + rolls[1], past: rolls[2] + rolls[3], encounter: rolls[4] + rolls[5] };\n        \n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `出身: ${rolls[0]} + ${rolls[1]} = ${sums.origin}\\n(${backgroundData.origin[character.race][sums.origin].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `来历: ${rolls[2]} + ${rolls[3]} = ${sums.past}\\n(${backgroundData.past[sums.past].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(4, 6), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `邂逅: ${rolls[4]} + ${rolls[5]} = ${sums.encounter}\\n(${backgroundData.encounter[sums.encounter]})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        character.background.origin = backgroundData.origin[character.race][sums.origin];\n        character.background.past = backgroundData.past[sums.past];\n        character.background.encounter = backgroundData.encounter[sums.encounter];\n        DOM.bgOrigin.textContent = character.background.origin.name;\n        DOM.bgPast.textContent = character.background.past.name;\n        DOM.bgEncounter.textContent = character.background.encounter;\n        DOM.backgroundDisplay.style.display = 'block';\n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        updateUI(true);\n    });\n\n    $('#roll-attributes-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const attrRolls = raceData[character.race].attr_rolls;\n        const allCalculatedRolls = [];\n\n        // Prepare race-based attributes\n        for (const attr in attrRolls) {\n            const formula = attrRolls[attr];\n            const modifier = parseInt(formula.split('d3')[1] || '0');\n            const { d6, d3 } = roll1D3();\n            const finalValue = Math.max(0, d3 + modifier);\n            character.attributes[attr] = finalValue;\n            allCalculatedRolls.push({ attr, formula, d6, d3, modifier, finalValue });\n        }\n        \n        // Prepare \"Potential\" attribute\n        const potentialValue = Math.floor(Math.random() * 3) + 1;\n        const d6ForPotential = (potentialValue * 2) - 1; // Map 1,2,3 to d6 faces 1,3,5 for animation\n        character.attributes['潜力'] = potentialValue;\n        allCalculatedRolls.push({\n            attr: '潜力',\n            formula: '1-3', // Just a descriptor\n            d6: d6ForPotential,\n            finalValue: potentialValue\n        });\n        \n        // Animate all rolls sequentially\n        for (const roll of allCalculatedRolls) {\n            await animateRoll(1, [roll.d6], `投掷 ${roll.attr}...`);\n            if (isSkipping) break;\n\n            gsap.to(dicePool[0], { className: 'dice-icon highlight', duration: 0.3 });\n            \n            let resultText;\n            if (roll.attr === '潜力') {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.finalValue}`;\n            } else {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.d3} ${roll.modifier >= 0 ? '+' : ''} ${roll.modifier} = ${roll.finalValue}`;\n            }\n            await animateText(DOM.diceResultText, resultText);\n            \n            await updateUI();\n            \n            if (isSkipping) break;\n            \n            await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        await updateUI();\n    });\n\n    DOM.raceSelect.addEventListener('change', () => {\n        DOM.backgroundDisplay.style.display = 'none';\n        character.background = { origin: null, past: null, encounter: null };\n        Object.keys(character.attributes).forEach(k => character.attributes[k] = 0);\n        updateUI(true);\n    });\n\n    $('#submit-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        await updateUI(true);\n        \n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '未设定';\n        \n        const finalCharacterObject={ NAME:finalName, GENDER:character.gender||'未设定', AGE:formattedAge, RACE:character.race, ORIGIN: character.background.origin ? character.background.origin.name : '未知', PAST: character.background.past ? character.background.past.name : '未知', ENCOUNTER: character.background.encounter || '未知', SKILLS: uniqueSkills, OC_DETAILS:character.oc_details||'无', ...character.attributes, MONEY:character.money };\n        \n        const slashCommand=`/send <START>\\nAdmin:\\n这是一个TRPG开局，请为 User 生成一段详尽的背景故事。\\n\\n# 故事核心要求\\n请严格根据以下【角色完整设定】，撰写一段从角色童年到现在的成长故事。故事需要清晰地阐述是什么关键事件或心路历程，最终让他/她确立了要成为一名冒险者的志向。请在故事中自然地融入角色的种族、出身背景、技能和性格特点。\\n\\n# 角色完整设定\\n---\\n## 基础信息\\n- **姓名:** ${finalName}\\n- **性别:** ${character.gender||'未设定'}\\n- **年龄:** ${formattedAge}\\n- **种族:** ${character.race}\\n\\n## 经历\\n- **出身:** ${character.background.origin ? character.background.origin.name : '未知'}\\n- **来历:** ${character.background.past ? character.background.past.name : '未知'}\\n- **邂逅:** ${character.background.encounter || '未知'}\\n\\n## 背景与技能\\n- **初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n- **初始技能:** ${uniqueSkills.join(', ')||'无'}\\n\\n## 补充设定 (OC)\\n- **额外补充:** ${character.oc_details||'无'}\\n\\n## 能力值\\n- **力量:** ${character.attributes['力量']}\\n- **敏捷:** ${character.attributes['敏捷']}\\n- **感知:** ${character.attributes['感知']}\\n- **知识:** ${character.attributes['知识']}\\n- **魅力:** ${character.attributes['魅力']}\\n- **信仰力:** ${character.attributes['信仰力']}\\n- **魔力:** ${character.attributes['魔力']}\\n\\n## 初始资产\\n- **资金:** ${character.money} 银币\\n\\|\\n/trigger`; \n        \n        try {\n            if (typeof insertOrAssignVariables === 'function') {\n                await insertOrAssignVariables(finalCharacterObject);\n            } else {\n                console.log(\"SillyTavern Function 'insertOrAssignVariables' not found. Variables:\", finalCharacterObject);\n            }\n            if (typeof triggerSlash === 'function') {\n                await triggerSlash(slashCommand, 'Send');\n            } else { \n                console.log(\"SillyTavern Function 'triggerSlash' not found. Command will be copied to clipboard.\");\n                navigator.clipboard.writeText(slashCommand).then(() => {\n                    alert('角色指令已复制到剪贴板！');\n                });\n            }\n        } catch (error) {\n            console.error('与SillyTavern交互失败:', error);\n            alert('与SillyTavern交互失败，请查看浏览器控制台。');\n        }\n\n        e.target.innerHTML = \"契约成立！\";\n    });\n    \n    initDicePool();\n    Object.keys(raceData).forEach(key => DOM.raceSelect.add(new Option(key, key)));\n    Object.keys(character.attributes).forEach(key => {\n        const pointControl = document.createElement('div');\n        pointControl.className = 'point-control';\n        pointControl.innerHTML = `<span class=\"label\">${key}</span><input type=\"text\" id=\"attr-${key.replace(/\\s/g, '')}\" readonly value=\"0\">`; // ID santized just in case\n        DOM.attributesContainer.appendChild(pointControl);\n    });\n    // A small fix for renderAttributes to handle sanitized IDs\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key.replace(/\\s/g, '')}`).value = value; }); }\n    updateUI(true);\n});\n</script>\n\n</body>\n</html>\n```"
  },
  {
    "role": "user",
    "content": "```\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>哥布林杀手TRPG - 冒险者契约</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/gsap.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/TextPlugin.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.min.js\" defer></script>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Noto+Serif+SC:wght@400;700&family=Vollkorn:wght@400;700&family=Courier+Prime&display=swap\" rel=\"stylesheet\">\n\n    <style>\n        :root {\n            --leather-bg: #5a3a2a;\n            --dark-leather-bg: #3b2a1a;\n            --parchment-bg: #f5f5dc;\n            --parchment-bg-gradient: linear-gradient(165deg, #f7e9d7, #e6d5c3);\n            --text-color: #3d3d3d;\n            --heading-color: #4a3c2c;\n            --border-color: #7a5a4a;\n            --font-main: 'Vollkorn', 'Noto Serif SC', serif;\n            --font-display: 'Cinzel', 'Noto Serif SC', serif;\n            --font-code: 'Courier Prime', 'Courier New', monospace;\n            --dice-size: 5rem; \n        }\n\n        html { height: 100%; }\n        body {\n            background-color: #3a2e20;\n            font-family: var(--font-main);\n            color: var(--text-color);\n            margin: 0; padding: 20px;\n            box-sizing: border-box;\n            display: flex;\n            align-items: center; justify-content: center;\n            min-height: 100%;\n        }\n        *, *:before, *:after { box-sizing: inherit; }\n\n        .creator-wrapper {\n            width: 100%; max-width: 900px;\n            margin: 0;\n            background: var(--parchment-bg-gradient);\n            border: 12px solid #8b7355;\n            border-radius: 8px;\n            box-shadow: 0 0 40px rgba(139, 115, 85, 0.3), inset 0 0 30px rgba(255, 255, 255, 0.4);\n            position: relative;\n            overflow: hidden;\n            padding: 25px;\n            display: flex; flex-direction: column;\n            max-height: 95vh;\n        }\n\n        .border-flow, .inner-border { position: absolute; pointer-events: none; }\n        .border-flow { top: 0; left: 0; right: 0; bottom: 0; background: linear-gradient(90deg, rgba(139,115,85,0.1) 1px, transparent 1px), linear-gradient(0deg, rgba(139,115,85,0.1) 1px, transparent 1px); background-size: 20px 20px; animation: borderFlow 15s linear infinite; }\n        .inner-border { top: 5px; left: 5px; right: 5px; bottom: 5px; border: 3px solid rgba(139,115,85,0.3); border-radius: 5px; }\n        @keyframes borderFlow { from { background-position: 0 0; } to { background-position: 20px 20px; } }\n\n        .creator-header {\n            text-align: center;\n            padding: 10px;\n            margin-bottom: 25px;\n            border-bottom: 2px solid rgba(139, 115, 85, 0.3);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 15px;\n        }\n        .creator-header h1 {\n            font-family: var(--font-display);\n            font-size: clamp(24px, 5vw, 32px);\n            margin: 0;\n            font-weight: 700;\n            letter-spacing: 3px;\n            color: var(--heading-color);\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.1);\n        }\n        \n        .title-char {\n            display: inline-block;\n            opacity: 0;\n            transform: translateY(30px);\n        }\n\n        .wax-seal {\n            width: 45px;\n            height: 45px;\n            display: inline-block;\n            background-color: #c0392b;\n            border-radius: 50%;\n            position: relative;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.4), inset 0 -2px 3px rgba(0,0,0,0.3);\n            opacity: 0;\n            transform: scale(0.5);\n            font-family: 'Cinzel', serif;\n            color: #e7a49c;\n            text-align: center;\n            font-size: 24px;\n            line-height: 45px;\n            font-weight: 700;\n        }\n        .wax-seal::before {\n            content: 'GS';\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.3);\n        }\n\n        .creator-scroll-content { overflow-y: auto; padding: 10px 20px 10px 10px; }\n        .creator-scroll-content::-webkit-scrollbar { width: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-track { background: rgba(139, 115, 85, 0.1); border-radius: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-thumb { background-color: #a89072; border-radius: 10px; border: 2px solid #f7e9d7; }\n        \n        .gs-creator-step { margin-bottom: 40px; overflow: hidden; }\n        .gs-creator-step h3 { font-family: var(--font-display); font-size: 1.5em; font-weight: 700; border-bottom: 1.5px solid var(--border-color); padding-bottom: 8px; margin-bottom: 20px; color: var(--heading-color); text-align: left; }\n        \n        .layout-grid { display: grid; grid-template-columns: 1fr; gap: 25px; align-items: flex-start; }\n        @media (min-width: 768px) {\n            .layout-grid { grid-template-columns: 1fr 280px; }\n        }\n\n        .form-container { text-align: left; }\n        .gs-form-group { margin-bottom: 16px; }\n        .gs-form-group label { display: block; margin-bottom: 6px; font-weight: bold; color: var(--heading-color); }\n        .form-input, .form-select, .form-textarea { width: 100%; padding: 10px; background-color: rgba(255, 255, 255, 0.5); border: 1px solid #a58e72; border-radius: 4px; color: #3d3d3d; font-family: var(--font-main); font-size: 1em; transition: all 0.2s ease-in-out; box-shadow: inset 1px 1px 2px rgba(0,0,0,0.1); }\n        .form-input:focus, .form-select:focus, .form-textarea:focus { outline: none; border-color: #8b7355; background-color: #fff; box-shadow: 0 0 5px rgba(139, 115, 85, 0.5); }\n        .form-textarea { resize: vertical; min-height: 100px; }\n\n        .grid-cols-2 {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 16px;\n        }\n        @media (min-width: 480px) {\n            .grid-cols-2 {\n                grid-template-columns: repeat(2, 1fr);\n            }\n        }\n\n        #attributes-container .point-control { display: flex; align-items: center; justify-content: space-between; margin-bottom: 8px; padding: 6px 8px; background: rgba(0,0,0,0.03); border-left: 3px solid rgba(139,115,85,0.2); border-radius: 4px; }\n        #attributes-container .label { font-weight: bold; color: var(--heading-color); }\n        #attributes-container input[readonly] { width: 40px; text-align: center; font-weight: bold; font-size: 1.2em; font-family: var(--font-display); color: #a02c2c; border: none; background-color: transparent; box-shadow: none; padding: 0; }\n        \n        .attributes-grid {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 0 16px;\n        }\n        @media (min-width: 480px) {\n            .attributes-grid {\n                grid-template-columns: 1fr 1fr;\n            }\n        }\n        \n        .skills-display p { background-color: rgba(0,0,0,0.05); border-left: 3px solid var(--border-color); padding: 10px 15px; margin-top: 10px; font-size: 0.95em; border-radius: 0 4px 4px 0; }\n        .skills-display strong { color: #8b5b4b; font-family: var(--font-display); }\n        .skills-display ul { list-style: none; padding-left: 0; margin-top: 8px; font-size: 0.9em; }\n        .skills-display li { margin-bottom: 4px; }\n\n        #character-summary { background-color: #e9e4d9; font-family: var(--font-code); line-height: 1.6; height: 250px; color: #2c2a2a; }\n        \n        .gs-button { width: 100%; background-color: #8b7355; color: var(--parchment-bg); border: 2px solid var(--dark-leather-bg); border-radius: 5px; padding: 12px 20px; font-family: var(--font-display); font-size: 1.2em; font-weight: 700; cursor: pointer; margin-top: 10px; transition: all 0.3s ease; box-shadow: 0 3px 5px rgba(0,0,0,0.3); }\n        .gs-button:hover { background-color: #a0886c; transform: translateY(-2px); box-shadow: 0 5px 8px rgba(0,0,0,0.3); }\n        .gs-button:disabled { background-color: #9e9e9e; border-color: #757575; cursor: not-allowed; transform: none; box-shadow: none; opacity: 0.6; }\n        .action-button { background-color: #6d5b4b; font-size: 1em; padding: 10px 15px; margin-top: 0; margin-bottom: 10px; width: auto; }\n        \n        .background-display { margin-top: 15px; padding: 15px; border: 1px dashed var(--border-color); border-radius: 5px; background: rgba(0,0,0,0.02); }\n        .background-display p { margin: 0 0 8px; }\n        .background-display span { font-weight: bold; color: var(--heading-color); }\n        \n        #radar-chart-container { \n            max-width: 100%;\n        }\n        @media (min-width: 768px) {\n            #radar-chart-container {\n                position: sticky;\n                top: 0;\n                padding-top: 45px;\n            }\n        }\n\n        pre.mermaid { \n            font-family: var(--font-main); \n            background: rgba(0,0,0,0.02); \n            border: 1px solid rgba(139,115,85,0.1); \n            padding: 10px; \n            border-radius: 5px; \n            overflow: auto;\n            transition: opacity 0.3s ease-in-out;\n        }\n        pre.mermaid.loading { opacity: 0.5; pointer-events: none; }\n\n        pre.mermaid > svg {\n            max-width: 100%;\n            height: auto;\n        }\n\n        #dice-overlay {\n            position: fixed; top: 0; left: 0; width: 100%; height: 100%;\n            background: rgba(0,0,0,0.8); backdrop-filter: blur(5px);\n            display: none; align-items: center; justify-content: center; flex-direction: column;\n            z-index: 100;\n            color: #fff; text-shadow: 0 0 10px #000;\n        }\n\n        .dice-container {\n            display: flex; flex-wrap: wrap; justify-content: center;\n            gap: 2rem; margin-bottom: 2rem;\n            max-width: 600px;\n        }\n        \n        .dice-icon {\n            width: var(--dice-size); height: var(--dice-size);\n            perspective: 800px;\n            transform-style: preserve-3d;\n            display: none;\n        }\n        .dice-icon.highlight {\n            transform: scale(1.15);\n            filter: drop-shadow(0 0 15px #FFEB3B);\n            transition: transform 0.3s ease, filter 0.3s ease;\n        }\n\n        .dice-cube {\n            width: 100%; height: 100%;\n            position: relative;\n            transform-style: preserve-3d;\n            transform: translateZ(calc(var(--dice-size) / -2));\n        }\n        \n        .dice-face {\n            position: absolute;\n            width: var(--dice-size); height: var(--dice-size);\n            background-color: rgba(255, 255, 255, 0.98);\n            border: 1.5px solid #857e72;\n            border-radius: 12%;\n        }\n\n        .pips-container {\n            width: 100%; height: 100%;\n            position: relative; \n        }\n        .pip {\n            width: 22%; height: 22%; \n            background-color: #3d352e;\n            border-radius: 50%;\n            box-shadow: inset 0 1px 3px rgba(0,0,0,0.5);\n            position: absolute; \n        }\n        \n        #dice-result-text { \n            font-family: var(--font-display); \n            font-size: 2.2em;\n            color: #FFEB3B; \n            text-shadow: 0 0 12px #FFEB3B; \n            min-height: 2em;\n            line-height: 1.2;\n            text-align: center; \n        }\n        \n        #skip-animation-btn {\n            position: absolute;\n            bottom: 30px;\n            font-size: 1em;\n            padding: 8px 20px;\n            width: auto;\n            background-color: rgba(0,0,0,0.3);\n            border-color: rgba(255,255,255,0.5);\n            color: rgba(255,255,255,0.8);\n        }\n        #skip-animation-btn:hover {\n            background-color: rgba(0,0,0,0.5);\n            color: #fff;\n        }\n\n        .typed-cursor {\n            opacity: 1;\n            animation: typed-blink 0.7s infinite;\n        }\n        @keyframes typed-blink{\n            0% { opacity: 1; }\n            50% { opacity: 0; }\n            100% { opacity: 1; }\n        }\n        \n        .validation-message {\n            text-align: center;\n            color: #b71c1c;\n            font-size: 0.9em;\n            font-weight: bold;\n            margin-top: -5px;\n            margin-bottom: 10px;\n            height: 1.2em;\n            opacity: 0;\n            will-change: transform, opacity;\n        }\n\n        #credits-screen {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            pointer-events: none;\n            opacity: 0;\n        }\n\n        #credits-screen p {\n            font-family: var(--font-display);\n            font-size: 2em;\n            color: #f5f5dc;\n            text-shadow: 0 0 8px rgba(245, 245, 220, 0.7);\n        }\n    </style>\n</head>\n<body>\n\n<div class=\"creator-wrapper\">\n    <div class=\"border-flow\"></div>\n    <div class=\"inner-border\"></div>\n    <header class=\"creator-header\">\n        <h1 id=\"main-title\">冒险者契约登记</h1>\n        <div id=\"wax-seal\" class=\"wax-seal\"></div>\n    </header>\n\n    <div class=\"creator-scroll-content\">\n        <div class=\"gs-creator-container\">\n            <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第一步：身份确认</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-name-input\">姓名</label><input id=\"char-name-input\" type=\"text\" placeholder=\"可留空，默认为 {{user}}\" class=\"form-input\"></div>\n                    <div class=\"grid-cols-2 gsap-content-item\">\n                        <div class=\"gs-form-group\"><label for=\"char-gender-input\">性别</label><input id=\"char-gender-input\" type=\"text\" placeholder=\"例如: 男性/女性/双性/无性/……\" class=\"form-input\"></div>\n                        <div class=\"gs-form-group\"><label for=\"char-age-input\">年龄</label><input id=\"char-age-input\" type=\"number\" placeholder=\"可参照种族说明\" class=\"form-input\"></div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-race-select\">种族</label><select id=\"char-race-select\" class=\"form-select\"></select></div>\n                    <div class=\"gs-form-group gsap-content-item\">\n                        <label>经历 (出身/来历/邂逅)</label>\n                        <button id=\"roll-background-btn\" class=\"gs-button action-button\">🎲 投骰决定经历</button>\n                        <div id=\"background-display\" class=\"background-display\" style=\"display: none;\">\n                            <p>出身: <span id=\"bg-origin\"></span></p>\n                            <p>来历: <span id=\"bg-past\"></span></p>\n                            <p>邂逅: <span id=\"bg-encounter\"></span></p>\n                        </div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"oc-details-input\">身体特征与补充</label><textarea id=\"oc-details-input\" placeholder=\"发色、瞳色、体型、性格、背景故事构思...\" class=\"form-textarea\"></textarea></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第二步：能力值与技能</h3>\n                <div class=\"layout-grid\">\n                    <div class=\"form-container gsap-content-item\">\n                        <button id=\"roll-attributes-btn\" class=\"gs-button action-button\">🎲 投骰决定能力值</button>\n                        <div id=\"attributes-container\" class=\"attributes-grid\"></div>\n                        <div id=\"skills-and-desc-container\" class=\"skills-display\"></div>\n                    </div>\n                    <div id=\"radar-chart-container\" class=\"gsap-content-item\"><pre class=\"mermaid\" id=\"radar-chart\"></pre></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第三步：完成登记</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"character-summary\">角色卡预览</label><textarea id=\"character-summary\" rows=\"12\" readonly class=\"form-textarea\"></textarea></div>\n                    <button id=\"submit-btn\" class=\"gs-button gsap-content-item\" disabled>确认登记，开始冒险</button>\n                    <div id=\"validation-message\" class=\"validation-message\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div id=\"credits-screen\">\n    <p>作者 𝙀𝙡𝙖𝙞𝙣𝙖𝙙𝙚𝙨</p>\n</div>\n\n<div id=\"dice-overlay\">\n    <div class=\"dice-container\" id=\"dice-container\"></div>\n    <div id=\"dice-result-text\"></div>\n    <button id=\"skip-animation-btn\" class=\"gs-button\">跳过动画</button>\n</div>\n\n<div id=\"dice-templates\" style=\"display:none;\">\n    <div class=\"dice-cube\" data-id_template=\"dice-cube\">\n        <div class=\"dice-face face-front\" data-face=\"1\"><div class=\"pips-container\"><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-back\" data-face=\"6\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-right\" data-face=\"3\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-left\" data-face=\"4\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-top\" data-face=\"2\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-bottom\" data-face=\"5\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n    </div>\n</div>\n\n<script>\n// --- MODIFIED DATA ---\nconst raceData = {\n    '凡人': { attr_rolls: { '力量': '1d3+1', '敏捷': '1d3', '感知': '1d3', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3+2', '魔力': '1d3' }, skills: ['过载行动(初级)', '武器:投掷武器(初级)', '长距离移动(初级)']},\n    '矿人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3', '感知': '1d3+2', '知识': '1d3-1', '魅力': '1d3+1', '信仰力': '1d3+1', '魔力': '1d3-1' }, skills: ['治愈适性(初级)', '夜视(初级)', '锻造(初级)']},\n    '森人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+1', '感知': '1d3+1', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3-1', '魔力': '1d3+1' }, skills: ['武器:弩弓(初级)', '夜视(初级)', '精灵宠儿(初级)']},\n    '蜥蜴人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3+1', '感知': '1d3', '知识': '1d3', '魅力': '1d3+1', '信仰力': '1d3', '魔力': '1d3' }, skills: ['免疫强化(初级)', '夜视(初级)', '龙族血统(初级)']},\n    '圃人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+2', '感知': '1d3+1', '知识': '1d3', '魅力': '1d3-1', '信仰力': '1d3', '魔力': '1d3+2' }, skills: ['隐匿(初级)', '先发制人(初级)', '烹饪(初级)']}\n};\nconst backgroundData = {\n    origin: { \n        '凡人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '学者', class: '魔术师', level: 1, skills: ['文献调查(初级)'] }, 6: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 7: { name: '农民', skills: ['生产业:农业(初级)', '强健(初级)'] }, 8: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '骑士', class: '战士', level: 1, skills: ['骑乘(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n        '矿人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 6: { name: '酒馆老板', class: '战士', level: 1, skills: ['观察(初级)'] }, 7: { name: '铁匠', skills: ['工匠:锻造(初级)', '手工(初级)'] }, 8: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '碎盾者', class: '战士', level: 1, skills: ['强击攻击·斩(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n    },\n    past: { 2: { name: '奴隶', skills: ['劳动(初级)'] }, 3: { name: '牢狱', skills: ['犯罪知识(初级)'] }, 4: { name: '战场', skills: ['沉着冷静(初级)'] }, 5: { name: '神殿', skills: ['神学(初级)'] }, 6: { name: '孤儿', skills: ['忍耐(初级)'] }, 7: { name: '平顺', skills: ['幸运(初级)'] }, 8: { name: '贫困', skills: ['生存术(初级)'] }, 9: { name: '学校', skills: ['博识(初级)'] }, 10: { name: '深闺', skills: ['无偏见(初级)'] }, 11: { name: '奢华', skills: ['鉴定(初级)'] }, 12: { name: '宫廷', skills: ['礼仪(初级)'] }},\n    encounter: { 2: '宿敌', 3: '上司', 4: '后辈', 5: '交易对象', 6: '下属', 7: '家人', 8: '挚友', 9: '前辈', 10: '未婚夫/妻', 11: '劲敌', 12: '师父' }\n};\nbackgroundData.origin['森人'] = backgroundData.origin['凡人']; backgroundData.origin['蜥蜴人'] = backgroundData.origin['凡人']; backgroundData.origin['圃人'] = backgroundData.origin['凡人'];\nconst character = {\n    name: '', gender: '', age: '', oc_details: '', race: '凡人',\n    background: { origin: null, past: null, encounter: null },\n    attributes: { '力量': 0, '敏捷': 0, '感知': 0, '知识': 0, '魅力': 0, '信仰力': 0, '魔力': 0, '潜力': 0 },\n    skills: [], classes: {}, money: 0, _lastAttributesForChart: '',\n};\n// --- END MODIFIED DATA ---\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    gsap.registerPlugin(TextPlugin);\n    mermaid.initialize({ startOnLoad: true, theme: 'base', themeVariables: {\n        '--mermaid-font-family': \"'Vollkorn', 'Noto Serif SC', serif\",\n        primaryColor: '#f7e9d7', primaryTextColor: '#3d3d3d', lineColor: '#8b7355', textColor: '#4a3c2c',\n    }});\n    \n    const $ = (s) => document.querySelector(s);\n    const roll1D6 = () => Math.floor(Math.random() * 6) + 1;\n    const roll1D3 = () => {\n        const d6 = roll1D6();\n        if (d6 <= 2) return { d6, d3: 1 };\n        if (d6 <= 4) return { d6, d3: 2 };\n        return { d6, d3: 3 };\n    };\n    const rollDiceString = (diceString) => { const p=diceString.split('*');const d=p[0];const m=parseInt(p[1])||1;if(!d.includes('d'))return 0;const[n,s]=d.split('d').map(Number);let t=0;for(let i=0;i<n;i++){t+=Math.floor(Math.random()*s)+1;}return t*m; };\n    const formatAge = (ageValue) => { if (!ageValue && ageValue !== 0) return ageValue; const num = Number(ageValue); if (isNaN(num)) return ageValue; if (Math.abs(num) >= 1_000_000) return num.toExponential(2); return ageValue; };\n    const debounce = (func, delay) => { let timeout; return function(...args) { clearTimeout(timeout); timeout = setTimeout(() => func.apply(this, args), delay); }; };\n    const diceUnicode = ['\\u2680', '\\u2681', '\\u2682', '\\u2683', '\\u2684', '\\u2685'];\n\n    const DOM = {\n        nameInput: $('#char-name-input'), genderInput: $('#char-gender-input'), ageInput: $('#char-age-input'),\n        ocDetailsInput: $('#oc-details-input'), raceSelect: $('#char-race-select'), attributesContainer: $('#attributes-container'),\n        skillsContainer: $('#skills-and-desc-container'), radarChart: $('#radar-chart'), summarySheet: $('#character-summary'),\n        diceOverlay: $('#dice-overlay'), diceContainer: $('#dice-container'), diceResultText: $('#dice-result-text'),\n        backgroundDisplay: $('#background-display'), bgOrigin: $('#bg-origin'), bgPast: $('#bg-past'), bgEncounter: $('#bg-encounter'),\n        skipAnimationBtn: $('#skip-animation-btn'),\n        submitBtn: $('#submit-btn'),\n        validationMessage: $('#validation-message'),\n    };\n    \n    const dicePool = []; const MAX_DICE = 6;\n    let currentAnimation = null; let textAnimation = null; let isSkipping = false;\n    let currentValidationMessage = '';\n    \n    function validateAndToggleButton() {\n        let newMessage = '';\n        if (!character.age || String(character.age).trim() === '') {\n            newMessage = '请填写您的冒险者年龄。';\n        } else if (!character.gender || !character.gender.trim()) {\n            newMessage = '请设定冒险者的性别。';\n        } else if (!character.background.origin) {\n            newMessage = '请投骰决定您的冒险者经历。';\n        } else if (Object.values(character.attributes).every(val => val === 0)) {\n            newMessage = '请投骰决定您的能力值。';\n        }\n\n        if (newMessage === currentValidationMessage) return;\n        currentValidationMessage = newMessage;\n\n        if (newMessage) {\n            DOM.submitBtn.disabled = true;\n            DOM.validationMessage.textContent = newMessage;\n            gsap.fromTo(DOM.validationMessage, { autoAlpha: 0, scale: 0.8 }, { autoAlpha: 1, scale: 1, duration: 0.4, ease: 'elastic.out(1, 0.75)' });\n        } else {\n            DOM.submitBtn.disabled = false;\n            gsap.to(DOM.validationMessage, { autoAlpha: 0, duration: 0.3 });\n        }\n    }\n    function updateCharacterDataFromDOM() { character.name = DOM.nameInput.value; character.gender = DOM.genderInput.value; character.age = DOM.ageInput.value; character.oc_details = DOM.ocDetailsInput.value; character.race = DOM.raceSelect.value; }\n    function renderSkills() { const uniqueSkills = [...new Set(character.skills)]; DOM.skillsContainer.innerHTML = `<p><strong>天赋与习得技能:</strong></p><ul>${uniqueSkills.map(s => `<li>- ${s}</li>`).join('')}</ul>`; }\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key}`).value = value; }); }\n    function renderSummary() {\n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '?';\n        const originText = `出身:${character.background.origin ? character.background.origin.name : '?'}`;\n        const pastText = `来历:${character.background.past ? character.background.past.name : '?'}`;\n        const encounterText = `邂逅:${character.background.encounter || '?'}`;\n        let summary = `### 《哥布林杀手TRPG》冒险者登记卡\\n` + `**姓名:** ${finalName} | **种族:** ${character.race} | **性别:** ${character.gender || '?'} | **年龄:** ${formattedAge}\\n` + `**经历:** ${originText} / ${pastText} / ${encounterText}\\n` + `**初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n` + `**初始技能:** ${uniqueSkills.join(', ') || '无'}\\n`; if (character.oc_details) { summary += `**身体特征与补充:** ${character.oc_details}\\n`; } summary += `---\\n**能力值:**\\n`; summary += Object.entries(character.attributes).map(([key, value]) => `- ${key}: ${value}`).join('\\n'); summary += `\\n**持有资金:** ${character.money} 银币`;\n        DOM.summarySheet.value = summary.replace(/### /g, '').replace(/\\*\\*/g, '').replace(/---/g, '\\n────────────────────\\n').replace(/- /g, '  ');\n        DOM.summarySheet.setAttribute('data-raw', summary);\n    }\n    async function renderRadarChartIfNeeded() { const currentAttributesString = JSON.stringify(character.attributes); if (currentAttributesString === character._lastAttributesForChart) return; DOM.radarChart.classList.add('loading'); const radarSyntax = `radar-beta\\ntitle 能力值分布\\naxis a[\"力量 ${character.attributes['力量']}\"]\\naxis b[\"敏捷 ${character.attributes['敏捷']}\"]\\naxis c[\"感知 ${character.attributes['感知']}\"]\\naxis d[\"知识 ${character.attributes['知识']}\"]\\naxis e[\"魅力 ${character.attributes['魅力']}\"]\\naxis f[\"信仰 ${character.attributes['信仰力']}\"]\\naxis g[\"魔力 ${character.attributes['魔力']}\"]\\naxis h[\"潜力 ${character.attributes['潜力']}\"]\\ncurve current[\"能力\"]{${character.attributes['力量']},${character.attributes['敏捷']},${character.attributes['感知']},${character.attributes['知识']},${character.attributes['魅力']},${character.attributes['信仰力']},${character.attributes['魔力']},${character.attributes['潜力']}}\\nmax 10\\nmin 0`; DOM.radarChart.innerHTML = radarSyntax; DOM.radarChart.removeAttribute('data-processed'); try { await mermaid.run({ nodes: [DOM.radarChart] }); character._lastAttributesForChart = currentAttributesString; } catch(e) { console.error(\"Mermaid rendering error:\", e); } finally { DOM.radarChart.classList.remove('loading'); } }\n    async function updateUI(forceFullUpdate = false) { updateCharacterDataFromDOM(); if(forceFullUpdate) { character._lastAttributesForChart = ''; character.skills = []; character.classes = {}; character.money = 100; if(raceData[character.race].skills) character.skills.push(...raceData[character.race].skills); if (character.background.origin) { if (character.background.origin.skills) character.skills.push(...character.background.origin.skills); if (character.background.origin.class) character.classes[character.background.origin.class] = character.background.origin.level; if(character.background.origin.money) character.money += rollDiceString(character.background.origin.money); } if (character.background.past && character.background.past.skills) { character.skills.push(...character.background.past.skills); } } renderAttributes(); renderSkills(); renderSummary(); await renderRadarChartIfNeeded(); validateAndToggleButton(); }\n\n    const masterTl = gsap.timeline({ delay: 0.2 });\n    const title = $('#main-title');\n    title.innerHTML = title.textContent.split('').map(char => `<span class=\"title-char\">${char}</span>`).join('');\n    gsap.set(\".gsap-header-item, .gsap-content-item\", { autoAlpha: 0, y: 20 });\n    masterTl.to(\".title-char\", { autoAlpha: 1, y: 0, duration: 0.7, ease: \"power3.out\", stagger: 0.1 }).to(\"#wax-seal\", { autoAlpha: 1, scale: 1, duration: 0.6, ease: \"elastic.out(1, 0.7)\" }, \"-=0.5\");\n    document.querySelectorAll('.gs-creator-step').forEach((step, index) => { const stepTl = gsap.timeline(); stepTl.to(step.querySelector('.gsap-header-item'), { autoAlpha: 1, y: 0, duration: 0.6, ease: 'power2.out' }).to(step.querySelectorAll('.gsap-content-item'), { autoAlpha: 1, y: 0, duration: 0.5, ease: 'power2.out', stagger: 0.1 }, '-=0.4'); masterTl.add(stepTl, `-=${index === 0 ? 0.2 : 0.7}`); });\n    const pipPositions = { 1: [ { left: '50%', top: '50%' } ], 2: [ { left: '25%', top: '25%' }, { left: '75%', top: '75%' } ], 3: [ { left: '25%', top: '25%' }, { left: '50%', top: '50%' }, { left: '75%', top: '75%' } ], 4: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 5: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '50%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 6: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '50%' }, { left: '75%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ]};\n    function setupCube(cubeEl) { const size = 'calc(var(--dice-size) / 2)'; gsap.set(cubeEl.querySelector('.face-front'),  { transform: `rotateY(0deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-back'),   { transform: `rotateY(180deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-right'),  { transform: `rotateY(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-left'),   { transform: `rotateY(-90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-top'),   { transform: `rotateX(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-bottom'), { transform: `rotateX(-90deg) translateZ(${size})` }); const faces = cubeEl.querySelectorAll('.dice-face'); faces.forEach(face => { const faceNum = face.getAttribute('data-face'); const pips = face.querySelectorAll('.pip'); const positions = pipPositions[faceNum]; if (!pips.length || !positions) return; pips.forEach((pip, index) => { const pos = positions[index]; gsap.set(pip, { left: pos.left, top: pos.top, xPercent: -50, yPercent: -50 }); }); }); }\n    function getRotationForFace(faceValue) { switch (faceValue) { case 1: return { x: 0, y: 0 }; case 6: return { x: 0, y: 180 }; case 3: return { x: 0, y: -90 }; case 4: return { x: 0, y: 90 }; case 2: return { x: -90, y: 0 }; case 5: return { x: 90,  y: 0 }; default: return { x: 0, y: 0 }; } }\n    async function animateText(element, text) { if(isSkipping) {element.innerHTML = text.replace(/\\n/g, '<br>'); return;} return new Promise(resolve => { if (textAnimation && textAnimation.isActive()) textAnimation.kill(); element.innerHTML = ''; textAnimation = gsap.to(element, { duration: text.length * 0.05, text: { value: text.replace(/\\n/g, '<br>'), newClass: \"typed-cursor\" }, ease: \"none\", onComplete: () => { gsap.delayedCall(0.7, () => { element.querySelector('.typed-cursor')?.remove(); resolve(); }); } }); }); }\n    function initDicePool() { const diceTemplate = document.querySelector('[data-id_template=\"dice-cube\"]'); if (!diceTemplate) return; for (let i = 0; i < MAX_DICE; i++) { const dieIconElement = document.createElement('div'); dieIconElement.className = 'dice-icon'; const newCube = diceTemplate.cloneNode(true); dieIconElement.appendChild(newCube); DOM.diceContainer.appendChild(dieIconElement); setupCube(newCube); dicePool.push(dieIconElement); } }\n    async function animateRoll(numDice, preCalculatedRolls, textToShowDuringRoll = \"投掷中...\") { return new Promise(resolve => { if (currentAnimation && currentAnimation.isActive()) currentAnimation.kill(); dicePool.forEach(die => die.style.display = 'none'); const activeDice = dicePool.slice(0, numDice); animateText(DOM.diceResultText, textToShowDuringRoll); activeDice.forEach(die => { die.style.display = 'flex'; die.className = 'dice-icon'; }); const masterTl = gsap.timeline({ onComplete: () => { if(isSkipping) DOM.diceResultText.innerHTML = ''; resolve(preCalculatedRolls); }}); currentAnimation = masterTl; activeDice.forEach((dieElement, i) => { const dieCube = dieElement.querySelector('.dice-cube'); const visualRoll = preCalculatedRolls[i]; const targetRotation = getRotationForFace(visualRoll); const dieTimeline = gsap.timeline(); dieTimeline.to(dieCube, { rotationX: `+=${gsap.utils.random(720, 1080)}`, rotationY: `+=${gsap.utils.random(720, 1080)}`, duration: 1.8, ease: \"power2.in\" }).to(dieCube, { rotationX: targetRotation.x, rotationY: targetRotation.y, duration: 0.7, ease: \"power4.out\" }); masterTl.add(dieTimeline, 0); }); }); }\n    \n    const debouncedUpdate = debounce(updateUI, 400);\n    [DOM.nameInput, DOM.genderInput, DOM.ageInput, DOM.ocDetailsInput].forEach(el => el.addEventListener('input', debouncedUpdate));\n    \n    DOM.skipAnimationBtn.addEventListener('click', () => {\n        isSkipping = true;\n        if (currentAnimation && currentAnimation.isActive()) currentAnimation.progress(1);\n        if (textAnimation && textAnimation.isActive()) textAnimation.progress(1);\n    });\n\n    $('#roll-background-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const rolls = [roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6()];\n        await animateRoll(6, rolls, '投掷 经历... (2d6 x 3)');\n        \n        const sums = { origin: rolls[0] + rolls[1], past: rolls[2] + rolls[3], encounter: rolls[4] + rolls[5] };\n        \n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `出身: ${rolls[0]} + ${rolls[1]} = ${sums.origin}\\n(${backgroundData.origin[character.race][sums.origin].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `来历: ${rolls[2]} + ${rolls[3]} = ${sums.past}\\n(${backgroundData.past[sums.past].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(4, 6), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `邂逅: ${rolls[4]} + ${rolls[5]} = ${sums.encounter}\\n(${backgroundData.encounter[sums.encounter]})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        character.background.origin = backgroundData.origin[character.race][sums.origin];\n        character.background.past = backgroundData.past[sums.past];\n        character.background.encounter = backgroundData.encounter[sums.encounter];\n        DOM.bgOrigin.textContent = character.background.origin.name;\n        DOM.bgPast.textContent = character.background.past.name;\n        DOM.bgEncounter.textContent = character.background.encounter;\n        DOM.backgroundDisplay.style.display = 'block';\n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        updateUI(true);\n    });\n\n    $('#roll-attributes-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const attrRolls = raceData[character.race].attr_rolls;\n        const allCalculatedRolls = [];\n\n        // Prepare race-based attributes\n        for (const attr in attrRolls) {\n            const formula = attrRolls[attr];\n            const modifier = parseInt(formula.split('d3')[1] || '0');\n            const { d6, d3 } = roll1D3();\n            const finalValue = Math.max(0, d3 + modifier);\n            character.attributes[attr] = finalValue;\n            allCalculatedRolls.push({ attr, formula, d6, d3, modifier, finalValue });\n        }\n        \n        // Prepare \"Potential\" attribute\n        const potentialValue = Math.floor(Math.random() * 3) + 1;\n        const d6ForPotential = (potentialValue * 2) - 1; // Map 1,2,3 to d6 faces 1,3,5 for animation\n        character.attributes['潜力'] = potentialValue;\n        allCalculatedRolls.push({\n            attr: '潜力',\n            formula: '1-3', // Just a descriptor\n            d6: d6ForPotential,\n            finalValue: potentialValue\n        });\n        \n        // Animate all rolls sequentially\n        for (const roll of allCalculatedRolls) {\n            await animateRoll(1, [roll.d6], `投掷 ${roll.attr}...`);\n            if (isSkipping) break;\n\n            gsap.to(dicePool[0], { className: 'dice-icon highlight', duration: 0.3 });\n            \n            let resultText;\n            if (roll.attr === '潜力') {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.finalValue}`;\n            } else {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.d3} ${roll.modifier >= 0 ? '+' : ''} ${roll.modifier} = ${roll.finalValue}`;\n            }\n            await animateText(DOM.diceResultText, resultText);\n            \n            await updateUI();\n            \n            if (isSkipping) break;\n            \n            await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        await updateUI();\n    });\n\n    DOM.raceSelect.addEventListener('change', () => {\n        DOM.backgroundDisplay.style.display = 'none';\n        character.background = { origin: null, past: null, encounter: null };\n        Object.keys(character.attributes).forEach(k => character.attributes[k] = 0);\n        updateUI(true);\n    });\n\n    $('#submit-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        await updateUI(true);\n        \n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '未设定';\n        \n        const finalCharacterObject={ NAME:finalName, GENDER:character.gender||'未设定', AGE:formattedAge, RACE:character.race, ORIGIN: character.background.origin ? character.background.origin.name : '未知', PAST: character.background.past ? character.background.past.name : '未知', ENCOUNTER: character.background.encounter || '未知', SKILLS: uniqueSkills, OC_DETAILS:character.oc_details||'无', ...character.attributes, MONEY:character.money };\n        \n        const slashCommand=`/send <START>\\nAdmin:\\n这是一个TRPG开局，请为 User 生成一段详尽的背景故事。\\n\\n# 故事核心要求\\n请严格根据以下【角色完整设定】，撰写一段从角色童年到现在的成长故事。故事需要清晰地阐述是什么关键事件或心路历程，最终让他/她确立了要成为一名冒险者的志向。请在故事中自然地融入角色的种族、出身背景、技能和性格特点。\\n\\n# 角色完整设定\\n---\\n## 基础信息\\n- **姓名:** ${finalName}\\n- **性别:** ${character.gender||'未设定'}\\n- **年龄:** ${formattedAge}\\n- **种族:** ${character.race}\\n\\n## 经历\\n- **出身:** ${character.background.origin ? character.background.origin.name : '未知'}\\n- **来历:** ${character.background.past ? character.background.past.name : '未知'}\\n- **邂逅:** ${character.background.encounter || '未知'}\\n\\n## 背景与技能\\n- **初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n- **初始技能:** ${uniqueSkills.join(', ')||'无'}\\n\\n## 补充设定 (OC)\\n- **额外补充:** ${character.oc_details||'无'}\\n\\n## 能力值\\n- **力量:** ${character.attributes['力量']}\\n- **敏捷:** ${character.attributes['敏捷']}\\n- **感知:** ${character.attributes['感知']}\\n- **知识:** ${character.attributes['知识']}\\n- **魅力:** ${character.attributes['魅力']}\\n- **信仰力:** ${character.attributes['信仰力']}\\n- **魔力:** ${character.attributes['魔力']}\\n\\n## 初始资产\\n- **资金:** ${character.money} 银币\\n\\|\\n/trigger`; \n        \n        try {\n            if (typeof insertOrAssignVariables === 'function') {\n                await insertOrAssignVariables(finalCharacterObject);\n            } else {\n                console.log(\"SillyTavern Function 'insertOrAssignVariables' not found. Variables:\", finalCharacterObject);\n            }\n            if (typeof triggerSlash === 'function') {\n                await triggerSlash(slashCommand, 'Send');\n            } else { \n                console.log(\"SillyTavern Function 'triggerSlash' not found. Command will be copied to clipboard.\");\n                navigator.clipboard.writeText(slashCommand).then(() => {\n                    alert('角色指令已复制到剪贴板！');\n                });\n            }\n        } catch (error) {\n            console.error('与SillyTavern交互失败:', error);\n            alert('与SillyTavern交互失败，请查看浏览器控制台。');\n        }\n\n        e.target.innerHTML = \"契约成立！\";\n    });\n    \n    initDicePool();\n    Object.keys(raceData).forEach(key => DOM.raceSelect.add(new Option(key, key)));\n    Object.keys(character.attributes).forEach(key => {\n        const pointControl = document.createElement('div');\n        pointControl.className = 'point-control';\n        pointControl.innerHTML = `<span class=\"label\">${key}</span><input type=\"text\" id=\"attr-${key.replace(/\\s/g, '')}\" readonly value=\"0\">`; // ID santized just in case\n        DOM.attributesContainer.appendChild(pointControl);\n    });\n    // A small fix for renderAttributes to handle sanitized IDs\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key.replace(/\\s/g, '')}`).value = value; }); }\n    updateUI(true);\n});\n</script>\n\n</body>\n</html>\n```"
  },
  {
    "role": "user",
    "content": "```\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>哥布林杀手TRPG - 冒险者契约</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/gsap.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/TextPlugin.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.min.js\" defer></script>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Noto+Serif+SC:wght@400;700&family=Vollkorn:wght@400;700&family=Courier+Prime&display=swap\" rel=\"stylesheet\">\n\n    <style>\n        :root {\n            --leather-bg: #5a3a2a;\n            --dark-leather-bg: #3b2a1a;\n            --parchment-bg: #f5f5dc;\n            --parchment-bg-gradient: linear-gradient(165deg, #f7e9d7, #e6d5c3);\n            --text-color: #3d3d3d;\n            --heading-color: #4a3c2c;\n            --border-color: #7a5a4a;\n            --font-main: 'Vollkorn', 'Noto Serif SC', serif;\n            --font-display: 'Cinzel', 'Noto Serif SC', serif;\n            --font-code: 'Courier Prime', 'Courier New', monospace;\n            --dice-size: 5rem; \n        }\n\n        html { height: 100%; }\n        body {\n            background-color: #3a2e20;\n            font-family: var(--font-main);\n            color: var(--text-color);\n            margin: 0; padding: 20px;\n            box-sizing: border-box;\n            display: flex;\n            align-items: center; justify-content: center;\n            min-height: 100%;\n        }\n        *, *:before, *:after { box-sizing: inherit; }\n\n        .creator-wrapper {\n            width: 100%; max-width: 900px;\n            margin: 0;\n            background: var(--parchment-bg-gradient);\n            border: 12px solid #8b7355;\n            border-radius: 8px;\n            box-shadow: 0 0 40px rgba(139, 115, 85, 0.3), inset 0 0 30px rgba(255, 255, 255, 0.4);\n            position: relative;\n            overflow: hidden;\n            padding: 25px;\n            display: flex; flex-direction: column;\n            max-height: 95vh;\n        }\n\n        .border-flow, .inner-border { position: absolute; pointer-events: none; }\n        .border-flow { top: 0; left: 0; right: 0; bottom: 0; background: linear-gradient(90deg, rgba(139,115,85,0.1) 1px, transparent 1px), linear-gradient(0deg, rgba(139,115,85,0.1) 1px, transparent 1px); background-size: 20px 20px; animation: borderFlow 15s linear infinite; }\n        .inner-border { top: 5px; left: 5px; right: 5px; bottom: 5px; border: 3px solid rgba(139,115,85,0.3); border-radius: 5px; }\n        @keyframes borderFlow { from { background-position: 0 0; } to { background-position: 20px 20px; } }\n\n        .creator-header {\n            text-align: center;\n            padding: 10px;\n            margin-bottom: 25px;\n            border-bottom: 2px solid rgba(139, 115, 85, 0.3);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 15px;\n        }\n        .creator-header h1 {\n            font-family: var(--font-display);\n            font-size: clamp(24px, 5vw, 32px);\n            margin: 0;\n            font-weight: 700;\n            letter-spacing: 3px;\n            color: var(--heading-color);\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.1);\n        }\n        \n        .title-char {\n            display: inline-block;\n            opacity: 0;\n            transform: translateY(30px);\n        }\n\n        .wax-seal {\n            width: 45px;\n            height: 45px;\n            display: inline-block;\n            background-color: #c0392b;\n            border-radius: 50%;\n            position: relative;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.4), inset 0 -2px 3px rgba(0,0,0,0.3);\n            opacity: 0;\n            transform: scale(0.5);\n            font-family: 'Cinzel', serif;\n            color: #e7a49c;\n            text-align: center;\n            font-size: 24px;\n            line-height: 45px;\n            font-weight: 700;\n        }\n        .wax-seal::before {\n            content: 'GS';\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.3);\n        }\n\n        .creator-scroll-content { overflow-y: auto; padding: 10px 20px 10px 10px; }\n        .creator-scroll-content::-webkit-scrollbar { width: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-track { background: rgba(139, 115, 85, 0.1); border-radius: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-thumb { background-color: #a89072; border-radius: 10px; border: 2px solid #f7e9d7; }\n        \n        .gs-creator-step { margin-bottom: 40px; overflow: hidden; }\n        .gs-creator-step h3 { font-family: var(--font-display); font-size: 1.5em; font-weight: 700; border-bottom: 1.5px solid var(--border-color); padding-bottom: 8px; margin-bottom: 20px; color: var(--heading-color); text-align: left; }\n        \n        .layout-grid { display: grid; grid-template-columns: 1fr; gap: 25px; align-items: flex-start; }\n        @media (min-width: 768px) {\n            .layout-grid { grid-template-columns: 1fr 280px; }\n        }\n\n        .form-container { text-align: left; }\n        .gs-form-group { margin-bottom: 16px; }\n        .gs-form-group label { display: block; margin-bottom: 6px; font-weight: bold; color: var(--heading-color); }\n        .form-input, .form-select, .form-textarea { width: 100%; padding: 10px; background-color: rgba(255, 255, 255, 0.5); border: 1px solid #a58e72; border-radius: 4px; color: #3d3d3d; font-family: var(--font-main); font-size: 1em; transition: all 0.2s ease-in-out; box-shadow: inset 1px 1px 2px rgba(0,0,0,0.1); }\n        .form-input:focus, .form-select:focus, .form-textarea:focus { outline: none; border-color: #8b7355; background-color: #fff; box-shadow: 0 0 5px rgba(139, 115, 85, 0.5); }\n        .form-textarea { resize: vertical; min-height: 100px; }\n\n        .grid-cols-2 {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 16px;\n        }\n        @media (min-width: 480px) {\n            .grid-cols-2 {\n                grid-template-columns: repeat(2, 1fr);\n            }\n        }\n\n        #attributes-container .point-control { display: flex; align-items: center; justify-content: space-between; margin-bottom: 8px; padding: 6px 8px; background: rgba(0,0,0,0.03); border-left: 3px solid rgba(139,115,85,0.2); border-radius: 4px; }\n        #attributes-container .label { font-weight: bold; color: var(--heading-color); }\n        #attributes-container input[readonly] { width: 40px; text-align: center; font-weight: bold; font-size: 1.2em; font-family: var(--font-display); color: #a02c2c; border: none; background-color: transparent; box-shadow: none; padding: 0; }\n        \n        .attributes-grid {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 0 16px;\n        }\n        @media (min-width: 480px) {\n            .attributes-grid {\n                grid-template-columns: 1fr 1fr;\n            }\n        }\n        \n        .skills-display p { background-color: rgba(0,0,0,0.05); border-left: 3px solid var(--border-color); padding: 10px 15px; margin-top: 10px; font-size: 0.95em; border-radius: 0 4px 4px 0; }\n        .skills-display strong { color: #8b5b4b; font-family: var(--font-display); }\n        .skills-display ul { list-style: none; padding-left: 0; margin-top: 8px; font-size: 0.9em; }\n        .skills-display li { margin-bottom: 4px; }\n\n        #character-summary { background-color: #e9e4d9; font-family: var(--font-code); line-height: 1.6; height: 250px; color: #2c2a2a; }\n        \n        .gs-button { width: 100%; background-color: #8b7355; color: var(--parchment-bg); border: 2px solid var(--dark-leather-bg); border-radius: 5px; padding: 12px 20px; font-family: var(--font-display); font-size: 1.2em; font-weight: 700; cursor: pointer; margin-top: 10px; transition: all 0.3s ease; box-shadow: 0 3px 5px rgba(0,0,0,0.3); }\n        .gs-button:hover { background-color: #a0886c; transform: translateY(-2px); box-shadow: 0 5px 8px rgba(0,0,0,0.3); }\n        .gs-button:disabled { background-color: #9e9e9e; border-color: #757575; cursor: not-allowed; transform: none; box-shadow: none; opacity: 0.6; }\n        .action-button { background-color: #6d5b4b; font-size: 1em; padding: 10px 15px; margin-top: 0; margin-bottom: 10px; width: auto; }\n        \n        .background-display { margin-top: 15px; padding: 15px; border: 1px dashed var(--border-color); border-radius: 5px; background: rgba(0,0,0,0.02); }\n        .background-display p { margin: 0 0 8px; }\n        .background-display span { font-weight: bold; color: var(--heading-color); }\n        \n        #radar-chart-container { \n            max-width: 100%;\n        }\n        @media (min-width: 768px) {\n            #radar-chart-container {\n                position: sticky;\n                top: 0;\n                padding-top: 45px;\n            }\n        }\n\n        pre.mermaid { \n            font-family: var(--font-main); \n            background: rgba(0,0,0,0.02); \n            border: 1px solid rgba(139,115,85,0.1); \n            padding: 10px; \n            border-radius: 5px; \n            overflow: auto;\n            transition: opacity 0.3s ease-in-out;\n        }\n        pre.mermaid.loading { opacity: 0.5; pointer-events: none; }\n\n        pre.mermaid > svg {\n            max-width: 100%;\n            height: auto;\n        }\n\n        #dice-overlay {\n            position: fixed; top: 0; left: 0; width: 100%; height: 100%;\n            background: rgba(0,0,0,0.8); backdrop-filter: blur(5px);\n            display: none; align-items: center; justify-content: center; flex-direction: column;\n            z-index: 100;\n            color: #fff; text-shadow: 0 0 10px #000;\n        }\n\n        .dice-container {\n            display: flex; flex-wrap: wrap; justify-content: center;\n            gap: 2rem; margin-bottom: 2rem;\n            max-width: 600px;\n        }\n        \n        .dice-icon {\n            width: var(--dice-size); height: var(--dice-size);\n            perspective: 800px;\n            transform-style: preserve-3d;\n            display: none;\n        }\n        .dice-icon.highlight {\n            transform: scale(1.15);\n            filter: drop-shadow(0 0 15px #FFEB3B);\n            transition: transform 0.3s ease, filter 0.3s ease;\n        }\n\n        .dice-cube {\n            width: 100%; height: 100%;\n            position: relative;\n            transform-style: preserve-3d;\n            transform: translateZ(calc(var(--dice-size) / -2));\n        }\n        \n        .dice-face {\n            position: absolute;\n            width: var(--dice-size); height: var(--dice-size);\n            background-color: rgba(255, 255, 255, 0.98);\n            border: 1.5px solid #857e72;\n            border-radius: 12%;\n        }\n\n        .pips-container {\n            width: 100%; height: 100%;\n            position: relative; \n        }\n        .pip {\n            width: 22%; height: 22%; \n            background-color: #3d352e;\n            border-radius: 50%;\n            box-shadow: inset 0 1px 3px rgba(0,0,0,0.5);\n            position: absolute; \n        }\n        \n        #dice-result-text { \n            font-family: var(--font-display); \n            font-size: 2.2em;\n            color: #FFEB3B; \n            text-shadow: 0 0 12px #FFEB3B; \n            min-height: 2em;\n            line-height: 1.2;\n            text-align: center; \n        }\n        \n        #skip-animation-btn {\n            position: absolute;\n            bottom: 30px;\n            font-size: 1em;\n            padding: 8px 20px;\n            width: auto;\n            background-color: rgba(0,0,0,0.3);\n            border-color: rgba(255,255,255,0.5);\n            color: rgba(255,255,255,0.8);\n        }\n        #skip-animation-btn:hover {\n            background-color: rgba(0,0,0,0.5);\n            color: #fff;\n        }\n\n        .typed-cursor {\n            opacity: 1;\n            animation: typed-blink 0.7s infinite;\n        }\n        @keyframes typed-blink{\n            0% { opacity: 1; }\n            50% { opacity: 0; }\n            100% { opacity: 1; }\n        }\n        \n        .validation-message {\n            text-align: center;\n            color: #b71c1c;\n            font-size: 0.9em;\n            font-weight: bold;\n            margin-top: -5px;\n            margin-bottom: 10px;\n            height: 1.2em;\n            opacity: 0;\n            will-change: transform, opacity;\n        }\n\n        #credits-screen {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            pointer-events: none;\n            opacity: 0;\n        }\n\n        #credits-screen p {\n            font-family: var(--font-display);\n            font-size: 2em;\n            color: #f5f5dc;\n            text-shadow: 0 0 8px rgba(245, 245, 220, 0.7);\n        }\n    </style>\n</head>\n<body>\n\n<div class=\"creator-wrapper\">\n    <div class=\"border-flow\"></div>\n    <div class=\"inner-border\"></div>\n    <header class=\"creator-header\">\n        <h1 id=\"main-title\">冒险者契约登记</h1>\n        <div id=\"wax-seal\" class=\"wax-seal\"></div>\n    </header>\n\n    <div class=\"creator-scroll-content\">\n        <div class=\"gs-creator-container\">\n            <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第一步：身份确认</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-name-input\">姓名</label><input id=\"char-name-input\" type=\"text\" placeholder=\"可留空，默认为 {{user}}\" class=\"form-input\"></div>\n                    <div class=\"grid-cols-2 gsap-content-item\">\n                        <div class=\"gs-form-group\"><label for=\"char-gender-input\">性别</label><input id=\"char-gender-input\" type=\"text\" placeholder=\"例如: 男性/女性/双性/无性/……\" class=\"form-input\"></div>\n                        <div class=\"gs-form-group\"><label for=\"char-age-input\">年龄</label><input id=\"char-age-input\" type=\"number\" placeholder=\"可参照种族说明\" class=\"form-input\"></div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-race-select\">种族</label><select id=\"char-race-select\" class=\"form-select\"></select></div>\n                    <div class=\"gs-form-group gsap-content-item\">\n                        <label>经历 (出身/来历/邂逅)</label>\n                        <button id=\"roll-background-btn\" class=\"gs-button action-button\">🎲 投骰决定经历</button>\n                        <div id=\"background-display\" class=\"background-display\" style=\"display: none;\">\n                            <p>出身: <span id=\"bg-origin\"></span></p>\n                            <p>来历: <span id=\"bg-past\"></span></p>\n                            <p>邂逅: <span id=\"bg-encounter\"></span></p>\n                        </div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"oc-details-input\">身体特征与补充</label><textarea id=\"oc-details-input\" placeholder=\"发色、瞳色、体型、性格、背景故事构思...\" class=\"form-textarea\"></textarea></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第二步：能力值与技能</h3>\n                <div class=\"layout-grid\">\n                    <div class=\"form-container gsap-content-item\">\n                        <button id=\"roll-attributes-btn\" class=\"gs-button action-button\">🎲 投骰决定能力值</button>\n                        <div id=\"attributes-container\" class=\"attributes-grid\"></div>\n                        <div id=\"skills-and-desc-container\" class=\"skills-display\"></div>\n                    </div>\n                    <div id=\"radar-chart-container\" class=\"gsap-content-item\"><pre class=\"mermaid\" id=\"radar-chart\"></pre></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第三步：完成登记</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"character-summary\">角色卡预览</label><textarea id=\"character-summary\" rows=\"12\" readonly class=\"form-textarea\"></textarea></div>\n                    <button id=\"submit-btn\" class=\"gs-button gsap-content-item\" disabled>确认登记，开始冒险</button>\n                    <div id=\"validation-message\" class=\"validation-message\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div id=\"credits-screen\">\n    <p>作者 𝙀𝙡𝙖𝙞𝙣𝙖𝙙𝙚𝙨</p>\n</div>\n\n<div id=\"dice-overlay\">\n    <div class=\"dice-container\" id=\"dice-container\"></div>\n    <div id=\"dice-result-text\"></div>\n    <button id=\"skip-animation-btn\" class=\"gs-button\">跳过动画</button>\n</div>\n\n<div id=\"dice-templates\" style=\"display:none;\">\n    <div class=\"dice-cube\" data-id_template=\"dice-cube\">\n        <div class=\"dice-face face-front\" data-face=\"1\"><div class=\"pips-container\"><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-back\" data-face=\"6\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-right\" data-face=\"3\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-left\" data-face=\"4\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-top\" data-face=\"2\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-bottom\" data-face=\"5\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n    </div>\n</div>\n\n<script>\n// --- MODIFIED DATA ---\nconst raceData = {\n    '凡人': { attr_rolls: { '力量': '1d3+1', '敏捷': '1d3', '感知': '1d3', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3+2', '魔力': '1d3' }, skills: ['过载行动(初级)', '武器:投掷武器(初级)', '长距离移动(初级)']},\n    '矿人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3', '感知': '1d3+2', '知识': '1d3-1', '魅力': '1d3+1', '信仰力': '1d3+1', '魔力': '1d3-1' }, skills: ['治愈适性(初级)', '夜视(初级)', '锻造(初级)']},\n    '森人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+1', '感知': '1d3+1', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3-1', '魔力': '1d3+1' }, skills: ['武器:弩弓(初级)', '夜视(初级)', '精灵宠儿(初级)']},\n    '蜥蜴人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3+1', '感知': '1d3', '知识': '1d3', '魅力': '1d3+1', '信仰力': '1d3', '魔力': '1d3' }, skills: ['免疫强化(初级)', '夜视(初级)', '龙族血统(初级)']},\n    '圃人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+2', '感知': '1d3+1', '知识': '1d3', '魅力': '1d3-1', '信仰力': '1d3', '魔力': '1d3+2' }, skills: ['隐匿(初级)', '先发制人(初级)', '烹饪(初级)']}\n};\nconst backgroundData = {\n    origin: { \n        '凡人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '学者', class: '魔术师', level: 1, skills: ['文献调查(初级)'] }, 6: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 7: { name: '农民', skills: ['生产业:农业(初级)', '强健(初级)'] }, 8: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '骑士', class: '战士', level: 1, skills: ['骑乘(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n        '矿人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 6: { name: '酒馆老板', class: '战士', level: 1, skills: ['观察(初级)'] }, 7: { name: '铁匠', skills: ['工匠:锻造(初级)', '手工(初级)'] }, 8: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '碎盾者', class: '战士', level: 1, skills: ['强击攻击·斩(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n    },\n    past: { 2: { name: '奴隶', skills: ['劳动(初级)'] }, 3: { name: '牢狱', skills: ['犯罪知识(初级)'] }, 4: { name: '战场', skills: ['沉着冷静(初级)'] }, 5: { name: '神殿', skills: ['神学(初级)'] }, 6: { name: '孤儿', skills: ['忍耐(初级)'] }, 7: { name: '平顺', skills: ['幸运(初级)'] }, 8: { name: '贫困', skills: ['生存术(初级)'] }, 9: { name: '学校', skills: ['博识(初级)'] }, 10: { name: '深闺', skills: ['无偏见(初级)'] }, 11: { name: '奢华', skills: ['鉴定(初级)'] }, 12: { name: '宫廷', skills: ['礼仪(初级)'] }},\n    encounter: { 2: '宿敌', 3: '上司', 4: '后辈', 5: '交易对象', 6: '下属', 7: '家人', 8: '挚友', 9: '前辈', 10: '未婚夫/妻', 11: '劲敌', 12: '师父' }\n};\nbackgroundData.origin['森人'] = backgroundData.origin['凡人']; backgroundData.origin['蜥蜴人'] = backgroundData.origin['凡人']; backgroundData.origin['圃人'] = backgroundData.origin['凡人'];\nconst character = {\n    name: '', gender: '', age: '', oc_details: '', race: '凡人',\n    background: { origin: null, past: null, encounter: null },\n    attributes: { '力量': 0, '敏捷': 0, '感知': 0, '知识': 0, '魅力': 0, '信仰力': 0, '魔力': 0, '潜力': 0 },\n    skills: [], classes: {}, money: 0, _lastAttributesForChart: '',\n};\n// --- END MODIFIED DATA ---\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    gsap.registerPlugin(TextPlugin);\n    mermaid.initialize({ startOnLoad: true, theme: 'base', themeVariables: {\n        '--mermaid-font-family': \"'Vollkorn', 'Noto Serif SC', serif\",\n        primaryColor: '#f7e9d7', primaryTextColor: '#3d3d3d', lineColor: '#8b7355', textColor: '#4a3c2c',\n    }});\n    \n    const $ = (s) => document.querySelector(s);\n    const roll1D6 = () => Math.floor(Math.random() * 6) + 1;\n    const roll1D3 = () => {\n        const d6 = roll1D6();\n        if (d6 <= 2) return { d6, d3: 1 };\n        if (d6 <= 4) return { d6, d3: 2 };\n        return { d6, d3: 3 };\n    };\n    const rollDiceString = (diceString) => { const p=diceString.split('*');const d=p[0];const m=parseInt(p[1])||1;if(!d.includes('d'))return 0;const[n,s]=d.split('d').map(Number);let t=0;for(let i=0;i<n;i++){t+=Math.floor(Math.random()*s)+1;}return t*m; };\n    const formatAge = (ageValue) => { if (!ageValue && ageValue !== 0) return ageValue; const num = Number(ageValue); if (isNaN(num)) return ageValue; if (Math.abs(num) >= 1_000_000) return num.toExponential(2); return ageValue; };\n    const debounce = (func, delay) => { let timeout; return function(...args) { clearTimeout(timeout); timeout = setTimeout(() => func.apply(this, args), delay); }; };\n    const diceUnicode = ['\\u2680', '\\u2681', '\\u2682', '\\u2683', '\\u2684', '\\u2685'];\n\n    const DOM = {\n        nameInput: $('#char-name-input'), genderInput: $('#char-gender-input'), ageInput: $('#char-age-input'),\n        ocDetailsInput: $('#oc-details-input'), raceSelect: $('#char-race-select'), attributesContainer: $('#attributes-container'),\n        skillsContainer: $('#skills-and-desc-container'), radarChart: $('#radar-chart'), summarySheet: $('#character-summary'),\n        diceOverlay: $('#dice-overlay'), diceContainer: $('#dice-container'), diceResultText: $('#dice-result-text'),\n        backgroundDisplay: $('#background-display'), bgOrigin: $('#bg-origin'), bgPast: $('#bg-past'), bgEncounter: $('#bg-encounter'),\n        skipAnimationBtn: $('#skip-animation-btn'),\n        submitBtn: $('#submit-btn'),\n        validationMessage: $('#validation-message'),\n    };\n    \n    const dicePool = []; const MAX_DICE = 6;\n    let currentAnimation = null; let textAnimation = null; let isSkipping = false;\n    let currentValidationMessage = '';\n    \n    function validateAndToggleButton() {\n        let newMessage = '';\n        if (!character.age || String(character.age).trim() === '') {\n            newMessage = '请填写您的冒险者年龄。';\n        } else if (!character.gender || !character.gender.trim()) {\n            newMessage = '请设定冒险者的性别。';\n        } else if (!character.background.origin) {\n            newMessage = '请投骰决定您的冒险者经历。';\n        } else if (Object.values(character.attributes).every(val => val === 0)) {\n            newMessage = '请投骰决定您的能力值。';\n        }\n\n        if (newMessage === currentValidationMessage) return;\n        currentValidationMessage = newMessage;\n\n        if (newMessage) {\n            DOM.submitBtn.disabled = true;\n            DOM.validationMessage.textContent = newMessage;\n            gsap.fromTo(DOM.validationMessage, { autoAlpha: 0, scale: 0.8 }, { autoAlpha: 1, scale: 1, duration: 0.4, ease: 'elastic.out(1, 0.75)' });\n        } else {\n            DOM.submitBtn.disabled = false;\n            gsap.to(DOM.validationMessage, { autoAlpha: 0, duration: 0.3 });\n        }\n    }\n    function updateCharacterDataFromDOM() { character.name = DOM.nameInput.value; character.gender = DOM.genderInput.value; character.age = DOM.ageInput.value; character.oc_details = DOM.ocDetailsInput.value; character.race = DOM.raceSelect.value; }\n    function renderSkills() { const uniqueSkills = [...new Set(character.skills)]; DOM.skillsContainer.innerHTML = `<p><strong>天赋与习得技能:</strong></p><ul>${uniqueSkills.map(s => `<li>- ${s}</li>`).join('')}</ul>`; }\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key}`).value = value; }); }\n    function renderSummary() {\n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '?';\n        const originText = `出身:${character.background.origin ? character.background.origin.name : '?'}`;\n        const pastText = `来历:${character.background.past ? character.background.past.name : '?'}`;\n        const encounterText = `邂逅:${character.background.encounter || '?'}`;\n        let summary = `### 《哥布林杀手TRPG》冒险者登记卡\\n` + `**姓名:** ${finalName} | **种族:** ${character.race} | **性别:** ${character.gender || '?'} | **年龄:** ${formattedAge}\\n` + `**经历:** ${originText} / ${pastText} / ${encounterText}\\n` + `**初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n` + `**初始技能:** ${uniqueSkills.join(', ') || '无'}\\n`; if (character.oc_details) { summary += `**身体特征与补充:** ${character.oc_details}\\n`; } summary += `---\\n**能力值:**\\n`; summary += Object.entries(character.attributes).map(([key, value]) => `- ${key}: ${value}`).join('\\n'); summary += `\\n**持有资金:** ${character.money} 银币`;\n        DOM.summarySheet.value = summary.replace(/### /g, '').replace(/\\*\\*/g, '').replace(/---/g, '\\n────────────────────\\n').replace(/- /g, '  ');\n        DOM.summarySheet.setAttribute('data-raw', summary);\n    }\n    async function renderRadarChartIfNeeded() { const currentAttributesString = JSON.stringify(character.attributes); if (currentAttributesString === character._lastAttributesForChart) return; DOM.radarChart.classList.add('loading'); const radarSyntax = `radar-beta\\ntitle 能力值分布\\naxis a[\"力量 ${character.attributes['力量']}\"]\\naxis b[\"敏捷 ${character.attributes['敏捷']}\"]\\naxis c[\"感知 ${character.attributes['感知']}\"]\\naxis d[\"知识 ${character.attributes['知识']}\"]\\naxis e[\"魅力 ${character.attributes['魅力']}\"]\\naxis f[\"信仰 ${character.attributes['信仰力']}\"]\\naxis g[\"魔力 ${character.attributes['魔力']}\"]\\naxis h[\"潜力 ${character.attributes['潜力']}\"]\\ncurve current[\"能力\"]{${character.attributes['力量']},${character.attributes['敏捷']},${character.attributes['感知']},${character.attributes['知识']},${character.attributes['魅力']},${character.attributes['信仰力']},${character.attributes['魔力']},${character.attributes['潜力']}}\\nmax 10\\nmin 0`; DOM.radarChart.innerHTML = radarSyntax; DOM.radarChart.removeAttribute('data-processed'); try { await mermaid.run({ nodes: [DOM.radarChart] }); character._lastAttributesForChart = currentAttributesString; } catch(e) { console.error(\"Mermaid rendering error:\", e); } finally { DOM.radarChart.classList.remove('loading'); } }\n    async function updateUI(forceFullUpdate = false) { updateCharacterDataFromDOM(); if(forceFullUpdate) { character._lastAttributesForChart = ''; character.skills = []; character.classes = {}; character.money = 100; if(raceData[character.race].skills) character.skills.push(...raceData[character.race].skills); if (character.background.origin) { if (character.background.origin.skills) character.skills.push(...character.background.origin.skills); if (character.background.origin.class) character.classes[character.background.origin.class] = character.background.origin.level; if(character.background.origin.money) character.money += rollDiceString(character.background.origin.money); } if (character.background.past && character.background.past.skills) { character.skills.push(...character.background.past.skills); } } renderAttributes(); renderSkills(); renderSummary(); await renderRadarChartIfNeeded(); validateAndToggleButton(); }\n\n    const masterTl = gsap.timeline({ delay: 0.2 });\n    const title = $('#main-title');\n    title.innerHTML = title.textContent.split('').map(char => `<span class=\"title-char\">${char}</span>`).join('');\n    gsap.set(\".gsap-header-item, .gsap-content-item\", { autoAlpha: 0, y: 20 });\n    masterTl.to(\".title-char\", { autoAlpha: 1, y: 0, duration: 0.7, ease: \"power3.out\", stagger: 0.1 }).to(\"#wax-seal\", { autoAlpha: 1, scale: 1, duration: 0.6, ease: \"elastic.out(1, 0.7)\" }, \"-=0.5\");\n    document.querySelectorAll('.gs-creator-step').forEach((step, index) => { const stepTl = gsap.timeline(); stepTl.to(step.querySelector('.gsap-header-item'), { autoAlpha: 1, y: 0, duration: 0.6, ease: 'power2.out' }).to(step.querySelectorAll('.gsap-content-item'), { autoAlpha: 1, y: 0, duration: 0.5, ease: 'power2.out', stagger: 0.1 }, '-=0.4'); masterTl.add(stepTl, `-=${index === 0 ? 0.2 : 0.7}`); });\n    const pipPositions = { 1: [ { left: '50%', top: '50%' } ], 2: [ { left: '25%', top: '25%' }, { left: '75%', top: '75%' } ], 3: [ { left: '25%', top: '25%' }, { left: '50%', top: '50%' }, { left: '75%', top: '75%' } ], 4: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 5: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '50%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 6: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '50%' }, { left: '75%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ]};\n    function setupCube(cubeEl) { const size = 'calc(var(--dice-size) / 2)'; gsap.set(cubeEl.querySelector('.face-front'),  { transform: `rotateY(0deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-back'),   { transform: `rotateY(180deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-right'),  { transform: `rotateY(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-left'),   { transform: `rotateY(-90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-top'),   { transform: `rotateX(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-bottom'), { transform: `rotateX(-90deg) translateZ(${size})` }); const faces = cubeEl.querySelectorAll('.dice-face'); faces.forEach(face => { const faceNum = face.getAttribute('data-face'); const pips = face.querySelectorAll('.pip'); const positions = pipPositions[faceNum]; if (!pips.length || !positions) return; pips.forEach((pip, index) => { const pos = positions[index]; gsap.set(pip, { left: pos.left, top: pos.top, xPercent: -50, yPercent: -50 }); }); }); }\n    function getRotationForFace(faceValue) { switch (faceValue) { case 1: return { x: 0, y: 0 }; case 6: return { x: 0, y: 180 }; case 3: return { x: 0, y: -90 }; case 4: return { x: 0, y: 90 }; case 2: return { x: -90, y: 0 }; case 5: return { x: 90,  y: 0 }; default: return { x: 0, y: 0 }; } }\n    async function animateText(element, text) { if(isSkipping) {element.innerHTML = text.replace(/\\n/g, '<br>'); return;} return new Promise(resolve => { if (textAnimation && textAnimation.isActive()) textAnimation.kill(); element.innerHTML = ''; textAnimation = gsap.to(element, { duration: text.length * 0.05, text: { value: text.replace(/\\n/g, '<br>'), newClass: \"typed-cursor\" }, ease: \"none\", onComplete: () => { gsap.delayedCall(0.7, () => { element.querySelector('.typed-cursor')?.remove(); resolve(); }); } }); }); }\n    function initDicePool() { const diceTemplate = document.querySelector('[data-id_template=\"dice-cube\"]'); if (!diceTemplate) return; for (let i = 0; i < MAX_DICE; i++) { const dieIconElement = document.createElement('div'); dieIconElement.className = 'dice-icon'; const newCube = diceTemplate.cloneNode(true); dieIconElement.appendChild(newCube); DOM.diceContainer.appendChild(dieIconElement); setupCube(newCube); dicePool.push(dieIconElement); } }\n    async function animateRoll(numDice, preCalculatedRolls, textToShowDuringRoll = \"投掷中...\") { return new Promise(resolve => { if (currentAnimation && currentAnimation.isActive()) currentAnimation.kill(); dicePool.forEach(die => die.style.display = 'none'); const activeDice = dicePool.slice(0, numDice); animateText(DOM.diceResultText, textToShowDuringRoll); activeDice.forEach(die => { die.style.display = 'flex'; die.className = 'dice-icon'; }); const masterTl = gsap.timeline({ onComplete: () => { if(isSkipping) DOM.diceResultText.innerHTML = ''; resolve(preCalculatedRolls); }}); currentAnimation = masterTl; activeDice.forEach((dieElement, i) => { const dieCube = dieElement.querySelector('.dice-cube'); const visualRoll = preCalculatedRolls[i]; const targetRotation = getRotationForFace(visualRoll); const dieTimeline = gsap.timeline(); dieTimeline.to(dieCube, { rotationX: `+=${gsap.utils.random(720, 1080)}`, rotationY: `+=${gsap.utils.random(720, 1080)}`, duration: 1.8, ease: \"power2.in\" }).to(dieCube, { rotationX: targetRotation.x, rotationY: targetRotation.y, duration: 0.7, ease: \"power4.out\" }); masterTl.add(dieTimeline, 0); }); }); }\n    \n    const debouncedUpdate = debounce(updateUI, 400);\n    [DOM.nameInput, DOM.genderInput, DOM.ageInput, DOM.ocDetailsInput].forEach(el => el.addEventListener('input', debouncedUpdate));\n    \n    DOM.skipAnimationBtn.addEventListener('click', () => {\n        isSkipping = true;\n        if (currentAnimation && currentAnimation.isActive()) currentAnimation.progress(1);\n        if (textAnimation && textAnimation.isActive()) textAnimation.progress(1);\n    });\n\n    $('#roll-background-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const rolls = [roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6()];\n        await animateRoll(6, rolls, '投掷 经历... (2d6 x 3)');\n        \n        const sums = { origin: rolls[0] + rolls[1], past: rolls[2] + rolls[3], encounter: rolls[4] + rolls[5] };\n        \n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `出身: ${rolls[0]} + ${rolls[1]} = ${sums.origin}\\n(${backgroundData.origin[character.race][sums.origin].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `来历: ${rolls[2]} + ${rolls[3]} = ${sums.past}\\n(${backgroundData.past[sums.past].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(4, 6), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `邂逅: ${rolls[4]} + ${rolls[5]} = ${sums.encounter}\\n(${backgroundData.encounter[sums.encounter]})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        character.background.origin = backgroundData.origin[character.race][sums.origin];\n        character.background.past = backgroundData.past[sums.past];\n        character.background.encounter = backgroundData.encounter[sums.encounter];\n        DOM.bgOrigin.textContent = character.background.origin.name;\n        DOM.bgPast.textContent = character.background.past.name;\n        DOM.bgEncounter.textContent = character.background.encounter;\n        DOM.backgroundDisplay.style.display = 'block';\n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        updateUI(true);\n    });\n\n    $('#roll-attributes-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const attrRolls = raceData[character.race].attr_rolls;\n        const allCalculatedRolls = [];\n\n        // Prepare race-based attributes\n        for (const attr in attrRolls) {\n            const formula = attrRolls[attr];\n            const modifier = parseInt(formula.split('d3')[1] || '0');\n            const { d6, d3 } = roll1D3();\n            const finalValue = Math.max(0, d3 + modifier);\n            character.attributes[attr] = finalValue;\n            allCalculatedRolls.push({ attr, formula, d6, d3, modifier, finalValue });\n        }\n        \n        // Prepare \"Potential\" attribute\n        const potentialValue = Math.floor(Math.random() * 3) + 1;\n        const d6ForPotential = (potentialValue * 2) - 1; // Map 1,2,3 to d6 faces 1,3,5 for animation\n        character.attributes['潜力'] = potentialValue;\n        allCalculatedRolls.push({\n            attr: '潜力',\n            formula: '1-3', // Just a descriptor\n            d6: d6ForPotential,\n            finalValue: potentialValue\n        });\n        \n        // Animate all rolls sequentially\n        for (const roll of allCalculatedRolls) {\n            await animateRoll(1, [roll.d6], `投掷 ${roll.attr}...`);\n            if (isSkipping) break;\n\n            gsap.to(dicePool[0], { className: 'dice-icon highlight', duration: 0.3 });\n            \n            let resultText;\n            if (roll.attr === '潜力') {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.finalValue}`;\n            } else {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.d3} ${roll.modifier >= 0 ? '+' : ''} ${roll.modifier} = ${roll.finalValue}`;\n            }\n            await animateText(DOM.diceResultText, resultText);\n            \n            await updateUI();\n            \n            if (isSkipping) break;\n            \n            await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        await updateUI();\n    });\n\n    DOM.raceSelect.addEventListener('change', () => {\n        DOM.backgroundDisplay.style.display = 'none';\n        character.background = { origin: null, past: null, encounter: null };\n        Object.keys(character.attributes).forEach(k => character.attributes[k] = 0);\n        updateUI(true);\n    });\n\n    $('#submit-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        await updateUI(true);\n        \n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '未设定';\n        \n        const finalCharacterObject={ NAME:finalName, GENDER:character.gender||'未设定', AGE:formattedAge, RACE:character.race, ORIGIN: character.background.origin ? character.background.origin.name : '未知', PAST: character.background.past ? character.background.past.name : '未知', ENCOUNTER: character.background.encounter || '未知', SKILLS: uniqueSkills, OC_DETAILS:character.oc_details||'无', ...character.attributes, MONEY:character.money };\n        \n        const slashCommand=`/send <START>\\nAdmin:\\n这是一个TRPG开局，请为 User 生成一段详尽的背景故事。\\n\\n# 故事核心要求\\n请严格根据以下【角色完整设定】，撰写一段从角色童年到现在的成长故事。故事需要清晰地阐述是什么关键事件或心路历程，最终让他/她确立了要成为一名冒险者的志向。请在故事中自然地融入角色的种族、出身背景、技能和性格特点。\\n\\n# 角色完整设定\\n---\\n## 基础信息\\n- **姓名:** ${finalName}\\n- **性别:** ${character.gender||'未设定'}\\n- **年龄:** ${formattedAge}\\n- **种族:** ${character.race}\\n\\n## 经历\\n- **出身:** ${character.background.origin ? character.background.origin.name : '未知'}\\n- **来历:** ${character.background.past ? character.background.past.name : '未知'}\\n- **邂逅:** ${character.background.encounter || '未知'}\\n\\n## 背景与技能\\n- **初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n- **初始技能:** ${uniqueSkills.join(', ')||'无'}\\n\\n## 补充设定 (OC)\\n- **额外补充:** ${character.oc_details||'无'}\\n\\n## 能力值\\n- **力量:** ${character.attributes['力量']}\\n- **敏捷:** ${character.attributes['敏捷']}\\n- **感知:** ${character.attributes['感知']}\\n- **知识:** ${character.attributes['知识']}\\n- **魅力:** ${character.attributes['魅力']}\\n- **信仰力:** ${character.attributes['信仰力']}\\n- **魔力:** ${character.attributes['魔力']}\\n\\n## 初始资产\\n- **资金:** ${character.money} 银币\\n\\|\\n/trigger`; \n        \n        try {\n            if (typeof insertOrAssignVariables === 'function') {\n                await insertOrAssignVariables(finalCharacterObject);\n            } else {\n                console.log(\"SillyTavern Function 'insertOrAssignVariables' not found. Variables:\", finalCharacterObject);\n            }\n            if (typeof triggerSlash === 'function') {\n                await triggerSlash(slashCommand, 'Send');\n            } else { \n                console.log(\"SillyTavern Function 'triggerSlash' not found. Command will be copied to clipboard.\");\n                navigator.clipboard.writeText(slashCommand).then(() => {\n                    alert('角色指令已复制到剪贴板！');\n                });\n            }\n        } catch (error) {\n            console.error('与SillyTavern交互失败:', error);\n            alert('与SillyTavern交互失败，请查看浏览器控制台。');\n        }\n\n        e.target.innerHTML = \"契约成立！\";\n    });\n    \n    initDicePool();\n    Object.keys(raceData).forEach(key => DOM.raceSelect.add(new Option(key, key)));\n    Object.keys(character.attributes).forEach(key => {\n        const pointControl = document.createElement('div');\n        pointControl.className = 'point-control';\n        pointControl.innerHTML = `<span class=\"label\">${key}</span><input type=\"text\" id=\"attr-${key.replace(/\\s/g, '')}\" readonly value=\"0\">`; // ID santized just in case\n        DOM.attributesContainer.appendChild(pointControl);\n    });\n    // A small fix for renderAttributes to handle sanitized IDs\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key.replace(/\\s/g, '')}`).value = value; }); }\n    updateUI(true);\n});\n</script>\n\n</body>\n</html>\n```"
  },
  {
    "role": "user",
    "content": "```\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>哥布林杀手TRPG - 冒险者契约</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/gsap.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/TextPlugin.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.min.js\" defer></script>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Noto+Serif+SC:wght@400;700&family=Vollkorn:wght@400;700&family=Courier+Prime&display=swap\" rel=\"stylesheet\">\n\n    <style>\n        :root {\n            --leather-bg: #5a3a2a;\n            --dark-leather-bg: #3b2a1a;\n            --parchment-bg: #f5f5dc;\n            --parchment-bg-gradient: linear-gradient(165deg, #f7e9d7, #e6d5c3);\n            --text-color: #3d3d3d;\n            --heading-color: #4a3c2c;\n            --border-color: #7a5a4a;\n            --font-main: 'Vollkorn', 'Noto Serif SC', serif;\n            --font-display: 'Cinzel', 'Noto Serif SC', serif;\n            --font-code: 'Courier Prime', 'Courier New', monospace;\n            --dice-size: 5rem; \n        }\n\n        html { height: 100%; }\n        body {\n            background-color: #3a2e20;\n            font-family: var(--font-main);\n            color: var(--text-color);\n            margin: 0; padding: 20px;\n            box-sizing: border-box;\n            display: flex;\n            align-items: center; justify-content: center;\n            min-height: 100%;\n        }\n        *, *:before, *:after { box-sizing: inherit; }\n\n        .creator-wrapper {\n            width: 100%; max-width: 900px;\n            margin: 0;\n            background: var(--parchment-bg-gradient);\n            border: 12px solid #8b7355;\n            border-radius: 8px;\n            box-shadow: 0 0 40px rgba(139, 115, 85, 0.3), inset 0 0 30px rgba(255, 255, 255, 0.4);\n            position: relative;\n            overflow: hidden;\n            padding: 25px;\n            display: flex; flex-direction: column;\n            max-height: 95vh;\n        }\n\n        .border-flow, .inner-border { position: absolute; pointer-events: none; }\n        .border-flow { top: 0; left: 0; right: 0; bottom: 0; background: linear-gradient(90deg, rgba(139,115,85,0.1) 1px, transparent 1px), linear-gradient(0deg, rgba(139,115,85,0.1) 1px, transparent 1px); background-size: 20px 20px; animation: borderFlow 15s linear infinite; }\n        .inner-border { top: 5px; left: 5px; right: 5px; bottom: 5px; border: 3px solid rgba(139,115,85,0.3); border-radius: 5px; }\n        @keyframes borderFlow { from { background-position: 0 0; } to { background-position: 20px 20px; } }\n\n        .creator-header {\n            text-align: center;\n            padding: 10px;\n            margin-bottom: 25px;\n            border-bottom: 2px solid rgba(139, 115, 85, 0.3);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 15px;\n        }\n        .creator-header h1 {\n            font-family: var(--font-display);\n            font-size: clamp(24px, 5vw, 32px);\n            margin: 0;\n            font-weight: 700;\n            letter-spacing: 3px;\n            color: var(--heading-color);\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.1);\n        }\n        \n        .title-char {\n            display: inline-block;\n            opacity: 0;\n            transform: translateY(30px);\n        }\n\n        .wax-seal {\n            width: 45px;\n            height: 45px;\n            display: inline-block;\n            background-color: #c0392b;\n            border-radius: 50%;\n            position: relative;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.4), inset 0 -2px 3px rgba(0,0,0,0.3);\n            opacity: 0;\n            transform: scale(0.5);\n            font-family: 'Cinzel', serif;\n            color: #e7a49c;\n            text-align: center;\n            font-size: 24px;\n            line-height: 45px;\n            font-weight: 700;\n        }\n        .wax-seal::before {\n            content: 'GS';\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.3);\n        }\n\n        .creator-scroll-content { overflow-y: auto; padding: 10px 20px 10px 10px; }\n        .creator-scroll-content::-webkit-scrollbar { width: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-track { background: rgba(139, 115, 85, 0.1); border-radius: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-thumb { background-color: #a89072; border-radius: 10px; border: 2px solid #f7e9d7; }\n        \n        .gs-creator-step { margin-bottom: 40px; overflow: hidden; }\n        .gs-creator-step h3 { font-family: var(--font-display); font-size: 1.5em; font-weight: 700; border-bottom: 1.5px solid var(--border-color); padding-bottom: 8px; margin-bottom: 20px; color: var(--heading-color); text-align: left; }\n        \n        .layout-grid { display: grid; grid-template-columns: 1fr; gap: 25px; align-items: flex-start; }\n        @media (min-width: 768px) {\n            .layout-grid { grid-template-columns: 1fr 280px; }\n        }\n\n        .form-container { text-align: left; }\n        .gs-form-group { margin-bottom: 16px; }\n        .gs-form-group label { display: block; margin-bottom: 6px; font-weight: bold; color: var(--heading-color); }\n        .form-input, .form-select, .form-textarea { width: 100%; padding: 10px; background-color: rgba(255, 255, 255, 0.5); border: 1px solid #a58e72; border-radius: 4px; color: #3d3d3d; font-family: var(--font-main); font-size: 1em; transition: all 0.2s ease-in-out; box-shadow: inset 1px 1px 2px rgba(0,0,0,0.1); }\n        .form-input:focus, .form-select:focus, .form-textarea:focus { outline: none; border-color: #8b7355; background-color: #fff; box-shadow: 0 0 5px rgba(139, 115, 85, 0.5); }\n        .form-textarea { resize: vertical; min-height: 100px; }\n\n        .grid-cols-2 {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 16px;\n        }\n        @media (min-width: 480px) {\n            .grid-cols-2 {\n                grid-template-columns: repeat(2, 1fr);\n            }\n        }\n\n        #attributes-container .point-control { display: flex; align-items: center; justify-content: space-between; margin-bottom: 8px; padding: 6px 8px; background: rgba(0,0,0,0.03); border-left: 3px solid rgba(139,115,85,0.2); border-radius: 4px; }\n        #attributes-container .label { font-weight: bold; color: var(--heading-color); }\n        #attributes-container input[readonly] { width: 40px; text-align: center; font-weight: bold; font-size: 1.2em; font-family: var(--font-display); color: #a02c2c; border: none; background-color: transparent; box-shadow: none; padding: 0; }\n        \n        .attributes-grid {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 0 16px;\n        }\n        @media (min-width: 480px) {\n            .attributes-grid {\n                grid-template-columns: 1fr 1fr;\n            }\n        }\n        \n        .skills-display p { background-color: rgba(0,0,0,0.05); border-left: 3px solid var(--border-color); padding: 10px 15px; margin-top: 10px; font-size: 0.95em; border-radius: 0 4px 4px 0; }\n        .skills-display strong { color: #8b5b4b; font-family: var(--font-display); }\n        .skills-display ul { list-style: none; padding-left: 0; margin-top: 8px; font-size: 0.9em; }\n        .skills-display li { margin-bottom: 4px; }\n\n        #character-summary { background-color: #e9e4d9; font-family: var(--font-code); line-height: 1.6; height: 250px; color: #2c2a2a; }\n        \n        .gs-button { width: 100%; background-color: #8b7355; color: var(--parchment-bg); border: 2px solid var(--dark-leather-bg); border-radius: 5px; padding: 12px 20px; font-family: var(--font-display); font-size: 1.2em; font-weight: 700; cursor: pointer; margin-top: 10px; transition: all 0.3s ease; box-shadow: 0 3px 5px rgba(0,0,0,0.3); }\n        .gs-button:hover { background-color: #a0886c; transform: translateY(-2px); box-shadow: 0 5px 8px rgba(0,0,0,0.3); }\n        .gs-button:disabled { background-color: #9e9e9e; border-color: #757575; cursor: not-allowed; transform: none; box-shadow: none; opacity: 0.6; }\n        .action-button { background-color: #6d5b4b; font-size: 1em; padding: 10px 15px; margin-top: 0; margin-bottom: 10px; width: auto; }\n        \n        .background-display { margin-top: 15px; padding: 15px; border: 1px dashed var(--border-color); border-radius: 5px; background: rgba(0,0,0,0.02); }\n        .background-display p { margin: 0 0 8px; }\n        .background-display span { font-weight: bold; color: var(--heading-color); }\n        \n        #radar-chart-container { \n            max-width: 100%;\n        }\n        @media (min-width: 768px) {\n            #radar-chart-container {\n                position: sticky;\n                top: 0;\n                padding-top: 45px;\n            }\n        }\n\n        pre.mermaid { \n            font-family: var(--font-main); \n            background: rgba(0,0,0,0.02); \n            border: 1px solid rgba(139,115,85,0.1); \n            padding: 10px; \n            border-radius: 5px; \n            overflow: auto;\n            transition: opacity 0.3s ease-in-out;\n        }\n        pre.mermaid.loading { opacity: 0.5; pointer-events: none; }\n\n        pre.mermaid > svg {\n            max-width: 100%;\n            height: auto;\n        }\n\n        #dice-overlay {\n            position: fixed; top: 0; left: 0; width: 100%; height: 100%;\n            background: rgba(0,0,0,0.8); backdrop-filter: blur(5px);\n            display: none; align-items: center; justify-content: center; flex-direction: column;\n            z-index: 100;\n            color: #fff; text-shadow: 0 0 10px #000;\n        }\n\n        .dice-container {\n            display: flex; flex-wrap: wrap; justify-content: center;\n            gap: 2rem; margin-bottom: 2rem;\n            max-width: 600px;\n        }\n        \n        .dice-icon {\n            width: var(--dice-size); height: var(--dice-size);\n            perspective: 800px;\n            transform-style: preserve-3d;\n            display: none;\n        }\n        .dice-icon.highlight {\n            transform: scale(1.15);\n            filter: drop-shadow(0 0 15px #FFEB3B);\n            transition: transform 0.3s ease, filter 0.3s ease;\n        }\n\n        .dice-cube {\n            width: 100%; height: 100%;\n            position: relative;\n            transform-style: preserve-3d;\n            transform: translateZ(calc(var(--dice-size) / -2));\n        }\n        \n        .dice-face {\n            position: absolute;\n            width: var(--dice-size); height: var(--dice-size);\n            background-color: rgba(255, 255, 255, 0.98);\n            border: 1.5px solid #857e72;\n            border-radius: 12%;\n        }\n\n        .pips-container {\n            width: 100%; height: 100%;\n            position: relative; \n        }\n        .pip {\n            width: 22%; height: 22%; \n            background-color: #3d352e;\n            border-radius: 50%;\n            box-shadow: inset 0 1px 3px rgba(0,0,0,0.5);\n            position: absolute; \n        }\n        \n        #dice-result-text { \n            font-family: var(--font-display); \n            font-size: 2.2em;\n            color: #FFEB3B; \n            text-shadow: 0 0 12px #FFEB3B; \n            min-height: 2em;\n            line-height: 1.2;\n            text-align: center; \n        }\n        \n        #skip-animation-btn {\n            position: absolute;\n            bottom: 30px;\n            font-size: 1em;\n            padding: 8px 20px;\n            width: auto;\n            background-color: rgba(0,0,0,0.3);\n            border-color: rgba(255,255,255,0.5);\n            color: rgba(255,255,255,0.8);\n        }\n        #skip-animation-btn:hover {\n            background-color: rgba(0,0,0,0.5);\n            color: #fff;\n        }\n\n        .typed-cursor {\n            opacity: 1;\n            animation: typed-blink 0.7s infinite;\n        }\n        @keyframes typed-blink{\n            0% { opacity: 1; }\n            50% { opacity: 0; }\n            100% { opacity: 1; }\n        }\n        \n        .validation-message {\n            text-align: center;\n            color: #b71c1c;\n            font-size: 0.9em;\n            font-weight: bold;\n            margin-top: -5px;\n            margin-bottom: 10px;\n            height: 1.2em;\n            opacity: 0;\n            will-change: transform, opacity;\n        }\n\n        #credits-screen {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            pointer-events: none;\n            opacity: 0;\n        }\n\n        #credits-screen p {\n            font-family: var(--font-display);\n            font-size: 2em;\n            color: #f5f5dc;\n            text-shadow: 0 0 8px rgba(245, 245, 220, 0.7);\n        }\n    </style>\n</head>\n<body>\n\n<div class=\"creator-wrapper\">\n    <div class=\"border-flow\"></div>\n    <div class=\"inner-border\"></div>\n    <header class=\"creator-header\">\n        <h1 id=\"main-title\">冒险者契约登记</h1>\n        <div id=\"wax-seal\" class=\"wax-seal\"></div>\n    </header>\n\n    <div class=\"creator-scroll-content\">\n        <div class=\"gs-creator-container\">\n            <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第一步：身份确认</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-name-input\">姓名</label><input id=\"char-name-input\" type=\"text\" placeholder=\"可留空，默认为 {{user}}\" class=\"form-input\"></div>\n                    <div class=\"grid-cols-2 gsap-content-item\">\n                        <div class=\"gs-form-group\"><label for=\"char-gender-input\">性别</label><input id=\"char-gender-input\" type=\"text\" placeholder=\"例如: 男性/女性/双性/无性/……\" class=\"form-input\"></div>\n                        <div class=\"gs-form-group\"><label for=\"char-age-input\">年龄</label><input id=\"char-age-input\" type=\"number\" placeholder=\"可参照种族说明\" class=\"form-input\"></div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-race-select\">种族</label><select id=\"char-race-select\" class=\"form-select\"></select></div>\n                    <div class=\"gs-form-group gsap-content-item\">\n                        <label>经历 (出身/来历/邂逅)</label>\n                        <button id=\"roll-background-btn\" class=\"gs-button action-button\">🎲 投骰决定经历</button>\n                        <div id=\"background-display\" class=\"background-display\" style=\"display: none;\">\n                            <p>出身: <span id=\"bg-origin\"></span></p>\n                            <p>来历: <span id=\"bg-past\"></span></p>\n                            <p>邂逅: <span id=\"bg-encounter\"></span></p>\n                        </div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"oc-details-input\">身体特征与补充</label><textarea id=\"oc-details-input\" placeholder=\"发色、瞳色、体型、性格、背景故事构思...\" class=\"form-textarea\"></textarea></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第二步：能力值与技能</h3>\n                <div class=\"layout-grid\">\n                    <div class=\"form-container gsap-content-item\">\n                        <button id=\"roll-attributes-btn\" class=\"gs-button action-button\">🎲 投骰决定能力值</button>\n                        <div id=\"attributes-container\" class=\"attributes-grid\"></div>\n                        <div id=\"skills-and-desc-container\" class=\"skills-display\"></div>\n                    </div>\n                    <div id=\"radar-chart-container\" class=\"gsap-content-item\"><pre class=\"mermaid\" id=\"radar-chart\"></pre></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第三步：完成登记</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"character-summary\">角色卡预览</label><textarea id=\"character-summary\" rows=\"12\" readonly class=\"form-textarea\"></textarea></div>\n                    <button id=\"submit-btn\" class=\"gs-button gsap-content-item\" disabled>确认登记，开始冒险</button>\n                    <div id=\"validation-message\" class=\"validation-message\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div id=\"credits-screen\">\n    <p>作者 𝙀𝙡𝙖𝙞𝙣𝙖𝙙𝙚𝙨</p>\n</div>\n\n<div id=\"dice-overlay\">\n    <div class=\"dice-container\" id=\"dice-container\"></div>\n    <div id=\"dice-result-text\"></div>\n    <button id=\"skip-animation-btn\" class=\"gs-button\">跳过动画</button>\n</div>\n\n<div id=\"dice-templates\" style=\"display:none;\">\n    <div class=\"dice-cube\" data-id_template=\"dice-cube\">\n        <div class=\"dice-face face-front\" data-face=\"1\"><div class=\"pips-container\"><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-back\" data-face=\"6\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-right\" data-face=\"3\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-left\" data-face=\"4\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-top\" data-face=\"2\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-bottom\" data-face=\"5\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n    </div>\n</div>\n\n<script>\n// --- MODIFIED DATA ---\nconst raceData = {\n    '凡人': { attr_rolls: { '力量': '1d3+1', '敏捷': '1d3', '感知': '1d3', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3+2', '魔力': '1d3' }, skills: ['过载行动(初级)', '武器:投掷武器(初级)', '长距离移动(初级)']},\n    '矿人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3', '感知': '1d3+2', '知识': '1d3-1', '魅力': '1d3+1', '信仰力': '1d3+1', '魔力': '1d3-1' }, skills: ['治愈适性(初级)', '夜视(初级)', '锻造(初级)']},\n    '森人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+1', '感知': '1d3+1', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3-1', '魔力': '1d3+1' }, skills: ['武器:弩弓(初级)', '夜视(初级)', '精灵宠儿(初级)']},\n    '蜥蜴人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3+1', '感知': '1d3', '知识': '1d3', '魅力': '1d3+1', '信仰力': '1d3', '魔力': '1d3' }, skills: ['免疫强化(初级)', '夜视(初级)', '龙族血统(初级)']},\n    '圃人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+2', '感知': '1d3+1', '知识': '1d3', '魅力': '1d3-1', '信仰力': '1d3', '魔力': '1d3+2' }, skills: ['隐匿(初级)', '先发制人(初级)', '烹饪(初级)']}\n};\nconst backgroundData = {\n    origin: { \n        '凡人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '学者', class: '魔术师', level: 1, skills: ['文献调查(初级)'] }, 6: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 7: { name: '农民', skills: ['生产业:农业(初级)', '强健(初级)'] }, 8: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '骑士', class: '战士', level: 1, skills: ['骑乘(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n        '矿人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 6: { name: '酒馆老板', class: '战士', level: 1, skills: ['观察(初级)'] }, 7: { name: '铁匠', skills: ['工匠:锻造(初级)', '手工(初级)'] }, 8: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '碎盾者', class: '战士', level: 1, skills: ['强击攻击·斩(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n    },\n    past: { 2: { name: '奴隶', skills: ['劳动(初级)'] }, 3: { name: '牢狱', skills: ['犯罪知识(初级)'] }, 4: { name: '战场', skills: ['沉着冷静(初级)'] }, 5: { name: '神殿', skills: ['神学(初级)'] }, 6: { name: '孤儿', skills: ['忍耐(初级)'] }, 7: { name: '平顺', skills: ['幸运(初级)'] }, 8: { name: '贫困', skills: ['生存术(初级)'] }, 9: { name: '学校', skills: ['博识(初级)'] }, 10: { name: '深闺', skills: ['无偏见(初级)'] }, 11: { name: '奢华', skills: ['鉴定(初级)'] }, 12: { name: '宫廷', skills: ['礼仪(初级)'] }},\n    encounter: { 2: '宿敌', 3: '上司', 4: '后辈', 5: '交易对象', 6: '下属', 7: '家人', 8: '挚友', 9: '前辈', 10: '未婚夫/妻', 11: '劲敌', 12: '师父' }\n};\nbackgroundData.origin['森人'] = backgroundData.origin['凡人']; backgroundData.origin['蜥蜴人'] = backgroundData.origin['凡人']; backgroundData.origin['圃人'] = backgroundData.origin['凡人'];\nconst character = {\n    name: '', gender: '', age: '', oc_details: '', race: '凡人',\n    background: { origin: null, past: null, encounter: null },\n    attributes: { '力量': 0, '敏捷': 0, '感知': 0, '知识': 0, '魅力': 0, '信仰力': 0, '魔力': 0, '潜力': 0 },\n    skills: [], classes: {}, money: 0, _lastAttributesForChart: '',\n};\n// --- END MODIFIED DATA ---\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    gsap.registerPlugin(TextPlugin);\n    mermaid.initialize({ startOnLoad: true, theme: 'base', themeVariables: {\n        '--mermaid-font-family': \"'Vollkorn', 'Noto Serif SC', serif\",\n        primaryColor: '#f7e9d7', primaryTextColor: '#3d3d3d', lineColor: '#8b7355', textColor: '#4a3c2c',\n    }});\n    \n    const $ = (s) => document.querySelector(s);\n    const roll1D6 = () => Math.floor(Math.random() * 6) + 1;\n    const roll1D3 = () => {\n        const d6 = roll1D6();\n        if (d6 <= 2) return { d6, d3: 1 };\n        if (d6 <= 4) return { d6, d3: 2 };\n        return { d6, d3: 3 };\n    };\n    const rollDiceString = (diceString) => { const p=diceString.split('*');const d=p[0];const m=parseInt(p[1])||1;if(!d.includes('d'))return 0;const[n,s]=d.split('d').map(Number);let t=0;for(let i=0;i<n;i++){t+=Math.floor(Math.random()*s)+1;}return t*m; };\n    const formatAge = (ageValue) => { if (!ageValue && ageValue !== 0) return ageValue; const num = Number(ageValue); if (isNaN(num)) return ageValue; if (Math.abs(num) >= 1_000_000) return num.toExponential(2); return ageValue; };\n    const debounce = (func, delay) => { let timeout; return function(...args) { clearTimeout(timeout); timeout = setTimeout(() => func.apply(this, args), delay); }; };\n    const diceUnicode = ['\\u2680', '\\u2681', '\\u2682', '\\u2683', '\\u2684', '\\u2685'];\n\n    const DOM = {\n        nameInput: $('#char-name-input'), genderInput: $('#char-gender-input'), ageInput: $('#char-age-input'),\n        ocDetailsInput: $('#oc-details-input'), raceSelect: $('#char-race-select'), attributesContainer: $('#attributes-container'),\n        skillsContainer: $('#skills-and-desc-container'), radarChart: $('#radar-chart'), summarySheet: $('#character-summary'),\n        diceOverlay: $('#dice-overlay'), diceContainer: $('#dice-container'), diceResultText: $('#dice-result-text'),\n        backgroundDisplay: $('#background-display'), bgOrigin: $('#bg-origin'), bgPast: $('#bg-past'), bgEncounter: $('#bg-encounter'),\n        skipAnimationBtn: $('#skip-animation-btn'),\n        submitBtn: $('#submit-btn'),\n        validationMessage: $('#validation-message'),\n    };\n    \n    const dicePool = []; const MAX_DICE = 6;\n    let currentAnimation = null; let textAnimation = null; let isSkipping = false;\n    let currentValidationMessage = '';\n    \n    function validateAndToggleButton() {\n        let newMessage = '';\n        if (!character.age || String(character.age).trim() === '') {\n            newMessage = '请填写您的冒险者年龄。';\n        } else if (!character.gender || !character.gender.trim()) {\n            newMessage = '请设定冒险者的性别。';\n        } else if (!character.background.origin) {\n            newMessage = '请投骰决定您的冒险者经历。';\n        } else if (Object.values(character.attributes).every(val => val === 0)) {\n            newMessage = '请投骰决定您的能力值。';\n        }\n\n        if (newMessage === currentValidationMessage) return;\n        currentValidationMessage = newMessage;\n\n        if (newMessage) {\n            DOM.submitBtn.disabled = true;\n            DOM.validationMessage.textContent = newMessage;\n            gsap.fromTo(DOM.validationMessage, { autoAlpha: 0, scale: 0.8 }, { autoAlpha: 1, scale: 1, duration: 0.4, ease: 'elastic.out(1, 0.75)' });\n        } else {\n            DOM.submitBtn.disabled = false;\n            gsap.to(DOM.validationMessage, { autoAlpha: 0, duration: 0.3 });\n        }\n    }\n    function updateCharacterDataFromDOM() { character.name = DOM.nameInput.value; character.gender = DOM.genderInput.value; character.age = DOM.ageInput.value; character.oc_details = DOM.ocDetailsInput.value; character.race = DOM.raceSelect.value; }\n    function renderSkills() { const uniqueSkills = [...new Set(character.skills)]; DOM.skillsContainer.innerHTML = `<p><strong>天赋与习得技能:</strong></p><ul>${uniqueSkills.map(s => `<li>- ${s}</li>`).join('')}</ul>`; }\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key}`).value = value; }); }\n    function renderSummary() {\n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '?';\n        const originText = `出身:${character.background.origin ? character.background.origin.name : '?'}`;\n        const pastText = `来历:${character.background.past ? character.background.past.name : '?'}`;\n        const encounterText = `邂逅:${character.background.encounter || '?'}`;\n        let summary = `### 《哥布林杀手TRPG》冒险者登记卡\\n` + `**姓名:** ${finalName} | **种族:** ${character.race} | **性别:** ${character.gender || '?'} | **年龄:** ${formattedAge}\\n` + `**经历:** ${originText} / ${pastText} / ${encounterText}\\n` + `**初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n` + `**初始技能:** ${uniqueSkills.join(', ') || '无'}\\n`; if (character.oc_details) { summary += `**身体特征与补充:** ${character.oc_details}\\n`; } summary += `---\\n**能力值:**\\n`; summary += Object.entries(character.attributes).map(([key, value]) => `- ${key}: ${value}`).join('\\n'); summary += `\\n**持有资金:** ${character.money} 银币`;\n        DOM.summarySheet.value = summary.replace(/### /g, '').replace(/\\*\\*/g, '').replace(/---/g, '\\n────────────────────\\n').replace(/- /g, '  ');\n        DOM.summarySheet.setAttribute('data-raw', summary);\n    }\n    async function renderRadarChartIfNeeded() { const currentAttributesString = JSON.stringify(character.attributes); if (currentAttributesString === character._lastAttributesForChart) return; DOM.radarChart.classList.add('loading'); const radarSyntax = `radar-beta\\ntitle 能力值分布\\naxis a[\"力量 ${character.attributes['力量']}\"]\\naxis b[\"敏捷 ${character.attributes['敏捷']}\"]\\naxis c[\"感知 ${character.attributes['感知']}\"]\\naxis d[\"知识 ${character.attributes['知识']}\"]\\naxis e[\"魅力 ${character.attributes['魅力']}\"]\\naxis f[\"信仰 ${character.attributes['信仰力']}\"]\\naxis g[\"魔力 ${character.attributes['魔力']}\"]\\naxis h[\"潜力 ${character.attributes['潜力']}\"]\\ncurve current[\"能力\"]{${character.attributes['力量']},${character.attributes['敏捷']},${character.attributes['感知']},${character.attributes['知识']},${character.attributes['魅力']},${character.attributes['信仰力']},${character.attributes['魔力']},${character.attributes['潜力']}}\\nmax 10\\nmin 0`; DOM.radarChart.innerHTML = radarSyntax; DOM.radarChart.removeAttribute('data-processed'); try { await mermaid.run({ nodes: [DOM.radarChart] }); character._lastAttributesForChart = currentAttributesString; } catch(e) { console.error(\"Mermaid rendering error:\", e); } finally { DOM.radarChart.classList.remove('loading'); } }\n    async function updateUI(forceFullUpdate = false) { updateCharacterDataFromDOM(); if(forceFullUpdate) { character._lastAttributesForChart = ''; character.skills = []; character.classes = {}; character.money = 100; if(raceData[character.race].skills) character.skills.push(...raceData[character.race].skills); if (character.background.origin) { if (character.background.origin.skills) character.skills.push(...character.background.origin.skills); if (character.background.origin.class) character.classes[character.background.origin.class] = character.background.origin.level; if(character.background.origin.money) character.money += rollDiceString(character.background.origin.money); } if (character.background.past && character.background.past.skills) { character.skills.push(...character.background.past.skills); } } renderAttributes(); renderSkills(); renderSummary(); await renderRadarChartIfNeeded(); validateAndToggleButton(); }\n\n    const masterTl = gsap.timeline({ delay: 0.2 });\n    const title = $('#main-title');\n    title.innerHTML = title.textContent.split('').map(char => `<span class=\"title-char\">${char}</span>`).join('');\n    gsap.set(\".gsap-header-item, .gsap-content-item\", { autoAlpha: 0, y: 20 });\n    masterTl.to(\".title-char\", { autoAlpha: 1, y: 0, duration: 0.7, ease: \"power3.out\", stagger: 0.1 }).to(\"#wax-seal\", { autoAlpha: 1, scale: 1, duration: 0.6, ease: \"elastic.out(1, 0.7)\" }, \"-=0.5\");\n    document.querySelectorAll('.gs-creator-step').forEach((step, index) => { const stepTl = gsap.timeline(); stepTl.to(step.querySelector('.gsap-header-item'), { autoAlpha: 1, y: 0, duration: 0.6, ease: 'power2.out' }).to(step.querySelectorAll('.gsap-content-item'), { autoAlpha: 1, y: 0, duration: 0.5, ease: 'power2.out', stagger: 0.1 }, '-=0.4'); masterTl.add(stepTl, `-=${index === 0 ? 0.2 : 0.7}`); });\n    const pipPositions = { 1: [ { left: '50%', top: '50%' } ], 2: [ { left: '25%', top: '25%' }, { left: '75%', top: '75%' } ], 3: [ { left: '25%', top: '25%' }, { left: '50%', top: '50%' }, { left: '75%', top: '75%' } ], 4: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 5: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '50%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 6: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '50%' }, { left: '75%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ]};\n    function setupCube(cubeEl) { const size = 'calc(var(--dice-size) / 2)'; gsap.set(cubeEl.querySelector('.face-front'),  { transform: `rotateY(0deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-back'),   { transform: `rotateY(180deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-right'),  { transform: `rotateY(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-left'),   { transform: `rotateY(-90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-top'),   { transform: `rotateX(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-bottom'), { transform: `rotateX(-90deg) translateZ(${size})` }); const faces = cubeEl.querySelectorAll('.dice-face'); faces.forEach(face => { const faceNum = face.getAttribute('data-face'); const pips = face.querySelectorAll('.pip'); const positions = pipPositions[faceNum]; if (!pips.length || !positions) return; pips.forEach((pip, index) => { const pos = positions[index]; gsap.set(pip, { left: pos.left, top: pos.top, xPercent: -50, yPercent: -50 }); }); }); }\n    function getRotationForFace(faceValue) { switch (faceValue) { case 1: return { x: 0, y: 0 }; case 6: return { x: 0, y: 180 }; case 3: return { x: 0, y: -90 }; case 4: return { x: 0, y: 90 }; case 2: return { x: -90, y: 0 }; case 5: return { x: 90,  y: 0 }; default: return { x: 0, y: 0 }; } }\n    async function animateText(element, text) { if(isSkipping) {element.innerHTML = text.replace(/\\n/g, '<br>'); return;} return new Promise(resolve => { if (textAnimation && textAnimation.isActive()) textAnimation.kill(); element.innerHTML = ''; textAnimation = gsap.to(element, { duration: text.length * 0.05, text: { value: text.replace(/\\n/g, '<br>'), newClass: \"typed-cursor\" }, ease: \"none\", onComplete: () => { gsap.delayedCall(0.7, () => { element.querySelector('.typed-cursor')?.remove(); resolve(); }); } }); }); }\n    function initDicePool() { const diceTemplate = document.querySelector('[data-id_template=\"dice-cube\"]'); if (!diceTemplate) return; for (let i = 0; i < MAX_DICE; i++) { const dieIconElement = document.createElement('div'); dieIconElement.className = 'dice-icon'; const newCube = diceTemplate.cloneNode(true); dieIconElement.appendChild(newCube); DOM.diceContainer.appendChild(dieIconElement); setupCube(newCube); dicePool.push(dieIconElement); } }\n    async function animateRoll(numDice, preCalculatedRolls, textToShowDuringRoll = \"投掷中...\") { return new Promise(resolve => { if (currentAnimation && currentAnimation.isActive()) currentAnimation.kill(); dicePool.forEach(die => die.style.display = 'none'); const activeDice = dicePool.slice(0, numDice); animateText(DOM.diceResultText, textToShowDuringRoll); activeDice.forEach(die => { die.style.display = 'flex'; die.className = 'dice-icon'; }); const masterTl = gsap.timeline({ onComplete: () => { if(isSkipping) DOM.diceResultText.innerHTML = ''; resolve(preCalculatedRolls); }}); currentAnimation = masterTl; activeDice.forEach((dieElement, i) => { const dieCube = dieElement.querySelector('.dice-cube'); const visualRoll = preCalculatedRolls[i]; const targetRotation = getRotationForFace(visualRoll); const dieTimeline = gsap.timeline(); dieTimeline.to(dieCube, { rotationX: `+=${gsap.utils.random(720, 1080)}`, rotationY: `+=${gsap.utils.random(720, 1080)}`, duration: 1.8, ease: \"power2.in\" }).to(dieCube, { rotationX: targetRotation.x, rotationY: targetRotation.y, duration: 0.7, ease: \"power4.out\" }); masterTl.add(dieTimeline, 0); }); }); }\n    \n    const debouncedUpdate = debounce(updateUI, 400);\n    [DOM.nameInput, DOM.genderInput, DOM.ageInput, DOM.ocDetailsInput].forEach(el => el.addEventListener('input', debouncedUpdate));\n    \n    DOM.skipAnimationBtn.addEventListener('click', () => {\n        isSkipping = true;\n        if (currentAnimation && currentAnimation.isActive()) currentAnimation.progress(1);\n        if (textAnimation && textAnimation.isActive()) textAnimation.progress(1);\n    });\n\n    $('#roll-background-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const rolls = [roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6()];\n        await animateRoll(6, rolls, '投掷 经历... (2d6 x 3)');\n        \n        const sums = { origin: rolls[0] + rolls[1], past: rolls[2] + rolls[3], encounter: rolls[4] + rolls[5] };\n        \n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `出身: ${rolls[0]} + ${rolls[1]} = ${sums.origin}\\n(${backgroundData.origin[character.race][sums.origin].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `来历: ${rolls[2]} + ${rolls[3]} = ${sums.past}\\n(${backgroundData.past[sums.past].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(4, 6), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `邂逅: ${rolls[4]} + ${rolls[5]} = ${sums.encounter}\\n(${backgroundData.encounter[sums.encounter]})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        character.background.origin = backgroundData.origin[character.race][sums.origin];\n        character.background.past = backgroundData.past[sums.past];\n        character.background.encounter = backgroundData.encounter[sums.encounter];\n        DOM.bgOrigin.textContent = character.background.origin.name;\n        DOM.bgPast.textContent = character.background.past.name;\n        DOM.bgEncounter.textContent = character.background.encounter;\n        DOM.backgroundDisplay.style.display = 'block';\n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        updateUI(true);\n    });\n\n    $('#roll-attributes-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const attrRolls = raceData[character.race].attr_rolls;\n        const allCalculatedRolls = [];\n\n        // Prepare race-based attributes\n        for (const attr in attrRolls) {\n            const formula = attrRolls[attr];\n            const modifier = parseInt(formula.split('d3')[1] || '0');\n            const { d6, d3 } = roll1D3();\n            const finalValue = Math.max(0, d3 + modifier);\n            character.attributes[attr] = finalValue;\n            allCalculatedRolls.push({ attr, formula, d6, d3, modifier, finalValue });\n        }\n        \n        // Prepare \"Potential\" attribute\n        const potentialValue = Math.floor(Math.random() * 3) + 1;\n        const d6ForPotential = (potentialValue * 2) - 1; // Map 1,2,3 to d6 faces 1,3,5 for animation\n        character.attributes['潜力'] = potentialValue;\n        allCalculatedRolls.push({\n            attr: '潜力',\n            formula: '1-3', // Just a descriptor\n            d6: d6ForPotential,\n            finalValue: potentialValue\n        });\n        \n        // Animate all rolls sequentially\n        for (const roll of allCalculatedRolls) {\n            await animateRoll(1, [roll.d6], `投掷 ${roll.attr}...`);\n            if (isSkipping) break;\n\n            gsap.to(dicePool[0], { className: 'dice-icon highlight', duration: 0.3 });\n            \n            let resultText;\n            if (roll.attr === '潜力') {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.finalValue}`;\n            } else {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.d3} ${roll.modifier >= 0 ? '+' : ''} ${roll.modifier} = ${roll.finalValue}`;\n            }\n            await animateText(DOM.diceResultText, resultText);\n            \n            await updateUI();\n            \n            if (isSkipping) break;\n            \n            await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        await updateUI();\n    });\n\n    DOM.raceSelect.addEventListener('change', () => {\n        DOM.backgroundDisplay.style.display = 'none';\n        character.background = { origin: null, past: null, encounter: null };\n        Object.keys(character.attributes).forEach(k => character.attributes[k] = 0);\n        updateUI(true);\n    });\n\n    $('#submit-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        await updateUI(true);\n        \n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '未设定';\n        \n        const finalCharacterObject={ NAME:finalName, GENDER:character.gender||'未设定', AGE:formattedAge, RACE:character.race, ORIGIN: character.background.origin ? character.background.origin.name : '未知', PAST: character.background.past ? character.background.past.name : '未知', ENCOUNTER: character.background.encounter || '未知', SKILLS: uniqueSkills, OC_DETAILS:character.oc_details||'无', ...character.attributes, MONEY:character.money };\n        \n        const slashCommand=`/send <START>\\nAdmin:\\n这是一个TRPG开局，请为 User 生成一段详尽的背景故事。\\n\\n# 故事核心要求\\n请严格根据以下【角色完整设定】，撰写一段从角色童年到现在的成长故事。故事需要清晰地阐述是什么关键事件或心路历程，最终让他/她确立了要成为一名冒险者的志向。请在故事中自然地融入角色的种族、出身背景、技能和性格特点。\\n\\n# 角色完整设定\\n---\\n## 基础信息\\n- **姓名:** ${finalName}\\n- **性别:** ${character.gender||'未设定'}\\n- **年龄:** ${formattedAge}\\n- **种族:** ${character.race}\\n\\n## 经历\\n- **出身:** ${character.background.origin ? character.background.origin.name : '未知'}\\n- **来历:** ${character.background.past ? character.background.past.name : '未知'}\\n- **邂逅:** ${character.background.encounter || '未知'}\\n\\n## 背景与技能\\n- **初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n- **初始技能:** ${uniqueSkills.join(', ')||'无'}\\n\\n## 补充设定 (OC)\\n- **额外补充:** ${character.oc_details||'无'}\\n\\n## 能力值\\n- **力量:** ${character.attributes['力量']}\\n- **敏捷:** ${character.attributes['敏捷']}\\n- **感知:** ${character.attributes['感知']}\\n- **知识:** ${character.attributes['知识']}\\n- **魅力:** ${character.attributes['魅力']}\\n- **信仰力:** ${character.attributes['信仰力']}\\n- **魔力:** ${character.attributes['魔力']}\\n\\n## 初始资产\\n- **资金:** ${character.money} 银币\\n\\|\\n/trigger`; \n        \n        try {\n            if (typeof insertOrAssignVariables === 'function') {\n                await insertOrAssignVariables(finalCharacterObject);\n            } else {\n                console.log(\"SillyTavern Function 'insertOrAssignVariables' not found. Variables:\", finalCharacterObject);\n            }\n            if (typeof triggerSlash === 'function') {\n                await triggerSlash(slashCommand, 'Send');\n            } else { \n                console.log(\"SillyTavern Function 'triggerSlash' not found. Command will be copied to clipboard.\");\n                navigator.clipboard.writeText(slashCommand).then(() => {\n                    alert('角色指令已复制到剪贴板！');\n                });\n            }\n        } catch (error) {\n            console.error('与SillyTavern交互失败:', error);\n            alert('与SillyTavern交互失败，请查看浏览器控制台。');\n        }\n\n        e.target.innerHTML = \"契约成立！\";\n    });\n    \n    initDicePool();\n    Object.keys(raceData).forEach(key => DOM.raceSelect.add(new Option(key, key)));\n    Object.keys(character.attributes).forEach(key => {\n        const pointControl = document.createElement('div');\n        pointControl.className = 'point-control';\n        pointControl.innerHTML = `<span class=\"label\">${key}</span><input type=\"text\" id=\"attr-${key.replace(/\\s/g, '')}\" readonly value=\"0\">`; // ID santized just in case\n        DOM.attributesContainer.appendChild(pointControl);\n    });\n    // A small fix for renderAttributes to handle sanitized IDs\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key.replace(/\\s/g, '')}`).value = value; }); }\n    updateUI(true);\n});\n</script>\n\n</body>\n</html>\n```"
  },
  {
    "role": "user",
    "content": "```\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>哥布林杀手TRPG - 冒险者契约</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/gsap.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/TextPlugin.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.min.js\" defer></script>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Noto+Serif+SC:wght@400;700&family=Vollkorn:wght@400;700&family=Courier+Prime&display=swap\" rel=\"stylesheet\">\n\n    <style>\n        :root {\n            --leather-bg: #5a3a2a;\n            --dark-leather-bg: #3b2a1a;\n            --parchment-bg: #f5f5dc;\n            --parchment-bg-gradient: linear-gradient(165deg, #f7e9d7, #e6d5c3);\n            --text-color: #3d3d3d;\n            --heading-color: #4a3c2c;\n            --border-color: #7a5a4a;\n            --font-main: 'Vollkorn', 'Noto Serif SC', serif;\n            --font-display: 'Cinzel', 'Noto Serif SC', serif;\n            --font-code: 'Courier Prime', 'Courier New', monospace;\n            --dice-size: 5rem; \n        }\n\n        html { height: 100%; }\n        body {\n            background-color: #3a2e20;\n            font-family: var(--font-main);\n            color: var(--text-color);\n            margin: 0; padding: 20px;\n            box-sizing: border-box;\n            display: flex;\n            align-items: center; justify-content: center;\n            min-height: 100%;\n        }\n        *, *:before, *:after { box-sizing: inherit; }\n\n        .creator-wrapper {\n            width: 100%; max-width: 900px;\n            margin: 0;\n            background: var(--parchment-bg-gradient);\n            border: 12px solid #8b7355;\n            border-radius: 8px;\n            box-shadow: 0 0 40px rgba(139, 115, 85, 0.3), inset 0 0 30px rgba(255, 255, 255, 0.4);\n            position: relative;\n            overflow: hidden;\n            padding: 25px;\n            display: flex; flex-direction: column;\n            max-height: 95vh;\n        }\n\n        .border-flow, .inner-border { position: absolute; pointer-events: none; }\n        .border-flow { top: 0; left: 0; right: 0; bottom: 0; background: linear-gradient(90deg, rgba(139,115,85,0.1) 1px, transparent 1px), linear-gradient(0deg, rgba(139,115,85,0.1) 1px, transparent 1px); background-size: 20px 20px; animation: borderFlow 15s linear infinite; }\n        .inner-border { top: 5px; left: 5px; right: 5px; bottom: 5px; border: 3px solid rgba(139,115,85,0.3); border-radius: 5px; }\n        @keyframes borderFlow { from { background-position: 0 0; } to { background-position: 20px 20px; } }\n\n        .creator-header {\n            text-align: center;\n            padding: 10px;\n            margin-bottom: 25px;\n            border-bottom: 2px solid rgba(139, 115, 85, 0.3);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 15px;\n        }\n        .creator-header h1 {\n            font-family: var(--font-display);\n            font-size: clamp(24px, 5vw, 32px);\n            margin: 0;\n            font-weight: 700;\n            letter-spacing: 3px;\n            color: var(--heading-color);\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.1);\n        }\n        \n        .title-char {\n            display: inline-block;\n            opacity: 0;\n            transform: translateY(30px);\n        }\n\n        .wax-seal {\n            width: 45px;\n            height: 45px;\n            display: inline-block;\n            background-color: #c0392b;\n            border-radius: 50%;\n            position: relative;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.4), inset 0 -2px 3px rgba(0,0,0,0.3);\n            opacity: 0;\n            transform: scale(0.5);\n            font-family: 'Cinzel', serif;\n            color: #e7a49c;\n            text-align: center;\n            font-size: 24px;\n            line-height: 45px;\n            font-weight: 700;\n        }\n        .wax-seal::before {\n            content: 'GS';\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.3);\n        }\n\n        .creator-scroll-content { overflow-y: auto; padding: 10px 20px 10px 10px; }\n        .creator-scroll-content::-webkit-scrollbar { width: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-track { background: rgba(139, 115, 85, 0.1); border-radius: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-thumb { background-color: #a89072; border-radius: 10px; border: 2px solid #f7e9d7; }\n        \n        .gs-creator-step { margin-bottom: 40px; overflow: hidden; }\n        .gs-creator-step h3 { font-family: var(--font-display); font-size: 1.5em; font-weight: 700; border-bottom: 1.5px solid var(--border-color); padding-bottom: 8px; margin-bottom: 20px; color: var(--heading-color); text-align: left; }\n        \n        .layout-grid { display: grid; grid-template-columns: 1fr; gap: 25px; align-items: flex-start; }\n        @media (min-width: 768px) {\n            .layout-grid { grid-template-columns: 1fr 280px; }\n        }\n\n        .form-container { text-align: left; }\n        .gs-form-group { margin-bottom: 16px; }\n        .gs-form-group label { display: block; margin-bottom: 6px; font-weight: bold; color: var(--heading-color); }\n        .form-input, .form-select, .form-textarea { width: 100%; padding: 10px; background-color: rgba(255, 255, 255, 0.5); border: 1px solid #a58e72; border-radius: 4px; color: #3d3d3d; font-family: var(--font-main); font-size: 1em; transition: all 0.2s ease-in-out; box-shadow: inset 1px 1px 2px rgba(0,0,0,0.1); }\n        .form-input:focus, .form-select:focus, .form-textarea:focus { outline: none; border-color: #8b7355; background-color: #fff; box-shadow: 0 0 5px rgba(139, 115, 85, 0.5); }\n        .form-textarea { resize: vertical; min-height: 100px; }\n\n        .grid-cols-2 {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 16px;\n        }\n        @media (min-width: 480px) {\n            .grid-cols-2 {\n                grid-template-columns: repeat(2, 1fr);\n            }\n        }\n\n        #attributes-container .point-control { display: flex; align-items: center; justify-content: space-between; margin-bottom: 8px; padding: 6px 8px; background: rgba(0,0,0,0.03); border-left: 3px solid rgba(139,115,85,0.2); border-radius: 4px; }\n        #attributes-container .label { font-weight: bold; color: var(--heading-color); }\n        #attributes-container input[readonly] { width: 40px; text-align: center; font-weight: bold; font-size: 1.2em; font-family: var(--font-display); color: #a02c2c; border: none; background-color: transparent; box-shadow: none; padding: 0; }\n        \n        .attributes-grid {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 0 16px;\n        }\n        @media (min-width: 480px) {\n            .attributes-grid {\n                grid-template-columns: 1fr 1fr;\n            }\n        }\n        \n        .skills-display p { background-color: rgba(0,0,0,0.05); border-left: 3px solid var(--border-color); padding: 10px 15px; margin-top: 10px; font-size: 0.95em; border-radius: 0 4px 4px 0; }\n        .skills-display strong { color: #8b5b4b; font-family: var(--font-display); }\n        .skills-display ul { list-style: none; padding-left: 0; margin-top: 8px; font-size: 0.9em; }\n        .skills-display li { margin-bottom: 4px; }\n\n        #character-summary { background-color: #e9e4d9; font-family: var(--font-code); line-height: 1.6; height: 250px; color: #2c2a2a; }\n        \n        .gs-button { width: 100%; background-color: #8b7355; color: var(--parchment-bg); border: 2px solid var(--dark-leather-bg); border-radius: 5px; padding: 12px 20px; font-family: var(--font-display); font-size: 1.2em; font-weight: 700; cursor: pointer; margin-top: 10px; transition: all 0.3s ease; box-shadow: 0 3px 5px rgba(0,0,0,0.3); }\n        .gs-button:hover { background-color: #a0886c; transform: translateY(-2px); box-shadow: 0 5px 8px rgba(0,0,0,0.3); }\n        .gs-button:disabled { background-color: #9e9e9e; border-color: #757575; cursor: not-allowed; transform: none; box-shadow: none; opacity: 0.6; }\n        .action-button { background-color: #6d5b4b; font-size: 1em; padding: 10px 15px; margin-top: 0; margin-bottom: 10px; width: auto; }\n        \n        .background-display { margin-top: 15px; padding: 15px; border: 1px dashed var(--border-color); border-radius: 5px; background: rgba(0,0,0,0.02); }\n        .background-display p { margin: 0 0 8px; }\n        .background-display span { font-weight: bold; color: var(--heading-color); }\n        \n        #radar-chart-container { \n            max-width: 100%;\n        }\n        @media (min-width: 768px) {\n            #radar-chart-container {\n                position: sticky;\n                top: 0;\n                padding-top: 45px;\n            }\n        }\n\n        pre.mermaid { \n            font-family: var(--font-main); \n            background: rgba(0,0,0,0.02); \n            border: 1px solid rgba(139,115,85,0.1); \n            padding: 10px; \n            border-radius: 5px; \n            overflow: auto;\n            transition: opacity 0.3s ease-in-out;\n        }\n        pre.mermaid.loading { opacity: 0.5; pointer-events: none; }\n\n        pre.mermaid > svg {\n            max-width: 100%;\n            height: auto;\n        }\n\n        #dice-overlay {\n            position: fixed; top: 0; left: 0; width: 100%; height: 100%;\n            background: rgba(0,0,0,0.8); backdrop-filter: blur(5px);\n            display: none; align-items: center; justify-content: center; flex-direction: column;\n            z-index: 100;\n            color: #fff; text-shadow: 0 0 10px #000;\n        }\n\n        .dice-container {\n            display: flex; flex-wrap: wrap; justify-content: center;\n            gap: 2rem; margin-bottom: 2rem;\n            max-width: 600px;\n        }\n        \n        .dice-icon {\n            width: var(--dice-size); height: var(--dice-size);\n            perspective: 800px;\n            transform-style: preserve-3d;\n            display: none;\n        }\n        .dice-icon.highlight {\n            transform: scale(1.15);\n            filter: drop-shadow(0 0 15px #FFEB3B);\n            transition: transform 0.3s ease, filter 0.3s ease;\n        }\n\n        .dice-cube {\n            width: 100%; height: 100%;\n            position: relative;\n            transform-style: preserve-3d;\n            transform: translateZ(calc(var(--dice-size) / -2));\n        }\n        \n        .dice-face {\n            position: absolute;\n            width: var(--dice-size); height: var(--dice-size);\n            background-color: rgba(255, 255, 255, 0.98);\n            border: 1.5px solid #857e72;\n            border-radius: 12%;\n        }\n\n        .pips-container {\n            width: 100%; height: 100%;\n            position: relative; \n        }\n        .pip {\n            width: 22%; height: 22%; \n            background-color: #3d352e;\n            border-radius: 50%;\n            box-shadow: inset 0 1px 3px rgba(0,0,0,0.5);\n            position: absolute; \n        }\n        \n        #dice-result-text { \n            font-family: var(--font-display); \n            font-size: 2.2em;\n            color: #FFEB3B; \n            text-shadow: 0 0 12px #FFEB3B; \n            min-height: 2em;\n            line-height: 1.2;\n            text-align: center; \n        }\n        \n        #skip-animation-btn {\n            position: absolute;\n            bottom: 30px;\n            font-size: 1em;\n            padding: 8px 20px;\n            width: auto;\n            background-color: rgba(0,0,0,0.3);\n            border-color: rgba(255,255,255,0.5);\n            color: rgba(255,255,255,0.8);\n        }\n        #skip-animation-btn:hover {\n            background-color: rgba(0,0,0,0.5);\n            color: #fff;\n        }\n\n        .typed-cursor {\n            opacity: 1;\n            animation: typed-blink 0.7s infinite;\n        }\n        @keyframes typed-blink{\n            0% { opacity: 1; }\n            50% { opacity: 0; }\n            100% { opacity: 1; }\n        }\n        \n        .validation-message {\n            text-align: center;\n            color: #b71c1c;\n            font-size: 0.9em;\n            font-weight: bold;\n            margin-top: -5px;\n            margin-bottom: 10px;\n            height: 1.2em;\n            opacity: 0;\n            will-change: transform, opacity;\n        }\n\n        #credits-screen {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            pointer-events: none;\n            opacity: 0;\n        }\n\n        #credits-screen p {\n            font-family: var(--font-display);\n            font-size: 2em;\n            color: #f5f5dc;\n            text-shadow: 0 0 8px rgba(245, 245, 220, 0.7);\n        }\n    </style>\n</head>\n<body>\n\n<div class=\"creator-wrapper\">\n    <div class=\"border-flow\"></div>\n    <div class=\"inner-border\"></div>\n    <header class=\"creator-header\">\n        <h1 id=\"main-title\">冒险者契约登记</h1>\n        <div id=\"wax-seal\" class=\"wax-seal\"></div>\n    </header>\n\n    <div class=\"creator-scroll-content\">\n        <div class=\"gs-creator-container\">\n            <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第一步：身份确认</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-name-input\">姓名</label><input id=\"char-name-input\" type=\"text\" placeholder=\"可留空，默认为 {{user}}\" class=\"form-input\"></div>\n                    <div class=\"grid-cols-2 gsap-content-item\">\n                        <div class=\"gs-form-group\"><label for=\"char-gender-input\">性别</label><input id=\"char-gender-input\" type=\"text\" placeholder=\"例如: 男性/女性/双性/无性/……\" class=\"form-input\"></div>\n                        <div class=\"gs-form-group\"><label for=\"char-age-input\">年龄</label><input id=\"char-age-input\" type=\"number\" placeholder=\"可参照种族说明\" class=\"form-input\"></div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-race-select\">种族</label><select id=\"char-race-select\" class=\"form-select\"></select></div>\n                    <div class=\"gs-form-group gsap-content-item\">\n                        <label>经历 (出身/来历/邂逅)</label>\n                        <button id=\"roll-background-btn\" class=\"gs-button action-button\">🎲 投骰决定经历</button>\n                        <div id=\"background-display\" class=\"background-display\" style=\"display: none;\">\n                            <p>出身: <span id=\"bg-origin\"></span></p>\n                            <p>来历: <span id=\"bg-past\"></span></p>\n                            <p>邂逅: <span id=\"bg-encounter\"></span></p>\n                        </div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"oc-details-input\">身体特征与补充</label><textarea id=\"oc-details-input\" placeholder=\"发色、瞳色、体型、性格、背景故事构思...\" class=\"form-textarea\"></textarea></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第二步：能力值与技能</h3>\n                <div class=\"layout-grid\">\n                    <div class=\"form-container gsap-content-item\">\n                        <button id=\"roll-attributes-btn\" class=\"gs-button action-button\">🎲 投骰决定能力值</button>\n                        <div id=\"attributes-container\" class=\"attributes-grid\"></div>\n                        <div id=\"skills-and-desc-container\" class=\"skills-display\"></div>\n                    </div>\n                    <div id=\"radar-chart-container\" class=\"gsap-content-item\"><pre class=\"mermaid\" id=\"radar-chart\"></pre></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第三步：完成登记</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"character-summary\">角色卡预览</label><textarea id=\"character-summary\" rows=\"12\" readonly class=\"form-textarea\"></textarea></div>\n                    <button id=\"submit-btn\" class=\"gs-button gsap-content-item\" disabled>确认登记，开始冒险</button>\n                    <div id=\"validation-message\" class=\"validation-message\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div id=\"credits-screen\">\n    <p>作者 𝙀𝙡𝙖𝙞𝙣𝙖𝙙𝙚𝙨</p>\n</div>\n\n<div id=\"dice-overlay\">\n    <div class=\"dice-container\" id=\"dice-container\"></div>\n    <div id=\"dice-result-text\"></div>\n    <button id=\"skip-animation-btn\" class=\"gs-button\">跳过动画</button>\n</div>\n\n<div id=\"dice-templates\" style=\"display:none;\">\n    <div class=\"dice-cube\" data-id_template=\"dice-cube\">\n        <div class=\"dice-face face-front\" data-face=\"1\"><div class=\"pips-container\"><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-back\" data-face=\"6\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-right\" data-face=\"3\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-left\" data-face=\"4\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-top\" data-face=\"2\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-bottom\" data-face=\"5\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n    </div>\n</div>\n\n<script>\n// --- MODIFIED DATA ---\nconst raceData = {\n    '凡人': { attr_rolls: { '力量': '1d3+1', '敏捷': '1d3', '感知': '1d3', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3+2', '魔力': '1d3' }, skills: ['过载行动(初级)', '武器:投掷武器(初级)', '长距离移动(初级)']},\n    '矿人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3', '感知': '1d3+2', '知识': '1d3-1', '魅力': '1d3+1', '信仰力': '1d3+1', '魔力': '1d3-1' }, skills: ['治愈适性(初级)', '夜视(初级)', '锻造(初级)']},\n    '森人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+1', '感知': '1d3+1', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3-1', '魔力': '1d3+1' }, skills: ['武器:弩弓(初级)', '夜视(初级)', '精灵宠儿(初级)']},\n    '蜥蜴人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3+1', '感知': '1d3', '知识': '1d3', '魅力': '1d3+1', '信仰力': '1d3', '魔力': '1d3' }, skills: ['免疫强化(初级)', '夜视(初级)', '龙族血统(初级)']},\n    '圃人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+2', '感知': '1d3+1', '知识': '1d3', '魅力': '1d3-1', '信仰力': '1d3', '魔力': '1d3+2' }, skills: ['隐匿(初级)', '先发制人(初级)', '烹饪(初级)']}\n};\nconst backgroundData = {\n    origin: { \n        '凡人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '学者', class: '魔术师', level: 1, skills: ['文献调查(初级)'] }, 6: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 7: { name: '农民', skills: ['生产业:农业(初级)', '强健(初级)'] }, 8: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '骑士', class: '战士', level: 1, skills: ['骑乘(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n        '矿人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 6: { name: '酒馆老板', class: '战士', level: 1, skills: ['观察(初级)'] }, 7: { name: '铁匠', skills: ['工匠:锻造(初级)', '手工(初级)'] }, 8: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '碎盾者', class: '战士', level: 1, skills: ['强击攻击·斩(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n    },\n    past: { 2: { name: '奴隶', skills: ['劳动(初级)'] }, 3: { name: '牢狱', skills: ['犯罪知识(初级)'] }, 4: { name: '战场', skills: ['沉着冷静(初级)'] }, 5: { name: '神殿', skills: ['神学(初级)'] }, 6: { name: '孤儿', skills: ['忍耐(初级)'] }, 7: { name: '平顺', skills: ['幸运(初级)'] }, 8: { name: '贫困', skills: ['生存术(初级)'] }, 9: { name: '学校', skills: ['博识(初级)'] }, 10: { name: '深闺', skills: ['无偏见(初级)'] }, 11: { name: '奢华', skills: ['鉴定(初级)'] }, 12: { name: '宫廷', skills: ['礼仪(初级)'] }},\n    encounter: { 2: '宿敌', 3: '上司', 4: '后辈', 5: '交易对象', 6: '下属', 7: '家人', 8: '挚友', 9: '前辈', 10: '未婚夫/妻', 11: '劲敌', 12: '师父' }\n};\nbackgroundData.origin['森人'] = backgroundData.origin['凡人']; backgroundData.origin['蜥蜴人'] = backgroundData.origin['凡人']; backgroundData.origin['圃人'] = backgroundData.origin['凡人'];\nconst character = {\n    name: '', gender: '', age: '', oc_details: '', race: '凡人',\n    background: { origin: null, past: null, encounter: null },\n    attributes: { '力量': 0, '敏捷': 0, '感知': 0, '知识': 0, '魅力': 0, '信仰力': 0, '魔力': 0, '潜力': 0 },\n    skills: [], classes: {}, money: 0, _lastAttributesForChart: '',\n};\n// --- END MODIFIED DATA ---\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    gsap.registerPlugin(TextPlugin);\n    mermaid.initialize({ startOnLoad: true, theme: 'base', themeVariables: {\n        '--mermaid-font-family': \"'Vollkorn', 'Noto Serif SC', serif\",\n        primaryColor: '#f7e9d7', primaryTextColor: '#3d3d3d', lineColor: '#8b7355', textColor: '#4a3c2c',\n    }});\n    \n    const $ = (s) => document.querySelector(s);\n    const roll1D6 = () => Math.floor(Math.random() * 6) + 1;\n    const roll1D3 = () => {\n        const d6 = roll1D6();\n        if (d6 <= 2) return { d6, d3: 1 };\n        if (d6 <= 4) return { d6, d3: 2 };\n        return { d6, d3: 3 };\n    };\n    const rollDiceString = (diceString) => { const p=diceString.split('*');const d=p[0];const m=parseInt(p[1])||1;if(!d.includes('d'))return 0;const[n,s]=d.split('d').map(Number);let t=0;for(let i=0;i<n;i++){t+=Math.floor(Math.random()*s)+1;}return t*m; };\n    const formatAge = (ageValue) => { if (!ageValue && ageValue !== 0) return ageValue; const num = Number(ageValue); if (isNaN(num)) return ageValue; if (Math.abs(num) >= 1_000_000) return num.toExponential(2); return ageValue; };\n    const debounce = (func, delay) => { let timeout; return function(...args) { clearTimeout(timeout); timeout = setTimeout(() => func.apply(this, args), delay); }; };\n    const diceUnicode = ['\\u2680', '\\u2681', '\\u2682', '\\u2683', '\\u2684', '\\u2685'];\n\n    const DOM = {\n        nameInput: $('#char-name-input'), genderInput: $('#char-gender-input'), ageInput: $('#char-age-input'),\n        ocDetailsInput: $('#oc-details-input'), raceSelect: $('#char-race-select'), attributesContainer: $('#attributes-container'),\n        skillsContainer: $('#skills-and-desc-container'), radarChart: $('#radar-chart'), summarySheet: $('#character-summary'),\n        diceOverlay: $('#dice-overlay'), diceContainer: $('#dice-container'), diceResultText: $('#dice-result-text'),\n        backgroundDisplay: $('#background-display'), bgOrigin: $('#bg-origin'), bgPast: $('#bg-past'), bgEncounter: $('#bg-encounter'),\n        skipAnimationBtn: $('#skip-animation-btn'),\n        submitBtn: $('#submit-btn'),\n        validationMessage: $('#validation-message'),\n    };\n    \n    const dicePool = []; const MAX_DICE = 6;\n    let currentAnimation = null; let textAnimation = null; let isSkipping = false;\n    let currentValidationMessage = '';\n    \n    function validateAndToggleButton() {\n        let newMessage = '';\n        if (!character.age || String(character.age).trim() === '') {\n            newMessage = '请填写您的冒险者年龄。';\n        } else if (!character.gender || !character.gender.trim()) {\n            newMessage = '请设定冒险者的性别。';\n        } else if (!character.background.origin) {\n            newMessage = '请投骰决定您的冒险者经历。';\n        } else if (Object.values(character.attributes).every(val => val === 0)) {\n            newMessage = '请投骰决定您的能力值。';\n        }\n\n        if (newMessage === currentValidationMessage) return;\n        currentValidationMessage = newMessage;\n\n        if (newMessage) {\n            DOM.submitBtn.disabled = true;\n            DOM.validationMessage.textContent = newMessage;\n            gsap.fromTo(DOM.validationMessage, { autoAlpha: 0, scale: 0.8 }, { autoAlpha: 1, scale: 1, duration: 0.4, ease: 'elastic.out(1, 0.75)' });\n        } else {\n            DOM.submitBtn.disabled = false;\n            gsap.to(DOM.validationMessage, { autoAlpha: 0, duration: 0.3 });\n        }\n    }\n    function updateCharacterDataFromDOM() { character.name = DOM.nameInput.value; character.gender = DOM.genderInput.value; character.age = DOM.ageInput.value; character.oc_details = DOM.ocDetailsInput.value; character.race = DOM.raceSelect.value; }\n    function renderSkills() { const uniqueSkills = [...new Set(character.skills)]; DOM.skillsContainer.innerHTML = `<p><strong>天赋与习得技能:</strong></p><ul>${uniqueSkills.map(s => `<li>- ${s}</li>`).join('')}</ul>`; }\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key}`).value = value; }); }\n    function renderSummary() {\n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '?';\n        const originText = `出身:${character.background.origin ? character.background.origin.name : '?'}`;\n        const pastText = `来历:${character.background.past ? character.background.past.name : '?'}`;\n        const encounterText = `邂逅:${character.background.encounter || '?'}`;\n        let summary = `### 《哥布林杀手TRPG》冒险者登记卡\\n` + `**姓名:** ${finalName} | **种族:** ${character.race} | **性别:** ${character.gender || '?'} | **年龄:** ${formattedAge}\\n` + `**经历:** ${originText} / ${pastText} / ${encounterText}\\n` + `**初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n` + `**初始技能:** ${uniqueSkills.join(', ') || '无'}\\n`; if (character.oc_details) { summary += `**身体特征与补充:** ${character.oc_details}\\n`; } summary += `---\\n**能力值:**\\n`; summary += Object.entries(character.attributes).map(([key, value]) => `- ${key}: ${value}`).join('\\n'); summary += `\\n**持有资金:** ${character.money} 银币`;\n        DOM.summarySheet.value = summary.replace(/### /g, '').replace(/\\*\\*/g, '').replace(/---/g, '\\n────────────────────\\n').replace(/- /g, '  ');\n        DOM.summarySheet.setAttribute('data-raw', summary);\n    }\n    async function renderRadarChartIfNeeded() { const currentAttributesString = JSON.stringify(character.attributes); if (currentAttributesString === character._lastAttributesForChart) return; DOM.radarChart.classList.add('loading'); const radarSyntax = `radar-beta\\ntitle 能力值分布\\naxis a[\"力量 ${character.attributes['力量']}\"]\\naxis b[\"敏捷 ${character.attributes['敏捷']}\"]\\naxis c[\"感知 ${character.attributes['感知']}\"]\\naxis d[\"知识 ${character.attributes['知识']}\"]\\naxis e[\"魅力 ${character.attributes['魅力']}\"]\\naxis f[\"信仰 ${character.attributes['信仰力']}\"]\\naxis g[\"魔力 ${character.attributes['魔力']}\"]\\naxis h[\"潜力 ${character.attributes['潜力']}\"]\\ncurve current[\"能力\"]{${character.attributes['力量']},${character.attributes['敏捷']},${character.attributes['感知']},${character.attributes['知识']},${character.attributes['魅力']},${character.attributes['信仰力']},${character.attributes['魔力']},${character.attributes['潜力']}}\\nmax 10\\nmin 0`; DOM.radarChart.innerHTML = radarSyntax; DOM.radarChart.removeAttribute('data-processed'); try { await mermaid.run({ nodes: [DOM.radarChart] }); character._lastAttributesForChart = currentAttributesString; } catch(e) { console.error(\"Mermaid rendering error:\", e); } finally { DOM.radarChart.classList.remove('loading'); } }\n    async function updateUI(forceFullUpdate = false) { updateCharacterDataFromDOM(); if(forceFullUpdate) { character._lastAttributesForChart = ''; character.skills = []; character.classes = {}; character.money = 100; if(raceData[character.race].skills) character.skills.push(...raceData[character.race].skills); if (character.background.origin) { if (character.background.origin.skills) character.skills.push(...character.background.origin.skills); if (character.background.origin.class) character.classes[character.background.origin.class] = character.background.origin.level; if(character.background.origin.money) character.money += rollDiceString(character.background.origin.money); } if (character.background.past && character.background.past.skills) { character.skills.push(...character.background.past.skills); } } renderAttributes(); renderSkills(); renderSummary(); await renderRadarChartIfNeeded(); validateAndToggleButton(); }\n\n    const masterTl = gsap.timeline({ delay: 0.2 });\n    const title = $('#main-title');\n    title.innerHTML = title.textContent.split('').map(char => `<span class=\"title-char\">${char}</span>`).join('');\n    gsap.set(\".gsap-header-item, .gsap-content-item\", { autoAlpha: 0, y: 20 });\n    masterTl.to(\".title-char\", { autoAlpha: 1, y: 0, duration: 0.7, ease: \"power3.out\", stagger: 0.1 }).to(\"#wax-seal\", { autoAlpha: 1, scale: 1, duration: 0.6, ease: \"elastic.out(1, 0.7)\" }, \"-=0.5\");\n    document.querySelectorAll('.gs-creator-step').forEach((step, index) => { const stepTl = gsap.timeline(); stepTl.to(step.querySelector('.gsap-header-item'), { autoAlpha: 1, y: 0, duration: 0.6, ease: 'power2.out' }).to(step.querySelectorAll('.gsap-content-item'), { autoAlpha: 1, y: 0, duration: 0.5, ease: 'power2.out', stagger: 0.1 }, '-=0.4'); masterTl.add(stepTl, `-=${index === 0 ? 0.2 : 0.7}`); });\n    const pipPositions = { 1: [ { left: '50%', top: '50%' } ], 2: [ { left: '25%', top: '25%' }, { left: '75%', top: '75%' } ], 3: [ { left: '25%', top: '25%' }, { left: '50%', top: '50%' }, { left: '75%', top: '75%' } ], 4: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 5: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '50%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 6: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '50%' }, { left: '75%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ]};\n    function setupCube(cubeEl) { const size = 'calc(var(--dice-size) / 2)'; gsap.set(cubeEl.querySelector('.face-front'),  { transform: `rotateY(0deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-back'),   { transform: `rotateY(180deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-right'),  { transform: `rotateY(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-left'),   { transform: `rotateY(-90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-top'),   { transform: `rotateX(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-bottom'), { transform: `rotateX(-90deg) translateZ(${size})` }); const faces = cubeEl.querySelectorAll('.dice-face'); faces.forEach(face => { const faceNum = face.getAttribute('data-face'); const pips = face.querySelectorAll('.pip'); const positions = pipPositions[faceNum]; if (!pips.length || !positions) return; pips.forEach((pip, index) => { const pos = positions[index]; gsap.set(pip, { left: pos.left, top: pos.top, xPercent: -50, yPercent: -50 }); }); }); }\n    function getRotationForFace(faceValue) { switch (faceValue) { case 1: return { x: 0, y: 0 }; case 6: return { x: 0, y: 180 }; case 3: return { x: 0, y: -90 }; case 4: return { x: 0, y: 90 }; case 2: return { x: -90, y: 0 }; case 5: return { x: 90,  y: 0 }; default: return { x: 0, y: 0 }; } }\n    async function animateText(element, text) { if(isSkipping) {element.innerHTML = text.replace(/\\n/g, '<br>'); return;} return new Promise(resolve => { if (textAnimation && textAnimation.isActive()) textAnimation.kill(); element.innerHTML = ''; textAnimation = gsap.to(element, { duration: text.length * 0.05, text: { value: text.replace(/\\n/g, '<br>'), newClass: \"typed-cursor\" }, ease: \"none\", onComplete: () => { gsap.delayedCall(0.7, () => { element.querySelector('.typed-cursor')?.remove(); resolve(); }); } }); }); }\n    function initDicePool() { const diceTemplate = document.querySelector('[data-id_template=\"dice-cube\"]'); if (!diceTemplate) return; for (let i = 0; i < MAX_DICE; i++) { const dieIconElement = document.createElement('div'); dieIconElement.className = 'dice-icon'; const newCube = diceTemplate.cloneNode(true); dieIconElement.appendChild(newCube); DOM.diceContainer.appendChild(dieIconElement); setupCube(newCube); dicePool.push(dieIconElement); } }\n    async function animateRoll(numDice, preCalculatedRolls, textToShowDuringRoll = \"投掷中...\") { return new Promise(resolve => { if (currentAnimation && currentAnimation.isActive()) currentAnimation.kill(); dicePool.forEach(die => die.style.display = 'none'); const activeDice = dicePool.slice(0, numDice); animateText(DOM.diceResultText, textToShowDuringRoll); activeDice.forEach(die => { die.style.display = 'flex'; die.className = 'dice-icon'; }); const masterTl = gsap.timeline({ onComplete: () => { if(isSkipping) DOM.diceResultText.innerHTML = ''; resolve(preCalculatedRolls); }}); currentAnimation = masterTl; activeDice.forEach((dieElement, i) => { const dieCube = dieElement.querySelector('.dice-cube'); const visualRoll = preCalculatedRolls[i]; const targetRotation = getRotationForFace(visualRoll); const dieTimeline = gsap.timeline(); dieTimeline.to(dieCube, { rotationX: `+=${gsap.utils.random(720, 1080)}`, rotationY: `+=${gsap.utils.random(720, 1080)}`, duration: 1.8, ease: \"power2.in\" }).to(dieCube, { rotationX: targetRotation.x, rotationY: targetRotation.y, duration: 0.7, ease: \"power4.out\" }); masterTl.add(dieTimeline, 0); }); }); }\n    \n    const debouncedUpdate = debounce(updateUI, 400);\n    [DOM.nameInput, DOM.genderInput, DOM.ageInput, DOM.ocDetailsInput].forEach(el => el.addEventListener('input', debouncedUpdate));\n    \n    DOM.skipAnimationBtn.addEventListener('click', () => {\n        isSkipping = true;\n        if (currentAnimation && currentAnimation.isActive()) currentAnimation.progress(1);\n        if (textAnimation && textAnimation.isActive()) textAnimation.progress(1);\n    });\n\n    $('#roll-background-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const rolls = [roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6()];\n        await animateRoll(6, rolls, '投掷 经历... (2d6 x 3)');\n        \n        const sums = { origin: rolls[0] + rolls[1], past: rolls[2] + rolls[3], encounter: rolls[4] + rolls[5] };\n        \n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `出身: ${rolls[0]} + ${rolls[1]} = ${sums.origin}\\n(${backgroundData.origin[character.race][sums.origin].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `来历: ${rolls[2]} + ${rolls[3]} = ${sums.past}\\n(${backgroundData.past[sums.past].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(4, 6), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `邂逅: ${rolls[4]} + ${rolls[5]} = ${sums.encounter}\\n(${backgroundData.encounter[sums.encounter]})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        character.background.origin = backgroundData.origin[character.race][sums.origin];\n        character.background.past = backgroundData.past[sums.past];\n        character.background.encounter = backgroundData.encounter[sums.encounter];\n        DOM.bgOrigin.textContent = character.background.origin.name;\n        DOM.bgPast.textContent = character.background.past.name;\n        DOM.bgEncounter.textContent = character.background.encounter;\n        DOM.backgroundDisplay.style.display = 'block';\n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        updateUI(true);\n    });\n\n    $('#roll-attributes-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const attrRolls = raceData[character.race].attr_rolls;\n        const allCalculatedRolls = [];\n\n        // Prepare race-based attributes\n        for (const attr in attrRolls) {\n            const formula = attrRolls[attr];\n            const modifier = parseInt(formula.split('d3')[1] || '0');\n            const { d6, d3 } = roll1D3();\n            const finalValue = Math.max(0, d3 + modifier);\n            character.attributes[attr] = finalValue;\n            allCalculatedRolls.push({ attr, formula, d6, d3, modifier, finalValue });\n        }\n        \n        // Prepare \"Potential\" attribute\n        const potentialValue = Math.floor(Math.random() * 3) + 1;\n        const d6ForPotential = (potentialValue * 2) - 1; // Map 1,2,3 to d6 faces 1,3,5 for animation\n        character.attributes['潜力'] = potentialValue;\n        allCalculatedRolls.push({\n            attr: '潜力',\n            formula: '1-3', // Just a descriptor\n            d6: d6ForPotential,\n            finalValue: potentialValue\n        });\n        \n        // Animate all rolls sequentially\n        for (const roll of allCalculatedRolls) {\n            await animateRoll(1, [roll.d6], `投掷 ${roll.attr}...`);\n            if (isSkipping) break;\n\n            gsap.to(dicePool[0], { className: 'dice-icon highlight', duration: 0.3 });\n            \n            let resultText;\n            if (roll.attr === '潜力') {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.finalValue}`;\n            } else {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.d3} ${roll.modifier >= 0 ? '+' : ''} ${roll.modifier} = ${roll.finalValue}`;\n            }\n            await animateText(DOM.diceResultText, resultText);\n            \n            await updateUI();\n            \n            if (isSkipping) break;\n            \n            await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        await updateUI();\n    });\n\n    DOM.raceSelect.addEventListener('change', () => {\n        DOM.backgroundDisplay.style.display = 'none';\n        character.background = { origin: null, past: null, encounter: null };\n        Object.keys(character.attributes).forEach(k => character.attributes[k] = 0);\n        updateUI(true);\n    });\n\n    $('#submit-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        await updateUI(true);\n        \n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '未设定';\n        \n        const finalCharacterObject={ NAME:finalName, GENDER:character.gender||'未设定', AGE:formattedAge, RACE:character.race, ORIGIN: character.background.origin ? character.background.origin.name : '未知', PAST: character.background.past ? character.background.past.name : '未知', ENCOUNTER: character.background.encounter || '未知', SKILLS: uniqueSkills, OC_DETAILS:character.oc_details||'无', ...character.attributes, MONEY:character.money };\n        \n        const slashCommand=`/send <START>\\nAdmin:\\n这是一个TRPG开局，请为 User 生成一段详尽的背景故事。\\n\\n# 故事核心要求\\n请严格根据以下【角色完整设定】，撰写一段从角色童年到现在的成长故事。故事需要清晰地阐述是什么关键事件或心路历程，最终让他/她确立了要成为一名冒险者的志向。请在故事中自然地融入角色的种族、出身背景、技能和性格特点。\\n\\n# 角色完整设定\\n---\\n## 基础信息\\n- **姓名:** ${finalName}\\n- **性别:** ${character.gender||'未设定'}\\n- **年龄:** ${formattedAge}\\n- **种族:** ${character.race}\\n\\n## 经历\\n- **出身:** ${character.background.origin ? character.background.origin.name : '未知'}\\n- **来历:** ${character.background.past ? character.background.past.name : '未知'}\\n- **邂逅:** ${character.background.encounter || '未知'}\\n\\n## 背景与技能\\n- **初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n- **初始技能:** ${uniqueSkills.join(', ')||'无'}\\n\\n## 补充设定 (OC)\\n- **额外补充:** ${character.oc_details||'无'}\\n\\n## 能力值\\n- **力量:** ${character.attributes['力量']}\\n- **敏捷:** ${character.attributes['敏捷']}\\n- **感知:** ${character.attributes['感知']}\\n- **知识:** ${character.attributes['知识']}\\n- **魅力:** ${character.attributes['魅力']}\\n- **信仰力:** ${character.attributes['信仰力']}\\n- **魔力:** ${character.attributes['魔力']}\\n\\n## 初始资产\\n- **资金:** ${character.money} 银币\\n\\|\\n/trigger`; \n        \n        try {\n            if (typeof insertOrAssignVariables === 'function') {\n                await insertOrAssignVariables(finalCharacterObject);\n            } else {\n                console.log(\"SillyTavern Function 'insertOrAssignVariables' not found. Variables:\", finalCharacterObject);\n            }\n            if (typeof triggerSlash === 'function') {\n                await triggerSlash(slashCommand, 'Send');\n            } else { \n                console.log(\"SillyTavern Function 'triggerSlash' not found. Command will be copied to clipboard.\");\n                navigator.clipboard.writeText(slashCommand).then(() => {\n                    alert('角色指令已复制到剪贴板！');\n                });\n            }\n        } catch (error) {\n            console.error('与SillyTavern交互失败:', error);\n            alert('与SillyTavern交互失败，请查看浏览器控制台。');\n        }\n\n        e.target.innerHTML = \"契约成立！\";\n    });\n    \n    initDicePool();\n    Object.keys(raceData).forEach(key => DOM.raceSelect.add(new Option(key, key)));\n    Object.keys(character.attributes).forEach(key => {\n        const pointControl = document.createElement('div');\n        pointControl.className = 'point-control';\n        pointControl.innerHTML = `<span class=\"label\">${key}</span><input type=\"text\" id=\"attr-${key.replace(/\\s/g, '')}\" readonly value=\"0\">`; // ID santized just in case\n        DOM.attributesContainer.appendChild(pointControl);\n    });\n    // A small fix for renderAttributes to handle sanitized IDs\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key.replace(/\\s/g, '')}`).value = value; }); }\n    updateUI(true);\n});\n</script>\n\n</body>\n</html>\n```"
  },
  {
    "role": "user",
    "content": "```\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>哥布林杀手TRPG - 冒险者契约</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/gsap.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/TextPlugin.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.min.js\" defer></script>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Noto+Serif+SC:wght@400;700&family=Vollkorn:wght@400;700&family=Courier+Prime&display=swap\" rel=\"stylesheet\">\n\n    <style>\n        :root {\n            --leather-bg: #5a3a2a;\n            --dark-leather-bg: #3b2a1a;\n            --parchment-bg: #f5f5dc;\n            --parchment-bg-gradient: linear-gradient(165deg, #f7e9d7, #e6d5c3);\n            --text-color: #3d3d3d;\n            --heading-color: #4a3c2c;\n            --border-color: #7a5a4a;\n            --font-main: 'Vollkorn', 'Noto Serif SC', serif;\n            --font-display: 'Cinzel', 'Noto Serif SC', serif;\n            --font-code: 'Courier Prime', 'Courier New', monospace;\n            --dice-size: 5rem; \n        }\n\n        html { height: 100%; }\n        body {\n            background-color: #3a2e20;\n            font-family: var(--font-main);\n            color: var(--text-color);\n            margin: 0; padding: 20px;\n            box-sizing: border-box;\n            display: flex;\n            align-items: center; justify-content: center;\n            min-height: 100%;\n        }\n        *, *:before, *:after { box-sizing: inherit; }\n\n        .creator-wrapper {\n            width: 100%; max-width: 900px;\n            margin: 0;\n            background: var(--parchment-bg-gradient);\n            border: 12px solid #8b7355;\n            border-radius: 8px;\n            box-shadow: 0 0 40px rgba(139, 115, 85, 0.3), inset 0 0 30px rgba(255, 255, 255, 0.4);\n            position: relative;\n            overflow: hidden;\n            padding: 25px;\n            display: flex; flex-direction: column;\n            max-height: 95vh;\n        }\n\n        .border-flow, .inner-border { position: absolute; pointer-events: none; }\n        .border-flow { top: 0; left: 0; right: 0; bottom: 0; background: linear-gradient(90deg, rgba(139,115,85,0.1) 1px, transparent 1px), linear-gradient(0deg, rgba(139,115,85,0.1) 1px, transparent 1px); background-size: 20px 20px; animation: borderFlow 15s linear infinite; }\n        .inner-border { top: 5px; left: 5px; right: 5px; bottom: 5px; border: 3px solid rgba(139,115,85,0.3); border-radius: 5px; }\n        @keyframes borderFlow { from { background-position: 0 0; } to { background-position: 20px 20px; } }\n\n        .creator-header {\n            text-align: center;\n            padding: 10px;\n            margin-bottom: 25px;\n            border-bottom: 2px solid rgba(139, 115, 85, 0.3);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 15px;\n        }\n        .creator-header h1 {\n            font-family: var(--font-display);\n            font-size: clamp(24px, 5vw, 32px);\n            margin: 0;\n            font-weight: 700;\n            letter-spacing: 3px;\n            color: var(--heading-color);\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.1);\n        }\n        \n        .title-char {\n            display: inline-block;\n            opacity: 0;\n            transform: translateY(30px);\n        }\n\n        .wax-seal {\n            width: 45px;\n            height: 45px;\n            display: inline-block;\n            background-color: #c0392b;\n            border-radius: 50%;\n            position: relative;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.4), inset 0 -2px 3px rgba(0,0,0,0.3);\n            opacity: 0;\n            transform: scale(0.5);\n            font-family: 'Cinzel', serif;\n            color: #e7a49c;\n            text-align: center;\n            font-size: 24px;\n            line-height: 45px;\n            font-weight: 700;\n        }\n        .wax-seal::before {\n            content: 'GS';\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.3);\n        }\n\n        .creator-scroll-content { overflow-y: auto; padding: 10px 20px 10px 10px; }\n        .creator-scroll-content::-webkit-scrollbar { width: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-track { background: rgba(139, 115, 85, 0.1); border-radius: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-thumb { background-color: #a89072; border-radius: 10px; border: 2px solid #f7e9d7; }\n        \n        .gs-creator-step { margin-bottom: 40px; overflow: hidden; }\n        .gs-creator-step h3 { font-family: var(--font-display); font-size: 1.5em; font-weight: 700; border-bottom: 1.5px solid var(--border-color); padding-bottom: 8px; margin-bottom: 20px; color: var(--heading-color); text-align: left; }\n        \n        .layout-grid { display: grid; grid-template-columns: 1fr; gap: 25px; align-items: flex-start; }\n        @media (min-width: 768px) {\n            .layout-grid { grid-template-columns: 1fr 280px; }\n        }\n\n        .form-container { text-align: left; }\n        .gs-form-group { margin-bottom: 16px; }\n        .gs-form-group label { display: block; margin-bottom: 6px; font-weight: bold; color: var(--heading-color); }\n        .form-input, .form-select, .form-textarea { width: 100%; padding: 10px; background-color: rgba(255, 255, 255, 0.5); border: 1px solid #a58e72; border-radius: 4px; color: #3d3d3d; font-family: var(--font-main); font-size: 1em; transition: all 0.2s ease-in-out; box-shadow: inset 1px 1px 2px rgba(0,0,0,0.1); }\n        .form-input:focus, .form-select:focus, .form-textarea:focus { outline: none; border-color: #8b7355; background-color: #fff; box-shadow: 0 0 5px rgba(139, 115, 85, 0.5); }\n        .form-textarea { resize: vertical; min-height: 100px; }\n\n        .grid-cols-2 {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 16px;\n        }\n        @media (min-width: 480px) {\n            .grid-cols-2 {\n                grid-template-columns: repeat(2, 1fr);\n            }\n        }\n\n        #attributes-container .point-control { display: flex; align-items: center; justify-content: space-between; margin-bottom: 8px; padding: 6px 8px; background: rgba(0,0,0,0.03); border-left: 3px solid rgba(139,115,85,0.2); border-radius: 4px; }\n        #attributes-container .label { font-weight: bold; color: var(--heading-color); }\n        #attributes-container input[readonly] { width: 40px; text-align: center; font-weight: bold; font-size: 1.2em; font-family: var(--font-display); color: #a02c2c; border: none; background-color: transparent; box-shadow: none; padding: 0; }\n        \n        .attributes-grid {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 0 16px;\n        }\n        @media (min-width: 480px) {\n            .attributes-grid {\n                grid-template-columns: 1fr 1fr;\n            }\n        }\n        \n        .skills-display p { background-color: rgba(0,0,0,0.05); border-left: 3px solid var(--border-color); padding: 10px 15px; margin-top: 10px; font-size: 0.95em; border-radius: 0 4px 4px 0; }\n        .skills-display strong { color: #8b5b4b; font-family: var(--font-display); }\n        .skills-display ul { list-style: none; padding-left: 0; margin-top: 8px; font-size: 0.9em; }\n        .skills-display li { margin-bottom: 4px; }\n\n        #character-summary { background-color: #e9e4d9; font-family: var(--font-code); line-height: 1.6; height: 250px; color: #2c2a2a; }\n        \n        .gs-button { width: 100%; background-color: #8b7355; color: var(--parchment-bg); border: 2px solid var(--dark-leather-bg); border-radius: 5px; padding: 12px 20px; font-family: var(--font-display); font-size: 1.2em; font-weight: 700; cursor: pointer; margin-top: 10px; transition: all 0.3s ease; box-shadow: 0 3px 5px rgba(0,0,0,0.3); }\n        .gs-button:hover { background-color: #a0886c; transform: translateY(-2px); box-shadow: 0 5px 8px rgba(0,0,0,0.3); }\n        .gs-button:disabled { background-color: #9e9e9e; border-color: #757575; cursor: not-allowed; transform: none; box-shadow: none; opacity: 0.6; }\n        .action-button { background-color: #6d5b4b; font-size: 1em; padding: 10px 15px; margin-top: 0; margin-bottom: 10px; width: auto; }\n        \n        .background-display { margin-top: 15px; padding: 15px; border: 1px dashed var(--border-color); border-radius: 5px; background: rgba(0,0,0,0.02); }\n        .background-display p { margin: 0 0 8px; }\n        .background-display span { font-weight: bold; color: var(--heading-color); }\n        \n        #radar-chart-container { \n            max-width: 100%;\n        }\n        @media (min-width: 768px) {\n            #radar-chart-container {\n                position: sticky;\n                top: 0;\n                padding-top: 45px;\n            }\n        }\n\n        pre.mermaid { \n            font-family: var(--font-main); \n            background: rgba(0,0,0,0.02); \n            border: 1px solid rgba(139,115,85,0.1); \n            padding: 10px; \n            border-radius: 5px; \n            overflow: auto;\n            transition: opacity 0.3s ease-in-out;\n        }\n        pre.mermaid.loading { opacity: 0.5; pointer-events: none; }\n\n        pre.mermaid > svg {\n            max-width: 100%;\n            height: auto;\n        }\n\n        #dice-overlay {\n            position: fixed; top: 0; left: 0; width: 100%; height: 100%;\n            background: rgba(0,0,0,0.8); backdrop-filter: blur(5px);\n            display: none; align-items: center; justify-content: center; flex-direction: column;\n            z-index: 100;\n            color: #fff; text-shadow: 0 0 10px #000;\n        }\n\n        .dice-container {\n            display: flex; flex-wrap: wrap; justify-content: center;\n            gap: 2rem; margin-bottom: 2rem;\n            max-width: 600px;\n        }\n        \n        .dice-icon {\n            width: var(--dice-size); height: var(--dice-size);\n            perspective: 800px;\n            transform-style: preserve-3d;\n            display: none;\n        }\n        .dice-icon.highlight {\n            transform: scale(1.15);\n            filter: drop-shadow(0 0 15px #FFEB3B);\n            transition: transform 0.3s ease, filter 0.3s ease;\n        }\n\n        .dice-cube {\n            width: 100%; height: 100%;\n            position: relative;\n            transform-style: preserve-3d;\n            transform: translateZ(calc(var(--dice-size) / -2));\n        }\n        \n        .dice-face {\n            position: absolute;\n            width: var(--dice-size); height: var(--dice-size);\n            background-color: rgba(255, 255, 255, 0.98);\n            border: 1.5px solid #857e72;\n            border-radius: 12%;\n        }\n\n        .pips-container {\n            width: 100%; height: 100%;\n            position: relative; \n        }\n        .pip {\n            width: 22%; height: 22%; \n            background-color: #3d352e;\n            border-radius: 50%;\n            box-shadow: inset 0 1px 3px rgba(0,0,0,0.5);\n            position: absolute; \n        }\n        \n        #dice-result-text { \n            font-family: var(--font-display); \n            font-size: 2.2em;\n            color: #FFEB3B; \n            text-shadow: 0 0 12px #FFEB3B; \n            min-height: 2em;\n            line-height: 1.2;\n            text-align: center; \n        }\n        \n        #skip-animation-btn {\n            position: absolute;\n            bottom: 30px;\n            font-size: 1em;\n            padding: 8px 20px;\n            width: auto;\n            background-color: rgba(0,0,0,0.3);\n            border-color: rgba(255,255,255,0.5);\n            color: rgba(255,255,255,0.8);\n        }\n        #skip-animation-btn:hover {\n            background-color: rgba(0,0,0,0.5);\n            color: #fff;\n        }\n\n        .typed-cursor {\n            opacity: 1;\n            animation: typed-blink 0.7s infinite;\n        }\n        @keyframes typed-blink{\n            0% { opacity: 1; }\n            50% { opacity: 0; }\n            100% { opacity: 1; }\n        }\n        \n        .validation-message {\n            text-align: center;\n            color: #b71c1c;\n            font-size: 0.9em;\n            font-weight: bold;\n            margin-top: -5px;\n            margin-bottom: 10px;\n            height: 1.2em;\n            opacity: 0;\n            will-change: transform, opacity;\n        }\n\n        #credits-screen {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            pointer-events: none;\n            opacity: 0;\n        }\n\n        #credits-screen p {\n            font-family: var(--font-display);\n            font-size: 2em;\n            color: #f5f5dc;\n            text-shadow: 0 0 8px rgba(245, 245, 220, 0.7);\n        }\n    </style>\n</head>\n<body>\n\n<div class=\"creator-wrapper\">\n    <div class=\"border-flow\"></div>\n    <div class=\"inner-border\"></div>\n    <header class=\"creator-header\">\n        <h1 id=\"main-title\">冒险者契约登记</h1>\n        <div id=\"wax-seal\" class=\"wax-seal\"></div>\n    </header>\n\n    <div class=\"creator-scroll-content\">\n        <div class=\"gs-creator-container\">\n            <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第一步：身份确认</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-name-input\">姓名</label><input id=\"char-name-input\" type=\"text\" placeholder=\"可留空，默认为 {{user}}\" class=\"form-input\"></div>\n                    <div class=\"grid-cols-2 gsap-content-item\">\n                        <div class=\"gs-form-group\"><label for=\"char-gender-input\">性别</label><input id=\"char-gender-input\" type=\"text\" placeholder=\"例如: 男性/女性/双性/无性/……\" class=\"form-input\"></div>\n                        <div class=\"gs-form-group\"><label for=\"char-age-input\">年龄</label><input id=\"char-age-input\" type=\"number\" placeholder=\"可参照种族说明\" class=\"form-input\"></div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-race-select\">种族</label><select id=\"char-race-select\" class=\"form-select\"></select></div>\n                    <div class=\"gs-form-group gsap-content-item\">\n                        <label>经历 (出身/来历/邂逅)</label>\n                        <button id=\"roll-background-btn\" class=\"gs-button action-button\">🎲 投骰决定经历</button>\n                        <div id=\"background-display\" class=\"background-display\" style=\"display: none;\">\n                            <p>出身: <span id=\"bg-origin\"></span></p>\n                            <p>来历: <span id=\"bg-past\"></span></p>\n                            <p>邂逅: <span id=\"bg-encounter\"></span></p>\n                        </div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"oc-details-input\">身体特征与补充</label><textarea id=\"oc-details-input\" placeholder=\"发色、瞳色、体型、性格、背景故事构思...\" class=\"form-textarea\"></textarea></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第二步：能力值与技能</h3>\n                <div class=\"layout-grid\">\n                    <div class=\"form-container gsap-content-item\">\n                        <button id=\"roll-attributes-btn\" class=\"gs-button action-button\">🎲 投骰决定能力值</button>\n                        <div id=\"attributes-container\" class=\"attributes-grid\"></div>\n                        <div id=\"skills-and-desc-container\" class=\"skills-display\"></div>\n                    </div>\n                    <div id=\"radar-chart-container\" class=\"gsap-content-item\"><pre class=\"mermaid\" id=\"radar-chart\"></pre></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第三步：完成登记</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"character-summary\">角色卡预览</label><textarea id=\"character-summary\" rows=\"12\" readonly class=\"form-textarea\"></textarea></div>\n                    <button id=\"submit-btn\" class=\"gs-button gsap-content-item\" disabled>确认登记，开始冒险</button>\n                    <div id=\"validation-message\" class=\"validation-message\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div id=\"credits-screen\">\n    <p>作者 𝙀𝙡𝙖𝙞𝙣𝙖𝙙𝙚𝙨</p>\n</div>\n\n<div id=\"dice-overlay\">\n    <div class=\"dice-container\" id=\"dice-container\"></div>\n    <div id=\"dice-result-text\"></div>\n    <button id=\"skip-animation-btn\" class=\"gs-button\">跳过动画</button>\n</div>\n\n<div id=\"dice-templates\" style=\"display:none;\">\n    <div class=\"dice-cube\" data-id_template=\"dice-cube\">\n        <div class=\"dice-face face-front\" data-face=\"1\"><div class=\"pips-container\"><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-back\" data-face=\"6\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-right\" data-face=\"3\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-left\" data-face=\"4\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-top\" data-face=\"2\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-bottom\" data-face=\"5\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n    </div>\n</div>\n\n<script>\n// --- MODIFIED DATA ---\nconst raceData = {\n    '凡人': { attr_rolls: { '力量': '1d3+1', '敏捷': '1d3', '感知': '1d3', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3+2', '魔力': '1d3' }, skills: ['过载行动(初级)', '武器:投掷武器(初级)', '长距离移动(初级)']},\n    '矿人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3', '感知': '1d3+2', '知识': '1d3-1', '魅力': '1d3+1', '信仰力': '1d3+1', '魔力': '1d3-1' }, skills: ['治愈适性(初级)', '夜视(初级)', '锻造(初级)']},\n    '森人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+1', '感知': '1d3+1', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3-1', '魔力': '1d3+1' }, skills: ['武器:弩弓(初级)', '夜视(初级)', '精灵宠儿(初级)']},\n    '蜥蜴人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3+1', '感知': '1d3', '知识': '1d3', '魅力': '1d3+1', '信仰力': '1d3', '魔力': '1d3' }, skills: ['免疫强化(初级)', '夜视(初级)', '龙族血统(初级)']},\n    '圃人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+2', '感知': '1d3+1', '知识': '1d3', '魅力': '1d3-1', '信仰力': '1d3', '魔力': '1d3+2' }, skills: ['隐匿(初级)', '先发制人(初级)', '烹饪(初级)']}\n};\nconst backgroundData = {\n    origin: { \n        '凡人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '学者', class: '魔术师', level: 1, skills: ['文献调查(初级)'] }, 6: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 7: { name: '农民', skills: ['生产业:农业(初级)', '强健(初级)'] }, 8: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '骑士', class: '战士', level: 1, skills: ['骑乘(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n        '矿人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 6: { name: '酒馆老板', class: '战士', level: 1, skills: ['观察(初级)'] }, 7: { name: '铁匠', skills: ['工匠:锻造(初级)', '手工(初级)'] }, 8: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '碎盾者', class: '战士', level: 1, skills: ['强击攻击·斩(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n    },\n    past: { 2: { name: '奴隶', skills: ['劳动(初级)'] }, 3: { name: '牢狱', skills: ['犯罪知识(初级)'] }, 4: { name: '战场', skills: ['沉着冷静(初级)'] }, 5: { name: '神殿', skills: ['神学(初级)'] }, 6: { name: '孤儿', skills: ['忍耐(初级)'] }, 7: { name: '平顺', skills: ['幸运(初级)'] }, 8: { name: '贫困', skills: ['生存术(初级)'] }, 9: { name: '学校', skills: ['博识(初级)'] }, 10: { name: '深闺', skills: ['无偏见(初级)'] }, 11: { name: '奢华', skills: ['鉴定(初级)'] }, 12: { name: '宫廷', skills: ['礼仪(初级)'] }},\n    encounter: { 2: '宿敌', 3: '上司', 4: '后辈', 5: '交易对象', 6: '下属', 7: '家人', 8: '挚友', 9: '前辈', 10: '未婚夫/妻', 11: '劲敌', 12: '师父' }\n};\nbackgroundData.origin['森人'] = backgroundData.origin['凡人']; backgroundData.origin['蜥蜴人'] = backgroundData.origin['凡人']; backgroundData.origin['圃人'] = backgroundData.origin['凡人'];\nconst character = {\n    name: '', gender: '', age: '', oc_details: '', race: '凡人',\n    background: { origin: null, past: null, encounter: null },\n    attributes: { '力量': 0, '敏捷': 0, '感知': 0, '知识': 0, '魅力': 0, '信仰力': 0, '魔力': 0, '潜力': 0 },\n    skills: [], classes: {}, money: 0, _lastAttributesForChart: '',\n};\n// --- END MODIFIED DATA ---\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    gsap.registerPlugin(TextPlugin);\n    mermaid.initialize({ startOnLoad: true, theme: 'base', themeVariables: {\n        '--mermaid-font-family': \"'Vollkorn', 'Noto Serif SC', serif\",\n        primaryColor: '#f7e9d7', primaryTextColor: '#3d3d3d', lineColor: '#8b7355', textColor: '#4a3c2c',\n    }});\n    \n    const $ = (s) => document.querySelector(s);\n    const roll1D6 = () => Math.floor(Math.random() * 6) + 1;\n    const roll1D3 = () => {\n        const d6 = roll1D6();\n        if (d6 <= 2) return { d6, d3: 1 };\n        if (d6 <= 4) return { d6, d3: 2 };\n        return { d6, d3: 3 };\n    };\n    const rollDiceString = (diceString) => { const p=diceString.split('*');const d=p[0];const m=parseInt(p[1])||1;if(!d.includes('d'))return 0;const[n,s]=d.split('d').map(Number);let t=0;for(let i=0;i<n;i++){t+=Math.floor(Math.random()*s)+1;}return t*m; };\n    const formatAge = (ageValue) => { if (!ageValue && ageValue !== 0) return ageValue; const num = Number(ageValue); if (isNaN(num)) return ageValue; if (Math.abs(num) >= 1_000_000) return num.toExponential(2); return ageValue; };\n    const debounce = (func, delay) => { let timeout; return function(...args) { clearTimeout(timeout); timeout = setTimeout(() => func.apply(this, args), delay); }; };\n    const diceUnicode = ['\\u2680', '\\u2681', '\\u2682', '\\u2683', '\\u2684', '\\u2685'];\n\n    const DOM = {\n        nameInput: $('#char-name-input'), genderInput: $('#char-gender-input'), ageInput: $('#char-age-input'),\n        ocDetailsInput: $('#oc-details-input'), raceSelect: $('#char-race-select'), attributesContainer: $('#attributes-container'),\n        skillsContainer: $('#skills-and-desc-container'), radarChart: $('#radar-chart'), summarySheet: $('#character-summary'),\n        diceOverlay: $('#dice-overlay'), diceContainer: $('#dice-container'), diceResultText: $('#dice-result-text'),\n        backgroundDisplay: $('#background-display'), bgOrigin: $('#bg-origin'), bgPast: $('#bg-past'), bgEncounter: $('#bg-encounter'),\n        skipAnimationBtn: $('#skip-animation-btn'),\n        submitBtn: $('#submit-btn'),\n        validationMessage: $('#validation-message'),\n    };\n    \n    const dicePool = []; const MAX_DICE = 6;\n    let currentAnimation = null; let textAnimation = null; let isSkipping = false;\n    let currentValidationMessage = '';\n    \n    function validateAndToggleButton() {\n        let newMessage = '';\n        if (!character.age || String(character.age).trim() === '') {\n            newMessage = '请填写您的冒险者年龄。';\n        } else if (!character.gender || !character.gender.trim()) {\n            newMessage = '请设定冒险者的性别。';\n        } else if (!character.background.origin) {\n            newMessage = '请投骰决定您的冒险者经历。';\n        } else if (Object.values(character.attributes).every(val => val === 0)) {\n            newMessage = '请投骰决定您的能力值。';\n        }\n\n        if (newMessage === currentValidationMessage) return;\n        currentValidationMessage = newMessage;\n\n        if (newMessage) {\n            DOM.submitBtn.disabled = true;\n            DOM.validationMessage.textContent = newMessage;\n            gsap.fromTo(DOM.validationMessage, { autoAlpha: 0, scale: 0.8 }, { autoAlpha: 1, scale: 1, duration: 0.4, ease: 'elastic.out(1, 0.75)' });\n        } else {\n            DOM.submitBtn.disabled = false;\n            gsap.to(DOM.validationMessage, { autoAlpha: 0, duration: 0.3 });\n        }\n    }\n    function updateCharacterDataFromDOM() { character.name = DOM.nameInput.value; character.gender = DOM.genderInput.value; character.age = DOM.ageInput.value; character.oc_details = DOM.ocDetailsInput.value; character.race = DOM.raceSelect.value; }\n    function renderSkills() { const uniqueSkills = [...new Set(character.skills)]; DOM.skillsContainer.innerHTML = `<p><strong>天赋与习得技能:</strong></p><ul>${uniqueSkills.map(s => `<li>- ${s}</li>`).join('')}</ul>`; }\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key}`).value = value; }); }\n    function renderSummary() {\n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '?';\n        const originText = `出身:${character.background.origin ? character.background.origin.name : '?'}`;\n        const pastText = `来历:${character.background.past ? character.background.past.name : '?'}`;\n        const encounterText = `邂逅:${character.background.encounter || '?'}`;\n        let summary = `### 《哥布林杀手TRPG》冒险者登记卡\\n` + `**姓名:** ${finalName} | **种族:** ${character.race} | **性别:** ${character.gender || '?'} | **年龄:** ${formattedAge}\\n` + `**经历:** ${originText} / ${pastText} / ${encounterText}\\n` + `**初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n` + `**初始技能:** ${uniqueSkills.join(', ') || '无'}\\n`; if (character.oc_details) { summary += `**身体特征与补充:** ${character.oc_details}\\n`; } summary += `---\\n**能力值:**\\n`; summary += Object.entries(character.attributes).map(([key, value]) => `- ${key}: ${value}`).join('\\n'); summary += `\\n**持有资金:** ${character.money} 银币`;\n        DOM.summarySheet.value = summary.replace(/### /g, '').replace(/\\*\\*/g, '').replace(/---/g, '\\n────────────────────\\n').replace(/- /g, '  ');\n        DOM.summarySheet.setAttribute('data-raw', summary);\n    }\n    async function renderRadarChartIfNeeded() { const currentAttributesString = JSON.stringify(character.attributes); if (currentAttributesString === character._lastAttributesForChart) return; DOM.radarChart.classList.add('loading'); const radarSyntax = `radar-beta\\ntitle 能力值分布\\naxis a[\"力量 ${character.attributes['力量']}\"]\\naxis b[\"敏捷 ${character.attributes['敏捷']}\"]\\naxis c[\"感知 ${character.attributes['感知']}\"]\\naxis d[\"知识 ${character.attributes['知识']}\"]\\naxis e[\"魅力 ${character.attributes['魅力']}\"]\\naxis f[\"信仰 ${character.attributes['信仰力']}\"]\\naxis g[\"魔力 ${character.attributes['魔力']}\"]\\naxis h[\"潜力 ${character.attributes['潜力']}\"]\\ncurve current[\"能力\"]{${character.attributes['力量']},${character.attributes['敏捷']},${character.attributes['感知']},${character.attributes['知识']},${character.attributes['魅力']},${character.attributes['信仰力']},${character.attributes['魔力']},${character.attributes['潜力']}}\\nmax 10\\nmin 0`; DOM.radarChart.innerHTML = radarSyntax; DOM.radarChart.removeAttribute('data-processed'); try { await mermaid.run({ nodes: [DOM.radarChart] }); character._lastAttributesForChart = currentAttributesString; } catch(e) { console.error(\"Mermaid rendering error:\", e); } finally { DOM.radarChart.classList.remove('loading'); } }\n    async function updateUI(forceFullUpdate = false) { updateCharacterDataFromDOM(); if(forceFullUpdate) { character._lastAttributesForChart = ''; character.skills = []; character.classes = {}; character.money = 100; if(raceData[character.race].skills) character.skills.push(...raceData[character.race].skills); if (character.background.origin) { if (character.background.origin.skills) character.skills.push(...character.background.origin.skills); if (character.background.origin.class) character.classes[character.background.origin.class] = character.background.origin.level; if(character.background.origin.money) character.money += rollDiceString(character.background.origin.money); } if (character.background.past && character.background.past.skills) { character.skills.push(...character.background.past.skills); } } renderAttributes(); renderSkills(); renderSummary(); await renderRadarChartIfNeeded(); validateAndToggleButton(); }\n\n    const masterTl = gsap.timeline({ delay: 0.2 });\n    const title = $('#main-title');\n    title.innerHTML = title.textContent.split('').map(char => `<span class=\"title-char\">${char}</span>`).join('');\n    gsap.set(\".gsap-header-item, .gsap-content-item\", { autoAlpha: 0, y: 20 });\n    masterTl.to(\".title-char\", { autoAlpha: 1, y: 0, duration: 0.7, ease: \"power3.out\", stagger: 0.1 }).to(\"#wax-seal\", { autoAlpha: 1, scale: 1, duration: 0.6, ease: \"elastic.out(1, 0.7)\" }, \"-=0.5\");\n    document.querySelectorAll('.gs-creator-step').forEach((step, index) => { const stepTl = gsap.timeline(); stepTl.to(step.querySelector('.gsap-header-item'), { autoAlpha: 1, y: 0, duration: 0.6, ease: 'power2.out' }).to(step.querySelectorAll('.gsap-content-item'), { autoAlpha: 1, y: 0, duration: 0.5, ease: 'power2.out', stagger: 0.1 }, '-=0.4'); masterTl.add(stepTl, `-=${index === 0 ? 0.2 : 0.7}`); });\n    const pipPositions = { 1: [ { left: '50%', top: '50%' } ], 2: [ { left: '25%', top: '25%' }, { left: '75%', top: '75%' } ], 3: [ { left: '25%', top: '25%' }, { left: '50%', top: '50%' }, { left: '75%', top: '75%' } ], 4: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 5: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '50%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 6: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '50%' }, { left: '75%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ]};\n    function setupCube(cubeEl) { const size = 'calc(var(--dice-size) / 2)'; gsap.set(cubeEl.querySelector('.face-front'),  { transform: `rotateY(0deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-back'),   { transform: `rotateY(180deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-right'),  { transform: `rotateY(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-left'),   { transform: `rotateY(-90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-top'),   { transform: `rotateX(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-bottom'), { transform: `rotateX(-90deg) translateZ(${size})` }); const faces = cubeEl.querySelectorAll('.dice-face'); faces.forEach(face => { const faceNum = face.getAttribute('data-face'); const pips = face.querySelectorAll('.pip'); const positions = pipPositions[faceNum]; if (!pips.length || !positions) return; pips.forEach((pip, index) => { const pos = positions[index]; gsap.set(pip, { left: pos.left, top: pos.top, xPercent: -50, yPercent: -50 }); }); }); }\n    function getRotationForFace(faceValue) { switch (faceValue) { case 1: return { x: 0, y: 0 }; case 6: return { x: 0, y: 180 }; case 3: return { x: 0, y: -90 }; case 4: return { x: 0, y: 90 }; case 2: return { x: -90, y: 0 }; case 5: return { x: 90,  y: 0 }; default: return { x: 0, y: 0 }; } }\n    async function animateText(element, text) { if(isSkipping) {element.innerHTML = text.replace(/\\n/g, '<br>'); return;} return new Promise(resolve => { if (textAnimation && textAnimation.isActive()) textAnimation.kill(); element.innerHTML = ''; textAnimation = gsap.to(element, { duration: text.length * 0.05, text: { value: text.replace(/\\n/g, '<br>'), newClass: \"typed-cursor\" }, ease: \"none\", onComplete: () => { gsap.delayedCall(0.7, () => { element.querySelector('.typed-cursor')?.remove(); resolve(); }); } }); }); }\n    function initDicePool() { const diceTemplate = document.querySelector('[data-id_template=\"dice-cube\"]'); if (!diceTemplate) return; for (let i = 0; i < MAX_DICE; i++) { const dieIconElement = document.createElement('div'); dieIconElement.className = 'dice-icon'; const newCube = diceTemplate.cloneNode(true); dieIconElement.appendChild(newCube); DOM.diceContainer.appendChild(dieIconElement); setupCube(newCube); dicePool.push(dieIconElement); } }\n    async function animateRoll(numDice, preCalculatedRolls, textToShowDuringRoll = \"投掷中...\") { return new Promise(resolve => { if (currentAnimation && currentAnimation.isActive()) currentAnimation.kill(); dicePool.forEach(die => die.style.display = 'none'); const activeDice = dicePool.slice(0, numDice); animateText(DOM.diceResultText, textToShowDuringRoll); activeDice.forEach(die => { die.style.display = 'flex'; die.className = 'dice-icon'; }); const masterTl = gsap.timeline({ onComplete: () => { if(isSkipping) DOM.diceResultText.innerHTML = ''; resolve(preCalculatedRolls); }}); currentAnimation = masterTl; activeDice.forEach((dieElement, i) => { const dieCube = dieElement.querySelector('.dice-cube'); const visualRoll = preCalculatedRolls[i]; const targetRotation = getRotationForFace(visualRoll); const dieTimeline = gsap.timeline(); dieTimeline.to(dieCube, { rotationX: `+=${gsap.utils.random(720, 1080)}`, rotationY: `+=${gsap.utils.random(720, 1080)}`, duration: 1.8, ease: \"power2.in\" }).to(dieCube, { rotationX: targetRotation.x, rotationY: targetRotation.y, duration: 0.7, ease: \"power4.out\" }); masterTl.add(dieTimeline, 0); }); }); }\n    \n    const debouncedUpdate = debounce(updateUI, 400);\n    [DOM.nameInput, DOM.genderInput, DOM.ageInput, DOM.ocDetailsInput].forEach(el => el.addEventListener('input', debouncedUpdate));\n    \n    DOM.skipAnimationBtn.addEventListener('click', () => {\n        isSkipping = true;\n        if (currentAnimation && currentAnimation.isActive()) currentAnimation.progress(1);\n        if (textAnimation && textAnimation.isActive()) textAnimation.progress(1);\n    });\n\n    $('#roll-background-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const rolls = [roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6()];\n        await animateRoll(6, rolls, '投掷 经历... (2d6 x 3)');\n        \n        const sums = { origin: rolls[0] + rolls[1], past: rolls[2] + rolls[3], encounter: rolls[4] + rolls[5] };\n        \n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `出身: ${rolls[0]} + ${rolls[1]} = ${sums.origin}\\n(${backgroundData.origin[character.race][sums.origin].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `来历: ${rolls[2]} + ${rolls[3]} = ${sums.past}\\n(${backgroundData.past[sums.past].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(4, 6), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `邂逅: ${rolls[4]} + ${rolls[5]} = ${sums.encounter}\\n(${backgroundData.encounter[sums.encounter]})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        character.background.origin = backgroundData.origin[character.race][sums.origin];\n        character.background.past = backgroundData.past[sums.past];\n        character.background.encounter = backgroundData.encounter[sums.encounter];\n        DOM.bgOrigin.textContent = character.background.origin.name;\n        DOM.bgPast.textContent = character.background.past.name;\n        DOM.bgEncounter.textContent = character.background.encounter;\n        DOM.backgroundDisplay.style.display = 'block';\n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        updateUI(true);\n    });\n\n    $('#roll-attributes-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const attrRolls = raceData[character.race].attr_rolls;\n        const allCalculatedRolls = [];\n\n        // Prepare race-based attributes\n        for (const attr in attrRolls) {\n            const formula = attrRolls[attr];\n            const modifier = parseInt(formula.split('d3')[1] || '0');\n            const { d6, d3 } = roll1D3();\n            const finalValue = Math.max(0, d3 + modifier);\n            character.attributes[attr] = finalValue;\n            allCalculatedRolls.push({ attr, formula, d6, d3, modifier, finalValue });\n        }\n        \n        // Prepare \"Potential\" attribute\n        const potentialValue = Math.floor(Math.random() * 3) + 1;\n        const d6ForPotential = (potentialValue * 2) - 1; // Map 1,2,3 to d6 faces 1,3,5 for animation\n        character.attributes['潜力'] = potentialValue;\n        allCalculatedRolls.push({\n            attr: '潜力',\n            formula: '1-3', // Just a descriptor\n            d6: d6ForPotential,\n            finalValue: potentialValue\n        });\n        \n        // Animate all rolls sequentially\n        for (const roll of allCalculatedRolls) {\n            await animateRoll(1, [roll.d6], `投掷 ${roll.attr}...`);\n            if (isSkipping) break;\n\n            gsap.to(dicePool[0], { className: 'dice-icon highlight', duration: 0.3 });\n            \n            let resultText;\n            if (roll.attr === '潜力') {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.finalValue}`;\n            } else {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.d3} ${roll.modifier >= 0 ? '+' : ''} ${roll.modifier} = ${roll.finalValue}`;\n            }\n            await animateText(DOM.diceResultText, resultText);\n            \n            await updateUI();\n            \n            if (isSkipping) break;\n            \n            await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        await updateUI();\n    });\n\n    DOM.raceSelect.addEventListener('change', () => {\n        DOM.backgroundDisplay.style.display = 'none';\n        character.background = { origin: null, past: null, encounter: null };\n        Object.keys(character.attributes).forEach(k => character.attributes[k] = 0);\n        updateUI(true);\n    });\n\n    $('#submit-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        await updateUI(true);\n        \n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '未设定';\n        \n        const finalCharacterObject={ NAME:finalName, GENDER:character.gender||'未设定', AGE:formattedAge, RACE:character.race, ORIGIN: character.background.origin ? character.background.origin.name : '未知', PAST: character.background.past ? character.background.past.name : '未知', ENCOUNTER: character.background.encounter || '未知', SKILLS: uniqueSkills, OC_DETAILS:character.oc_details||'无', ...character.attributes, MONEY:character.money };\n        \n        const slashCommand=`/send <START>\\nAdmin:\\n这是一个TRPG开局，请为 User 生成一段详尽的背景故事。\\n\\n# 故事核心要求\\n请严格根据以下【角色完整设定】，撰写一段从角色童年到现在的成长故事。故事需要清晰地阐述是什么关键事件或心路历程，最终让他/她确立了要成为一名冒险者的志向。请在故事中自然地融入角色的种族、出身背景、技能和性格特点。\\n\\n# 角色完整设定\\n---\\n## 基础信息\\n- **姓名:** ${finalName}\\n- **性别:** ${character.gender||'未设定'}\\n- **年龄:** ${formattedAge}\\n- **种族:** ${character.race}\\n\\n## 经历\\n- **出身:** ${character.background.origin ? character.background.origin.name : '未知'}\\n- **来历:** ${character.background.past ? character.background.past.name : '未知'}\\n- **邂逅:** ${character.background.encounter || '未知'}\\n\\n## 背景与技能\\n- **初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n- **初始技能:** ${uniqueSkills.join(', ')||'无'}\\n\\n## 补充设定 (OC)\\n- **额外补充:** ${character.oc_details||'无'}\\n\\n## 能力值\\n- **力量:** ${character.attributes['力量']}\\n- **敏捷:** ${character.attributes['敏捷']}\\n- **感知:** ${character.attributes['感知']}\\n- **知识:** ${character.attributes['知识']}\\n- **魅力:** ${character.attributes['魅力']}\\n- **信仰力:** ${character.attributes['信仰力']}\\n- **魔力:** ${character.attributes['魔力']}\\n\\n## 初始资产\\n- **资金:** ${character.money} 银币\\n\\|\\n/trigger`; \n        \n        try {\n            if (typeof insertOrAssignVariables === 'function') {\n                await insertOrAssignVariables(finalCharacterObject);\n            } else {\n                console.log(\"SillyTavern Function 'insertOrAssignVariables' not found. Variables:\", finalCharacterObject);\n            }\n            if (typeof triggerSlash === 'function') {\n                await triggerSlash(slashCommand, 'Send');\n            } else { \n                console.log(\"SillyTavern Function 'triggerSlash' not found. Command will be copied to clipboard.\");\n                navigator.clipboard.writeText(slashCommand).then(() => {\n                    alert('角色指令已复制到剪贴板！');\n                });\n            }\n        } catch (error) {\n            console.error('与SillyTavern交互失败:', error);\n            alert('与SillyTavern交互失败，请查看浏览器控制台。');\n        }\n\n        e.target.innerHTML = \"契约成立！\";\n    });\n    \n    initDicePool();\n    Object.keys(raceData).forEach(key => DOM.raceSelect.add(new Option(key, key)));\n    Object.keys(character.attributes).forEach(key => {\n        const pointControl = document.createElement('div');\n        pointControl.className = 'point-control';\n        pointControl.innerHTML = `<span class=\"label\">${key}</span><input type=\"text\" id=\"attr-${key.replace(/\\s/g, '')}\" readonly value=\"0\">`; // ID santized just in case\n        DOM.attributesContainer.appendChild(pointControl);\n    });\n    // A small fix for renderAttributes to handle sanitized IDs\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key.replace(/\\s/g, '')}`).value = value; }); }\n    updateUI(true);\n});\n</script>\n\n</body>\n</html>\n```"
  },
  {
    "role": "user",
    "content": "```\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>哥布林杀手TRPG - 冒险者契约</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/gsap.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/TextPlugin.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.min.js\" defer></script>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Noto+Serif+SC:wght@400;700&family=Vollkorn:wght@400;700&family=Courier+Prime&display=swap\" rel=\"stylesheet\">\n\n    <style>\n        :root {\n            --leather-bg: #5a3a2a;\n            --dark-leather-bg: #3b2a1a;\n            --parchment-bg: #f5f5dc;\n            --parchment-bg-gradient: linear-gradient(165deg, #f7e9d7, #e6d5c3);\n            --text-color: #3d3d3d;\n            --heading-color: #4a3c2c;\n            --border-color: #7a5a4a;\n            --font-main: 'Vollkorn', 'Noto Serif SC', serif;\n            --font-display: 'Cinzel', 'Noto Serif SC', serif;\n            --font-code: 'Courier Prime', 'Courier New', monospace;\n            --dice-size: 5rem; \n        }\n\n        html { height: 100%; }\n        body {\n            background-color: #3a2e20;\n            font-family: var(--font-main);\n            color: var(--text-color);\n            margin: 0; padding: 20px;\n            box-sizing: border-box;\n            display: flex;\n            align-items: center; justify-content: center;\n            min-height: 100%;\n        }\n        *, *:before, *:after { box-sizing: inherit; }\n\n        .creator-wrapper {\n            width: 100%; max-width: 900px;\n            margin: 0;\n            background: var(--parchment-bg-gradient);\n            border: 12px solid #8b7355;\n            border-radius: 8px;\n            box-shadow: 0 0 40px rgba(139, 115, 85, 0.3), inset 0 0 30px rgba(255, 255, 255, 0.4);\n            position: relative;\n            overflow: hidden;\n            padding: 25px;\n            display: flex; flex-direction: column;\n            max-height: 95vh;\n        }\n\n        .border-flow, .inner-border { position: absolute; pointer-events: none; }\n        .border-flow { top: 0; left: 0; right: 0; bottom: 0; background: linear-gradient(90deg, rgba(139,115,85,0.1) 1px, transparent 1px), linear-gradient(0deg, rgba(139,115,85,0.1) 1px, transparent 1px); background-size: 20px 20px; animation: borderFlow 15s linear infinite; }\n        .inner-border { top: 5px; left: 5px; right: 5px; bottom: 5px; border: 3px solid rgba(139,115,85,0.3); border-radius: 5px; }\n        @keyframes borderFlow { from { background-position: 0 0; } to { background-position: 20px 20px; } }\n\n        .creator-header {\n            text-align: center;\n            padding: 10px;\n            margin-bottom: 25px;\n            border-bottom: 2px solid rgba(139, 115, 85, 0.3);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 15px;\n        }\n        .creator-header h1 {\n            font-family: var(--font-display);\n            font-size: clamp(24px, 5vw, 32px);\n            margin: 0;\n            font-weight: 700;\n            letter-spacing: 3px;\n            color: var(--heading-color);\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.1);\n        }\n        \n        .title-char {\n            display: inline-block;\n            opacity: 0;\n            transform: translateY(30px);\n        }\n\n        .wax-seal {\n            width: 45px;\n            height: 45px;\n            display: inline-block;\n            background-color: #c0392b;\n            border-radius: 50%;\n            position: relative;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.4), inset 0 -2px 3px rgba(0,0,0,0.3);\n            opacity: 0;\n            transform: scale(0.5);\n            font-family: 'Cinzel', serif;\n            color: #e7a49c;\n            text-align: center;\n            font-size: 24px;\n            line-height: 45px;\n            font-weight: 700;\n        }\n        .wax-seal::before {\n            content: 'GS';\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.3);\n        }\n\n        .creator-scroll-content { overflow-y: auto; padding: 10px 20px 10px 10px; }\n        .creator-scroll-content::-webkit-scrollbar { width: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-track { background: rgba(139, 115, 85, 0.1); border-radius: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-thumb { background-color: #a89072; border-radius: 10px; border: 2px solid #f7e9d7; }\n        \n        .gs-creator-step { margin-bottom: 40px; overflow: hidden; }\n        .gs-creator-step h3 { font-family: var(--font-display); font-size: 1.5em; font-weight: 700; border-bottom: 1.5px solid var(--border-color); padding-bottom: 8px; margin-bottom: 20px; color: var(--heading-color); text-align: left; }\n        \n        .layout-grid { display: grid; grid-template-columns: 1fr; gap: 25px; align-items: flex-start; }\n        @media (min-width: 768px) {\n            .layout-grid { grid-template-columns: 1fr 280px; }\n        }\n\n        .form-container { text-align: left; }\n        .gs-form-group { margin-bottom: 16px; }\n        .gs-form-group label { display: block; margin-bottom: 6px; font-weight: bold; color: var(--heading-color); }\n        .form-input, .form-select, .form-textarea { width: 100%; padding: 10px; background-color: rgba(255, 255, 255, 0.5); border: 1px solid #a58e72; border-radius: 4px; color: #3d3d3d; font-family: var(--font-main); font-size: 1em; transition: all 0.2s ease-in-out; box-shadow: inset 1px 1px 2px rgba(0,0,0,0.1); }\n        .form-input:focus, .form-select:focus, .form-textarea:focus { outline: none; border-color: #8b7355; background-color: #fff; box-shadow: 0 0 5px rgba(139, 115, 85, 0.5); }\n        .form-textarea { resize: vertical; min-height: 100px; }\n\n        .grid-cols-2 {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 16px;\n        }\n        @media (min-width: 480px) {\n            .grid-cols-2 {\n                grid-template-columns: repeat(2, 1fr);\n            }\n        }\n\n        #attributes-container .point-control { display: flex; align-items: center; justify-content: space-between; margin-bottom: 8px; padding: 6px 8px; background: rgba(0,0,0,0.03); border-left: 3px solid rgba(139,115,85,0.2); border-radius: 4px; }\n        #attributes-container .label { font-weight: bold; color: var(--heading-color); }\n        #attributes-container input[readonly] { width: 40px; text-align: center; font-weight: bold; font-size: 1.2em; font-family: var(--font-display); color: #a02c2c; border: none; background-color: transparent; box-shadow: none; padding: 0; }\n        \n        .attributes-grid {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 0 16px;\n        }\n        @media (min-width: 480px) {\n            .attributes-grid {\n                grid-template-columns: 1fr 1fr;\n            }\n        }\n        \n        .skills-display p { background-color: rgba(0,0,0,0.05); border-left: 3px solid var(--border-color); padding: 10px 15px; margin-top: 10px; font-size: 0.95em; border-radius: 0 4px 4px 0; }\n        .skills-display strong { color: #8b5b4b; font-family: var(--font-display); }\n        .skills-display ul { list-style: none; padding-left: 0; margin-top: 8px; font-size: 0.9em; }\n        .skills-display li { margin-bottom: 4px; }\n\n        #character-summary { background-color: #e9e4d9; font-family: var(--font-code); line-height: 1.6; height: 250px; color: #2c2a2a; }\n        \n        .gs-button { width: 100%; background-color: #8b7355; color: var(--parchment-bg); border: 2px solid var(--dark-leather-bg); border-radius: 5px; padding: 12px 20px; font-family: var(--font-display); font-size: 1.2em; font-weight: 700; cursor: pointer; margin-top: 10px; transition: all 0.3s ease; box-shadow: 0 3px 5px rgba(0,0,0,0.3); }\n        .gs-button:hover { background-color: #a0886c; transform: translateY(-2px); box-shadow: 0 5px 8px rgba(0,0,0,0.3); }\n        .gs-button:disabled { background-color: #9e9e9e; border-color: #757575; cursor: not-allowed; transform: none; box-shadow: none; opacity: 0.6; }\n        .action-button { background-color: #6d5b4b; font-size: 1em; padding: 10px 15px; margin-top: 0; margin-bottom: 10px; width: auto; }\n        \n        .background-display { margin-top: 15px; padding: 15px; border: 1px dashed var(--border-color); border-radius: 5px; background: rgba(0,0,0,0.02); }\n        .background-display p { margin: 0 0 8px; }\n        .background-display span { font-weight: bold; color: var(--heading-color); }\n        \n        #radar-chart-container { \n            max-width: 100%;\n        }\n        @media (min-width: 768px) {\n            #radar-chart-container {\n                position: sticky;\n                top: 0;\n                padding-top: 45px;\n            }\n        }\n\n        pre.mermaid { \n            font-family: var(--font-main); \n            background: rgba(0,0,0,0.02); \n            border: 1px solid rgba(139,115,85,0.1); \n            padding: 10px; \n            border-radius: 5px; \n            overflow: auto;\n            transition: opacity 0.3s ease-in-out;\n        }\n        pre.mermaid.loading { opacity: 0.5; pointer-events: none; }\n\n        pre.mermaid > svg {\n            max-width: 100%;\n            height: auto;\n        }\n\n        #dice-overlay {\n            position: fixed; top: 0; left: 0; width: 100%; height: 100%;\n            background: rgba(0,0,0,0.8); backdrop-filter: blur(5px);\n            display: none; align-items: center; justify-content: center; flex-direction: column;\n            z-index: 100;\n            color: #fff; text-shadow: 0 0 10px #000;\n        }\n\n        .dice-container {\n            display: flex; flex-wrap: wrap; justify-content: center;\n            gap: 2rem; margin-bottom: 2rem;\n            max-width: 600px;\n        }\n        \n        .dice-icon {\n            width: var(--dice-size); height: var(--dice-size);\n            perspective: 800px;\n            transform-style: preserve-3d;\n            display: none;\n        }\n        .dice-icon.highlight {\n            transform: scale(1.15);\n            filter: drop-shadow(0 0 15px #FFEB3B);\n            transition: transform 0.3s ease, filter 0.3s ease;\n        }\n\n        .dice-cube {\n            width: 100%; height: 100%;\n            position: relative;\n            transform-style: preserve-3d;\n            transform: translateZ(calc(var(--dice-size) / -2));\n        }\n        \n        .dice-face {\n            position: absolute;\n            width: var(--dice-size); height: var(--dice-size);\n            background-color: rgba(255, 255, 255, 0.98);\n            border: 1.5px solid #857e72;\n            border-radius: 12%;\n        }\n\n        .pips-container {\n            width: 100%; height: 100%;\n            position: relative; \n        }\n        .pip {\n            width: 22%; height: 22%; \n            background-color: #3d352e;\n            border-radius: 50%;\n            box-shadow: inset 0 1px 3px rgba(0,0,0,0.5);\n            position: absolute; \n        }\n        \n        #dice-result-text { \n            font-family: var(--font-display); \n            font-size: 2.2em;\n            color: #FFEB3B; \n            text-shadow: 0 0 12px #FFEB3B; \n            min-height: 2em;\n            line-height: 1.2;\n            text-align: center; \n        }\n        \n        #skip-animation-btn {\n            position: absolute;\n            bottom: 30px;\n            font-size: 1em;\n            padding: 8px 20px;\n            width: auto;\n            background-color: rgba(0,0,0,0.3);\n            border-color: rgba(255,255,255,0.5);\n            color: rgba(255,255,255,0.8);\n        }\n        #skip-animation-btn:hover {\n            background-color: rgba(0,0,0,0.5);\n            color: #fff;\n        }\n\n        .typed-cursor {\n            opacity: 1;\n            animation: typed-blink 0.7s infinite;\n        }\n        @keyframes typed-blink{\n            0% { opacity: 1; }\n            50% { opacity: 0; }\n            100% { opacity: 1; }\n        }\n        \n        .validation-message {\n            text-align: center;\n            color: #b71c1c;\n            font-size: 0.9em;\n            font-weight: bold;\n            margin-top: -5px;\n            margin-bottom: 10px;\n            height: 1.2em;\n            opacity: 0;\n            will-change: transform, opacity;\n        }\n\n        #credits-screen {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            pointer-events: none;\n            opacity: 0;\n        }\n\n        #credits-screen p {\n            font-family: var(--font-display);\n            font-size: 2em;\n            color: #f5f5dc;\n            text-shadow: 0 0 8px rgba(245, 245, 220, 0.7);\n        }\n    </style>\n</head>\n<body>\n\n<div class=\"creator-wrapper\">\n    <div class=\"border-flow\"></div>\n    <div class=\"inner-border\"></div>\n    <header class=\"creator-header\">\n        <h1 id=\"main-title\">冒险者契约登记</h1>\n        <div id=\"wax-seal\" class=\"wax-seal\"></div>\n    </header>\n\n    <div class=\"creator-scroll-content\">\n        <div class=\"gs-creator-container\">\n            <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第一步：身份确认</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-name-input\">姓名</label><input id=\"char-name-input\" type=\"text\" placeholder=\"可留空，默认为 {{user}}\" class=\"form-input\"></div>\n                    <div class=\"grid-cols-2 gsap-content-item\">\n                        <div class=\"gs-form-group\"><label for=\"char-gender-input\">性别</label><input id=\"char-gender-input\" type=\"text\" placeholder=\"例如: 男性/女性/双性/无性/……\" class=\"form-input\"></div>\n                        <div class=\"gs-form-group\"><label for=\"char-age-input\">年龄</label><input id=\"char-age-input\" type=\"number\" placeholder=\"可参照种族说明\" class=\"form-input\"></div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-race-select\">种族</label><select id=\"char-race-select\" class=\"form-select\"></select></div>\n                    <div class=\"gs-form-group gsap-content-item\">\n                        <label>经历 (出身/来历/邂逅)</label>\n                        <button id=\"roll-background-btn\" class=\"gs-button action-button\">🎲 投骰决定经历</button>\n                        <div id=\"background-display\" class=\"background-display\" style=\"display: none;\">\n                            <p>出身: <span id=\"bg-origin\"></span></p>\n                            <p>来历: <span id=\"bg-past\"></span></p>\n                            <p>邂逅: <span id=\"bg-encounter\"></span></p>\n                        </div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"oc-details-input\">身体特征与补充</label><textarea id=\"oc-details-input\" placeholder=\"发色、瞳色、体型、性格、背景故事构思...\" class=\"form-textarea\"></textarea></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第二步：能力值与技能</h3>\n                <div class=\"layout-grid\">\n                    <div class=\"form-container gsap-content-item\">\n                        <button id=\"roll-attributes-btn\" class=\"gs-button action-button\">🎲 投骰决定能力值</button>\n                        <div id=\"attributes-container\" class=\"attributes-grid\"></div>\n                        <div id=\"skills-and-desc-container\" class=\"skills-display\"></div>\n                    </div>\n                    <div id=\"radar-chart-container\" class=\"gsap-content-item\"><pre class=\"mermaid\" id=\"radar-chart\"></pre></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第三步：完成登记</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"character-summary\">角色卡预览</label><textarea id=\"character-summary\" rows=\"12\" readonly class=\"form-textarea\"></textarea></div>\n                    <button id=\"submit-btn\" class=\"gs-button gsap-content-item\" disabled>确认登记，开始冒险</button>\n                    <div id=\"validation-message\" class=\"validation-message\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div id=\"credits-screen\">\n    <p>作者 𝙀𝙡𝙖𝙞𝙣𝙖𝙙𝙚𝙨</p>\n</div>\n\n<div id=\"dice-overlay\">\n    <div class=\"dice-container\" id=\"dice-container\"></div>\n    <div id=\"dice-result-text\"></div>\n    <button id=\"skip-animation-btn\" class=\"gs-button\">跳过动画</button>\n</div>\n\n<div id=\"dice-templates\" style=\"display:none;\">\n    <div class=\"dice-cube\" data-id_template=\"dice-cube\">\n        <div class=\"dice-face face-front\" data-face=\"1\"><div class=\"pips-container\"><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-back\" data-face=\"6\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-right\" data-face=\"3\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-left\" data-face=\"4\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-top\" data-face=\"2\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-bottom\" data-face=\"5\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n    </div>\n</div>\n\n<script>\n// --- MODIFIED DATA ---\nconst raceData = {\n    '凡人': { attr_rolls: { '力量': '1d3+1', '敏捷': '1d3', '感知': '1d3', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3+2', '魔力': '1d3' }, skills: ['过载行动(初级)', '武器:投掷武器(初级)', '长距离移动(初级)']},\n    '矿人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3', '感知': '1d3+2', '知识': '1d3-1', '魅力': '1d3+1', '信仰力': '1d3+1', '魔力': '1d3-1' }, skills: ['治愈适性(初级)', '夜视(初级)', '锻造(初级)']},\n    '森人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+1', '感知': '1d3+1', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3-1', '魔力': '1d3+1' }, skills: ['武器:弩弓(初级)', '夜视(初级)', '精灵宠儿(初级)']},\n    '蜥蜴人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3+1', '感知': '1d3', '知识': '1d3', '魅力': '1d3+1', '信仰力': '1d3', '魔力': '1d3' }, skills: ['免疫强化(初级)', '夜视(初级)', '龙族血统(初级)']},\n    '圃人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+2', '感知': '1d3+1', '知识': '1d3', '魅力': '1d3-1', '信仰力': '1d3', '魔力': '1d3+2' }, skills: ['隐匿(初级)', '先发制人(初级)', '烹饪(初级)']}\n};\nconst backgroundData = {\n    origin: { \n        '凡人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '学者', class: '魔术师', level: 1, skills: ['文献调查(初级)'] }, 6: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 7: { name: '农民', skills: ['生产业:农业(初级)', '强健(初级)'] }, 8: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '骑士', class: '战士', level: 1, skills: ['骑乘(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n        '矿人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 6: { name: '酒馆老板', class: '战士', level: 1, skills: ['观察(初级)'] }, 7: { name: '铁匠', skills: ['工匠:锻造(初级)', '手工(初级)'] }, 8: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '碎盾者', class: '战士', level: 1, skills: ['强击攻击·斩(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n    },\n    past: { 2: { name: '奴隶', skills: ['劳动(初级)'] }, 3: { name: '牢狱', skills: ['犯罪知识(初级)'] }, 4: { name: '战场', skills: ['沉着冷静(初级)'] }, 5: { name: '神殿', skills: ['神学(初级)'] }, 6: { name: '孤儿', skills: ['忍耐(初级)'] }, 7: { name: '平顺', skills: ['幸运(初级)'] }, 8: { name: '贫困', skills: ['生存术(初级)'] }, 9: { name: '学校', skills: ['博识(初级)'] }, 10: { name: '深闺', skills: ['无偏见(初级)'] }, 11: { name: '奢华', skills: ['鉴定(初级)'] }, 12: { name: '宫廷', skills: ['礼仪(初级)'] }},\n    encounter: { 2: '宿敌', 3: '上司', 4: '后辈', 5: '交易对象', 6: '下属', 7: '家人', 8: '挚友', 9: '前辈', 10: '未婚夫/妻', 11: '劲敌', 12: '师父' }\n};\nbackgroundData.origin['森人'] = backgroundData.origin['凡人']; backgroundData.origin['蜥蜴人'] = backgroundData.origin['凡人']; backgroundData.origin['圃人'] = backgroundData.origin['凡人'];\nconst character = {\n    name: '', gender: '', age: '', oc_details: '', race: '凡人',\n    background: { origin: null, past: null, encounter: null },\n    attributes: { '力量': 0, '敏捷': 0, '感知': 0, '知识': 0, '魅力': 0, '信仰力': 0, '魔力': 0, '潜力': 0 },\n    skills: [], classes: {}, money: 0, _lastAttributesForChart: '',\n};\n// --- END MODIFIED DATA ---\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    gsap.registerPlugin(TextPlugin);\n    mermaid.initialize({ startOnLoad: true, theme: 'base', themeVariables: {\n        '--mermaid-font-family': \"'Vollkorn', 'Noto Serif SC', serif\",\n        primaryColor: '#f7e9d7', primaryTextColor: '#3d3d3d', lineColor: '#8b7355', textColor: '#4a3c2c',\n    }});\n    \n    const $ = (s) => document.querySelector(s);\n    const roll1D6 = () => Math.floor(Math.random() * 6) + 1;\n    const roll1D3 = () => {\n        const d6 = roll1D6();\n        if (d6 <= 2) return { d6, d3: 1 };\n        if (d6 <= 4) return { d6, d3: 2 };\n        return { d6, d3: 3 };\n    };\n    const rollDiceString = (diceString) => { const p=diceString.split('*');const d=p[0];const m=parseInt(p[1])||1;if(!d.includes('d'))return 0;const[n,s]=d.split('d').map(Number);let t=0;for(let i=0;i<n;i++){t+=Math.floor(Math.random()*s)+1;}return t*m; };\n    const formatAge = (ageValue) => { if (!ageValue && ageValue !== 0) return ageValue; const num = Number(ageValue); if (isNaN(num)) return ageValue; if (Math.abs(num) >= 1_000_000) return num.toExponential(2); return ageValue; };\n    const debounce = (func, delay) => { let timeout; return function(...args) { clearTimeout(timeout); timeout = setTimeout(() => func.apply(this, args), delay); }; };\n    const diceUnicode = ['\\u2680', '\\u2681', '\\u2682', '\\u2683', '\\u2684', '\\u2685'];\n\n    const DOM = {\n        nameInput: $('#char-name-input'), genderInput: $('#char-gender-input'), ageInput: $('#char-age-input'),\n        ocDetailsInput: $('#oc-details-input'), raceSelect: $('#char-race-select'), attributesContainer: $('#attributes-container'),\n        skillsContainer: $('#skills-and-desc-container'), radarChart: $('#radar-chart'), summarySheet: $('#character-summary'),\n        diceOverlay: $('#dice-overlay'), diceContainer: $('#dice-container'), diceResultText: $('#dice-result-text'),\n        backgroundDisplay: $('#background-display'), bgOrigin: $('#bg-origin'), bgPast: $('#bg-past'), bgEncounter: $('#bg-encounter'),\n        skipAnimationBtn: $('#skip-animation-btn'),\n        submitBtn: $('#submit-btn'),\n        validationMessage: $('#validation-message'),\n    };\n    \n    const dicePool = []; const MAX_DICE = 6;\n    let currentAnimation = null; let textAnimation = null; let isSkipping = false;\n    let currentValidationMessage = '';\n    \n    function validateAndToggleButton() {\n        let newMessage = '';\n        if (!character.age || String(character.age).trim() === '') {\n            newMessage = '请填写您的冒险者年龄。';\n        } else if (!character.gender || !character.gender.trim()) {\n            newMessage = '请设定冒险者的性别。';\n        } else if (!character.background.origin) {\n            newMessage = '请投骰决定您的冒险者经历。';\n        } else if (Object.values(character.attributes).every(val => val === 0)) {\n            newMessage = '请投骰决定您的能力值。';\n        }\n\n        if (newMessage === currentValidationMessage) return;\n        currentValidationMessage = newMessage;\n\n        if (newMessage) {\n            DOM.submitBtn.disabled = true;\n            DOM.validationMessage.textContent = newMessage;\n            gsap.fromTo(DOM.validationMessage, { autoAlpha: 0, scale: 0.8 }, { autoAlpha: 1, scale: 1, duration: 0.4, ease: 'elastic.out(1, 0.75)' });\n        } else {\n            DOM.submitBtn.disabled = false;\n            gsap.to(DOM.validationMessage, { autoAlpha: 0, duration: 0.3 });\n        }\n    }\n    function updateCharacterDataFromDOM() { character.name = DOM.nameInput.value; character.gender = DOM.genderInput.value; character.age = DOM.ageInput.value; character.oc_details = DOM.ocDetailsInput.value; character.race = DOM.raceSelect.value; }\n    function renderSkills() { const uniqueSkills = [...new Set(character.skills)]; DOM.skillsContainer.innerHTML = `<p><strong>天赋与习得技能:</strong></p><ul>${uniqueSkills.map(s => `<li>- ${s}</li>`).join('')}</ul>`; }\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key}`).value = value; }); }\n    function renderSummary() {\n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '?';\n        const originText = `出身:${character.background.origin ? character.background.origin.name : '?'}`;\n        const pastText = `来历:${character.background.past ? character.background.past.name : '?'}`;\n        const encounterText = `邂逅:${character.background.encounter || '?'}`;\n        let summary = `### 《哥布林杀手TRPG》冒险者登记卡\\n` + `**姓名:** ${finalName} | **种族:** ${character.race} | **性别:** ${character.gender || '?'} | **年龄:** ${formattedAge}\\n` + `**经历:** ${originText} / ${pastText} / ${encounterText}\\n` + `**初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n` + `**初始技能:** ${uniqueSkills.join(', ') || '无'}\\n`; if (character.oc_details) { summary += `**身体特征与补充:** ${character.oc_details}\\n`; } summary += `---\\n**能力值:**\\n`; summary += Object.entries(character.attributes).map(([key, value]) => `- ${key}: ${value}`).join('\\n'); summary += `\\n**持有资金:** ${character.money} 银币`;\n        DOM.summarySheet.value = summary.replace(/### /g, '').replace(/\\*\\*/g, '').replace(/---/g, '\\n────────────────────\\n').replace(/- /g, '  ');\n        DOM.summarySheet.setAttribute('data-raw', summary);\n    }\n    async function renderRadarChartIfNeeded() { const currentAttributesString = JSON.stringify(character.attributes); if (currentAttributesString === character._lastAttributesForChart) return; DOM.radarChart.classList.add('loading'); const radarSyntax = `radar-beta\\ntitle 能力值分布\\naxis a[\"力量 ${character.attributes['力量']}\"]\\naxis b[\"敏捷 ${character.attributes['敏捷']}\"]\\naxis c[\"感知 ${character.attributes['感知']}\"]\\naxis d[\"知识 ${character.attributes['知识']}\"]\\naxis e[\"魅力 ${character.attributes['魅力']}\"]\\naxis f[\"信仰 ${character.attributes['信仰力']}\"]\\naxis g[\"魔力 ${character.attributes['魔力']}\"]\\naxis h[\"潜力 ${character.attributes['潜力']}\"]\\ncurve current[\"能力\"]{${character.attributes['力量']},${character.attributes['敏捷']},${character.attributes['感知']},${character.attributes['知识']},${character.attributes['魅力']},${character.attributes['信仰力']},${character.attributes['魔力']},${character.attributes['潜力']}}\\nmax 10\\nmin 0`; DOM.radarChart.innerHTML = radarSyntax; DOM.radarChart.removeAttribute('data-processed'); try { await mermaid.run({ nodes: [DOM.radarChart] }); character._lastAttributesForChart = currentAttributesString; } catch(e) { console.error(\"Mermaid rendering error:\", e); } finally { DOM.radarChart.classList.remove('loading'); } }\n    async function updateUI(forceFullUpdate = false) { updateCharacterDataFromDOM(); if(forceFullUpdate) { character._lastAttributesForChart = ''; character.skills = []; character.classes = {}; character.money = 100; if(raceData[character.race].skills) character.skills.push(...raceData[character.race].skills); if (character.background.origin) { if (character.background.origin.skills) character.skills.push(...character.background.origin.skills); if (character.background.origin.class) character.classes[character.background.origin.class] = character.background.origin.level; if(character.background.origin.money) character.money += rollDiceString(character.background.origin.money); } if (character.background.past && character.background.past.skills) { character.skills.push(...character.background.past.skills); } } renderAttributes(); renderSkills(); renderSummary(); await renderRadarChartIfNeeded(); validateAndToggleButton(); }\n\n    const masterTl = gsap.timeline({ delay: 0.2 });\n    const title = $('#main-title');\n    title.innerHTML = title.textContent.split('').map(char => `<span class=\"title-char\">${char}</span>`).join('');\n    gsap.set(\".gsap-header-item, .gsap-content-item\", { autoAlpha: 0, y: 20 });\n    masterTl.to(\".title-char\", { autoAlpha: 1, y: 0, duration: 0.7, ease: \"power3.out\", stagger: 0.1 }).to(\"#wax-seal\", { autoAlpha: 1, scale: 1, duration: 0.6, ease: \"elastic.out(1, 0.7)\" }, \"-=0.5\");\n    document.querySelectorAll('.gs-creator-step').forEach((step, index) => { const stepTl = gsap.timeline(); stepTl.to(step.querySelector('.gsap-header-item'), { autoAlpha: 1, y: 0, duration: 0.6, ease: 'power2.out' }).to(step.querySelectorAll('.gsap-content-item'), { autoAlpha: 1, y: 0, duration: 0.5, ease: 'power2.out', stagger: 0.1 }, '-=0.4'); masterTl.add(stepTl, `-=${index === 0 ? 0.2 : 0.7}`); });\n    const pipPositions = { 1: [ { left: '50%', top: '50%' } ], 2: [ { left: '25%', top: '25%' }, { left: '75%', top: '75%' } ], 3: [ { left: '25%', top: '25%' }, { left: '50%', top: '50%' }, { left: '75%', top: '75%' } ], 4: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 5: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '50%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 6: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '50%' }, { left: '75%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ]};\n    function setupCube(cubeEl) { const size = 'calc(var(--dice-size) / 2)'; gsap.set(cubeEl.querySelector('.face-front'),  { transform: `rotateY(0deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-back'),   { transform: `rotateY(180deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-right'),  { transform: `rotateY(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-left'),   { transform: `rotateY(-90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-top'),   { transform: `rotateX(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-bottom'), { transform: `rotateX(-90deg) translateZ(${size})` }); const faces = cubeEl.querySelectorAll('.dice-face'); faces.forEach(face => { const faceNum = face.getAttribute('data-face'); const pips = face.querySelectorAll('.pip'); const positions = pipPositions[faceNum]; if (!pips.length || !positions) return; pips.forEach((pip, index) => { const pos = positions[index]; gsap.set(pip, { left: pos.left, top: pos.top, xPercent: -50, yPercent: -50 }); }); }); }\n    function getRotationForFace(faceValue) { switch (faceValue) { case 1: return { x: 0, y: 0 }; case 6: return { x: 0, y: 180 }; case 3: return { x: 0, y: -90 }; case 4: return { x: 0, y: 90 }; case 2: return { x: -90, y: 0 }; case 5: return { x: 90,  y: 0 }; default: return { x: 0, y: 0 }; } }\n    async function animateText(element, text) { if(isSkipping) {element.innerHTML = text.replace(/\\n/g, '<br>'); return;} return new Promise(resolve => { if (textAnimation && textAnimation.isActive()) textAnimation.kill(); element.innerHTML = ''; textAnimation = gsap.to(element, { duration: text.length * 0.05, text: { value: text.replace(/\\n/g, '<br>'), newClass: \"typed-cursor\" }, ease: \"none\", onComplete: () => { gsap.delayedCall(0.7, () => { element.querySelector('.typed-cursor')?.remove(); resolve(); }); } }); }); }\n    function initDicePool() { const diceTemplate = document.querySelector('[data-id_template=\"dice-cube\"]'); if (!diceTemplate) return; for (let i = 0; i < MAX_DICE; i++) { const dieIconElement = document.createElement('div'); dieIconElement.className = 'dice-icon'; const newCube = diceTemplate.cloneNode(true); dieIconElement.appendChild(newCube); DOM.diceContainer.appendChild(dieIconElement); setupCube(newCube); dicePool.push(dieIconElement); } }\n    async function animateRoll(numDice, preCalculatedRolls, textToShowDuringRoll = \"投掷中...\") { return new Promise(resolve => { if (currentAnimation && currentAnimation.isActive()) currentAnimation.kill(); dicePool.forEach(die => die.style.display = 'none'); const activeDice = dicePool.slice(0, numDice); animateText(DOM.diceResultText, textToShowDuringRoll); activeDice.forEach(die => { die.style.display = 'flex'; die.className = 'dice-icon'; }); const masterTl = gsap.timeline({ onComplete: () => { if(isSkipping) DOM.diceResultText.innerHTML = ''; resolve(preCalculatedRolls); }}); currentAnimation = masterTl; activeDice.forEach((dieElement, i) => { const dieCube = dieElement.querySelector('.dice-cube'); const visualRoll = preCalculatedRolls[i]; const targetRotation = getRotationForFace(visualRoll); const dieTimeline = gsap.timeline(); dieTimeline.to(dieCube, { rotationX: `+=${gsap.utils.random(720, 1080)}`, rotationY: `+=${gsap.utils.random(720, 1080)}`, duration: 1.8, ease: \"power2.in\" }).to(dieCube, { rotationX: targetRotation.x, rotationY: targetRotation.y, duration: 0.7, ease: \"power4.out\" }); masterTl.add(dieTimeline, 0); }); }); }\n    \n    const debouncedUpdate = debounce(updateUI, 400);\n    [DOM.nameInput, DOM.genderInput, DOM.ageInput, DOM.ocDetailsInput].forEach(el => el.addEventListener('input', debouncedUpdate));\n    \n    DOM.skipAnimationBtn.addEventListener('click', () => {\n        isSkipping = true;\n        if (currentAnimation && currentAnimation.isActive()) currentAnimation.progress(1);\n        if (textAnimation && textAnimation.isActive()) textAnimation.progress(1);\n    });\n\n    $('#roll-background-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const rolls = [roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6()];\n        await animateRoll(6, rolls, '投掷 经历... (2d6 x 3)');\n        \n        const sums = { origin: rolls[0] + rolls[1], past: rolls[2] + rolls[3], encounter: rolls[4] + rolls[5] };\n        \n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `出身: ${rolls[0]} + ${rolls[1]} = ${sums.origin}\\n(${backgroundData.origin[character.race][sums.origin].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `来历: ${rolls[2]} + ${rolls[3]} = ${sums.past}\\n(${backgroundData.past[sums.past].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(4, 6), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `邂逅: ${rolls[4]} + ${rolls[5]} = ${sums.encounter}\\n(${backgroundData.encounter[sums.encounter]})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        character.background.origin = backgroundData.origin[character.race][sums.origin];\n        character.background.past = backgroundData.past[sums.past];\n        character.background.encounter = backgroundData.encounter[sums.encounter];\n        DOM.bgOrigin.textContent = character.background.origin.name;\n        DOM.bgPast.textContent = character.background.past.name;\n        DOM.bgEncounter.textContent = character.background.encounter;\n        DOM.backgroundDisplay.style.display = 'block';\n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        updateUI(true);\n    });\n\n    $('#roll-attributes-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const attrRolls = raceData[character.race].attr_rolls;\n        const allCalculatedRolls = [];\n\n        // Prepare race-based attributes\n        for (const attr in attrRolls) {\n            const formula = attrRolls[attr];\n            const modifier = parseInt(formula.split('d3')[1] || '0');\n            const { d6, d3 } = roll1D3();\n            const finalValue = Math.max(0, d3 + modifier);\n            character.attributes[attr] = finalValue;\n            allCalculatedRolls.push({ attr, formula, d6, d3, modifier, finalValue });\n        }\n        \n        // Prepare \"Potential\" attribute\n        const potentialValue = Math.floor(Math.random() * 3) + 1;\n        const d6ForPotential = (potentialValue * 2) - 1; // Map 1,2,3 to d6 faces 1,3,5 for animation\n        character.attributes['潜力'] = potentialValue;\n        allCalculatedRolls.push({\n            attr: '潜力',\n            formula: '1-3', // Just a descriptor\n            d6: d6ForPotential,\n            finalValue: potentialValue\n        });\n        \n        // Animate all rolls sequentially\n        for (const roll of allCalculatedRolls) {\n            await animateRoll(1, [roll.d6], `投掷 ${roll.attr}...`);\n            if (isSkipping) break;\n\n            gsap.to(dicePool[0], { className: 'dice-icon highlight', duration: 0.3 });\n            \n            let resultText;\n            if (roll.attr === '潜力') {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.finalValue}`;\n            } else {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.d3} ${roll.modifier >= 0 ? '+' : ''} ${roll.modifier} = ${roll.finalValue}`;\n            }\n            await animateText(DOM.diceResultText, resultText);\n            \n            await updateUI();\n            \n            if (isSkipping) break;\n            \n            await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        await updateUI();\n    });\n\n    DOM.raceSelect.addEventListener('change', () => {\n        DOM.backgroundDisplay.style.display = 'none';\n        character.background = { origin: null, past: null, encounter: null };\n        Object.keys(character.attributes).forEach(k => character.attributes[k] = 0);\n        updateUI(true);\n    });\n\n    $('#submit-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        await updateUI(true);\n        \n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '未设定';\n        \n        const finalCharacterObject={ NAME:finalName, GENDER:character.gender||'未设定', AGE:formattedAge, RACE:character.race, ORIGIN: character.background.origin ? character.background.origin.name : '未知', PAST: character.background.past ? character.background.past.name : '未知', ENCOUNTER: character.background.encounter || '未知', SKILLS: uniqueSkills, OC_DETAILS:character.oc_details||'无', ...character.attributes, MONEY:character.money };\n        \n        const slashCommand=`/send <START>\\nAdmin:\\n这是一个TRPG开局，请为 User 生成一段详尽的背景故事。\\n\\n# 故事核心要求\\n请严格根据以下【角色完整设定】，撰写一段从角色童年到现在的成长故事。故事需要清晰地阐述是什么关键事件或心路历程，最终让他/她确立了要成为一名冒险者的志向。请在故事中自然地融入角色的种族、出身背景、技能和性格特点。\\n\\n# 角色完整设定\\n---\\n## 基础信息\\n- **姓名:** ${finalName}\\n- **性别:** ${character.gender||'未设定'}\\n- **年龄:** ${formattedAge}\\n- **种族:** ${character.race}\\n\\n## 经历\\n- **出身:** ${character.background.origin ? character.background.origin.name : '未知'}\\n- **来历:** ${character.background.past ? character.background.past.name : '未知'}\\n- **邂逅:** ${character.background.encounter || '未知'}\\n\\n## 背景与技能\\n- **初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n- **初始技能:** ${uniqueSkills.join(', ')||'无'}\\n\\n## 补充设定 (OC)\\n- **额外补充:** ${character.oc_details||'无'}\\n\\n## 能力值\\n- **力量:** ${character.attributes['力量']}\\n- **敏捷:** ${character.attributes['敏捷']}\\n- **感知:** ${character.attributes['感知']}\\n- **知识:** ${character.attributes['知识']}\\n- **魅力:** ${character.attributes['魅力']}\\n- **信仰力:** ${character.attributes['信仰力']}\\n- **魔力:** ${character.attributes['魔力']}\\n\\n## 初始资产\\n- **资金:** ${character.money} 银币\\n\\|\\n/trigger`; \n        \n        try {\n            if (typeof insertOrAssignVariables === 'function') {\n                await insertOrAssignVariables(finalCharacterObject);\n            } else {\n                console.log(\"SillyTavern Function 'insertOrAssignVariables' not found. Variables:\", finalCharacterObject);\n            }\n            if (typeof triggerSlash === 'function') {\n                await triggerSlash(slashCommand, 'Send');\n            } else { \n                console.log(\"SillyTavern Function 'triggerSlash' not found. Command will be copied to clipboard.\");\n                navigator.clipboard.writeText(slashCommand).then(() => {\n                    alert('角色指令已复制到剪贴板！');\n                });\n            }\n        } catch (error) {\n            console.error('与SillyTavern交互失败:', error);\n            alert('与SillyTavern交互失败，请查看浏览器控制台。');\n        }\n\n        e.target.innerHTML = \"契约成立！\";\n    });\n    \n    initDicePool();\n    Object.keys(raceData).forEach(key => DOM.raceSelect.add(new Option(key, key)));\n    Object.keys(character.attributes).forEach(key => {\n        const pointControl = document.createElement('div');\n        pointControl.className = 'point-control';\n        pointControl.innerHTML = `<span class=\"label\">${key}</span><input type=\"text\" id=\"attr-${key.replace(/\\s/g, '')}\" readonly value=\"0\">`; // ID santized just in case\n        DOM.attributesContainer.appendChild(pointControl);\n    });\n    // A small fix for renderAttributes to handle sanitized IDs\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key.replace(/\\s/g, '')}`).value = value; }); }\n    updateUI(true);\n});\n</script>\n\n</body>\n</html>\n```"
  },
  {
    "role": "user",
    "content": "```\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>哥布林杀手TRPG - 冒险者契约</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/gsap.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/TextPlugin.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.min.js\" defer></script>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Noto+Serif+SC:wght@400;700&family=Vollkorn:wght@400;700&family=Courier+Prime&display=swap\" rel=\"stylesheet\">\n\n    <style>\n        :root {\n            --leather-bg: #5a3a2a;\n            --dark-leather-bg: #3b2a1a;\n            --parchment-bg: #f5f5dc;\n            --parchment-bg-gradient: linear-gradient(165deg, #f7e9d7, #e6d5c3);\n            --text-color: #3d3d3d;\n            --heading-color: #4a3c2c;\n            --border-color: #7a5a4a;\n            --font-main: 'Vollkorn', 'Noto Serif SC', serif;\n            --font-display: 'Cinzel', 'Noto Serif SC', serif;\n            --font-code: 'Courier Prime', 'Courier New', monospace;\n            --dice-size: 5rem; \n        }\n\n        html { height: 100%; }\n        body {\n            background-color: #3a2e20;\n            font-family: var(--font-main);\n            color: var(--text-color);\n            margin: 0; padding: 20px;\n            box-sizing: border-box;\n            display: flex;\n            align-items: center; justify-content: center;\n            min-height: 100%;\n        }\n        *, *:before, *:after { box-sizing: inherit; }\n\n        .creator-wrapper {\n            width: 100%; max-width: 900px;\n            margin: 0;\n            background: var(--parchment-bg-gradient);\n            border: 12px solid #8b7355;\n            border-radius: 8px;\n            box-shadow: 0 0 40px rgba(139, 115, 85, 0.3), inset 0 0 30px rgba(255, 255, 255, 0.4);\n            position: relative;\n            overflow: hidden;\n            padding: 25px;\n            display: flex; flex-direction: column;\n            max-height: 95vh;\n        }\n\n        .border-flow, .inner-border { position: absolute; pointer-events: none; }\n        .border-flow { top: 0; left: 0; right: 0; bottom: 0; background: linear-gradient(90deg, rgba(139,115,85,0.1) 1px, transparent 1px), linear-gradient(0deg, rgba(139,115,85,0.1) 1px, transparent 1px); background-size: 20px 20px; animation: borderFlow 15s linear infinite; }\n        .inner-border { top: 5px; left: 5px; right: 5px; bottom: 5px; border: 3px solid rgba(139,115,85,0.3); border-radius: 5px; }\n        @keyframes borderFlow { from { background-position: 0 0; } to { background-position: 20px 20px; } }\n\n        .creator-header {\n            text-align: center;\n            padding: 10px;\n            margin-bottom: 25px;\n            border-bottom: 2px solid rgba(139, 115, 85, 0.3);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 15px;\n        }\n        .creator-header h1 {\n            font-family: var(--font-display);\n            font-size: clamp(24px, 5vw, 32px);\n            margin: 0;\n            font-weight: 700;\n            letter-spacing: 3px;\n            color: var(--heading-color);\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.1);\n        }\n        \n        .title-char {\n            display: inline-block;\n            opacity: 0;\n            transform: translateY(30px);\n        }\n\n        .wax-seal {\n            width: 45px;\n            height: 45px;\n            display: inline-block;\n            background-color: #c0392b;\n            border-radius: 50%;\n            position: relative;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.4), inset 0 -2px 3px rgba(0,0,0,0.3);\n            opacity: 0;\n            transform: scale(0.5);\n            font-family: 'Cinzel', serif;\n            color: #e7a49c;\n            text-align: center;\n            font-size: 24px;\n            line-height: 45px;\n            font-weight: 700;\n        }\n        .wax-seal::before {\n            content: 'GS';\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.3);\n        }\n\n        .creator-scroll-content { overflow-y: auto; padding: 10px 20px 10px 10px; }\n        .creator-scroll-content::-webkit-scrollbar { width: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-track { background: rgba(139, 115, 85, 0.1); border-radius: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-thumb { background-color: #a89072; border-radius: 10px; border: 2px solid #f7e9d7; }\n        \n        .gs-creator-step { margin-bottom: 40px; overflow: hidden; }\n        .gs-creator-step h3 { font-family: var(--font-display); font-size: 1.5em; font-weight: 700; border-bottom: 1.5px solid var(--border-color); padding-bottom: 8px; margin-bottom: 20px; color: var(--heading-color); text-align: left; }\n        \n        .layout-grid { display: grid; grid-template-columns: 1fr; gap: 25px; align-items: flex-start; }\n        @media (min-width: 768px) {\n            .layout-grid { grid-template-columns: 1fr 280px; }\n        }\n\n        .form-container { text-align: left; }\n        .gs-form-group { margin-bottom: 16px; }\n        .gs-form-group label { display: block; margin-bottom: 6px; font-weight: bold; color: var(--heading-color); }\n        .form-input, .form-select, .form-textarea { width: 100%; padding: 10px; background-color: rgba(255, 255, 255, 0.5); border: 1px solid #a58e72; border-radius: 4px; color: #3d3d3d; font-family: var(--font-main); font-size: 1em; transition: all 0.2s ease-in-out; box-shadow: inset 1px 1px 2px rgba(0,0,0,0.1); }\n        .form-input:focus, .form-select:focus, .form-textarea:focus { outline: none; border-color: #8b7355; background-color: #fff; box-shadow: 0 0 5px rgba(139, 115, 85, 0.5); }\n        .form-textarea { resize: vertical; min-height: 100px; }\n\n        .grid-cols-2 {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 16px;\n        }\n        @media (min-width: 480px) {\n            .grid-cols-2 {\n                grid-template-columns: repeat(2, 1fr);\n            }\n        }\n\n        #attributes-container .point-control { display: flex; align-items: center; justify-content: space-between; margin-bottom: 8px; padding: 6px 8px; background: rgba(0,0,0,0.03); border-left: 3px solid rgba(139,115,85,0.2); border-radius: 4px; }\n        #attributes-container .label { font-weight: bold; color: var(--heading-color); }\n        #attributes-container input[readonly] { width: 40px; text-align: center; font-weight: bold; font-size: 1.2em; font-family: var(--font-display); color: #a02c2c; border: none; background-color: transparent; box-shadow: none; padding: 0; }\n        \n        .attributes-grid {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 0 16px;\n        }\n        @media (min-width: 480px) {\n            .attributes-grid {\n                grid-template-columns: 1fr 1fr;\n            }\n        }\n        \n        .skills-display p { background-color: rgba(0,0,0,0.05); border-left: 3px solid var(--border-color); padding: 10px 15px; margin-top: 10px; font-size: 0.95em; border-radius: 0 4px 4px 0; }\n        .skills-display strong { color: #8b5b4b; font-family: var(--font-display); }\n        .skills-display ul { list-style: none; padding-left: 0; margin-top: 8px; font-size: 0.9em; }\n        .skills-display li { margin-bottom: 4px; }\n\n        #character-summary { background-color: #e9e4d9; font-family: var(--font-code); line-height: 1.6; height: 250px; color: #2c2a2a; }\n        \n        .gs-button { width: 100%; background-color: #8b7355; color: var(--parchment-bg); border: 2px solid var(--dark-leather-bg); border-radius: 5px; padding: 12px 20px; font-family: var(--font-display); font-size: 1.2em; font-weight: 700; cursor: pointer; margin-top: 10px; transition: all 0.3s ease; box-shadow: 0 3px 5px rgba(0,0,0,0.3); }\n        .gs-button:hover { background-color: #a0886c; transform: translateY(-2px); box-shadow: 0 5px 8px rgba(0,0,0,0.3); }\n        .gs-button:disabled { background-color: #9e9e9e; border-color: #757575; cursor: not-allowed; transform: none; box-shadow: none; opacity: 0.6; }\n        .action-button { background-color: #6d5b4b; font-size: 1em; padding: 10px 15px; margin-top: 0; margin-bottom: 10px; width: auto; }\n        \n        .background-display { margin-top: 15px; padding: 15px; border: 1px dashed var(--border-color); border-radius: 5px; background: rgba(0,0,0,0.02); }\n        .background-display p { margin: 0 0 8px; }\n        .background-display span { font-weight: bold; color: var(--heading-color); }\n        \n        #radar-chart-container { \n            max-width: 100%;\n        }\n        @media (min-width: 768px) {\n            #radar-chart-container {\n                position: sticky;\n                top: 0;\n                padding-top: 45px;\n            }\n        }\n\n        pre.mermaid { \n            font-family: var(--font-main); \n            background: rgba(0,0,0,0.02); \n            border: 1px solid rgba(139,115,85,0.1); \n            padding: 10px; \n            border-radius: 5px; \n            overflow: auto;\n            transition: opacity 0.3s ease-in-out;\n        }\n        pre.mermaid.loading { opacity: 0.5; pointer-events: none; }\n\n        pre.mermaid > svg {\n            max-width: 100%;\n            height: auto;\n        }\n\n        #dice-overlay {\n            position: fixed; top: 0; left: 0; width: 100%; height: 100%;\n            background: rgba(0,0,0,0.8); backdrop-filter: blur(5px);\n            display: none; align-items: center; justify-content: center; flex-direction: column;\n            z-index: 100;\n            color: #fff; text-shadow: 0 0 10px #000;\n        }\n\n        .dice-container {\n            display: flex; flex-wrap: wrap; justify-content: center;\n            gap: 2rem; margin-bottom: 2rem;\n            max-width: 600px;\n        }\n        \n        .dice-icon {\n            width: var(--dice-size); height: var(--dice-size);\n            perspective: 800px;\n            transform-style: preserve-3d;\n            display: none;\n        }\n        .dice-icon.highlight {\n            transform: scale(1.15);\n            filter: drop-shadow(0 0 15px #FFEB3B);\n            transition: transform 0.3s ease, filter 0.3s ease;\n        }\n\n        .dice-cube {\n            width: 100%; height: 100%;\n            position: relative;\n            transform-style: preserve-3d;\n            transform: translateZ(calc(var(--dice-size) / -2));\n        }\n        \n        .dice-face {\n            position: absolute;\n            width: var(--dice-size); height: var(--dice-size);\n            background-color: rgba(255, 255, 255, 0.98);\n            border: 1.5px solid #857e72;\n            border-radius: 12%;\n        }\n\n        .pips-container {\n            width: 100%; height: 100%;\n            position: relative; \n        }\n        .pip {\n            width: 22%; height: 22%; \n            background-color: #3d352e;\n            border-radius: 50%;\n            box-shadow: inset 0 1px 3px rgba(0,0,0,0.5);\n            position: absolute; \n        }\n        \n        #dice-result-text { \n            font-family: var(--font-display); \n            font-size: 2.2em;\n            color: #FFEB3B; \n            text-shadow: 0 0 12px #FFEB3B; \n            min-height: 2em;\n            line-height: 1.2;\n            text-align: center; \n        }\n        \n        #skip-animation-btn {\n            position: absolute;\n            bottom: 30px;\n            font-size: 1em;\n            padding: 8px 20px;\n            width: auto;\n            background-color: rgba(0,0,0,0.3);\n            border-color: rgba(255,255,255,0.5);\n            color: rgba(255,255,255,0.8);\n        }\n        #skip-animation-btn:hover {\n            background-color: rgba(0,0,0,0.5);\n            color: #fff;\n        }\n\n        .typed-cursor {\n            opacity: 1;\n            animation: typed-blink 0.7s infinite;\n        }\n        @keyframes typed-blink{\n            0% { opacity: 1; }\n            50% { opacity: 0; }\n            100% { opacity: 1; }\n        }\n        \n        .validation-message {\n            text-align: center;\n            color: #b71c1c;\n            font-size: 0.9em;\n            font-weight: bold;\n            margin-top: -5px;\n            margin-bottom: 10px;\n            height: 1.2em;\n            opacity: 0;\n            will-change: transform, opacity;\n        }\n\n        #credits-screen {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            pointer-events: none;\n            opacity: 0;\n        }\n\n        #credits-screen p {\n            font-family: var(--font-display);\n            font-size: 2em;\n            color: #f5f5dc;\n            text-shadow: 0 0 8px rgba(245, 245, 220, 0.7);\n        }\n    </style>\n</head>\n<body>\n\n<div class=\"creator-wrapper\">\n    <div class=\"border-flow\"></div>\n    <div class=\"inner-border\"></div>\n    <header class=\"creator-header\">\n        <h1 id=\"main-title\">冒险者契约登记</h1>\n        <div id=\"wax-seal\" class=\"wax-seal\"></div>\n    </header>\n\n    <div class=\"creator-scroll-content\">\n        <div class=\"gs-creator-container\">\n            <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第一步：身份确认</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-name-input\">姓名</label><input id=\"char-name-input\" type=\"text\" placeholder=\"可留空，默认为 {{user}}\" class=\"form-input\"></div>\n                    <div class=\"grid-cols-2 gsap-content-item\">\n                        <div class=\"gs-form-group\"><label for=\"char-gender-input\">性别</label><input id=\"char-gender-input\" type=\"text\" placeholder=\"例如: 男性/女性/双性/无性/……\" class=\"form-input\"></div>\n                        <div class=\"gs-form-group\"><label for=\"char-age-input\">年龄</label><input id=\"char-age-input\" type=\"number\" placeholder=\"可参照种族说明\" class=\"form-input\"></div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-race-select\">种族</label><select id=\"char-race-select\" class=\"form-select\"></select></div>\n                    <div class=\"gs-form-group gsap-content-item\">\n                        <label>经历 (出身/来历/邂逅)</label>\n                        <button id=\"roll-background-btn\" class=\"gs-button action-button\">🎲 投骰决定经历</button>\n                        <div id=\"background-display\" class=\"background-display\" style=\"display: none;\">\n                            <p>出身: <span id=\"bg-origin\"></span></p>\n                            <p>来历: <span id=\"bg-past\"></span></p>\n                            <p>邂逅: <span id=\"bg-encounter\"></span></p>\n                        </div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"oc-details-input\">身体特征与补充</label><textarea id=\"oc-details-input\" placeholder=\"发色、瞳色、体型、性格、背景故事构思...\" class=\"form-textarea\"></textarea></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第二步：能力值与技能</h3>\n                <div class=\"layout-grid\">\n                    <div class=\"form-container gsap-content-item\">\n                        <button id=\"roll-attributes-btn\" class=\"gs-button action-button\">🎲 投骰决定能力值</button>\n                        <div id=\"attributes-container\" class=\"attributes-grid\"></div>\n                        <div id=\"skills-and-desc-container\" class=\"skills-display\"></div>\n                    </div>\n                    <div id=\"radar-chart-container\" class=\"gsap-content-item\"><pre class=\"mermaid\" id=\"radar-chart\"></pre></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第三步：完成登记</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"character-summary\">角色卡预览</label><textarea id=\"character-summary\" rows=\"12\" readonly class=\"form-textarea\"></textarea></div>\n                    <button id=\"submit-btn\" class=\"gs-button gsap-content-item\" disabled>确认登记，开始冒险</button>\n                    <div id=\"validation-message\" class=\"validation-message\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div id=\"credits-screen\">\n    <p>作者 𝙀𝙡𝙖𝙞𝙣𝙖𝙙𝙚𝙨</p>\n</div>\n\n<div id=\"dice-overlay\">\n    <div class=\"dice-container\" id=\"dice-container\"></div>\n    <div id=\"dice-result-text\"></div>\n    <button id=\"skip-animation-btn\" class=\"gs-button\">跳过动画</button>\n</div>\n\n<div id=\"dice-templates\" style=\"display:none;\">\n    <div class=\"dice-cube\" data-id_template=\"dice-cube\">\n        <div class=\"dice-face face-front\" data-face=\"1\"><div class=\"pips-container\"><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-back\" data-face=\"6\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-right\" data-face=\"3\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-left\" data-face=\"4\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-top\" data-face=\"2\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-bottom\" data-face=\"5\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n    </div>\n</div>\n\n<script>\n// --- MODIFIED DATA ---\nconst raceData = {\n    '凡人': { attr_rolls: { '力量': '1d3+1', '敏捷': '1d3', '感知': '1d3', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3+2', '魔力': '1d3' }, skills: ['过载行动(初级)', '武器:投掷武器(初级)', '长距离移动(初级)']},\n    '矿人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3', '感知': '1d3+2', '知识': '1d3-1', '魅力': '1d3+1', '信仰力': '1d3+1', '魔力': '1d3-1' }, skills: ['治愈适性(初级)', '夜视(初级)', '锻造(初级)']},\n    '森人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+1', '感知': '1d3+1', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3-1', '魔力': '1d3+1' }, skills: ['武器:弩弓(初级)', '夜视(初级)', '精灵宠儿(初级)']},\n    '蜥蜴人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3+1', '感知': '1d3', '知识': '1d3', '魅力': '1d3+1', '信仰力': '1d3', '魔力': '1d3' }, skills: ['免疫强化(初级)', '夜视(初级)', '龙族血统(初级)']},\n    '圃人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+2', '感知': '1d3+1', '知识': '1d3', '魅力': '1d3-1', '信仰力': '1d3', '魔力': '1d3+2' }, skills: ['隐匿(初级)', '先发制人(初级)', '烹饪(初级)']}\n};\nconst backgroundData = {\n    origin: { \n        '凡人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '学者', class: '魔术师', level: 1, skills: ['文献调查(初级)'] }, 6: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 7: { name: '农民', skills: ['生产业:农业(初级)', '强健(初级)'] }, 8: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '骑士', class: '战士', level: 1, skills: ['骑乘(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n        '矿人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 6: { name: '酒馆老板', class: '战士', level: 1, skills: ['观察(初级)'] }, 7: { name: '铁匠', skills: ['工匠:锻造(初级)', '手工(初级)'] }, 8: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '碎盾者', class: '战士', level: 1, skills: ['强击攻击·斩(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n    },\n    past: { 2: { name: '奴隶', skills: ['劳动(初级)'] }, 3: { name: '牢狱', skills: ['犯罪知识(初级)'] }, 4: { name: '战场', skills: ['沉着冷静(初级)'] }, 5: { name: '神殿', skills: ['神学(初级)'] }, 6: { name: '孤儿', skills: ['忍耐(初级)'] }, 7: { name: '平顺', skills: ['幸运(初级)'] }, 8: { name: '贫困', skills: ['生存术(初级)'] }, 9: { name: '学校', skills: ['博识(初级)'] }, 10: { name: '深闺', skills: ['无偏见(初级)'] }, 11: { name: '奢华', skills: ['鉴定(初级)'] }, 12: { name: '宫廷', skills: ['礼仪(初级)'] }},\n    encounter: { 2: '宿敌', 3: '上司', 4: '后辈', 5: '交易对象', 6: '下属', 7: '家人', 8: '挚友', 9: '前辈', 10: '未婚夫/妻', 11: '劲敌', 12: '师父' }\n};\nbackgroundData.origin['森人'] = backgroundData.origin['凡人']; backgroundData.origin['蜥蜴人'] = backgroundData.origin['凡人']; backgroundData.origin['圃人'] = backgroundData.origin['凡人'];\nconst character = {\n    name: '', gender: '', age: '', oc_details: '', race: '凡人',\n    background: { origin: null, past: null, encounter: null },\n    attributes: { '力量': 0, '敏捷': 0, '感知': 0, '知识': 0, '魅力': 0, '信仰力': 0, '魔力': 0, '潜力': 0 },\n    skills: [], classes: {}, money: 0, _lastAttributesForChart: '',\n};\n// --- END MODIFIED DATA ---\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    gsap.registerPlugin(TextPlugin);\n    mermaid.initialize({ startOnLoad: true, theme: 'base', themeVariables: {\n        '--mermaid-font-family': \"'Vollkorn', 'Noto Serif SC', serif\",\n        primaryColor: '#f7e9d7', primaryTextColor: '#3d3d3d', lineColor: '#8b7355', textColor: '#4a3c2c',\n    }});\n    \n    const $ = (s) => document.querySelector(s);\n    const roll1D6 = () => Math.floor(Math.random() * 6) + 1;\n    const roll1D3 = () => {\n        const d6 = roll1D6();\n        if (d6 <= 2) return { d6, d3: 1 };\n        if (d6 <= 4) return { d6, d3: 2 };\n        return { d6, d3: 3 };\n    };\n    const rollDiceString = (diceString) => { const p=diceString.split('*');const d=p[0];const m=parseInt(p[1])||1;if(!d.includes('d'))return 0;const[n,s]=d.split('d').map(Number);let t=0;for(let i=0;i<n;i++){t+=Math.floor(Math.random()*s)+1;}return t*m; };\n    const formatAge = (ageValue) => { if (!ageValue && ageValue !== 0) return ageValue; const num = Number(ageValue); if (isNaN(num)) return ageValue; if (Math.abs(num) >= 1_000_000) return num.toExponential(2); return ageValue; };\n    const debounce = (func, delay) => { let timeout; return function(...args) { clearTimeout(timeout); timeout = setTimeout(() => func.apply(this, args), delay); }; };\n    const diceUnicode = ['\\u2680', '\\u2681', '\\u2682', '\\u2683', '\\u2684', '\\u2685'];\n\n    const DOM = {\n        nameInput: $('#char-name-input'), genderInput: $('#char-gender-input'), ageInput: $('#char-age-input'),\n        ocDetailsInput: $('#oc-details-input'), raceSelect: $('#char-race-select'), attributesContainer: $('#attributes-container'),\n        skillsContainer: $('#skills-and-desc-container'), radarChart: $('#radar-chart'), summarySheet: $('#character-summary'),\n        diceOverlay: $('#dice-overlay'), diceContainer: $('#dice-container'), diceResultText: $('#dice-result-text'),\n        backgroundDisplay: $('#background-display'), bgOrigin: $('#bg-origin'), bgPast: $('#bg-past'), bgEncounter: $('#bg-encounter'),\n        skipAnimationBtn: $('#skip-animation-btn'),\n        submitBtn: $('#submit-btn'),\n        validationMessage: $('#validation-message'),\n    };\n    \n    const dicePool = []; const MAX_DICE = 6;\n    let currentAnimation = null; let textAnimation = null; let isSkipping = false;\n    let currentValidationMessage = '';\n    \n    function validateAndToggleButton() {\n        let newMessage = '';\n        if (!character.age || String(character.age).trim() === '') {\n            newMessage = '请填写您的冒险者年龄。';\n        } else if (!character.gender || !character.gender.trim()) {\n            newMessage = '请设定冒险者的性别。';\n        } else if (!character.background.origin) {\n            newMessage = '请投骰决定您的冒险者经历。';\n        } else if (Object.values(character.attributes).every(val => val === 0)) {\n            newMessage = '请投骰决定您的能力值。';\n        }\n\n        if (newMessage === currentValidationMessage) return;\n        currentValidationMessage = newMessage;\n\n        if (newMessage) {\n            DOM.submitBtn.disabled = true;\n            DOM.validationMessage.textContent = newMessage;\n            gsap.fromTo(DOM.validationMessage, { autoAlpha: 0, scale: 0.8 }, { autoAlpha: 1, scale: 1, duration: 0.4, ease: 'elastic.out(1, 0.75)' });\n        } else {\n            DOM.submitBtn.disabled = false;\n            gsap.to(DOM.validationMessage, { autoAlpha: 0, duration: 0.3 });\n        }\n    }\n    function updateCharacterDataFromDOM() { character.name = DOM.nameInput.value; character.gender = DOM.genderInput.value; character.age = DOM.ageInput.value; character.oc_details = DOM.ocDetailsInput.value; character.race = DOM.raceSelect.value; }\n    function renderSkills() { const uniqueSkills = [...new Set(character.skills)]; DOM.skillsContainer.innerHTML = `<p><strong>天赋与习得技能:</strong></p><ul>${uniqueSkills.map(s => `<li>- ${s}</li>`).join('')}</ul>`; }\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key}`).value = value; }); }\n    function renderSummary() {\n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '?';\n        const originText = `出身:${character.background.origin ? character.background.origin.name : '?'}`;\n        const pastText = `来历:${character.background.past ? character.background.past.name : '?'}`;\n        const encounterText = `邂逅:${character.background.encounter || '?'}`;\n        let summary = `### 《哥布林杀手TRPG》冒险者登记卡\\n` + `**姓名:** ${finalName} | **种族:** ${character.race} | **性别:** ${character.gender || '?'} | **年龄:** ${formattedAge}\\n` + `**经历:** ${originText} / ${pastText} / ${encounterText}\\n` + `**初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n` + `**初始技能:** ${uniqueSkills.join(', ') || '无'}\\n`; if (character.oc_details) { summary += `**身体特征与补充:** ${character.oc_details}\\n`; } summary += `---\\n**能力值:**\\n`; summary += Object.entries(character.attributes).map(([key, value]) => `- ${key}: ${value}`).join('\\n'); summary += `\\n**持有资金:** ${character.money} 银币`;\n        DOM.summarySheet.value = summary.replace(/### /g, '').replace(/\\*\\*/g, '').replace(/---/g, '\\n────────────────────\\n').replace(/- /g, '  ');\n        DOM.summarySheet.setAttribute('data-raw', summary);\n    }\n    async function renderRadarChartIfNeeded() { const currentAttributesString = JSON.stringify(character.attributes); if (currentAttributesString === character._lastAttributesForChart) return; DOM.radarChart.classList.add('loading'); const radarSyntax = `radar-beta\\ntitle 能力值分布\\naxis a[\"力量 ${character.attributes['力量']}\"]\\naxis b[\"敏捷 ${character.attributes['敏捷']}\"]\\naxis c[\"感知 ${character.attributes['感知']}\"]\\naxis d[\"知识 ${character.attributes['知识']}\"]\\naxis e[\"魅力 ${character.attributes['魅力']}\"]\\naxis f[\"信仰 ${character.attributes['信仰力']}\"]\\naxis g[\"魔力 ${character.attributes['魔力']}\"]\\naxis h[\"潜力 ${character.attributes['潜力']}\"]\\ncurve current[\"能力\"]{${character.attributes['力量']},${character.attributes['敏捷']},${character.attributes['感知']},${character.attributes['知识']},${character.attributes['魅力']},${character.attributes['信仰力']},${character.attributes['魔力']},${character.attributes['潜力']}}\\nmax 10\\nmin 0`; DOM.radarChart.innerHTML = radarSyntax; DOM.radarChart.removeAttribute('data-processed'); try { await mermaid.run({ nodes: [DOM.radarChart] }); character._lastAttributesForChart = currentAttributesString; } catch(e) { console.error(\"Mermaid rendering error:\", e); } finally { DOM.radarChart.classList.remove('loading'); } }\n    async function updateUI(forceFullUpdate = false) { updateCharacterDataFromDOM(); if(forceFullUpdate) { character._lastAttributesForChart = ''; character.skills = []; character.classes = {}; character.money = 100; if(raceData[character.race].skills) character.skills.push(...raceData[character.race].skills); if (character.background.origin) { if (character.background.origin.skills) character.skills.push(...character.background.origin.skills); if (character.background.origin.class) character.classes[character.background.origin.class] = character.background.origin.level; if(character.background.origin.money) character.money += rollDiceString(character.background.origin.money); } if (character.background.past && character.background.past.skills) { character.skills.push(...character.background.past.skills); } } renderAttributes(); renderSkills(); renderSummary(); await renderRadarChartIfNeeded(); validateAndToggleButton(); }\n\n    const masterTl = gsap.timeline({ delay: 0.2 });\n    const title = $('#main-title');\n    title.innerHTML = title.textContent.split('').map(char => `<span class=\"title-char\">${char}</span>`).join('');\n    gsap.set(\".gsap-header-item, .gsap-content-item\", { autoAlpha: 0, y: 20 });\n    masterTl.to(\".title-char\", { autoAlpha: 1, y: 0, duration: 0.7, ease: \"power3.out\", stagger: 0.1 }).to(\"#wax-seal\", { autoAlpha: 1, scale: 1, duration: 0.6, ease: \"elastic.out(1, 0.7)\" }, \"-=0.5\");\n    document.querySelectorAll('.gs-creator-step').forEach((step, index) => { const stepTl = gsap.timeline(); stepTl.to(step.querySelector('.gsap-header-item'), { autoAlpha: 1, y: 0, duration: 0.6, ease: 'power2.out' }).to(step.querySelectorAll('.gsap-content-item'), { autoAlpha: 1, y: 0, duration: 0.5, ease: 'power2.out', stagger: 0.1 }, '-=0.4'); masterTl.add(stepTl, `-=${index === 0 ? 0.2 : 0.7}`); });\n    const pipPositions = { 1: [ { left: '50%', top: '50%' } ], 2: [ { left: '25%', top: '25%' }, { left: '75%', top: '75%' } ], 3: [ { left: '25%', top: '25%' }, { left: '50%', top: '50%' }, { left: '75%', top: '75%' } ], 4: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 5: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '50%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 6: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '50%' }, { left: '75%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ]};\n    function setupCube(cubeEl) { const size = 'calc(var(--dice-size) / 2)'; gsap.set(cubeEl.querySelector('.face-front'),  { transform: `rotateY(0deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-back'),   { transform: `rotateY(180deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-right'),  { transform: `rotateY(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-left'),   { transform: `rotateY(-90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-top'),   { transform: `rotateX(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-bottom'), { transform: `rotateX(-90deg) translateZ(${size})` }); const faces = cubeEl.querySelectorAll('.dice-face'); faces.forEach(face => { const faceNum = face.getAttribute('data-face'); const pips = face.querySelectorAll('.pip'); const positions = pipPositions[faceNum]; if (!pips.length || !positions) return; pips.forEach((pip, index) => { const pos = positions[index]; gsap.set(pip, { left: pos.left, top: pos.top, xPercent: -50, yPercent: -50 }); }); }); }\n    function getRotationForFace(faceValue) { switch (faceValue) { case 1: return { x: 0, y: 0 }; case 6: return { x: 0, y: 180 }; case 3: return { x: 0, y: -90 }; case 4: return { x: 0, y: 90 }; case 2: return { x: -90, y: 0 }; case 5: return { x: 90,  y: 0 }; default: return { x: 0, y: 0 }; } }\n    async function animateText(element, text) { if(isSkipping) {element.innerHTML = text.replace(/\\n/g, '<br>'); return;} return new Promise(resolve => { if (textAnimation && textAnimation.isActive()) textAnimation.kill(); element.innerHTML = ''; textAnimation = gsap.to(element, { duration: text.length * 0.05, text: { value: text.replace(/\\n/g, '<br>'), newClass: \"typed-cursor\" }, ease: \"none\", onComplete: () => { gsap.delayedCall(0.7, () => { element.querySelector('.typed-cursor')?.remove(); resolve(); }); } }); }); }\n    function initDicePool() { const diceTemplate = document.querySelector('[data-id_template=\"dice-cube\"]'); if (!diceTemplate) return; for (let i = 0; i < MAX_DICE; i++) { const dieIconElement = document.createElement('div'); dieIconElement.className = 'dice-icon'; const newCube = diceTemplate.cloneNode(true); dieIconElement.appendChild(newCube); DOM.diceContainer.appendChild(dieIconElement); setupCube(newCube); dicePool.push(dieIconElement); } }\n    async function animateRoll(numDice, preCalculatedRolls, textToShowDuringRoll = \"投掷中...\") { return new Promise(resolve => { if (currentAnimation && currentAnimation.isActive()) currentAnimation.kill(); dicePool.forEach(die => die.style.display = 'none'); const activeDice = dicePool.slice(0, numDice); animateText(DOM.diceResultText, textToShowDuringRoll); activeDice.forEach(die => { die.style.display = 'flex'; die.className = 'dice-icon'; }); const masterTl = gsap.timeline({ onComplete: () => { if(isSkipping) DOM.diceResultText.innerHTML = ''; resolve(preCalculatedRolls); }}); currentAnimation = masterTl; activeDice.forEach((dieElement, i) => { const dieCube = dieElement.querySelector('.dice-cube'); const visualRoll = preCalculatedRolls[i]; const targetRotation = getRotationForFace(visualRoll); const dieTimeline = gsap.timeline(); dieTimeline.to(dieCube, { rotationX: `+=${gsap.utils.random(720, 1080)}`, rotationY: `+=${gsap.utils.random(720, 1080)}`, duration: 1.8, ease: \"power2.in\" }).to(dieCube, { rotationX: targetRotation.x, rotationY: targetRotation.y, duration: 0.7, ease: \"power4.out\" }); masterTl.add(dieTimeline, 0); }); }); }\n    \n    const debouncedUpdate = debounce(updateUI, 400);\n    [DOM.nameInput, DOM.genderInput, DOM.ageInput, DOM.ocDetailsInput].forEach(el => el.addEventListener('input', debouncedUpdate));\n    \n    DOM.skipAnimationBtn.addEventListener('click', () => {\n        isSkipping = true;\n        if (currentAnimation && currentAnimation.isActive()) currentAnimation.progress(1);\n        if (textAnimation && textAnimation.isActive()) textAnimation.progress(1);\n    });\n\n    $('#roll-background-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const rolls = [roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6()];\n        await animateRoll(6, rolls, '投掷 经历... (2d6 x 3)');\n        \n        const sums = { origin: rolls[0] + rolls[1], past: rolls[2] + rolls[3], encounter: rolls[4] + rolls[5] };\n        \n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `出身: ${rolls[0]} + ${rolls[1]} = ${sums.origin}\\n(${backgroundData.origin[character.race][sums.origin].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `来历: ${rolls[2]} + ${rolls[3]} = ${sums.past}\\n(${backgroundData.past[sums.past].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(4, 6), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `邂逅: ${rolls[4]} + ${rolls[5]} = ${sums.encounter}\\n(${backgroundData.encounter[sums.encounter]})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        character.background.origin = backgroundData.origin[character.race][sums.origin];\n        character.background.past = backgroundData.past[sums.past];\n        character.background.encounter = backgroundData.encounter[sums.encounter];\n        DOM.bgOrigin.textContent = character.background.origin.name;\n        DOM.bgPast.textContent = character.background.past.name;\n        DOM.bgEncounter.textContent = character.background.encounter;\n        DOM.backgroundDisplay.style.display = 'block';\n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        updateUI(true);\n    });\n\n    $('#roll-attributes-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const attrRolls = raceData[character.race].attr_rolls;\n        const allCalculatedRolls = [];\n\n        // Prepare race-based attributes\n        for (const attr in attrRolls) {\n            const formula = attrRolls[attr];\n            const modifier = parseInt(formula.split('d3')[1] || '0');\n            const { d6, d3 } = roll1D3();\n            const finalValue = Math.max(0, d3 + modifier);\n            character.attributes[attr] = finalValue;\n            allCalculatedRolls.push({ attr, formula, d6, d3, modifier, finalValue });\n        }\n        \n        // Prepare \"Potential\" attribute\n        const potentialValue = Math.floor(Math.random() * 3) + 1;\n        const d6ForPotential = (potentialValue * 2) - 1; // Map 1,2,3 to d6 faces 1,3,5 for animation\n        character.attributes['潜力'] = potentialValue;\n        allCalculatedRolls.push({\n            attr: '潜力',\n            formula: '1-3', // Just a descriptor\n            d6: d6ForPotential,\n            finalValue: potentialValue\n        });\n        \n        // Animate all rolls sequentially\n        for (const roll of allCalculatedRolls) {\n            await animateRoll(1, [roll.d6], `投掷 ${roll.attr}...`);\n            if (isSkipping) break;\n\n            gsap.to(dicePool[0], { className: 'dice-icon highlight', duration: 0.3 });\n            \n            let resultText;\n            if (roll.attr === '潜力') {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.finalValue}`;\n            } else {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.d3} ${roll.modifier >= 0 ? '+' : ''} ${roll.modifier} = ${roll.finalValue}`;\n            }\n            await animateText(DOM.diceResultText, resultText);\n            \n            await updateUI();\n            \n            if (isSkipping) break;\n            \n            await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        await updateUI();\n    });\n\n    DOM.raceSelect.addEventListener('change', () => {\n        DOM.backgroundDisplay.style.display = 'none';\n        character.background = { origin: null, past: null, encounter: null };\n        Object.keys(character.attributes).forEach(k => character.attributes[k] = 0);\n        updateUI(true);\n    });\n\n    $('#submit-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        await updateUI(true);\n        \n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '未设定';\n        \n        const finalCharacterObject={ NAME:finalName, GENDER:character.gender||'未设定', AGE:formattedAge, RACE:character.race, ORIGIN: character.background.origin ? character.background.origin.name : '未知', PAST: character.background.past ? character.background.past.name : '未知', ENCOUNTER: character.background.encounter || '未知', SKILLS: uniqueSkills, OC_DETAILS:character.oc_details||'无', ...character.attributes, MONEY:character.money };\n        \n        const slashCommand=`/send <START>\\nAdmin:\\n这是一个TRPG开局，请为 User 生成一段详尽的背景故事。\\n\\n# 故事核心要求\\n请严格根据以下【角色完整设定】，撰写一段从角色童年到现在的成长故事。故事需要清晰地阐述是什么关键事件或心路历程，最终让他/她确立了要成为一名冒险者的志向。请在故事中自然地融入角色的种族、出身背景、技能和性格特点。\\n\\n# 角色完整设定\\n---\\n## 基础信息\\n- **姓名:** ${finalName}\\n- **性别:** ${character.gender||'未设定'}\\n- **年龄:** ${formattedAge}\\n- **种族:** ${character.race}\\n\\n## 经历\\n- **出身:** ${character.background.origin ? character.background.origin.name : '未知'}\\n- **来历:** ${character.background.past ? character.background.past.name : '未知'}\\n- **邂逅:** ${character.background.encounter || '未知'}\\n\\n## 背景与技能\\n- **初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n- **初始技能:** ${uniqueSkills.join(', ')||'无'}\\n\\n## 补充设定 (OC)\\n- **额外补充:** ${character.oc_details||'无'}\\n\\n## 能力值\\n- **力量:** ${character.attributes['力量']}\\n- **敏捷:** ${character.attributes['敏捷']}\\n- **感知:** ${character.attributes['感知']}\\n- **知识:** ${character.attributes['知识']}\\n- **魅力:** ${character.attributes['魅力']}\\n- **信仰力:** ${character.attributes['信仰力']}\\n- **魔力:** ${character.attributes['魔力']}\\n\\n## 初始资产\\n- **资金:** ${character.money} 银币\\n\\|\\n/trigger`; \n        \n        try {\n            if (typeof insertOrAssignVariables === 'function') {\n                await insertOrAssignVariables(finalCharacterObject);\n            } else {\n                console.log(\"SillyTavern Function 'insertOrAssignVariables' not found. Variables:\", finalCharacterObject);\n            }\n            if (typeof triggerSlash === 'function') {\n                await triggerSlash(slashCommand, 'Send');\n            } else { \n                console.log(\"SillyTavern Function 'triggerSlash' not found. Command will be copied to clipboard.\");\n                navigator.clipboard.writeText(slashCommand).then(() => {\n                    alert('角色指令已复制到剪贴板！');\n                });\n            }\n        } catch (error) {\n            console.error('与SillyTavern交互失败:', error);\n            alert('与SillyTavern交互失败，请查看浏览器控制台。');\n        }\n\n        e.target.innerHTML = \"契约成立！\";\n    });\n    \n    initDicePool();\n    Object.keys(raceData).forEach(key => DOM.raceSelect.add(new Option(key, key)));\n    Object.keys(character.attributes).forEach(key => {\n        const pointControl = document.createElement('div');\n        pointControl.className = 'point-control';\n        pointControl.innerHTML = `<span class=\"label\">${key}</span><input type=\"text\" id=\"attr-${key.replace(/\\s/g, '')}\" readonly value=\"0\">`; // ID santized just in case\n        DOM.attributesContainer.appendChild(pointControl);\n    });\n    // A small fix for renderAttributes to handle sanitized IDs\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key.replace(/\\s/g, '')}`).value = value; }); }\n    updateUI(true);\n});\n</script>\n\n</body>\n</html>\n```"
  },
  {
    "role": "user",
    "content": "```\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>哥布林杀手TRPG - 冒险者契约</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/gsap.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/TextPlugin.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.min.js\" defer></script>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Noto+Serif+SC:wght@400;700&family=Vollkorn:wght@400;700&family=Courier+Prime&display=swap\" rel=\"stylesheet\">\n\n    <style>\n        :root {\n            --leather-bg: #5a3a2a;\n            --dark-leather-bg: #3b2a1a;\n            --parchment-bg: #f5f5dc;\n            --parchment-bg-gradient: linear-gradient(165deg, #f7e9d7, #e6d5c3);\n            --text-color: #3d3d3d;\n            --heading-color: #4a3c2c;\n            --border-color: #7a5a4a;\n            --font-main: 'Vollkorn', 'Noto Serif SC', serif;\n            --font-display: 'Cinzel', 'Noto Serif SC', serif;\n            --font-code: 'Courier Prime', 'Courier New', monospace;\n            --dice-size: 5rem; \n        }\n\n        html { height: 100%; }\n        body {\n            background-color: #3a2e20;\n            font-family: var(--font-main);\n            color: var(--text-color);\n            margin: 0; padding: 20px;\n            box-sizing: border-box;\n            display: flex;\n            align-items: center; justify-content: center;\n            min-height: 100%;\n        }\n        *, *:before, *:after { box-sizing: inherit; }\n\n        .creator-wrapper {\n            width: 100%; max-width: 900px;\n            margin: 0;\n            background: var(--parchment-bg-gradient);\n            border: 12px solid #8b7355;\n            border-radius: 8px;\n            box-shadow: 0 0 40px rgba(139, 115, 85, 0.3), inset 0 0 30px rgba(255, 255, 255, 0.4);\n            position: relative;\n            overflow: hidden;\n            padding: 25px;\n            display: flex; flex-direction: column;\n            max-height: 95vh;\n        }\n\n        .border-flow, .inner-border { position: absolute; pointer-events: none; }\n        .border-flow { top: 0; left: 0; right: 0; bottom: 0; background: linear-gradient(90deg, rgba(139,115,85,0.1) 1px, transparent 1px), linear-gradient(0deg, rgba(139,115,85,0.1) 1px, transparent 1px); background-size: 20px 20px; animation: borderFlow 15s linear infinite; }\n        .inner-border { top: 5px; left: 5px; right: 5px; bottom: 5px; border: 3px solid rgba(139,115,85,0.3); border-radius: 5px; }\n        @keyframes borderFlow { from { background-position: 0 0; } to { background-position: 20px 20px; } }\n\n        .creator-header {\n            text-align: center;\n            padding: 10px;\n            margin-bottom: 25px;\n            border-bottom: 2px solid rgba(139, 115, 85, 0.3);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 15px;\n        }\n        .creator-header h1 {\n            font-family: var(--font-display);\n            font-size: clamp(24px, 5vw, 32px);\n            margin: 0;\n            font-weight: 700;\n            letter-spacing: 3px;\n            color: var(--heading-color);\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.1);\n        }\n        \n        .title-char {\n            display: inline-block;\n            opacity: 0;\n            transform: translateY(30px);\n        }\n\n        .wax-seal {\n            width: 45px;\n            height: 45px;\n            display: inline-block;\n            background-color: #c0392b;\n            border-radius: 50%;\n            position: relative;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.4), inset 0 -2px 3px rgba(0,0,0,0.3);\n            opacity: 0;\n            transform: scale(0.5);\n            font-family: 'Cinzel', serif;\n            color: #e7a49c;\n            text-align: center;\n            font-size: 24px;\n            line-height: 45px;\n            font-weight: 700;\n        }\n        .wax-seal::before {\n            content: 'GS';\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.3);\n        }\n\n        .creator-scroll-content { overflow-y: auto; padding: 10px 20px 10px 10px; }\n        .creator-scroll-content::-webkit-scrollbar { width: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-track { background: rgba(139, 115, 85, 0.1); border-radius: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-thumb { background-color: #a89072; border-radius: 10px; border: 2px solid #f7e9d7; }\n        \n        .gs-creator-step { margin-bottom: 40px; overflow: hidden; }\n        .gs-creator-step h3 { font-family: var(--font-display); font-size: 1.5em; font-weight: 700; border-bottom: 1.5px solid var(--border-color); padding-bottom: 8px; margin-bottom: 20px; color: var(--heading-color); text-align: left; }\n        \n        .layout-grid { display: grid; grid-template-columns: 1fr; gap: 25px; align-items: flex-start; }\n        @media (min-width: 768px) {\n            .layout-grid { grid-template-columns: 1fr 280px; }\n        }\n\n        .form-container { text-align: left; }\n        .gs-form-group { margin-bottom: 16px; }\n        .gs-form-group label { display: block; margin-bottom: 6px; font-weight: bold; color: var(--heading-color); }\n        .form-input, .form-select, .form-textarea { width: 100%; padding: 10px; background-color: rgba(255, 255, 255, 0.5); border: 1px solid #a58e72; border-radius: 4px; color: #3d3d3d; font-family: var(--font-main); font-size: 1em; transition: all 0.2s ease-in-out; box-shadow: inset 1px 1px 2px rgba(0,0,0,0.1); }\n        .form-input:focus, .form-select:focus, .form-textarea:focus { outline: none; border-color: #8b7355; background-color: #fff; box-shadow: 0 0 5px rgba(139, 115, 85, 0.5); }\n        .form-textarea { resize: vertical; min-height: 100px; }\n\n        .grid-cols-2 {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 16px;\n        }\n        @media (min-width: 480px) {\n            .grid-cols-2 {\n                grid-template-columns: repeat(2, 1fr);\n            }\n        }\n\n        #attributes-container .point-control { display: flex; align-items: center; justify-content: space-between; margin-bottom: 8px; padding: 6px 8px; background: rgba(0,0,0,0.03); border-left: 3px solid rgba(139,115,85,0.2); border-radius: 4px; }\n        #attributes-container .label { font-weight: bold; color: var(--heading-color); }\n        #attributes-container input[readonly] { width: 40px; text-align: center; font-weight: bold; font-size: 1.2em; font-family: var(--font-display); color: #a02c2c; border: none; background-color: transparent; box-shadow: none; padding: 0; }\n        \n        .attributes-grid {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 0 16px;\n        }\n        @media (min-width: 480px) {\n            .attributes-grid {\n                grid-template-columns: 1fr 1fr;\n            }\n        }\n        \n        .skills-display p { background-color: rgba(0,0,0,0.05); border-left: 3px solid var(--border-color); padding: 10px 15px; margin-top: 10px; font-size: 0.95em; border-radius: 0 4px 4px 0; }\n        .skills-display strong { color: #8b5b4b; font-family: var(--font-display); }\n        .skills-display ul { list-style: none; padding-left: 0; margin-top: 8px; font-size: 0.9em; }\n        .skills-display li { margin-bottom: 4px; }\n\n        #character-summary { background-color: #e9e4d9; font-family: var(--font-code); line-height: 1.6; height: 250px; color: #2c2a2a; }\n        \n        .gs-button { width: 100%; background-color: #8b7355; color: var(--parchment-bg); border: 2px solid var(--dark-leather-bg); border-radius: 5px; padding: 12px 20px; font-family: var(--font-display); font-size: 1.2em; font-weight: 700; cursor: pointer; margin-top: 10px; transition: all 0.3s ease; box-shadow: 0 3px 5px rgba(0,0,0,0.3); }\n        .gs-button:hover { background-color: #a0886c; transform: translateY(-2px); box-shadow: 0 5px 8px rgba(0,0,0,0.3); }\n        .gs-button:disabled { background-color: #9e9e9e; border-color: #757575; cursor: not-allowed; transform: none; box-shadow: none; opacity: 0.6; }\n        .action-button { background-color: #6d5b4b; font-size: 1em; padding: 10px 15px; margin-top: 0; margin-bottom: 10px; width: auto; }\n        \n        .background-display { margin-top: 15px; padding: 15px; border: 1px dashed var(--border-color); border-radius: 5px; background: rgba(0,0,0,0.02); }\n        .background-display p { margin: 0 0 8px; }\n        .background-display span { font-weight: bold; color: var(--heading-color); }\n        \n        #radar-chart-container { \n            max-width: 100%;\n        }\n        @media (min-width: 768px) {\n            #radar-chart-container {\n                position: sticky;\n                top: 0;\n                padding-top: 45px;\n            }\n        }\n\n        pre.mermaid { \n            font-family: var(--font-main); \n            background: rgba(0,0,0,0.02); \n            border: 1px solid rgba(139,115,85,0.1); \n            padding: 10px; \n            border-radius: 5px; \n            overflow: auto;\n            transition: opacity 0.3s ease-in-out;\n        }\n        pre.mermaid.loading { opacity: 0.5; pointer-events: none; }\n\n        pre.mermaid > svg {\n            max-width: 100%;\n            height: auto;\n        }\n\n        #dice-overlay {\n            position: fixed; top: 0; left: 0; width: 100%; height: 100%;\n            background: rgba(0,0,0,0.8); backdrop-filter: blur(5px);\n            display: none; align-items: center; justify-content: center; flex-direction: column;\n            z-index: 100;\n            color: #fff; text-shadow: 0 0 10px #000;\n        }\n\n        .dice-container {\n            display: flex; flex-wrap: wrap; justify-content: center;\n            gap: 2rem; margin-bottom: 2rem;\n            max-width: 600px;\n        }\n        \n        .dice-icon {\n            width: var(--dice-size); height: var(--dice-size);\n            perspective: 800px;\n            transform-style: preserve-3d;\n            display: none;\n        }\n        .dice-icon.highlight {\n            transform: scale(1.15);\n            filter: drop-shadow(0 0 15px #FFEB3B);\n            transition: transform 0.3s ease, filter 0.3s ease;\n        }\n\n        .dice-cube {\n            width: 100%; height: 100%;\n            position: relative;\n            transform-style: preserve-3d;\n            transform: translateZ(calc(var(--dice-size) / -2));\n        }\n        \n        .dice-face {\n            position: absolute;\n            width: var(--dice-size); height: var(--dice-size);\n            background-color: rgba(255, 255, 255, 0.98);\n            border: 1.5px solid #857e72;\n            border-radius: 12%;\n        }\n\n        .pips-container {\n            width: 100%; height: 100%;\n            position: relative; \n        }\n        .pip {\n            width: 22%; height: 22%; \n            background-color: #3d352e;\n            border-radius: 50%;\n            box-shadow: inset 0 1px 3px rgba(0,0,0,0.5);\n            position: absolute; \n        }\n        \n        #dice-result-text { \n            font-family: var(--font-display); \n            font-size: 2.2em;\n            color: #FFEB3B; \n            text-shadow: 0 0 12px #FFEB3B; \n            min-height: 2em;\n            line-height: 1.2;\n            text-align: center; \n        }\n        \n        #skip-animation-btn {\n            position: absolute;\n            bottom: 30px;\n            font-size: 1em;\n            padding: 8px 20px;\n            width: auto;\n            background-color: rgba(0,0,0,0.3);\n            border-color: rgba(255,255,255,0.5);\n            color: rgba(255,255,255,0.8);\n        }\n        #skip-animation-btn:hover {\n            background-color: rgba(0,0,0,0.5);\n            color: #fff;\n        }\n\n        .typed-cursor {\n            opacity: 1;\n            animation: typed-blink 0.7s infinite;\n        }\n        @keyframes typed-blink{\n            0% { opacity: 1; }\n            50% { opacity: 0; }\n            100% { opacity: 1; }\n        }\n        \n        .validation-message {\n            text-align: center;\n            color: #b71c1c;\n            font-size: 0.9em;\n            font-weight: bold;\n            margin-top: -5px;\n            margin-bottom: 10px;\n            height: 1.2em;\n            opacity: 0;\n            will-change: transform, opacity;\n        }\n\n        #credits-screen {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            pointer-events: none;\n            opacity: 0;\n        }\n\n        #credits-screen p {\n            font-family: var(--font-display);\n            font-size: 2em;\n            color: #f5f5dc;\n            text-shadow: 0 0 8px rgba(245, 245, 220, 0.7);\n        }\n    </style>\n</head>\n<body>\n\n<div class=\"creator-wrapper\">\n    <div class=\"border-flow\"></div>\n    <div class=\"inner-border\"></div>\n    <header class=\"creator-header\">\n        <h1 id=\"main-title\">冒险者契约登记</h1>\n        <div id=\"wax-seal\" class=\"wax-seal\"></div>\n    </header>\n\n    <div class=\"creator-scroll-content\">\n        <div class=\"gs-creator-container\">\n            <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第一步：身份确认</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-name-input\">姓名</label><input id=\"char-name-input\" type=\"text\" placeholder=\"可留空，默认为 {{user}}\" class=\"form-input\"></div>\n                    <div class=\"grid-cols-2 gsap-content-item\">\n                        <div class=\"gs-form-group\"><label for=\"char-gender-input\">性别</label><input id=\"char-gender-input\" type=\"text\" placeholder=\"例如: 男性/女性/双性/无性/……\" class=\"form-input\"></div>\n                        <div class=\"gs-form-group\"><label for=\"char-age-input\">年龄</label><input id=\"char-age-input\" type=\"number\" placeholder=\"可参照种族说明\" class=\"form-input\"></div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-race-select\">种族</label><select id=\"char-race-select\" class=\"form-select\"></select></div>\n                    <div class=\"gs-form-group gsap-content-item\">\n                        <label>经历 (出身/来历/邂逅)</label>\n                        <button id=\"roll-background-btn\" class=\"gs-button action-button\">🎲 投骰决定经历</button>\n                        <div id=\"background-display\" class=\"background-display\" style=\"display: none;\">\n                            <p>出身: <span id=\"bg-origin\"></span></p>\n                            <p>来历: <span id=\"bg-past\"></span></p>\n                            <p>邂逅: <span id=\"bg-encounter\"></span></p>\n                        </div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"oc-details-input\">身体特征与补充</label><textarea id=\"oc-details-input\" placeholder=\"发色、瞳色、体型、性格、背景故事构思...\" class=\"form-textarea\"></textarea></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第二步：能力值与技能</h3>\n                <div class=\"layout-grid\">\n                    <div class=\"form-container gsap-content-item\">\n                        <button id=\"roll-attributes-btn\" class=\"gs-button action-button\">🎲 投骰决定能力值</button>\n                        <div id=\"attributes-container\" class=\"attributes-grid\"></div>\n                        <div id=\"skills-and-desc-container\" class=\"skills-display\"></div>\n                    </div>\n                    <div id=\"radar-chart-container\" class=\"gsap-content-item\"><pre class=\"mermaid\" id=\"radar-chart\"></pre></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第三步：完成登记</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"character-summary\">角色卡预览</label><textarea id=\"character-summary\" rows=\"12\" readonly class=\"form-textarea\"></textarea></div>\n                    <button id=\"submit-btn\" class=\"gs-button gsap-content-item\" disabled>确认登记，开始冒险</button>\n                    <div id=\"validation-message\" class=\"validation-message\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div id=\"credits-screen\">\n    <p>作者 𝙀𝙡𝙖𝙞𝙣𝙖𝙙𝙚𝙨</p>\n</div>\n\n<div id=\"dice-overlay\">\n    <div class=\"dice-container\" id=\"dice-container\"></div>\n    <div id=\"dice-result-text\"></div>\n    <button id=\"skip-animation-btn\" class=\"gs-button\">跳过动画</button>\n</div>\n\n<div id=\"dice-templates\" style=\"display:none;\">\n    <div class=\"dice-cube\" data-id_template=\"dice-cube\">\n        <div class=\"dice-face face-front\" data-face=\"1\"><div class=\"pips-container\"><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-back\" data-face=\"6\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-right\" data-face=\"3\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-left\" data-face=\"4\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-top\" data-face=\"2\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-bottom\" data-face=\"5\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n    </div>\n</div>\n\n<script>\n// --- MODIFIED DATA ---\nconst raceData = {\n    '凡人': { attr_rolls: { '力量': '1d3+1', '敏捷': '1d3', '感知': '1d3', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3+2', '魔力': '1d3' }, skills: ['过载行动(初级)', '武器:投掷武器(初级)', '长距离移动(初级)']},\n    '矿人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3', '感知': '1d3+2', '知识': '1d3-1', '魅力': '1d3+1', '信仰力': '1d3+1', '魔力': '1d3-1' }, skills: ['治愈适性(初级)', '夜视(初级)', '锻造(初级)']},\n    '森人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+1', '感知': '1d3+1', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3-1', '魔力': '1d3+1' }, skills: ['武器:弩弓(初级)', '夜视(初级)', '精灵宠儿(初级)']},\n    '蜥蜴人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3+1', '感知': '1d3', '知识': '1d3', '魅力': '1d3+1', '信仰力': '1d3', '魔力': '1d3' }, skills: ['免疫强化(初级)', '夜视(初级)', '龙族血统(初级)']},\n    '圃人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+2', '感知': '1d3+1', '知识': '1d3', '魅力': '1d3-1', '信仰力': '1d3', '魔力': '1d3+2' }, skills: ['隐匿(初级)', '先发制人(初级)', '烹饪(初级)']}\n};\nconst backgroundData = {\n    origin: { \n        '凡人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '学者', class: '魔术师', level: 1, skills: ['文献调查(初级)'] }, 6: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 7: { name: '农民', skills: ['生产业:农业(初级)', '强健(初级)'] }, 8: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '骑士', class: '战士', level: 1, skills: ['骑乘(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n        '矿人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 6: { name: '酒馆老板', class: '战士', level: 1, skills: ['观察(初级)'] }, 7: { name: '铁匠', skills: ['工匠:锻造(初级)', '手工(初级)'] }, 8: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '碎盾者', class: '战士', level: 1, skills: ['强击攻击·斩(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n    },\n    past: { 2: { name: '奴隶', skills: ['劳动(初级)'] }, 3: { name: '牢狱', skills: ['犯罪知识(初级)'] }, 4: { name: '战场', skills: ['沉着冷静(初级)'] }, 5: { name: '神殿', skills: ['神学(初级)'] }, 6: { name: '孤儿', skills: ['忍耐(初级)'] }, 7: { name: '平顺', skills: ['幸运(初级)'] }, 8: { name: '贫困', skills: ['生存术(初级)'] }, 9: { name: '学校', skills: ['博识(初级)'] }, 10: { name: '深闺', skills: ['无偏见(初级)'] }, 11: { name: '奢华', skills: ['鉴定(初级)'] }, 12: { name: '宫廷', skills: ['礼仪(初级)'] }},\n    encounter: { 2: '宿敌', 3: '上司', 4: '后辈', 5: '交易对象', 6: '下属', 7: '家人', 8: '挚友', 9: '前辈', 10: '未婚夫/妻', 11: '劲敌', 12: '师父' }\n};\nbackgroundData.origin['森人'] = backgroundData.origin['凡人']; backgroundData.origin['蜥蜴人'] = backgroundData.origin['凡人']; backgroundData.origin['圃人'] = backgroundData.origin['凡人'];\nconst character = {\n    name: '', gender: '', age: '', oc_details: '', race: '凡人',\n    background: { origin: null, past: null, encounter: null },\n    attributes: { '力量': 0, '敏捷': 0, '感知': 0, '知识': 0, '魅力': 0, '信仰力': 0, '魔力': 0, '潜力': 0 },\n    skills: [], classes: {}, money: 0, _lastAttributesForChart: '',\n};\n// --- END MODIFIED DATA ---\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    gsap.registerPlugin(TextPlugin);\n    mermaid.initialize({ startOnLoad: true, theme: 'base', themeVariables: {\n        '--mermaid-font-family': \"'Vollkorn', 'Noto Serif SC', serif\",\n        primaryColor: '#f7e9d7', primaryTextColor: '#3d3d3d', lineColor: '#8b7355', textColor: '#4a3c2c',\n    }});\n    \n    const $ = (s) => document.querySelector(s);\n    const roll1D6 = () => Math.floor(Math.random() * 6) + 1;\n    const roll1D3 = () => {\n        const d6 = roll1D6();\n        if (d6 <= 2) return { d6, d3: 1 };\n        if (d6 <= 4) return { d6, d3: 2 };\n        return { d6, d3: 3 };\n    };\n    const rollDiceString = (diceString) => { const p=diceString.split('*');const d=p[0];const m=parseInt(p[1])||1;if(!d.includes('d'))return 0;const[n,s]=d.split('d').map(Number);let t=0;for(let i=0;i<n;i++){t+=Math.floor(Math.random()*s)+1;}return t*m; };\n    const formatAge = (ageValue) => { if (!ageValue && ageValue !== 0) return ageValue; const num = Number(ageValue); if (isNaN(num)) return ageValue; if (Math.abs(num) >= 1_000_000) return num.toExponential(2); return ageValue; };\n    const debounce = (func, delay) => { let timeout; return function(...args) { clearTimeout(timeout); timeout = setTimeout(() => func.apply(this, args), delay); }; };\n    const diceUnicode = ['\\u2680', '\\u2681', '\\u2682', '\\u2683', '\\u2684', '\\u2685'];\n\n    const DOM = {\n        nameInput: $('#char-name-input'), genderInput: $('#char-gender-input'), ageInput: $('#char-age-input'),\n        ocDetailsInput: $('#oc-details-input'), raceSelect: $('#char-race-select'), attributesContainer: $('#attributes-container'),\n        skillsContainer: $('#skills-and-desc-container'), radarChart: $('#radar-chart'), summarySheet: $('#character-summary'),\n        diceOverlay: $('#dice-overlay'), diceContainer: $('#dice-container'), diceResultText: $('#dice-result-text'),\n        backgroundDisplay: $('#background-display'), bgOrigin: $('#bg-origin'), bgPast: $('#bg-past'), bgEncounter: $('#bg-encounter'),\n        skipAnimationBtn: $('#skip-animation-btn'),\n        submitBtn: $('#submit-btn'),\n        validationMessage: $('#validation-message'),\n    };\n    \n    const dicePool = []; const MAX_DICE = 6;\n    let currentAnimation = null; let textAnimation = null; let isSkipping = false;\n    let currentValidationMessage = '';\n    \n    function validateAndToggleButton() {\n        let newMessage = '';\n        if (!character.age || String(character.age).trim() === '') {\n            newMessage = '请填写您的冒险者年龄。';\n        } else if (!character.gender || !character.gender.trim()) {\n            newMessage = '请设定冒险者的性别。';\n        } else if (!character.background.origin) {\n            newMessage = '请投骰决定您的冒险者经历。';\n        } else if (Object.values(character.attributes).every(val => val === 0)) {\n            newMessage = '请投骰决定您的能力值。';\n        }\n\n        if (newMessage === currentValidationMessage) return;\n        currentValidationMessage = newMessage;\n\n        if (newMessage) {\n            DOM.submitBtn.disabled = true;\n            DOM.validationMessage.textContent = newMessage;\n            gsap.fromTo(DOM.validationMessage, { autoAlpha: 0, scale: 0.8 }, { autoAlpha: 1, scale: 1, duration: 0.4, ease: 'elastic.out(1, 0.75)' });\n        } else {\n            DOM.submitBtn.disabled = false;\n            gsap.to(DOM.validationMessage, { autoAlpha: 0, duration: 0.3 });\n        }\n    }\n    function updateCharacterDataFromDOM() { character.name = DOM.nameInput.value; character.gender = DOM.genderInput.value; character.age = DOM.ageInput.value; character.oc_details = DOM.ocDetailsInput.value; character.race = DOM.raceSelect.value; }\n    function renderSkills() { const uniqueSkills = [...new Set(character.skills)]; DOM.skillsContainer.innerHTML = `<p><strong>天赋与习得技能:</strong></p><ul>${uniqueSkills.map(s => `<li>- ${s}</li>`).join('')}</ul>`; }\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key}`).value = value; }); }\n    function renderSummary() {\n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '?';\n        const originText = `出身:${character.background.origin ? character.background.origin.name : '?'}`;\n        const pastText = `来历:${character.background.past ? character.background.past.name : '?'}`;\n        const encounterText = `邂逅:${character.background.encounter || '?'}`;\n        let summary = `### 《哥布林杀手TRPG》冒险者登记卡\\n` + `**姓名:** ${finalName} | **种族:** ${character.race} | **性别:** ${character.gender || '?'} | **年龄:** ${formattedAge}\\n` + `**经历:** ${originText} / ${pastText} / ${encounterText}\\n` + `**初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n` + `**初始技能:** ${uniqueSkills.join(', ') || '无'}\\n`; if (character.oc_details) { summary += `**身体特征与补充:** ${character.oc_details}\\n`; } summary += `---\\n**能力值:**\\n`; summary += Object.entries(character.attributes).map(([key, value]) => `- ${key}: ${value}`).join('\\n'); summary += `\\n**持有资金:** ${character.money} 银币`;\n        DOM.summarySheet.value = summary.replace(/### /g, '').replace(/\\*\\*/g, '').replace(/---/g, '\\n────────────────────\\n').replace(/- /g, '  ');\n        DOM.summarySheet.setAttribute('data-raw', summary);\n    }\n    async function renderRadarChartIfNeeded() { const currentAttributesString = JSON.stringify(character.attributes); if (currentAttributesString === character._lastAttributesForChart) return; DOM.radarChart.classList.add('loading'); const radarSyntax = `radar-beta\\ntitle 能力值分布\\naxis a[\"力量 ${character.attributes['力量']}\"]\\naxis b[\"敏捷 ${character.attributes['敏捷']}\"]\\naxis c[\"感知 ${character.attributes['感知']}\"]\\naxis d[\"知识 ${character.attributes['知识']}\"]\\naxis e[\"魅力 ${character.attributes['魅力']}\"]\\naxis f[\"信仰 ${character.attributes['信仰力']}\"]\\naxis g[\"魔力 ${character.attributes['魔力']}\"]\\naxis h[\"潜力 ${character.attributes['潜力']}\"]\\ncurve current[\"能力\"]{${character.attributes['力量']},${character.attributes['敏捷']},${character.attributes['感知']},${character.attributes['知识']},${character.attributes['魅力']},${character.attributes['信仰力']},${character.attributes['魔力']},${character.attributes['潜力']}}\\nmax 10\\nmin 0`; DOM.radarChart.innerHTML = radarSyntax; DOM.radarChart.removeAttribute('data-processed'); try { await mermaid.run({ nodes: [DOM.radarChart] }); character._lastAttributesForChart = currentAttributesString; } catch(e) { console.error(\"Mermaid rendering error:\", e); } finally { DOM.radarChart.classList.remove('loading'); } }\n    async function updateUI(forceFullUpdate = false) { updateCharacterDataFromDOM(); if(forceFullUpdate) { character._lastAttributesForChart = ''; character.skills = []; character.classes = {}; character.money = 100; if(raceData[character.race].skills) character.skills.push(...raceData[character.race].skills); if (character.background.origin) { if (character.background.origin.skills) character.skills.push(...character.background.origin.skills); if (character.background.origin.class) character.classes[character.background.origin.class] = character.background.origin.level; if(character.background.origin.money) character.money += rollDiceString(character.background.origin.money); } if (character.background.past && character.background.past.skills) { character.skills.push(...character.background.past.skills); } } renderAttributes(); renderSkills(); renderSummary(); await renderRadarChartIfNeeded(); validateAndToggleButton(); }\n\n    const masterTl = gsap.timeline({ delay: 0.2 });\n    const title = $('#main-title');\n    title.innerHTML = title.textContent.split('').map(char => `<span class=\"title-char\">${char}</span>`).join('');\n    gsap.set(\".gsap-header-item, .gsap-content-item\", { autoAlpha: 0, y: 20 });\n    masterTl.to(\".title-char\", { autoAlpha: 1, y: 0, duration: 0.7, ease: \"power3.out\", stagger: 0.1 }).to(\"#wax-seal\", { autoAlpha: 1, scale: 1, duration: 0.6, ease: \"elastic.out(1, 0.7)\" }, \"-=0.5\");\n    document.querySelectorAll('.gs-creator-step').forEach((step, index) => { const stepTl = gsap.timeline(); stepTl.to(step.querySelector('.gsap-header-item'), { autoAlpha: 1, y: 0, duration: 0.6, ease: 'power2.out' }).to(step.querySelectorAll('.gsap-content-item'), { autoAlpha: 1, y: 0, duration: 0.5, ease: 'power2.out', stagger: 0.1 }, '-=0.4'); masterTl.add(stepTl, `-=${index === 0 ? 0.2 : 0.7}`); });\n    const pipPositions = { 1: [ { left: '50%', top: '50%' } ], 2: [ { left: '25%', top: '25%' }, { left: '75%', top: '75%' } ], 3: [ { left: '25%', top: '25%' }, { left: '50%', top: '50%' }, { left: '75%', top: '75%' } ], 4: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 5: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '50%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 6: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '50%' }, { left: '75%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ]};\n    function setupCube(cubeEl) { const size = 'calc(var(--dice-size) / 2)'; gsap.set(cubeEl.querySelector('.face-front'),  { transform: `rotateY(0deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-back'),   { transform: `rotateY(180deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-right'),  { transform: `rotateY(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-left'),   { transform: `rotateY(-90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-top'),   { transform: `rotateX(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-bottom'), { transform: `rotateX(-90deg) translateZ(${size})` }); const faces = cubeEl.querySelectorAll('.dice-face'); faces.forEach(face => { const faceNum = face.getAttribute('data-face'); const pips = face.querySelectorAll('.pip'); const positions = pipPositions[faceNum]; if (!pips.length || !positions) return; pips.forEach((pip, index) => { const pos = positions[index]; gsap.set(pip, { left: pos.left, top: pos.top, xPercent: -50, yPercent: -50 }); }); }); }\n    function getRotationForFace(faceValue) { switch (faceValue) { case 1: return { x: 0, y: 0 }; case 6: return { x: 0, y: 180 }; case 3: return { x: 0, y: -90 }; case 4: return { x: 0, y: 90 }; case 2: return { x: -90, y: 0 }; case 5: return { x: 90,  y: 0 }; default: return { x: 0, y: 0 }; } }\n    async function animateText(element, text) { if(isSkipping) {element.innerHTML = text.replace(/\\n/g, '<br>'); return;} return new Promise(resolve => { if (textAnimation && textAnimation.isActive()) textAnimation.kill(); element.innerHTML = ''; textAnimation = gsap.to(element, { duration: text.length * 0.05, text: { value: text.replace(/\\n/g, '<br>'), newClass: \"typed-cursor\" }, ease: \"none\", onComplete: () => { gsap.delayedCall(0.7, () => { element.querySelector('.typed-cursor')?.remove(); resolve(); }); } }); }); }\n    function initDicePool() { const diceTemplate = document.querySelector('[data-id_template=\"dice-cube\"]'); if (!diceTemplate) return; for (let i = 0; i < MAX_DICE; i++) { const dieIconElement = document.createElement('div'); dieIconElement.className = 'dice-icon'; const newCube = diceTemplate.cloneNode(true); dieIconElement.appendChild(newCube); DOM.diceContainer.appendChild(dieIconElement); setupCube(newCube); dicePool.push(dieIconElement); } }\n    async function animateRoll(numDice, preCalculatedRolls, textToShowDuringRoll = \"投掷中...\") { return new Promise(resolve => { if (currentAnimation && currentAnimation.isActive()) currentAnimation.kill(); dicePool.forEach(die => die.style.display = 'none'); const activeDice = dicePool.slice(0, numDice); animateText(DOM.diceResultText, textToShowDuringRoll); activeDice.forEach(die => { die.style.display = 'flex'; die.className = 'dice-icon'; }); const masterTl = gsap.timeline({ onComplete: () => { if(isSkipping) DOM.diceResultText.innerHTML = ''; resolve(preCalculatedRolls); }}); currentAnimation = masterTl; activeDice.forEach((dieElement, i) => { const dieCube = dieElement.querySelector('.dice-cube'); const visualRoll = preCalculatedRolls[i]; const targetRotation = getRotationForFace(visualRoll); const dieTimeline = gsap.timeline(); dieTimeline.to(dieCube, { rotationX: `+=${gsap.utils.random(720, 1080)}`, rotationY: `+=${gsap.utils.random(720, 1080)}`, duration: 1.8, ease: \"power2.in\" }).to(dieCube, { rotationX: targetRotation.x, rotationY: targetRotation.y, duration: 0.7, ease: \"power4.out\" }); masterTl.add(dieTimeline, 0); }); }); }\n    \n    const debouncedUpdate = debounce(updateUI, 400);\n    [DOM.nameInput, DOM.genderInput, DOM.ageInput, DOM.ocDetailsInput].forEach(el => el.addEventListener('input', debouncedUpdate));\n    \n    DOM.skipAnimationBtn.addEventListener('click', () => {\n        isSkipping = true;\n        if (currentAnimation && currentAnimation.isActive()) currentAnimation.progress(1);\n        if (textAnimation && textAnimation.isActive()) textAnimation.progress(1);\n    });\n\n    $('#roll-background-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const rolls = [roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6()];\n        await animateRoll(6, rolls, '投掷 经历... (2d6 x 3)');\n        \n        const sums = { origin: rolls[0] + rolls[1], past: rolls[2] + rolls[3], encounter: rolls[4] + rolls[5] };\n        \n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `出身: ${rolls[0]} + ${rolls[1]} = ${sums.origin}\\n(${backgroundData.origin[character.race][sums.origin].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `来历: ${rolls[2]} + ${rolls[3]} = ${sums.past}\\n(${backgroundData.past[sums.past].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(4, 6), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `邂逅: ${rolls[4]} + ${rolls[5]} = ${sums.encounter}\\n(${backgroundData.encounter[sums.encounter]})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        character.background.origin = backgroundData.origin[character.race][sums.origin];\n        character.background.past = backgroundData.past[sums.past];\n        character.background.encounter = backgroundData.encounter[sums.encounter];\n        DOM.bgOrigin.textContent = character.background.origin.name;\n        DOM.bgPast.textContent = character.background.past.name;\n        DOM.bgEncounter.textContent = character.background.encounter;\n        DOM.backgroundDisplay.style.display = 'block';\n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        updateUI(true);\n    });\n\n    $('#roll-attributes-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const attrRolls = raceData[character.race].attr_rolls;\n        const allCalculatedRolls = [];\n\n        // Prepare race-based attributes\n        for (const attr in attrRolls) {\n            const formula = attrRolls[attr];\n            const modifier = parseInt(formula.split('d3')[1] || '0');\n            const { d6, d3 } = roll1D3();\n            const finalValue = Math.max(0, d3 + modifier);\n            character.attributes[attr] = finalValue;\n            allCalculatedRolls.push({ attr, formula, d6, d3, modifier, finalValue });\n        }\n        \n        // Prepare \"Potential\" attribute\n        const potentialValue = Math.floor(Math.random() * 3) + 1;\n        const d6ForPotential = (potentialValue * 2) - 1; // Map 1,2,3 to d6 faces 1,3,5 for animation\n        character.attributes['潜力'] = potentialValue;\n        allCalculatedRolls.push({\n            attr: '潜力',\n            formula: '1-3', // Just a descriptor\n            d6: d6ForPotential,\n            finalValue: potentialValue\n        });\n        \n        // Animate all rolls sequentially\n        for (const roll of allCalculatedRolls) {\n            await animateRoll(1, [roll.d6], `投掷 ${roll.attr}...`);\n            if (isSkipping) break;\n\n            gsap.to(dicePool[0], { className: 'dice-icon highlight', duration: 0.3 });\n            \n            let resultText;\n            if (roll.attr === '潜力') {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.finalValue}`;\n            } else {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.d3} ${roll.modifier >= 0 ? '+' : ''} ${roll.modifier} = ${roll.finalValue}`;\n            }\n            await animateText(DOM.diceResultText, resultText);\n            \n            await updateUI();\n            \n            if (isSkipping) break;\n            \n            await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        await updateUI();\n    });\n\n    DOM.raceSelect.addEventListener('change', () => {\n        DOM.backgroundDisplay.style.display = 'none';\n        character.background = { origin: null, past: null, encounter: null };\n        Object.keys(character.attributes).forEach(k => character.attributes[k] = 0);\n        updateUI(true);\n    });\n\n    $('#submit-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        await updateUI(true);\n        \n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '未设定';\n        \n        const finalCharacterObject={ NAME:finalName, GENDER:character.gender||'未设定', AGE:formattedAge, RACE:character.race, ORIGIN: character.background.origin ? character.background.origin.name : '未知', PAST: character.background.past ? character.background.past.name : '未知', ENCOUNTER: character.background.encounter || '未知', SKILLS: uniqueSkills, OC_DETAILS:character.oc_details||'无', ...character.attributes, MONEY:character.money };\n        \n        const slashCommand=`/send <START>\\nAdmin:\\n这是一个TRPG开局，请为 User 生成一段详尽的背景故事。\\n\\n# 故事核心要求\\n请严格根据以下【角色完整设定】，撰写一段从角色童年到现在的成长故事。故事需要清晰地阐述是什么关键事件或心路历程，最终让他/她确立了要成为一名冒险者的志向。请在故事中自然地融入角色的种族、出身背景、技能和性格特点。\\n\\n# 角色完整设定\\n---\\n## 基础信息\\n- **姓名:** ${finalName}\\n- **性别:** ${character.gender||'未设定'}\\n- **年龄:** ${formattedAge}\\n- **种族:** ${character.race}\\n\\n## 经历\\n- **出身:** ${character.background.origin ? character.background.origin.name : '未知'}\\n- **来历:** ${character.background.past ? character.background.past.name : '未知'}\\n- **邂逅:** ${character.background.encounter || '未知'}\\n\\n## 背景与技能\\n- **初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n- **初始技能:** ${uniqueSkills.join(', ')||'无'}\\n\\n## 补充设定 (OC)\\n- **额外补充:** ${character.oc_details||'无'}\\n\\n## 能力值\\n- **力量:** ${character.attributes['力量']}\\n- **敏捷:** ${character.attributes['敏捷']}\\n- **感知:** ${character.attributes['感知']}\\n- **知识:** ${character.attributes['知识']}\\n- **魅力:** ${character.attributes['魅力']}\\n- **信仰力:** ${character.attributes['信仰力']}\\n- **魔力:** ${character.attributes['魔力']}\\n\\n## 初始资产\\n- **资金:** ${character.money} 银币\\n\\|\\n/trigger`; \n        \n        try {\n            if (typeof insertOrAssignVariables === 'function') {\n                await insertOrAssignVariables(finalCharacterObject);\n            } else {\n                console.log(\"SillyTavern Function 'insertOrAssignVariables' not found. Variables:\", finalCharacterObject);\n            }\n            if (typeof triggerSlash === 'function') {\n                await triggerSlash(slashCommand, 'Send');\n            } else { \n                console.log(\"SillyTavern Function 'triggerSlash' not found. Command will be copied to clipboard.\");\n                navigator.clipboard.writeText(slashCommand).then(() => {\n                    alert('角色指令已复制到剪贴板！');\n                });\n            }\n        } catch (error) {\n            console.error('与SillyTavern交互失败:', error);\n            alert('与SillyTavern交互失败，请查看浏览器控制台。');\n        }\n\n        e.target.innerHTML = \"契约成立！\";\n    });\n    \n    initDicePool();\n    Object.keys(raceData).forEach(key => DOM.raceSelect.add(new Option(key, key)));\n    Object.keys(character.attributes).forEach(key => {\n        const pointControl = document.createElement('div');\n        pointControl.className = 'point-control';\n        pointControl.innerHTML = `<span class=\"label\">${key}</span><input type=\"text\" id=\"attr-${key.replace(/\\s/g, '')}\" readonly value=\"0\">`; // ID santized just in case\n        DOM.attributesContainer.appendChild(pointControl);\n    });\n    // A small fix for renderAttributes to handle sanitized IDs\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key.replace(/\\s/g, '')}`).value = value; }); }\n    updateUI(true);\n});\n</script>\n\n</body>\n</html>\n```"
  },
  {
    "role": "user",
    "content": "```\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>哥布林杀手TRPG - 冒险者契约</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/gsap.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/TextPlugin.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.min.js\" defer></script>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Noto+Serif+SC:wght@400;700&family=Vollkorn:wght@400;700&family=Courier+Prime&display=swap\" rel=\"stylesheet\">\n\n    <style>\n        :root {\n            --leather-bg: #5a3a2a;\n            --dark-leather-bg: #3b2a1a;\n            --parchment-bg: #f5f5dc;\n            --parchment-bg-gradient: linear-gradient(165deg, #f7e9d7, #e6d5c3);\n            --text-color: #3d3d3d;\n            --heading-color: #4a3c2c;\n            --border-color: #7a5a4a;\n            --font-main: 'Vollkorn', 'Noto Serif SC', serif;\n            --font-display: 'Cinzel', 'Noto Serif SC', serif;\n            --font-code: 'Courier Prime', 'Courier New', monospace;\n            --dice-size: 5rem; \n        }\n\n        html { height: 100%; }\n        body {\n            background-color: #3a2e20;\n            font-family: var(--font-main);\n            color: var(--text-color);\n            margin: 0; padding: 20px;\n            box-sizing: border-box;\n            display: flex;\n            align-items: center; justify-content: center;\n            min-height: 100%;\n        }\n        *, *:before, *:after { box-sizing: inherit; }\n\n        .creator-wrapper {\n            width: 100%; max-width: 900px;\n            margin: 0;\n            background: var(--parchment-bg-gradient);\n            border: 12px solid #8b7355;\n            border-radius: 8px;\n            box-shadow: 0 0 40px rgba(139, 115, 85, 0.3), inset 0 0 30px rgba(255, 255, 255, 0.4);\n            position: relative;\n            overflow: hidden;\n            padding: 25px;\n            display: flex; flex-direction: column;\n            max-height: 95vh;\n        }\n\n        .border-flow, .inner-border { position: absolute; pointer-events: none; }\n        .border-flow { top: 0; left: 0; right: 0; bottom: 0; background: linear-gradient(90deg, rgba(139,115,85,0.1) 1px, transparent 1px), linear-gradient(0deg, rgba(139,115,85,0.1) 1px, transparent 1px); background-size: 20px 20px; animation: borderFlow 15s linear infinite; }\n        .inner-border { top: 5px; left: 5px; right: 5px; bottom: 5px; border: 3px solid rgba(139,115,85,0.3); border-radius: 5px; }\n        @keyframes borderFlow { from { background-position: 0 0; } to { background-position: 20px 20px; } }\n\n        .creator-header {\n            text-align: center;\n            padding: 10px;\n            margin-bottom: 25px;\n            border-bottom: 2px solid rgba(139, 115, 85, 0.3);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 15px;\n        }\n        .creator-header h1 {\n            font-family: var(--font-display);\n            font-size: clamp(24px, 5vw, 32px);\n            margin: 0;\n            font-weight: 700;\n            letter-spacing: 3px;\n            color: var(--heading-color);\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.1);\n        }\n        \n        .title-char {\n            display: inline-block;\n            opacity: 0;\n            transform: translateY(30px);\n        }\n\n        .wax-seal {\n            width: 45px;\n            height: 45px;\n            display: inline-block;\n            background-color: #c0392b;\n            border-radius: 50%;\n            position: relative;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.4), inset 0 -2px 3px rgba(0,0,0,0.3);\n            opacity: 0;\n            transform: scale(0.5);\n            font-family: 'Cinzel', serif;\n            color: #e7a49c;\n            text-align: center;\n            font-size: 24px;\n            line-height: 45px;\n            font-weight: 700;\n        }\n        .wax-seal::before {\n            content: 'GS';\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.3);\n        }\n\n        .creator-scroll-content { overflow-y: auto; padding: 10px 20px 10px 10px; }\n        .creator-scroll-content::-webkit-scrollbar { width: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-track { background: rgba(139, 115, 85, 0.1); border-radius: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-thumb { background-color: #a89072; border-radius: 10px; border: 2px solid #f7e9d7; }\n        \n        .gs-creator-step { margin-bottom: 40px; overflow: hidden; }\n        .gs-creator-step h3 { font-family: var(--font-display); font-size: 1.5em; font-weight: 700; border-bottom: 1.5px solid var(--border-color); padding-bottom: 8px; margin-bottom: 20px; color: var(--heading-color); text-align: left; }\n        \n        .layout-grid { display: grid; grid-template-columns: 1fr; gap: 25px; align-items: flex-start; }\n        @media (min-width: 768px) {\n            .layout-grid { grid-template-columns: 1fr 280px; }\n        }\n\n        .form-container { text-align: left; }\n        .gs-form-group { margin-bottom: 16px; }\n        .gs-form-group label { display: block; margin-bottom: 6px; font-weight: bold; color: var(--heading-color); }\n        .form-input, .form-select, .form-textarea { width: 100%; padding: 10px; background-color: rgba(255, 255, 255, 0.5); border: 1px solid #a58e72; border-radius: 4px; color: #3d3d3d; font-family: var(--font-main); font-size: 1em; transition: all 0.2s ease-in-out; box-shadow: inset 1px 1px 2px rgba(0,0,0,0.1); }\n        .form-input:focus, .form-select:focus, .form-textarea:focus { outline: none; border-color: #8b7355; background-color: #fff; box-shadow: 0 0 5px rgba(139, 115, 85, 0.5); }\n        .form-textarea { resize: vertical; min-height: 100px; }\n\n        .grid-cols-2 {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 16px;\n        }\n        @media (min-width: 480px) {\n            .grid-cols-2 {\n                grid-template-columns: repeat(2, 1fr);\n            }\n        }\n\n        #attributes-container .point-control { display: flex; align-items: center; justify-content: space-between; margin-bottom: 8px; padding: 6px 8px; background: rgba(0,0,0,0.03); border-left: 3px solid rgba(139,115,85,0.2); border-radius: 4px; }\n        #attributes-container .label { font-weight: bold; color: var(--heading-color); }\n        #attributes-container input[readonly] { width: 40px; text-align: center; font-weight: bold; font-size: 1.2em; font-family: var(--font-display); color: #a02c2c; border: none; background-color: transparent; box-shadow: none; padding: 0; }\n        \n        .attributes-grid {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 0 16px;\n        }\n        @media (min-width: 480px) {\n            .attributes-grid {\n                grid-template-columns: 1fr 1fr;\n            }\n        }\n        \n        .skills-display p { background-color: rgba(0,0,0,0.05); border-left: 3px solid var(--border-color); padding: 10px 15px; margin-top: 10px; font-size: 0.95em; border-radius: 0 4px 4px 0; }\n        .skills-display strong { color: #8b5b4b; font-family: var(--font-display); }\n        .skills-display ul { list-style: none; padding-left: 0; margin-top: 8px; font-size: 0.9em; }\n        .skills-display li { margin-bottom: 4px; }\n\n        #character-summary { background-color: #e9e4d9; font-family: var(--font-code); line-height: 1.6; height: 250px; color: #2c2a2a; }\n        \n        .gs-button { width: 100%; background-color: #8b7355; color: var(--parchment-bg); border: 2px solid var(--dark-leather-bg); border-radius: 5px; padding: 12px 20px; font-family: var(--font-display); font-size: 1.2em; font-weight: 700; cursor: pointer; margin-top: 10px; transition: all 0.3s ease; box-shadow: 0 3px 5px rgba(0,0,0,0.3); }\n        .gs-button:hover { background-color: #a0886c; transform: translateY(-2px); box-shadow: 0 5px 8px rgba(0,0,0,0.3); }\n        .gs-button:disabled { background-color: #9e9e9e; border-color: #757575; cursor: not-allowed; transform: none; box-shadow: none; opacity: 0.6; }\n        .action-button { background-color: #6d5b4b; font-size: 1em; padding: 10px 15px; margin-top: 0; margin-bottom: 10px; width: auto; }\n        \n        .background-display { margin-top: 15px; padding: 15px; border: 1px dashed var(--border-color); border-radius: 5px; background: rgba(0,0,0,0.02); }\n        .background-display p { margin: 0 0 8px; }\n        .background-display span { font-weight: bold; color: var(--heading-color); }\n        \n        #radar-chart-container { \n            max-width: 100%;\n        }\n        @media (min-width: 768px) {\n            #radar-chart-container {\n                position: sticky;\n                top: 0;\n                padding-top: 45px;\n            }\n        }\n\n        pre.mermaid { \n            font-family: var(--font-main); \n            background: rgba(0,0,0,0.02); \n            border: 1px solid rgba(139,115,85,0.1); \n            padding: 10px; \n            border-radius: 5px; \n            overflow: auto;\n            transition: opacity 0.3s ease-in-out;\n        }\n        pre.mermaid.loading { opacity: 0.5; pointer-events: none; }\n\n        pre.mermaid > svg {\n            max-width: 100%;\n            height: auto;\n        }\n\n        #dice-overlay {\n            position: fixed; top: 0; left: 0; width: 100%; height: 100%;\n            background: rgba(0,0,0,0.8); backdrop-filter: blur(5px);\n            display: none; align-items: center; justify-content: center; flex-direction: column;\n            z-index: 100;\n            color: #fff; text-shadow: 0 0 10px #000;\n        }\n\n        .dice-container {\n            display: flex; flex-wrap: wrap; justify-content: center;\n            gap: 2rem; margin-bottom: 2rem;\n            max-width: 600px;\n        }\n        \n        .dice-icon {\n            width: var(--dice-size); height: var(--dice-size);\n            perspective: 800px;\n            transform-style: preserve-3d;\n            display: none;\n        }\n        .dice-icon.highlight {\n            transform: scale(1.15);\n            filter: drop-shadow(0 0 15px #FFEB3B);\n            transition: transform 0.3s ease, filter 0.3s ease;\n        }\n\n        .dice-cube {\n            width: 100%; height: 100%;\n            position: relative;\n            transform-style: preserve-3d;\n            transform: translateZ(calc(var(--dice-size) / -2));\n        }\n        \n        .dice-face {\n            position: absolute;\n            width: var(--dice-size); height: var(--dice-size);\n            background-color: rgba(255, 255, 255, 0.98);\n            border: 1.5px solid #857e72;\n            border-radius: 12%;\n        }\n\n        .pips-container {\n            width: 100%; height: 100%;\n            position: relative; \n        }\n        .pip {\n            width: 22%; height: 22%; \n            background-color: #3d352e;\n            border-radius: 50%;\n            box-shadow: inset 0 1px 3px rgba(0,0,0,0.5);\n            position: absolute; \n        }\n        \n        #dice-result-text { \n            font-family: var(--font-display); \n            font-size: 2.2em;\n            color: #FFEB3B; \n            text-shadow: 0 0 12px #FFEB3B; \n            min-height: 2em;\n            line-height: 1.2;\n            text-align: center; \n        }\n        \n        #skip-animation-btn {\n            position: absolute;\n            bottom: 30px;\n            font-size: 1em;\n            padding: 8px 20px;\n            width: auto;\n            background-color: rgba(0,0,0,0.3);\n            border-color: rgba(255,255,255,0.5);\n            color: rgba(255,255,255,0.8);\n        }\n        #skip-animation-btn:hover {\n            background-color: rgba(0,0,0,0.5);\n            color: #fff;\n        }\n\n        .typed-cursor {\n            opacity: 1;\n            animation: typed-blink 0.7s infinite;\n        }\n        @keyframes typed-blink{\n            0% { opacity: 1; }\n            50% { opacity: 0; }\n            100% { opacity: 1; }\n        }\n        \n        .validation-message {\n            text-align: center;\n            color: #b71c1c;\n            font-size: 0.9em;\n            font-weight: bold;\n            margin-top: -5px;\n            margin-bottom: 10px;\n            height: 1.2em;\n            opacity: 0;\n            will-change: transform, opacity;\n        }\n\n        #credits-screen {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            pointer-events: none;\n            opacity: 0;\n        }\n\n        #credits-screen p {\n            font-family: var(--font-display);\n            font-size: 2em;\n            color: #f5f5dc;\n            text-shadow: 0 0 8px rgba(245, 245, 220, 0.7);\n        }\n    </style>\n</head>\n<body>\n\n<div class=\"creator-wrapper\">\n    <div class=\"border-flow\"></div>\n    <div class=\"inner-border\"></div>\n    <header class=\"creator-header\">\n        <h1 id=\"main-title\">冒险者契约登记</h1>\n        <div id=\"wax-seal\" class=\"wax-seal\"></div>\n    </header>\n\n    <div class=\"creator-scroll-content\">\n        <div class=\"gs-creator-container\">\n            <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第一步：身份确认</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-name-input\">姓名</label><input id=\"char-name-input\" type=\"text\" placeholder=\"可留空，默认为 {{user}}\" class=\"form-input\"></div>\n                    <div class=\"grid-cols-2 gsap-content-item\">\n                        <div class=\"gs-form-group\"><label for=\"char-gender-input\">性别</label><input id=\"char-gender-input\" type=\"text\" placeholder=\"例如: 男性/女性/双性/无性/……\" class=\"form-input\"></div>\n                        <div class=\"gs-form-group\"><label for=\"char-age-input\">年龄</label><input id=\"char-age-input\" type=\"number\" placeholder=\"可参照种族说明\" class=\"form-input\"></div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-race-select\">种族</label><select id=\"char-race-select\" class=\"form-select\"></select></div>\n                    <div class=\"gs-form-group gsap-content-item\">\n                        <label>经历 (出身/来历/邂逅)</label>\n                        <button id=\"roll-background-btn\" class=\"gs-button action-button\">🎲 投骰决定经历</button>\n                        <div id=\"background-display\" class=\"background-display\" style=\"display: none;\">\n                            <p>出身: <span id=\"bg-origin\"></span></p>\n                            <p>来历: <span id=\"bg-past\"></span></p>\n                            <p>邂逅: <span id=\"bg-encounter\"></span></p>\n                        </div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"oc-details-input\">身体特征与补充</label><textarea id=\"oc-details-input\" placeholder=\"发色、瞳色、体型、性格、背景故事构思...\" class=\"form-textarea\"></textarea></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第二步：能力值与技能</h3>\n                <div class=\"layout-grid\">\n                    <div class=\"form-container gsap-content-item\">\n                        <button id=\"roll-attributes-btn\" class=\"gs-button action-button\">🎲 投骰决定能力值</button>\n                        <div id=\"attributes-container\" class=\"attributes-grid\"></div>\n                        <div id=\"skills-and-desc-container\" class=\"skills-display\"></div>\n                    </div>\n                    <div id=\"radar-chart-container\" class=\"gsap-content-item\"><pre class=\"mermaid\" id=\"radar-chart\"></pre></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第三步：完成登记</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"character-summary\">角色卡预览</label><textarea id=\"character-summary\" rows=\"12\" readonly class=\"form-textarea\"></textarea></div>\n                    <button id=\"submit-btn\" class=\"gs-button gsap-content-item\" disabled>确认登记，开始冒险</button>\n                    <div id=\"validation-message\" class=\"validation-message\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div id=\"credits-screen\">\n    <p>作者 𝙀𝙡𝙖𝙞𝙣𝙖𝙙𝙚𝙨</p>\n</div>\n\n<div id=\"dice-overlay\">\n    <div class=\"dice-container\" id=\"dice-container\"></div>\n    <div id=\"dice-result-text\"></div>\n    <button id=\"skip-animation-btn\" class=\"gs-button\">跳过动画</button>\n</div>\n\n<div id=\"dice-templates\" style=\"display:none;\">\n    <div class=\"dice-cube\" data-id_template=\"dice-cube\">\n        <div class=\"dice-face face-front\" data-face=\"1\"><div class=\"pips-container\"><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-back\" data-face=\"6\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-right\" data-face=\"3\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-left\" data-face=\"4\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-top\" data-face=\"2\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-bottom\" data-face=\"5\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n    </div>\n</div>\n\n<script>\n// --- MODIFIED DATA ---\nconst raceData = {\n    '凡人': { attr_rolls: { '力量': '1d3+1', '敏捷': '1d3', '感知': '1d3', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3+2', '魔力': '1d3' }, skills: ['过载行动(初级)', '武器:投掷武器(初级)', '长距离移动(初级)']},\n    '矿人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3', '感知': '1d3+2', '知识': '1d3-1', '魅力': '1d3+1', '信仰力': '1d3+1', '魔力': '1d3-1' }, skills: ['治愈适性(初级)', '夜视(初级)', '锻造(初级)']},\n    '森人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+1', '感知': '1d3+1', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3-1', '魔力': '1d3+1' }, skills: ['武器:弩弓(初级)', '夜视(初级)', '精灵宠儿(初级)']},\n    '蜥蜴人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3+1', '感知': '1d3', '知识': '1d3', '魅力': '1d3+1', '信仰力': '1d3', '魔力': '1d3' }, skills: ['免疫强化(初级)', '夜视(初级)', '龙族血统(初级)']},\n    '圃人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+2', '感知': '1d3+1', '知识': '1d3', '魅力': '1d3-1', '信仰力': '1d3', '魔力': '1d3+2' }, skills: ['隐匿(初级)', '先发制人(初级)', '烹饪(初级)']}\n};\nconst backgroundData = {\n    origin: { \n        '凡人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '学者', class: '魔术师', level: 1, skills: ['文献调查(初级)'] }, 6: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 7: { name: '农民', skills: ['生产业:农业(初级)', '强健(初级)'] }, 8: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '骑士', class: '战士', level: 1, skills: ['骑乘(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n        '矿人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 6: { name: '酒馆老板', class: '战士', level: 1, skills: ['观察(初级)'] }, 7: { name: '铁匠', skills: ['工匠:锻造(初级)', '手工(初级)'] }, 8: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '碎盾者', class: '战士', level: 1, skills: ['强击攻击·斩(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n    },\n    past: { 2: { name: '奴隶', skills: ['劳动(初级)'] }, 3: { name: '牢狱', skills: ['犯罪知识(初级)'] }, 4: { name: '战场', skills: ['沉着冷静(初级)'] }, 5: { name: '神殿', skills: ['神学(初级)'] }, 6: { name: '孤儿', skills: ['忍耐(初级)'] }, 7: { name: '平顺', skills: ['幸运(初级)'] }, 8: { name: '贫困', skills: ['生存术(初级)'] }, 9: { name: '学校', skills: ['博识(初级)'] }, 10: { name: '深闺', skills: ['无偏见(初级)'] }, 11: { name: '奢华', skills: ['鉴定(初级)'] }, 12: { name: '宫廷', skills: ['礼仪(初级)'] }},\n    encounter: { 2: '宿敌', 3: '上司', 4: '后辈', 5: '交易对象', 6: '下属', 7: '家人', 8: '挚友', 9: '前辈', 10: '未婚夫/妻', 11: '劲敌', 12: '师父' }\n};\nbackgroundData.origin['森人'] = backgroundData.origin['凡人']; backgroundData.origin['蜥蜴人'] = backgroundData.origin['凡人']; backgroundData.origin['圃人'] = backgroundData.origin['凡人'];\nconst character = {\n    name: '', gender: '', age: '', oc_details: '', race: '凡人',\n    background: { origin: null, past: null, encounter: null },\n    attributes: { '力量': 0, '敏捷': 0, '感知': 0, '知识': 0, '魅力': 0, '信仰力': 0, '魔力': 0, '潜力': 0 },\n    skills: [], classes: {}, money: 0, _lastAttributesForChart: '',\n};\n// --- END MODIFIED DATA ---\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    gsap.registerPlugin(TextPlugin);\n    mermaid.initialize({ startOnLoad: true, theme: 'base', themeVariables: {\n        '--mermaid-font-family': \"'Vollkorn', 'Noto Serif SC', serif\",\n        primaryColor: '#f7e9d7', primaryTextColor: '#3d3d3d', lineColor: '#8b7355', textColor: '#4a3c2c',\n    }});\n    \n    const $ = (s) => document.querySelector(s);\n    const roll1D6 = () => Math.floor(Math.random() * 6) + 1;\n    const roll1D3 = () => {\n        const d6 = roll1D6();\n        if (d6 <= 2) return { d6, d3: 1 };\n        if (d6 <= 4) return { d6, d3: 2 };\n        return { d6, d3: 3 };\n    };\n    const rollDiceString = (diceString) => { const p=diceString.split('*');const d=p[0];const m=parseInt(p[1])||1;if(!d.includes('d'))return 0;const[n,s]=d.split('d').map(Number);let t=0;for(let i=0;i<n;i++){t+=Math.floor(Math.random()*s)+1;}return t*m; };\n    const formatAge = (ageValue) => { if (!ageValue && ageValue !== 0) return ageValue; const num = Number(ageValue); if (isNaN(num)) return ageValue; if (Math.abs(num) >= 1_000_000) return num.toExponential(2); return ageValue; };\n    const debounce = (func, delay) => { let timeout; return function(...args) { clearTimeout(timeout); timeout = setTimeout(() => func.apply(this, args), delay); }; };\n    const diceUnicode = ['\\u2680', '\\u2681', '\\u2682', '\\u2683', '\\u2684', '\\u2685'];\n\n    const DOM = {\n        nameInput: $('#char-name-input'), genderInput: $('#char-gender-input'), ageInput: $('#char-age-input'),\n        ocDetailsInput: $('#oc-details-input'), raceSelect: $('#char-race-select'), attributesContainer: $('#attributes-container'),\n        skillsContainer: $('#skills-and-desc-container'), radarChart: $('#radar-chart'), summarySheet: $('#character-summary'),\n        diceOverlay: $('#dice-overlay'), diceContainer: $('#dice-container'), diceResultText: $('#dice-result-text'),\n        backgroundDisplay: $('#background-display'), bgOrigin: $('#bg-origin'), bgPast: $('#bg-past'), bgEncounter: $('#bg-encounter'),\n        skipAnimationBtn: $('#skip-animation-btn'),\n        submitBtn: $('#submit-btn'),\n        validationMessage: $('#validation-message'),\n    };\n    \n    const dicePool = []; const MAX_DICE = 6;\n    let currentAnimation = null; let textAnimation = null; let isSkipping = false;\n    let currentValidationMessage = '';\n    \n    function validateAndToggleButton() {\n        let newMessage = '';\n        if (!character.age || String(character.age).trim() === '') {\n            newMessage = '请填写您的冒险者年龄。';\n        } else if (!character.gender || !character.gender.trim()) {\n            newMessage = '请设定冒险者的性别。';\n        } else if (!character.background.origin) {\n            newMessage = '请投骰决定您的冒险者经历。';\n        } else if (Object.values(character.attributes).every(val => val === 0)) {\n            newMessage = '请投骰决定您的能力值。';\n        }\n\n        if (newMessage === currentValidationMessage) return;\n        currentValidationMessage = newMessage;\n\n        if (newMessage) {\n            DOM.submitBtn.disabled = true;\n            DOM.validationMessage.textContent = newMessage;\n            gsap.fromTo(DOM.validationMessage, { autoAlpha: 0, scale: 0.8 }, { autoAlpha: 1, scale: 1, duration: 0.4, ease: 'elastic.out(1, 0.75)' });\n        } else {\n            DOM.submitBtn.disabled = false;\n            gsap.to(DOM.validationMessage, { autoAlpha: 0, duration: 0.3 });\n        }\n    }\n    function updateCharacterDataFromDOM() { character.name = DOM.nameInput.value; character.gender = DOM.genderInput.value; character.age = DOM.ageInput.value; character.oc_details = DOM.ocDetailsInput.value; character.race = DOM.raceSelect.value; }\n    function renderSkills() { const uniqueSkills = [...new Set(character.skills)]; DOM.skillsContainer.innerHTML = `<p><strong>天赋与习得技能:</strong></p><ul>${uniqueSkills.map(s => `<li>- ${s}</li>`).join('')}</ul>`; }\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key}`).value = value; }); }\n    function renderSummary() {\n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '?';\n        const originText = `出身:${character.background.origin ? character.background.origin.name : '?'}`;\n        const pastText = `来历:${character.background.past ? character.background.past.name : '?'}`;\n        const encounterText = `邂逅:${character.background.encounter || '?'}`;\n        let summary = `### 《哥布林杀手TRPG》冒险者登记卡\\n` + `**姓名:** ${finalName} | **种族:** ${character.race} | **性别:** ${character.gender || '?'} | **年龄:** ${formattedAge}\\n` + `**经历:** ${originText} / ${pastText} / ${encounterText}\\n` + `**初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n` + `**初始技能:** ${uniqueSkills.join(', ') || '无'}\\n`; if (character.oc_details) { summary += `**身体特征与补充:** ${character.oc_details}\\n`; } summary += `---\\n**能力值:**\\n`; summary += Object.entries(character.attributes).map(([key, value]) => `- ${key}: ${value}`).join('\\n'); summary += `\\n**持有资金:** ${character.money} 银币`;\n        DOM.summarySheet.value = summary.replace(/### /g, '').replace(/\\*\\*/g, '').replace(/---/g, '\\n────────────────────\\n').replace(/- /g, '  ');\n        DOM.summarySheet.setAttribute('data-raw', summary);\n    }\n    async function renderRadarChartIfNeeded() { const currentAttributesString = JSON.stringify(character.attributes); if (currentAttributesString === character._lastAttributesForChart) return; DOM.radarChart.classList.add('loading'); const radarSyntax = `radar-beta\\ntitle 能力值分布\\naxis a[\"力量 ${character.attributes['力量']}\"]\\naxis b[\"敏捷 ${character.attributes['敏捷']}\"]\\naxis c[\"感知 ${character.attributes['感知']}\"]\\naxis d[\"知识 ${character.attributes['知识']}\"]\\naxis e[\"魅力 ${character.attributes['魅力']}\"]\\naxis f[\"信仰 ${character.attributes['信仰力']}\"]\\naxis g[\"魔力 ${character.attributes['魔力']}\"]\\naxis h[\"潜力 ${character.attributes['潜力']}\"]\\ncurve current[\"能力\"]{${character.attributes['力量']},${character.attributes['敏捷']},${character.attributes['感知']},${character.attributes['知识']},${character.attributes['魅力']},${character.attributes['信仰力']},${character.attributes['魔力']},${character.attributes['潜力']}}\\nmax 10\\nmin 0`; DOM.radarChart.innerHTML = radarSyntax; DOM.radarChart.removeAttribute('data-processed'); try { await mermaid.run({ nodes: [DOM.radarChart] }); character._lastAttributesForChart = currentAttributesString; } catch(e) { console.error(\"Mermaid rendering error:\", e); } finally { DOM.radarChart.classList.remove('loading'); } }\n    async function updateUI(forceFullUpdate = false) { updateCharacterDataFromDOM(); if(forceFullUpdate) { character._lastAttributesForChart = ''; character.skills = []; character.classes = {}; character.money = 100; if(raceData[character.race].skills) character.skills.push(...raceData[character.race].skills); if (character.background.origin) { if (character.background.origin.skills) character.skills.push(...character.background.origin.skills); if (character.background.origin.class) character.classes[character.background.origin.class] = character.background.origin.level; if(character.background.origin.money) character.money += rollDiceString(character.background.origin.money); } if (character.background.past && character.background.past.skills) { character.skills.push(...character.background.past.skills); } } renderAttributes(); renderSkills(); renderSummary(); await renderRadarChartIfNeeded(); validateAndToggleButton(); }\n\n    const masterTl = gsap.timeline({ delay: 0.2 });\n    const title = $('#main-title');\n    title.innerHTML = title.textContent.split('').map(char => `<span class=\"title-char\">${char}</span>`).join('');\n    gsap.set(\".gsap-header-item, .gsap-content-item\", { autoAlpha: 0, y: 20 });\n    masterTl.to(\".title-char\", { autoAlpha: 1, y: 0, duration: 0.7, ease: \"power3.out\", stagger: 0.1 }).to(\"#wax-seal\", { autoAlpha: 1, scale: 1, duration: 0.6, ease: \"elastic.out(1, 0.7)\" }, \"-=0.5\");\n    document.querySelectorAll('.gs-creator-step').forEach((step, index) => { const stepTl = gsap.timeline(); stepTl.to(step.querySelector('.gsap-header-item'), { autoAlpha: 1, y: 0, duration: 0.6, ease: 'power2.out' }).to(step.querySelectorAll('.gsap-content-item'), { autoAlpha: 1, y: 0, duration: 0.5, ease: 'power2.out', stagger: 0.1 }, '-=0.4'); masterTl.add(stepTl, `-=${index === 0 ? 0.2 : 0.7}`); });\n    const pipPositions = { 1: [ { left: '50%', top: '50%' } ], 2: [ { left: '25%', top: '25%' }, { left: '75%', top: '75%' } ], 3: [ { left: '25%', top: '25%' }, { left: '50%', top: '50%' }, { left: '75%', top: '75%' } ], 4: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 5: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '50%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 6: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '50%' }, { left: '75%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ]};\n    function setupCube(cubeEl) { const size = 'calc(var(--dice-size) / 2)'; gsap.set(cubeEl.querySelector('.face-front'),  { transform: `rotateY(0deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-back'),   { transform: `rotateY(180deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-right'),  { transform: `rotateY(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-left'),   { transform: `rotateY(-90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-top'),   { transform: `rotateX(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-bottom'), { transform: `rotateX(-90deg) translateZ(${size})` }); const faces = cubeEl.querySelectorAll('.dice-face'); faces.forEach(face => { const faceNum = face.getAttribute('data-face'); const pips = face.querySelectorAll('.pip'); const positions = pipPositions[faceNum]; if (!pips.length || !positions) return; pips.forEach((pip, index) => { const pos = positions[index]; gsap.set(pip, { left: pos.left, top: pos.top, xPercent: -50, yPercent: -50 }); }); }); }\n    function getRotationForFace(faceValue) { switch (faceValue) { case 1: return { x: 0, y: 0 }; case 6: return { x: 0, y: 180 }; case 3: return { x: 0, y: -90 }; case 4: return { x: 0, y: 90 }; case 2: return { x: -90, y: 0 }; case 5: return { x: 90,  y: 0 }; default: return { x: 0, y: 0 }; } }\n    async function animateText(element, text) { if(isSkipping) {element.innerHTML = text.replace(/\\n/g, '<br>'); return;} return new Promise(resolve => { if (textAnimation && textAnimation.isActive()) textAnimation.kill(); element.innerHTML = ''; textAnimation = gsap.to(element, { duration: text.length * 0.05, text: { value: text.replace(/\\n/g, '<br>'), newClass: \"typed-cursor\" }, ease: \"none\", onComplete: () => { gsap.delayedCall(0.7, () => { element.querySelector('.typed-cursor')?.remove(); resolve(); }); } }); }); }\n    function initDicePool() { const diceTemplate = document.querySelector('[data-id_template=\"dice-cube\"]'); if (!diceTemplate) return; for (let i = 0; i < MAX_DICE; i++) { const dieIconElement = document.createElement('div'); dieIconElement.className = 'dice-icon'; const newCube = diceTemplate.cloneNode(true); dieIconElement.appendChild(newCube); DOM.diceContainer.appendChild(dieIconElement); setupCube(newCube); dicePool.push(dieIconElement); } }\n    async function animateRoll(numDice, preCalculatedRolls, textToShowDuringRoll = \"投掷中...\") { return new Promise(resolve => { if (currentAnimation && currentAnimation.isActive()) currentAnimation.kill(); dicePool.forEach(die => die.style.display = 'none'); const activeDice = dicePool.slice(0, numDice); animateText(DOM.diceResultText, textToShowDuringRoll); activeDice.forEach(die => { die.style.display = 'flex'; die.className = 'dice-icon'; }); const masterTl = gsap.timeline({ onComplete: () => { if(isSkipping) DOM.diceResultText.innerHTML = ''; resolve(preCalculatedRolls); }}); currentAnimation = masterTl; activeDice.forEach((dieElement, i) => { const dieCube = dieElement.querySelector('.dice-cube'); const visualRoll = preCalculatedRolls[i]; const targetRotation = getRotationForFace(visualRoll); const dieTimeline = gsap.timeline(); dieTimeline.to(dieCube, { rotationX: `+=${gsap.utils.random(720, 1080)}`, rotationY: `+=${gsap.utils.random(720, 1080)}`, duration: 1.8, ease: \"power2.in\" }).to(dieCube, { rotationX: targetRotation.x, rotationY: targetRotation.y, duration: 0.7, ease: \"power4.out\" }); masterTl.add(dieTimeline, 0); }); }); }\n    \n    const debouncedUpdate = debounce(updateUI, 400);\n    [DOM.nameInput, DOM.genderInput, DOM.ageInput, DOM.ocDetailsInput].forEach(el => el.addEventListener('input', debouncedUpdate));\n    \n    DOM.skipAnimationBtn.addEventListener('click', () => {\n        isSkipping = true;\n        if (currentAnimation && currentAnimation.isActive()) currentAnimation.progress(1);\n        if (textAnimation && textAnimation.isActive()) textAnimation.progress(1);\n    });\n\n    $('#roll-background-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const rolls = [roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6()];\n        await animateRoll(6, rolls, '投掷 经历... (2d6 x 3)');\n        \n        const sums = { origin: rolls[0] + rolls[1], past: rolls[2] + rolls[3], encounter: rolls[4] + rolls[5] };\n        \n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `出身: ${rolls[0]} + ${rolls[1]} = ${sums.origin}\\n(${backgroundData.origin[character.race][sums.origin].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `来历: ${rolls[2]} + ${rolls[3]} = ${sums.past}\\n(${backgroundData.past[sums.past].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(4, 6), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `邂逅: ${rolls[4]} + ${rolls[5]} = ${sums.encounter}\\n(${backgroundData.encounter[sums.encounter]})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        character.background.origin = backgroundData.origin[character.race][sums.origin];\n        character.background.past = backgroundData.past[sums.past];\n        character.background.encounter = backgroundData.encounter[sums.encounter];\n        DOM.bgOrigin.textContent = character.background.origin.name;\n        DOM.bgPast.textContent = character.background.past.name;\n        DOM.bgEncounter.textContent = character.background.encounter;\n        DOM.backgroundDisplay.style.display = 'block';\n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        updateUI(true);\n    });\n\n    $('#roll-attributes-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const attrRolls = raceData[character.race].attr_rolls;\n        const allCalculatedRolls = [];\n\n        // Prepare race-based attributes\n        for (const attr in attrRolls) {\n            const formula = attrRolls[attr];\n            const modifier = parseInt(formula.split('d3')[1] || '0');\n            const { d6, d3 } = roll1D3();\n            const finalValue = Math.max(0, d3 + modifier);\n            character.attributes[attr] = finalValue;\n            allCalculatedRolls.push({ attr, formula, d6, d3, modifier, finalValue });\n        }\n        \n        // Prepare \"Potential\" attribute\n        const potentialValue = Math.floor(Math.random() * 3) + 1;\n        const d6ForPotential = (potentialValue * 2) - 1; // Map 1,2,3 to d6 faces 1,3,5 for animation\n        character.attributes['潜力'] = potentialValue;\n        allCalculatedRolls.push({\n            attr: '潜力',\n            formula: '1-3', // Just a descriptor\n            d6: d6ForPotential,\n            finalValue: potentialValue\n        });\n        \n        // Animate all rolls sequentially\n        for (const roll of allCalculatedRolls) {\n            await animateRoll(1, [roll.d6], `投掷 ${roll.attr}...`);\n            if (isSkipping) break;\n\n            gsap.to(dicePool[0], { className: 'dice-icon highlight', duration: 0.3 });\n            \n            let resultText;\n            if (roll.attr === '潜力') {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.finalValue}`;\n            } else {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.d3} ${roll.modifier >= 0 ? '+' : ''} ${roll.modifier} = ${roll.finalValue}`;\n            }\n            await animateText(DOM.diceResultText, resultText);\n            \n            await updateUI();\n            \n            if (isSkipping) break;\n            \n            await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        await updateUI();\n    });\n\n    DOM.raceSelect.addEventListener('change', () => {\n        DOM.backgroundDisplay.style.display = 'none';\n        character.background = { origin: null, past: null, encounter: null };\n        Object.keys(character.attributes).forEach(k => character.attributes[k] = 0);\n        updateUI(true);\n    });\n\n    $('#submit-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        await updateUI(true);\n        \n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '未设定';\n        \n        const finalCharacterObject={ NAME:finalName, GENDER:character.gender||'未设定', AGE:formattedAge, RACE:character.race, ORIGIN: character.background.origin ? character.background.origin.name : '未知', PAST: character.background.past ? character.background.past.name : '未知', ENCOUNTER: character.background.encounter || '未知', SKILLS: uniqueSkills, OC_DETAILS:character.oc_details||'无', ...character.attributes, MONEY:character.money };\n        \n        const slashCommand=`/send <START>\\nAdmin:\\n这是一个TRPG开局，请为 User 生成一段详尽的背景故事。\\n\\n# 故事核心要求\\n请严格根据以下【角色完整设定】，撰写一段从角色童年到现在的成长故事。故事需要清晰地阐述是什么关键事件或心路历程，最终让他/她确立了要成为一名冒险者的志向。请在故事中自然地融入角色的种族、出身背景、技能和性格特点。\\n\\n# 角色完整设定\\n---\\n## 基础信息\\n- **姓名:** ${finalName}\\n- **性别:** ${character.gender||'未设定'}\\n- **年龄:** ${formattedAge}\\n- **种族:** ${character.race}\\n\\n## 经历\\n- **出身:** ${character.background.origin ? character.background.origin.name : '未知'}\\n- **来历:** ${character.background.past ? character.background.past.name : '未知'}\\n- **邂逅:** ${character.background.encounter || '未知'}\\n\\n## 背景与技能\\n- **初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n- **初始技能:** ${uniqueSkills.join(', ')||'无'}\\n\\n## 补充设定 (OC)\\n- **额外补充:** ${character.oc_details||'无'}\\n\\n## 能力值\\n- **力量:** ${character.attributes['力量']}\\n- **敏捷:** ${character.attributes['敏捷']}\\n- **感知:** ${character.attributes['感知']}\\n- **知识:** ${character.attributes['知识']}\\n- **魅力:** ${character.attributes['魅力']}\\n- **信仰力:** ${character.attributes['信仰力']}\\n- **魔力:** ${character.attributes['魔力']}\\n\\n## 初始资产\\n- **资金:** ${character.money} 银币\\n\\|\\n/trigger`; \n        \n        try {\n            if (typeof insertOrAssignVariables === 'function') {\n                await insertOrAssignVariables(finalCharacterObject);\n            } else {\n                console.log(\"SillyTavern Function 'insertOrAssignVariables' not found. Variables:\", finalCharacterObject);\n            }\n            if (typeof triggerSlash === 'function') {\n                await triggerSlash(slashCommand, 'Send');\n            } else { \n                console.log(\"SillyTavern Function 'triggerSlash' not found. Command will be copied to clipboard.\");\n                navigator.clipboard.writeText(slashCommand).then(() => {\n                    alert('角色指令已复制到剪贴板！');\n                });\n            }\n        } catch (error) {\n            console.error('与SillyTavern交互失败:', error);\n            alert('与SillyTavern交互失败，请查看浏览器控制台。');\n        }\n\n        e.target.innerHTML = \"契约成立！\";\n    });\n    \n    initDicePool();\n    Object.keys(raceData).forEach(key => DOM.raceSelect.add(new Option(key, key)));\n    Object.keys(character.attributes).forEach(key => {\n        const pointControl = document.createElement('div');\n        pointControl.className = 'point-control';\n        pointControl.innerHTML = `<span class=\"label\">${key}</span><input type=\"text\" id=\"attr-${key.replace(/\\s/g, '')}\" readonly value=\"0\">`; // ID santized just in case\n        DOM.attributesContainer.appendChild(pointControl);\n    });\n    // A small fix for renderAttributes to handle sanitized IDs\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key.replace(/\\s/g, '')}`).value = value; }); }\n    updateUI(true);\n});\n</script>\n\n</body>\n</html>\n```"
  },
  {
    "role": "user",
    "content": "```\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>哥布林杀手TRPG - 冒险者契约</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/gsap.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/TextPlugin.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.min.js\" defer></script>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Noto+Serif+SC:wght@400;700&family=Vollkorn:wght@400;700&family=Courier+Prime&display=swap\" rel=\"stylesheet\">\n\n    <style>\n        :root {\n            --leather-bg: #5a3a2a;\n            --dark-leather-bg: #3b2a1a;\n            --parchment-bg: #f5f5dc;\n            --parchment-bg-gradient: linear-gradient(165deg, #f7e9d7, #e6d5c3);\n            --text-color: #3d3d3d;\n            --heading-color: #4a3c2c;\n            --border-color: #7a5a4a;\n            --font-main: 'Vollkorn', 'Noto Serif SC', serif;\n            --font-display: 'Cinzel', 'Noto Serif SC', serif;\n            --font-code: 'Courier Prime', 'Courier New', monospace;\n            --dice-size: 5rem; \n        }\n\n        html { height: 100%; }\n        body {\n            background-color: #3a2e20;\n            font-family: var(--font-main);\n            color: var(--text-color);\n            margin: 0; padding: 20px;\n            box-sizing: border-box;\n            display: flex;\n            align-items: center; justify-content: center;\n            min-height: 100%;\n        }\n        *, *:before, *:after { box-sizing: inherit; }\n\n        .creator-wrapper {\n            width: 100%; max-width: 900px;\n            margin: 0;\n            background: var(--parchment-bg-gradient);\n            border: 12px solid #8b7355;\n            border-radius: 8px;\n            box-shadow: 0 0 40px rgba(139, 115, 85, 0.3), inset 0 0 30px rgba(255, 255, 255, 0.4);\n            position: relative;\n            overflow: hidden;\n            padding: 25px;\n            display: flex; flex-direction: column;\n            max-height: 95vh;\n        }\n\n        .border-flow, .inner-border { position: absolute; pointer-events: none; }\n        .border-flow { top: 0; left: 0; right: 0; bottom: 0; background: linear-gradient(90deg, rgba(139,115,85,0.1) 1px, transparent 1px), linear-gradient(0deg, rgba(139,115,85,0.1) 1px, transparent 1px); background-size: 20px 20px; animation: borderFlow 15s linear infinite; }\n        .inner-border { top: 5px; left: 5px; right: 5px; bottom: 5px; border: 3px solid rgba(139,115,85,0.3); border-radius: 5px; }\n        @keyframes borderFlow { from { background-position: 0 0; } to { background-position: 20px 20px; } }\n\n        .creator-header {\n            text-align: center;\n            padding: 10px;\n            margin-bottom: 25px;\n            border-bottom: 2px solid rgba(139, 115, 85, 0.3);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 15px;\n        }\n        .creator-header h1 {\n            font-family: var(--font-display);\n            font-size: clamp(24px, 5vw, 32px);\n            margin: 0;\n            font-weight: 700;\n            letter-spacing: 3px;\n            color: var(--heading-color);\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.1);\n        }\n        \n        .title-char {\n            display: inline-block;\n            opacity: 0;\n            transform: translateY(30px);\n        }\n\n        .wax-seal {\n            width: 45px;\n            height: 45px;\n            display: inline-block;\n            background-color: #c0392b;\n            border-radius: 50%;\n            position: relative;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.4), inset 0 -2px 3px rgba(0,0,0,0.3);\n            opacity: 0;\n            transform: scale(0.5);\n            font-family: 'Cinzel', serif;\n            color: #e7a49c;\n            text-align: center;\n            font-size: 24px;\n            line-height: 45px;\n            font-weight: 700;\n        }\n        .wax-seal::before {\n            content: 'GS';\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.3);\n        }\n\n        .creator-scroll-content { overflow-y: auto; padding: 10px 20px 10px 10px; }\n        .creator-scroll-content::-webkit-scrollbar { width: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-track { background: rgba(139, 115, 85, 0.1); border-radius: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-thumb { background-color: #a89072; border-radius: 10px; border: 2px solid #f7e9d7; }\n        \n        .gs-creator-step { margin-bottom: 40px; overflow: hidden; }\n        .gs-creator-step h3 { font-family: var(--font-display); font-size: 1.5em; font-weight: 700; border-bottom: 1.5px solid var(--border-color); padding-bottom: 8px; margin-bottom: 20px; color: var(--heading-color); text-align: left; }\n        \n        .layout-grid { display: grid; grid-template-columns: 1fr; gap: 25px; align-items: flex-start; }\n        @media (min-width: 768px) {\n            .layout-grid { grid-template-columns: 1fr 280px; }\n        }\n\n        .form-container { text-align: left; }\n        .gs-form-group { margin-bottom: 16px; }\n        .gs-form-group label { display: block; margin-bottom: 6px; font-weight: bold; color: var(--heading-color); }\n        .form-input, .form-select, .form-textarea { width: 100%; padding: 10px; background-color: rgba(255, 255, 255, 0.5); border: 1px solid #a58e72; border-radius: 4px; color: #3d3d3d; font-family: var(--font-main); font-size: 1em; transition: all 0.2s ease-in-out; box-shadow: inset 1px 1px 2px rgba(0,0,0,0.1); }\n        .form-input:focus, .form-select:focus, .form-textarea:focus { outline: none; border-color: #8b7355; background-color: #fff; box-shadow: 0 0 5px rgba(139, 115, 85, 0.5); }\n        .form-textarea { resize: vertical; min-height: 100px; }\n\n        .grid-cols-2 {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 16px;\n        }\n        @media (min-width: 480px) {\n            .grid-cols-2 {\n                grid-template-columns: repeat(2, 1fr);\n            }\n        }\n\n        #attributes-container .point-control { display: flex; align-items: center; justify-content: space-between; margin-bottom: 8px; padding: 6px 8px; background: rgba(0,0,0,0.03); border-left: 3px solid rgba(139,115,85,0.2); border-radius: 4px; }\n        #attributes-container .label { font-weight: bold; color: var(--heading-color); }\n        #attributes-container input[readonly] { width: 40px; text-align: center; font-weight: bold; font-size: 1.2em; font-family: var(--font-display); color: #a02c2c; border: none; background-color: transparent; box-shadow: none; padding: 0; }\n        \n        .attributes-grid {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 0 16px;\n        }\n        @media (min-width: 480px) {\n            .attributes-grid {\n                grid-template-columns: 1fr 1fr;\n            }\n        }\n        \n        .skills-display p { background-color: rgba(0,0,0,0.05); border-left: 3px solid var(--border-color); padding: 10px 15px; margin-top: 10px; font-size: 0.95em; border-radius: 0 4px 4px 0; }\n        .skills-display strong { color: #8b5b4b; font-family: var(--font-display); }\n        .skills-display ul { list-style: none; padding-left: 0; margin-top: 8px; font-size: 0.9em; }\n        .skills-display li { margin-bottom: 4px; }\n\n        #character-summary { background-color: #e9e4d9; font-family: var(--font-code); line-height: 1.6; height: 250px; color: #2c2a2a; }\n        \n        .gs-button { width: 100%; background-color: #8b7355; color: var(--parchment-bg); border: 2px solid var(--dark-leather-bg); border-radius: 5px; padding: 12px 20px; font-family: var(--font-display); font-size: 1.2em; font-weight: 700; cursor: pointer; margin-top: 10px; transition: all 0.3s ease; box-shadow: 0 3px 5px rgba(0,0,0,0.3); }\n        .gs-button:hover { background-color: #a0886c; transform: translateY(-2px); box-shadow: 0 5px 8px rgba(0,0,0,0.3); }\n        .gs-button:disabled { background-color: #9e9e9e; border-color: #757575; cursor: not-allowed; transform: none; box-shadow: none; opacity: 0.6; }\n        .action-button { background-color: #6d5b4b; font-size: 1em; padding: 10px 15px; margin-top: 0; margin-bottom: 10px; width: auto; }\n        \n        .background-display { margin-top: 15px; padding: 15px; border: 1px dashed var(--border-color); border-radius: 5px; background: rgba(0,0,0,0.02); }\n        .background-display p { margin: 0 0 8px; }\n        .background-display span { font-weight: bold; color: var(--heading-color); }\n        \n        #radar-chart-container { \n            max-width: 100%;\n        }\n        @media (min-width: 768px) {\n            #radar-chart-container {\n                position: sticky;\n                top: 0;\n                padding-top: 45px;\n            }\n        }\n\n        pre.mermaid { \n            font-family: var(--font-main); \n            background: rgba(0,0,0,0.02); \n            border: 1px solid rgba(139,115,85,0.1); \n            padding: 10px; \n            border-radius: 5px; \n            overflow: auto;\n            transition: opacity 0.3s ease-in-out;\n        }\n        pre.mermaid.loading { opacity: 0.5; pointer-events: none; }\n\n        pre.mermaid > svg {\n            max-width: 100%;\n            height: auto;\n        }\n\n        #dice-overlay {\n            position: fixed; top: 0; left: 0; width: 100%; height: 100%;\n            background: rgba(0,0,0,0.8); backdrop-filter: blur(5px);\n            display: none; align-items: center; justify-content: center; flex-direction: column;\n            z-index: 100;\n            color: #fff; text-shadow: 0 0 10px #000;\n        }\n\n        .dice-container {\n            display: flex; flex-wrap: wrap; justify-content: center;\n            gap: 2rem; margin-bottom: 2rem;\n            max-width: 600px;\n        }\n        \n        .dice-icon {\n            width: var(--dice-size); height: var(--dice-size);\n            perspective: 800px;\n            transform-style: preserve-3d;\n            display: none;\n        }\n        .dice-icon.highlight {\n            transform: scale(1.15);\n            filter: drop-shadow(0 0 15px #FFEB3B);\n            transition: transform 0.3s ease, filter 0.3s ease;\n        }\n\n        .dice-cube {\n            width: 100%; height: 100%;\n            position: relative;\n            transform-style: preserve-3d;\n            transform: translateZ(calc(var(--dice-size) / -2));\n        }\n        \n        .dice-face {\n            position: absolute;\n            width: var(--dice-size); height: var(--dice-size);\n            background-color: rgba(255, 255, 255, 0.98);\n            border: 1.5px solid #857e72;\n            border-radius: 12%;\n        }\n\n        .pips-container {\n            width: 100%; height: 100%;\n            position: relative; \n        }\n        .pip {\n            width: 22%; height: 22%; \n            background-color: #3d352e;\n            border-radius: 50%;\n            box-shadow: inset 0 1px 3px rgba(0,0,0,0.5);\n            position: absolute; \n        }\n        \n        #dice-result-text { \n            font-family: var(--font-display); \n            font-size: 2.2em;\n            color: #FFEB3B; \n            text-shadow: 0 0 12px #FFEB3B; \n            min-height: 2em;\n            line-height: 1.2;\n            text-align: center; \n        }\n        \n        #skip-animation-btn {\n            position: absolute;\n            bottom: 30px;\n            font-size: 1em;\n            padding: 8px 20px;\n            width: auto;\n            background-color: rgba(0,0,0,0.3);\n            border-color: rgba(255,255,255,0.5);\n            color: rgba(255,255,255,0.8);\n        }\n        #skip-animation-btn:hover {\n            background-color: rgba(0,0,0,0.5);\n            color: #fff;\n        }\n\n        .typed-cursor {\n            opacity: 1;\n            animation: typed-blink 0.7s infinite;\n        }\n        @keyframes typed-blink{\n            0% { opacity: 1; }\n            50% { opacity: 0; }\n            100% { opacity: 1; }\n        }\n        \n        .validation-message {\n            text-align: center;\n            color: #b71c1c;\n            font-size: 0.9em;\n            font-weight: bold;\n            margin-top: -5px;\n            margin-bottom: 10px;\n            height: 1.2em;\n            opacity: 0;\n            will-change: transform, opacity;\n        }\n\n        #credits-screen {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            pointer-events: none;\n            opacity: 0;\n        }\n\n        #credits-screen p {\n            font-family: var(--font-display);\n            font-size: 2em;\n            color: #f5f5dc;\n            text-shadow: 0 0 8px rgba(245, 245, 220, 0.7);\n        }\n    </style>\n</head>\n<body>\n\n<div class=\"creator-wrapper\">\n    <div class=\"border-flow\"></div>\n    <div class=\"inner-border\"></div>\n    <header class=\"creator-header\">\n        <h1 id=\"main-title\">冒险者契约登记</h1>\n        <div id=\"wax-seal\" class=\"wax-seal\"></div>\n    </header>\n\n    <div class=\"creator-scroll-content\">\n        <div class=\"gs-creator-container\">\n            <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第一步：身份确认</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-name-input\">姓名</label><input id=\"char-name-input\" type=\"text\" placeholder=\"可留空，默认为 {{user}}\" class=\"form-input\"></div>\n                    <div class=\"grid-cols-2 gsap-content-item\">\n                        <div class=\"gs-form-group\"><label for=\"char-gender-input\">性别</label><input id=\"char-gender-input\" type=\"text\" placeholder=\"例如: 男性/女性/双性/无性/……\" class=\"form-input\"></div>\n                        <div class=\"gs-form-group\"><label for=\"char-age-input\">年龄</label><input id=\"char-age-input\" type=\"number\" placeholder=\"可参照种族说明\" class=\"form-input\"></div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-race-select\">种族</label><select id=\"char-race-select\" class=\"form-select\"></select></div>\n                    <div class=\"gs-form-group gsap-content-item\">\n                        <label>经历 (出身/来历/邂逅)</label>\n                        <button id=\"roll-background-btn\" class=\"gs-button action-button\">🎲 投骰决定经历</button>\n                        <div id=\"background-display\" class=\"background-display\" style=\"display: none;\">\n                            <p>出身: <span id=\"bg-origin\"></span></p>\n                            <p>来历: <span id=\"bg-past\"></span></p>\n                            <p>邂逅: <span id=\"bg-encounter\"></span></p>\n                        </div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"oc-details-input\">身体特征与补充</label><textarea id=\"oc-details-input\" placeholder=\"发色、瞳色、体型、性格、背景故事构思...\" class=\"form-textarea\"></textarea></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第二步：能力值与技能</h3>\n                <div class=\"layout-grid\">\n                    <div class=\"form-container gsap-content-item\">\n                        <button id=\"roll-attributes-btn\" class=\"gs-button action-button\">🎲 投骰决定能力值</button>\n                        <div id=\"attributes-container\" class=\"attributes-grid\"></div>\n                        <div id=\"skills-and-desc-container\" class=\"skills-display\"></div>\n                    </div>\n                    <div id=\"radar-chart-container\" class=\"gsap-content-item\"><pre class=\"mermaid\" id=\"radar-chart\"></pre></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第三步：完成登记</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"character-summary\">角色卡预览</label><textarea id=\"character-summary\" rows=\"12\" readonly class=\"form-textarea\"></textarea></div>\n                    <button id=\"submit-btn\" class=\"gs-button gsap-content-item\" disabled>确认登记，开始冒险</button>\n                    <div id=\"validation-message\" class=\"validation-message\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div id=\"credits-screen\">\n    <p>作者 𝙀𝙡𝙖𝙞𝙣𝙖𝙙𝙚𝙨</p>\n</div>\n\n<div id=\"dice-overlay\">\n    <div class=\"dice-container\" id=\"dice-container\"></div>\n    <div id=\"dice-result-text\"></div>\n    <button id=\"skip-animation-btn\" class=\"gs-button\">跳过动画</button>\n</div>\n\n<div id=\"dice-templates\" style=\"display:none;\">\n    <div class=\"dice-cube\" data-id_template=\"dice-cube\">\n        <div class=\"dice-face face-front\" data-face=\"1\"><div class=\"pips-container\"><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-back\" data-face=\"6\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-right\" data-face=\"3\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-left\" data-face=\"4\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-top\" data-face=\"2\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-bottom\" data-face=\"5\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n    </div>\n</div>\n\n<script>\n// --- MODIFIED DATA ---\nconst raceData = {\n    '凡人': { attr_rolls: { '力量': '1d3+1', '敏捷': '1d3', '感知': '1d3', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3+2', '魔力': '1d3' }, skills: ['过载行动(初级)', '武器:投掷武器(初级)', '长距离移动(初级)']},\n    '矿人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3', '感知': '1d3+2', '知识': '1d3-1', '魅力': '1d3+1', '信仰力': '1d3+1', '魔力': '1d3-1' }, skills: ['治愈适性(初级)', '夜视(初级)', '锻造(初级)']},\n    '森人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+1', '感知': '1d3+1', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3-1', '魔力': '1d3+1' }, skills: ['武器:弩弓(初级)', '夜视(初级)', '精灵宠儿(初级)']},\n    '蜥蜴人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3+1', '感知': '1d3', '知识': '1d3', '魅力': '1d3+1', '信仰力': '1d3', '魔力': '1d3' }, skills: ['免疫强化(初级)', '夜视(初级)', '龙族血统(初级)']},\n    '圃人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+2', '感知': '1d3+1', '知识': '1d3', '魅力': '1d3-1', '信仰力': '1d3', '魔力': '1d3+2' }, skills: ['隐匿(初级)', '先发制人(初级)', '烹饪(初级)']}\n};\nconst backgroundData = {\n    origin: { \n        '凡人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '学者', class: '魔术师', level: 1, skills: ['文献调查(初级)'] }, 6: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 7: { name: '农民', skills: ['生产业:农业(初级)', '强健(初级)'] }, 8: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '骑士', class: '战士', level: 1, skills: ['骑乘(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n        '矿人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 6: { name: '酒馆老板', class: '战士', level: 1, skills: ['观察(初级)'] }, 7: { name: '铁匠', skills: ['工匠:锻造(初级)', '手工(初级)'] }, 8: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '碎盾者', class: '战士', level: 1, skills: ['强击攻击·斩(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n    },\n    past: { 2: { name: '奴隶', skills: ['劳动(初级)'] }, 3: { name: '牢狱', skills: ['犯罪知识(初级)'] }, 4: { name: '战场', skills: ['沉着冷静(初级)'] }, 5: { name: '神殿', skills: ['神学(初级)'] }, 6: { name: '孤儿', skills: ['忍耐(初级)'] }, 7: { name: '平顺', skills: ['幸运(初级)'] }, 8: { name: '贫困', skills: ['生存术(初级)'] }, 9: { name: '学校', skills: ['博识(初级)'] }, 10: { name: '深闺', skills: ['无偏见(初级)'] }, 11: { name: '奢华', skills: ['鉴定(初级)'] }, 12: { name: '宫廷', skills: ['礼仪(初级)'] }},\n    encounter: { 2: '宿敌', 3: '上司', 4: '后辈', 5: '交易对象', 6: '下属', 7: '家人', 8: '挚友', 9: '前辈', 10: '未婚夫/妻', 11: '劲敌', 12: '师父' }\n};\nbackgroundData.origin['森人'] = backgroundData.origin['凡人']; backgroundData.origin['蜥蜴人'] = backgroundData.origin['凡人']; backgroundData.origin['圃人'] = backgroundData.origin['凡人'];\nconst character = {\n    name: '', gender: '', age: '', oc_details: '', race: '凡人',\n    background: { origin: null, past: null, encounter: null },\n    attributes: { '力量': 0, '敏捷': 0, '感知': 0, '知识': 0, '魅力': 0, '信仰力': 0, '魔力': 0, '潜力': 0 },\n    skills: [], classes: {}, money: 0, _lastAttributesForChart: '',\n};\n// --- END MODIFIED DATA ---\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    gsap.registerPlugin(TextPlugin);\n    mermaid.initialize({ startOnLoad: true, theme: 'base', themeVariables: {\n        '--mermaid-font-family': \"'Vollkorn', 'Noto Serif SC', serif\",\n        primaryColor: '#f7e9d7', primaryTextColor: '#3d3d3d', lineColor: '#8b7355', textColor: '#4a3c2c',\n    }});\n    \n    const $ = (s) => document.querySelector(s);\n    const roll1D6 = () => Math.floor(Math.random() * 6) + 1;\n    const roll1D3 = () => {\n        const d6 = roll1D6();\n        if (d6 <= 2) return { d6, d3: 1 };\n        if (d6 <= 4) return { d6, d3: 2 };\n        return { d6, d3: 3 };\n    };\n    const rollDiceString = (diceString) => { const p=diceString.split('*');const d=p[0];const m=parseInt(p[1])||1;if(!d.includes('d'))return 0;const[n,s]=d.split('d').map(Number);let t=0;for(let i=0;i<n;i++){t+=Math.floor(Math.random()*s)+1;}return t*m; };\n    const formatAge = (ageValue) => { if (!ageValue && ageValue !== 0) return ageValue; const num = Number(ageValue); if (isNaN(num)) return ageValue; if (Math.abs(num) >= 1_000_000) return num.toExponential(2); return ageValue; };\n    const debounce = (func, delay) => { let timeout; return function(...args) { clearTimeout(timeout); timeout = setTimeout(() => func.apply(this, args), delay); }; };\n    const diceUnicode = ['\\u2680', '\\u2681', '\\u2682', '\\u2683', '\\u2684', '\\u2685'];\n\n    const DOM = {\n        nameInput: $('#char-name-input'), genderInput: $('#char-gender-input'), ageInput: $('#char-age-input'),\n        ocDetailsInput: $('#oc-details-input'), raceSelect: $('#char-race-select'), attributesContainer: $('#attributes-container'),\n        skillsContainer: $('#skills-and-desc-container'), radarChart: $('#radar-chart'), summarySheet: $('#character-summary'),\n        diceOverlay: $('#dice-overlay'), diceContainer: $('#dice-container'), diceResultText: $('#dice-result-text'),\n        backgroundDisplay: $('#background-display'), bgOrigin: $('#bg-origin'), bgPast: $('#bg-past'), bgEncounter: $('#bg-encounter'),\n        skipAnimationBtn: $('#skip-animation-btn'),\n        submitBtn: $('#submit-btn'),\n        validationMessage: $('#validation-message'),\n    };\n    \n    const dicePool = []; const MAX_DICE = 6;\n    let currentAnimation = null; let textAnimation = null; let isSkipping = false;\n    let currentValidationMessage = '';\n    \n    function validateAndToggleButton() {\n        let newMessage = '';\n        if (!character.age || String(character.age).trim() === '') {\n            newMessage = '请填写您的冒险者年龄。';\n        } else if (!character.gender || !character.gender.trim()) {\n            newMessage = '请设定冒险者的性别。';\n        } else if (!character.background.origin) {\n            newMessage = '请投骰决定您的冒险者经历。';\n        } else if (Object.values(character.attributes).every(val => val === 0)) {\n            newMessage = '请投骰决定您的能力值。';\n        }\n\n        if (newMessage === currentValidationMessage) return;\n        currentValidationMessage = newMessage;\n\n        if (newMessage) {\n            DOM.submitBtn.disabled = true;\n            DOM.validationMessage.textContent = newMessage;\n            gsap.fromTo(DOM.validationMessage, { autoAlpha: 0, scale: 0.8 }, { autoAlpha: 1, scale: 1, duration: 0.4, ease: 'elastic.out(1, 0.75)' });\n        } else {\n            DOM.submitBtn.disabled = false;\n            gsap.to(DOM.validationMessage, { autoAlpha: 0, duration: 0.3 });\n        }\n    }\n    function updateCharacterDataFromDOM() { character.name = DOM.nameInput.value; character.gender = DOM.genderInput.value; character.age = DOM.ageInput.value; character.oc_details = DOM.ocDetailsInput.value; character.race = DOM.raceSelect.value; }\n    function renderSkills() { const uniqueSkills = [...new Set(character.skills)]; DOM.skillsContainer.innerHTML = `<p><strong>天赋与习得技能:</strong></p><ul>${uniqueSkills.map(s => `<li>- ${s}</li>`).join('')}</ul>`; }\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key}`).value = value; }); }\n    function renderSummary() {\n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '?';\n        const originText = `出身:${character.background.origin ? character.background.origin.name : '?'}`;\n        const pastText = `来历:${character.background.past ? character.background.past.name : '?'}`;\n        const encounterText = `邂逅:${character.background.encounter || '?'}`;\n        let summary = `### 《哥布林杀手TRPG》冒险者登记卡\\n` + `**姓名:** ${finalName} | **种族:** ${character.race} | **性别:** ${character.gender || '?'} | **年龄:** ${formattedAge}\\n` + `**经历:** ${originText} / ${pastText} / ${encounterText}\\n` + `**初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n` + `**初始技能:** ${uniqueSkills.join(', ') || '无'}\\n`; if (character.oc_details) { summary += `**身体特征与补充:** ${character.oc_details}\\n`; } summary += `---\\n**能力值:**\\n`; summary += Object.entries(character.attributes).map(([key, value]) => `- ${key}: ${value}`).join('\\n'); summary += `\\n**持有资金:** ${character.money} 银币`;\n        DOM.summarySheet.value = summary.replace(/### /g, '').replace(/\\*\\*/g, '').replace(/---/g, '\\n────────────────────\\n').replace(/- /g, '  ');\n        DOM.summarySheet.setAttribute('data-raw', summary);\n    }\n    async function renderRadarChartIfNeeded() { const currentAttributesString = JSON.stringify(character.attributes); if (currentAttributesString === character._lastAttributesForChart) return; DOM.radarChart.classList.add('loading'); const radarSyntax = `radar-beta\\ntitle 能力值分布\\naxis a[\"力量 ${character.attributes['力量']}\"]\\naxis b[\"敏捷 ${character.attributes['敏捷']}\"]\\naxis c[\"感知 ${character.attributes['感知']}\"]\\naxis d[\"知识 ${character.attributes['知识']}\"]\\naxis e[\"魅力 ${character.attributes['魅力']}\"]\\naxis f[\"信仰 ${character.attributes['信仰力']}\"]\\naxis g[\"魔力 ${character.attributes['魔力']}\"]\\naxis h[\"潜力 ${character.attributes['潜力']}\"]\\ncurve current[\"能力\"]{${character.attributes['力量']},${character.attributes['敏捷']},${character.attributes['感知']},${character.attributes['知识']},${character.attributes['魅力']},${character.attributes['信仰力']},${character.attributes['魔力']},${character.attributes['潜力']}}\\nmax 10\\nmin 0`; DOM.radarChart.innerHTML = radarSyntax; DOM.radarChart.removeAttribute('data-processed'); try { await mermaid.run({ nodes: [DOM.radarChart] }); character._lastAttributesForChart = currentAttributesString; } catch(e) { console.error(\"Mermaid rendering error:\", e); } finally { DOM.radarChart.classList.remove('loading'); } }\n    async function updateUI(forceFullUpdate = false) { updateCharacterDataFromDOM(); if(forceFullUpdate) { character._lastAttributesForChart = ''; character.skills = []; character.classes = {}; character.money = 100; if(raceData[character.race].skills) character.skills.push(...raceData[character.race].skills); if (character.background.origin) { if (character.background.origin.skills) character.skills.push(...character.background.origin.skills); if (character.background.origin.class) character.classes[character.background.origin.class] = character.background.origin.level; if(character.background.origin.money) character.money += rollDiceString(character.background.origin.money); } if (character.background.past && character.background.past.skills) { character.skills.push(...character.background.past.skills); } } renderAttributes(); renderSkills(); renderSummary(); await renderRadarChartIfNeeded(); validateAndToggleButton(); }\n\n    const masterTl = gsap.timeline({ delay: 0.2 });\n    const title = $('#main-title');\n    title.innerHTML = title.textContent.split('').map(char => `<span class=\"title-char\">${char}</span>`).join('');\n    gsap.set(\".gsap-header-item, .gsap-content-item\", { autoAlpha: 0, y: 20 });\n    masterTl.to(\".title-char\", { autoAlpha: 1, y: 0, duration: 0.7, ease: \"power3.out\", stagger: 0.1 }).to(\"#wax-seal\", { autoAlpha: 1, scale: 1, duration: 0.6, ease: \"elastic.out(1, 0.7)\" }, \"-=0.5\");\n    document.querySelectorAll('.gs-creator-step').forEach((step, index) => { const stepTl = gsap.timeline(); stepTl.to(step.querySelector('.gsap-header-item'), { autoAlpha: 1, y: 0, duration: 0.6, ease: 'power2.out' }).to(step.querySelectorAll('.gsap-content-item'), { autoAlpha: 1, y: 0, duration: 0.5, ease: 'power2.out', stagger: 0.1 }, '-=0.4'); masterTl.add(stepTl, `-=${index === 0 ? 0.2 : 0.7}`); });\n    const pipPositions = { 1: [ { left: '50%', top: '50%' } ], 2: [ { left: '25%', top: '25%' }, { left: '75%', top: '75%' } ], 3: [ { left: '25%', top: '25%' }, { left: '50%', top: '50%' }, { left: '75%', top: '75%' } ], 4: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 5: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '50%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 6: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '50%' }, { left: '75%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ]};\n    function setupCube(cubeEl) { const size = 'calc(var(--dice-size) / 2)'; gsap.set(cubeEl.querySelector('.face-front'),  { transform: `rotateY(0deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-back'),   { transform: `rotateY(180deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-right'),  { transform: `rotateY(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-left'),   { transform: `rotateY(-90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-top'),   { transform: `rotateX(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-bottom'), { transform: `rotateX(-90deg) translateZ(${size})` }); const faces = cubeEl.querySelectorAll('.dice-face'); faces.forEach(face => { const faceNum = face.getAttribute('data-face'); const pips = face.querySelectorAll('.pip'); const positions = pipPositions[faceNum]; if (!pips.length || !positions) return; pips.forEach((pip, index) => { const pos = positions[index]; gsap.set(pip, { left: pos.left, top: pos.top, xPercent: -50, yPercent: -50 }); }); }); }\n    function getRotationForFace(faceValue) { switch (faceValue) { case 1: return { x: 0, y: 0 }; case 6: return { x: 0, y: 180 }; case 3: return { x: 0, y: -90 }; case 4: return { x: 0, y: 90 }; case 2: return { x: -90, y: 0 }; case 5: return { x: 90,  y: 0 }; default: return { x: 0, y: 0 }; } }\n    async function animateText(element, text) { if(isSkipping) {element.innerHTML = text.replace(/\\n/g, '<br>'); return;} return new Promise(resolve => { if (textAnimation && textAnimation.isActive()) textAnimation.kill(); element.innerHTML = ''; textAnimation = gsap.to(element, { duration: text.length * 0.05, text: { value: text.replace(/\\n/g, '<br>'), newClass: \"typed-cursor\" }, ease: \"none\", onComplete: () => { gsap.delayedCall(0.7, () => { element.querySelector('.typed-cursor')?.remove(); resolve(); }); } }); }); }\n    function initDicePool() { const diceTemplate = document.querySelector('[data-id_template=\"dice-cube\"]'); if (!diceTemplate) return; for (let i = 0; i < MAX_DICE; i++) { const dieIconElement = document.createElement('div'); dieIconElement.className = 'dice-icon'; const newCube = diceTemplate.cloneNode(true); dieIconElement.appendChild(newCube); DOM.diceContainer.appendChild(dieIconElement); setupCube(newCube); dicePool.push(dieIconElement); } }\n    async function animateRoll(numDice, preCalculatedRolls, textToShowDuringRoll = \"投掷中...\") { return new Promise(resolve => { if (currentAnimation && currentAnimation.isActive()) currentAnimation.kill(); dicePool.forEach(die => die.style.display = 'none'); const activeDice = dicePool.slice(0, numDice); animateText(DOM.diceResultText, textToShowDuringRoll); activeDice.forEach(die => { die.style.display = 'flex'; die.className = 'dice-icon'; }); const masterTl = gsap.timeline({ onComplete: () => { if(isSkipping) DOM.diceResultText.innerHTML = ''; resolve(preCalculatedRolls); }}); currentAnimation = masterTl; activeDice.forEach((dieElement, i) => { const dieCube = dieElement.querySelector('.dice-cube'); const visualRoll = preCalculatedRolls[i]; const targetRotation = getRotationForFace(visualRoll); const dieTimeline = gsap.timeline(); dieTimeline.to(dieCube, { rotationX: `+=${gsap.utils.random(720, 1080)}`, rotationY: `+=${gsap.utils.random(720, 1080)}`, duration: 1.8, ease: \"power2.in\" }).to(dieCube, { rotationX: targetRotation.x, rotationY: targetRotation.y, duration: 0.7, ease: \"power4.out\" }); masterTl.add(dieTimeline, 0); }); }); }\n    \n    const debouncedUpdate = debounce(updateUI, 400);\n    [DOM.nameInput, DOM.genderInput, DOM.ageInput, DOM.ocDetailsInput].forEach(el => el.addEventListener('input', debouncedUpdate));\n    \n    DOM.skipAnimationBtn.addEventListener('click', () => {\n        isSkipping = true;\n        if (currentAnimation && currentAnimation.isActive()) currentAnimation.progress(1);\n        if (textAnimation && textAnimation.isActive()) textAnimation.progress(1);\n    });\n\n    $('#roll-background-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const rolls = [roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6()];\n        await animateRoll(6, rolls, '投掷 经历... (2d6 x 3)');\n        \n        const sums = { origin: rolls[0] + rolls[1], past: rolls[2] + rolls[3], encounter: rolls[4] + rolls[5] };\n        \n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `出身: ${rolls[0]} + ${rolls[1]} = ${sums.origin}\\n(${backgroundData.origin[character.race][sums.origin].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `来历: ${rolls[2]} + ${rolls[3]} = ${sums.past}\\n(${backgroundData.past[sums.past].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(4, 6), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `邂逅: ${rolls[4]} + ${rolls[5]} = ${sums.encounter}\\n(${backgroundData.encounter[sums.encounter]})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        character.background.origin = backgroundData.origin[character.race][sums.origin];\n        character.background.past = backgroundData.past[sums.past];\n        character.background.encounter = backgroundData.encounter[sums.encounter];\n        DOM.bgOrigin.textContent = character.background.origin.name;\n        DOM.bgPast.textContent = character.background.past.name;\n        DOM.bgEncounter.textContent = character.background.encounter;\n        DOM.backgroundDisplay.style.display = 'block';\n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        updateUI(true);\n    });\n\n    $('#roll-attributes-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const attrRolls = raceData[character.race].attr_rolls;\n        const allCalculatedRolls = [];\n\n        // Prepare race-based attributes\n        for (const attr in attrRolls) {\n            const formula = attrRolls[attr];\n            const modifier = parseInt(formula.split('d3')[1] || '0');\n            const { d6, d3 } = roll1D3();\n            const finalValue = Math.max(0, d3 + modifier);\n            character.attributes[attr] = finalValue;\n            allCalculatedRolls.push({ attr, formula, d6, d3, modifier, finalValue });\n        }\n        \n        // Prepare \"Potential\" attribute\n        const potentialValue = Math.floor(Math.random() * 3) + 1;\n        const d6ForPotential = (potentialValue * 2) - 1; // Map 1,2,3 to d6 faces 1,3,5 for animation\n        character.attributes['潜力'] = potentialValue;\n        allCalculatedRolls.push({\n            attr: '潜力',\n            formula: '1-3', // Just a descriptor\n            d6: d6ForPotential,\n            finalValue: potentialValue\n        });\n        \n        // Animate all rolls sequentially\n        for (const roll of allCalculatedRolls) {\n            await animateRoll(1, [roll.d6], `投掷 ${roll.attr}...`);\n            if (isSkipping) break;\n\n            gsap.to(dicePool[0], { className: 'dice-icon highlight', duration: 0.3 });\n            \n            let resultText;\n            if (roll.attr === '潜力') {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.finalValue}`;\n            } else {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.d3} ${roll.modifier >= 0 ? '+' : ''} ${roll.modifier} = ${roll.finalValue}`;\n            }\n            await animateText(DOM.diceResultText, resultText);\n            \n            await updateUI();\n            \n            if (isSkipping) break;\n            \n            await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        await updateUI();\n    });\n\n    DOM.raceSelect.addEventListener('change', () => {\n        DOM.backgroundDisplay.style.display = 'none';\n        character.background = { origin: null, past: null, encounter: null };\n        Object.keys(character.attributes).forEach(k => character.attributes[k] = 0);\n        updateUI(true);\n    });\n\n    $('#submit-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        await updateUI(true);\n        \n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '未设定';\n        \n        const finalCharacterObject={ NAME:finalName, GENDER:character.gender||'未设定', AGE:formattedAge, RACE:character.race, ORIGIN: character.background.origin ? character.background.origin.name : '未知', PAST: character.background.past ? character.background.past.name : '未知', ENCOUNTER: character.background.encounter || '未知', SKILLS: uniqueSkills, OC_DETAILS:character.oc_details||'无', ...character.attributes, MONEY:character.money };\n        \n        const slashCommand=`/send <START>\\nAdmin:\\n这是一个TRPG开局，请为 User 生成一段详尽的背景故事。\\n\\n# 故事核心要求\\n请严格根据以下【角色完整设定】，撰写一段从角色童年到现在的成长故事。故事需要清晰地阐述是什么关键事件或心路历程，最终让他/她确立了要成为一名冒险者的志向。请在故事中自然地融入角色的种族、出身背景、技能和性格特点。\\n\\n# 角色完整设定\\n---\\n## 基础信息\\n- **姓名:** ${finalName}\\n- **性别:** ${character.gender||'未设定'}\\n- **年龄:** ${formattedAge}\\n- **种族:** ${character.race}\\n\\n## 经历\\n- **出身:** ${character.background.origin ? character.background.origin.name : '未知'}\\n- **来历:** ${character.background.past ? character.background.past.name : '未知'}\\n- **邂逅:** ${character.background.encounter || '未知'}\\n\\n## 背景与技能\\n- **初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n- **初始技能:** ${uniqueSkills.join(', ')||'无'}\\n\\n## 补充设定 (OC)\\n- **额外补充:** ${character.oc_details||'无'}\\n\\n## 能力值\\n- **力量:** ${character.attributes['力量']}\\n- **敏捷:** ${character.attributes['敏捷']}\\n- **感知:** ${character.attributes['感知']}\\n- **知识:** ${character.attributes['知识']}\\n- **魅力:** ${character.attributes['魅力']}\\n- **信仰力:** ${character.attributes['信仰力']}\\n- **魔力:** ${character.attributes['魔力']}\\n\\n## 初始资产\\n- **资金:** ${character.money} 银币\\n\\|\\n/trigger`; \n        \n        try {\n            if (typeof insertOrAssignVariables === 'function') {\n                await insertOrAssignVariables(finalCharacterObject);\n            } else {\n                console.log(\"SillyTavern Function 'insertOrAssignVariables' not found. Variables:\", finalCharacterObject);\n            }\n            if (typeof triggerSlash === 'function') {\n                await triggerSlash(slashCommand, 'Send');\n            } else { \n                console.log(\"SillyTavern Function 'triggerSlash' not found. Command will be copied to clipboard.\");\n                navigator.clipboard.writeText(slashCommand).then(() => {\n                    alert('角色指令已复制到剪贴板！');\n                });\n            }\n        } catch (error) {\n            console.error('与SillyTavern交互失败:', error);\n            alert('与SillyTavern交互失败，请查看浏览器控制台。');\n        }\n\n        e.target.innerHTML = \"契约成立！\";\n    });\n    \n    initDicePool();\n    Object.keys(raceData).forEach(key => DOM.raceSelect.add(new Option(key, key)));\n    Object.keys(character.attributes).forEach(key => {\n        const pointControl = document.createElement('div');\n        pointControl.className = 'point-control';\n        pointControl.innerHTML = `<span class=\"label\">${key}</span><input type=\"text\" id=\"attr-${key.replace(/\\s/g, '')}\" readonly value=\"0\">`; // ID santized just in case\n        DOM.attributesContainer.appendChild(pointControl);\n    });\n    // A small fix for renderAttributes to handle sanitized IDs\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key.replace(/\\s/g, '')}`).value = value; }); }\n    updateUI(true);\n});\n</script>\n\n</body>\n</html>\n```"
  },
  {
    "role": "user",
    "content": "```\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>哥布林杀手TRPG - 冒险者契约</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/gsap.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/TextPlugin.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.min.js\" defer></script>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Noto+Serif+SC:wght@400;700&family=Vollkorn:wght@400;700&family=Courier+Prime&display=swap\" rel=\"stylesheet\">\n\n    <style>\n        :root {\n            --leather-bg: #5a3a2a;\n            --dark-leather-bg: #3b2a1a;\n            --parchment-bg: #f5f5dc;\n            --parchment-bg-gradient: linear-gradient(165deg, #f7e9d7, #e6d5c3);\n            --text-color: #3d3d3d;\n            --heading-color: #4a3c2c;\n            --border-color: #7a5a4a;\n            --font-main: 'Vollkorn', 'Noto Serif SC', serif;\n            --font-display: 'Cinzel', 'Noto Serif SC', serif;\n            --font-code: 'Courier Prime', 'Courier New', monospace;\n            --dice-size: 5rem; \n        }\n\n        html { height: 100%; }\n        body {\n            background-color: #3a2e20;\n            font-family: var(--font-main);\n            color: var(--text-color);\n            margin: 0; padding: 20px;\n            box-sizing: border-box;\n            display: flex;\n            align-items: center; justify-content: center;\n            min-height: 100%;\n        }\n        *, *:before, *:after { box-sizing: inherit; }\n\n        .creator-wrapper {\n            width: 100%; max-width: 900px;\n            margin: 0;\n            background: var(--parchment-bg-gradient);\n            border: 12px solid #8b7355;\n            border-radius: 8px;\n            box-shadow: 0 0 40px rgba(139, 115, 85, 0.3), inset 0 0 30px rgba(255, 255, 255, 0.4);\n            position: relative;\n            overflow: hidden;\n            padding: 25px;\n            display: flex; flex-direction: column;\n            max-height: 95vh;\n        }\n\n        .border-flow, .inner-border { position: absolute; pointer-events: none; }\n        .border-flow { top: 0; left: 0; right: 0; bottom: 0; background: linear-gradient(90deg, rgba(139,115,85,0.1) 1px, transparent 1px), linear-gradient(0deg, rgba(139,115,85,0.1) 1px, transparent 1px); background-size: 20px 20px; animation: borderFlow 15s linear infinite; }\n        .inner-border { top: 5px; left: 5px; right: 5px; bottom: 5px; border: 3px solid rgba(139,115,85,0.3); border-radius: 5px; }\n        @keyframes borderFlow { from { background-position: 0 0; } to { background-position: 20px 20px; } }\n\n        .creator-header {\n            text-align: center;\n            padding: 10px;\n            margin-bottom: 25px;\n            border-bottom: 2px solid rgba(139, 115, 85, 0.3);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 15px;\n        }\n        .creator-header h1 {\n            font-family: var(--font-display);\n            font-size: clamp(24px, 5vw, 32px);\n            margin: 0;\n            font-weight: 700;\n            letter-spacing: 3px;\n            color: var(--heading-color);\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.1);\n        }\n        \n        .title-char {\n            display: inline-block;\n            opacity: 0;\n            transform: translateY(30px);\n        }\n\n        .wax-seal {\n            width: 45px;\n            height: 45px;\n            display: inline-block;\n            background-color: #c0392b;\n            border-radius: 50%;\n            position: relative;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.4), inset 0 -2px 3px rgba(0,0,0,0.3);\n            opacity: 0;\n            transform: scale(0.5);\n            font-family: 'Cinzel', serif;\n            color: #e7a49c;\n            text-align: center;\n            font-size: 24px;\n            line-height: 45px;\n            font-weight: 700;\n        }\n        .wax-seal::before {\n            content: 'GS';\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.3);\n        }\n\n        .creator-scroll-content { overflow-y: auto; padding: 10px 20px 10px 10px; }\n        .creator-scroll-content::-webkit-scrollbar { width: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-track { background: rgba(139, 115, 85, 0.1); border-radius: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-thumb { background-color: #a89072; border-radius: 10px; border: 2px solid #f7e9d7; }\n        \n        .gs-creator-step { margin-bottom: 40px; overflow: hidden; }\n        .gs-creator-step h3 { font-family: var(--font-display); font-size: 1.5em; font-weight: 700; border-bottom: 1.5px solid var(--border-color); padding-bottom: 8px; margin-bottom: 20px; color: var(--heading-color); text-align: left; }\n        \n        .layout-grid { display: grid; grid-template-columns: 1fr; gap: 25px; align-items: flex-start; }\n        @media (min-width: 768px) {\n            .layout-grid { grid-template-columns: 1fr 280px; }\n        }\n\n        .form-container { text-align: left; }\n        .gs-form-group { margin-bottom: 16px; }\n        .gs-form-group label { display: block; margin-bottom: 6px; font-weight: bold; color: var(--heading-color); }\n        .form-input, .form-select, .form-textarea { width: 100%; padding: 10px; background-color: rgba(255, 255, 255, 0.5); border: 1px solid #a58e72; border-radius: 4px; color: #3d3d3d; font-family: var(--font-main); font-size: 1em; transition: all 0.2s ease-in-out; box-shadow: inset 1px 1px 2px rgba(0,0,0,0.1); }\n        .form-input:focus, .form-select:focus, .form-textarea:focus { outline: none; border-color: #8b7355; background-color: #fff; box-shadow: 0 0 5px rgba(139, 115, 85, 0.5); }\n        .form-textarea { resize: vertical; min-height: 100px; }\n\n        .grid-cols-2 {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 16px;\n        }\n        @media (min-width: 480px) {\n            .grid-cols-2 {\n                grid-template-columns: repeat(2, 1fr);\n            }\n        }\n\n        #attributes-container .point-control { display: flex; align-items: center; justify-content: space-between; margin-bottom: 8px; padding: 6px 8px; background: rgba(0,0,0,0.03); border-left: 3px solid rgba(139,115,85,0.2); border-radius: 4px; }\n        #attributes-container .label { font-weight: bold; color: var(--heading-color); }\n        #attributes-container input[readonly] { width: 40px; text-align: center; font-weight: bold; font-size: 1.2em; font-family: var(--font-display); color: #a02c2c; border: none; background-color: transparent; box-shadow: none; padding: 0; }\n        \n        .attributes-grid {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 0 16px;\n        }\n        @media (min-width: 480px) {\n            .attributes-grid {\n                grid-template-columns: 1fr 1fr;\n            }\n        }\n        \n        .skills-display p { background-color: rgba(0,0,0,0.05); border-left: 3px solid var(--border-color); padding: 10px 15px; margin-top: 10px; font-size: 0.95em; border-radius: 0 4px 4px 0; }\n        .skills-display strong { color: #8b5b4b; font-family: var(--font-display); }\n        .skills-display ul { list-style: none; padding-left: 0; margin-top: 8px; font-size: 0.9em; }\n        .skills-display li { margin-bottom: 4px; }\n\n        #character-summary { background-color: #e9e4d9; font-family: var(--font-code); line-height: 1.6; height: 250px; color: #2c2a2a; }\n        \n        .gs-button { width: 100%; background-color: #8b7355; color: var(--parchment-bg); border: 2px solid var(--dark-leather-bg); border-radius: 5px; padding: 12px 20px; font-family: var(--font-display); font-size: 1.2em; font-weight: 700; cursor: pointer; margin-top: 10px; transition: all 0.3s ease; box-shadow: 0 3px 5px rgba(0,0,0,0.3); }\n        .gs-button:hover { background-color: #a0886c; transform: translateY(-2px); box-shadow: 0 5px 8px rgba(0,0,0,0.3); }\n        .gs-button:disabled { background-color: #9e9e9e; border-color: #757575; cursor: not-allowed; transform: none; box-shadow: none; opacity: 0.6; }\n        .action-button { background-color: #6d5b4b; font-size: 1em; padding: 10px 15px; margin-top: 0; margin-bottom: 10px; width: auto; }\n        \n        .background-display { margin-top: 15px; padding: 15px; border: 1px dashed var(--border-color); border-radius: 5px; background: rgba(0,0,0,0.02); }\n        .background-display p { margin: 0 0 8px; }\n        .background-display span { font-weight: bold; color: var(--heading-color); }\n        \n        #radar-chart-container { \n            max-width: 100%;\n        }\n        @media (min-width: 768px) {\n            #radar-chart-container {\n                position: sticky;\n                top: 0;\n                padding-top: 45px;\n            }\n        }\n\n        pre.mermaid { \n            font-family: var(--font-main); \n            background: rgba(0,0,0,0.02); \n            border: 1px solid rgba(139,115,85,0.1); \n            padding: 10px; \n            border-radius: 5px; \n            overflow: auto;\n            transition: opacity 0.3s ease-in-out;\n        }\n        pre.mermaid.loading { opacity: 0.5; pointer-events: none; }\n\n        pre.mermaid > svg {\n            max-width: 100%;\n            height: auto;\n        }\n\n        #dice-overlay {\n            position: fixed; top: 0; left: 0; width: 100%; height: 100%;\n            background: rgba(0,0,0,0.8); backdrop-filter: blur(5px);\n            display: none; align-items: center; justify-content: center; flex-direction: column;\n            z-index: 100;\n            color: #fff; text-shadow: 0 0 10px #000;\n        }\n\n        .dice-container {\n            display: flex; flex-wrap: wrap; justify-content: center;\n            gap: 2rem; margin-bottom: 2rem;\n            max-width: 600px;\n        }\n        \n        .dice-icon {\n            width: var(--dice-size); height: var(--dice-size);\n            perspective: 800px;\n            transform-style: preserve-3d;\n            display: none;\n        }\n        .dice-icon.highlight {\n            transform: scale(1.15);\n            filter: drop-shadow(0 0 15px #FFEB3B);\n            transition: transform 0.3s ease, filter 0.3s ease;\n        }\n\n        .dice-cube {\n            width: 100%; height: 100%;\n            position: relative;\n            transform-style: preserve-3d;\n            transform: translateZ(calc(var(--dice-size) / -2));\n        }\n        \n        .dice-face {\n            position: absolute;\n            width: var(--dice-size); height: var(--dice-size);\n            background-color: rgba(255, 255, 255, 0.98);\n            border: 1.5px solid #857e72;\n            border-radius: 12%;\n        }\n\n        .pips-container {\n            width: 100%; height: 100%;\n            position: relative; \n        }\n        .pip {\n            width: 22%; height: 22%; \n            background-color: #3d352e;\n            border-radius: 50%;\n            box-shadow: inset 0 1px 3px rgba(0,0,0,0.5);\n            position: absolute; \n        }\n        \n        #dice-result-text { \n            font-family: var(--font-display); \n            font-size: 2.2em;\n            color: #FFEB3B; \n            text-shadow: 0 0 12px #FFEB3B; \n            min-height: 2em;\n            line-height: 1.2;\n            text-align: center; \n        }\n        \n        #skip-animation-btn {\n            position: absolute;\n            bottom: 30px;\n            font-size: 1em;\n            padding: 8px 20px;\n            width: auto;\n            background-color: rgba(0,0,0,0.3);\n            border-color: rgba(255,255,255,0.5);\n            color: rgba(255,255,255,0.8);\n        }\n        #skip-animation-btn:hover {\n            background-color: rgba(0,0,0,0.5);\n            color: #fff;\n        }\n\n        .typed-cursor {\n            opacity: 1;\n            animation: typed-blink 0.7s infinite;\n        }\n        @keyframes typed-blink{\n            0% { opacity: 1; }\n            50% { opacity: 0; }\n            100% { opacity: 1; }\n        }\n        \n        .validation-message {\n            text-align: center;\n            color: #b71c1c;\n            font-size: 0.9em;\n            font-weight: bold;\n            margin-top: -5px;\n            margin-bottom: 10px;\n            height: 1.2em;\n            opacity: 0;\n            will-change: transform, opacity;\n        }\n\n        #credits-screen {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            pointer-events: none;\n            opacity: 0;\n        }\n\n        #credits-screen p {\n            font-family: var(--font-display);\n            font-size: 2em;\n            color: #f5f5dc;\n            text-shadow: 0 0 8px rgba(245, 245, 220, 0.7);\n        }\n    </style>\n</head>\n<body>\n\n<div class=\"creator-wrapper\">\n    <div class=\"border-flow\"></div>\n    <div class=\"inner-border\"></div>\n    <header class=\"creator-header\">\n        <h1 id=\"main-title\">冒险者契约登记</h1>\n        <div id=\"wax-seal\" class=\"wax-seal\"></div>\n    </header>\n\n    <div class=\"creator-scroll-content\">\n        <div class=\"gs-creator-container\">\n            <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第一步：身份确认</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-name-input\">姓名</label><input id=\"char-name-input\" type=\"text\" placeholder=\"可留空，默认为 {{user}}\" class=\"form-input\"></div>\n                    <div class=\"grid-cols-2 gsap-content-item\">\n                        <div class=\"gs-form-group\"><label for=\"char-gender-input\">性别</label><input id=\"char-gender-input\" type=\"text\" placeholder=\"例如: 男性/女性/双性/无性/……\" class=\"form-input\"></div>\n                        <div class=\"gs-form-group\"><label for=\"char-age-input\">年龄</label><input id=\"char-age-input\" type=\"number\" placeholder=\"可参照种族说明\" class=\"form-input\"></div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-race-select\">种族</label><select id=\"char-race-select\" class=\"form-select\"></select></div>\n                    <div class=\"gs-form-group gsap-content-item\">\n                        <label>经历 (出身/来历/邂逅)</label>\n                        <button id=\"roll-background-btn\" class=\"gs-button action-button\">🎲 投骰决定经历</button>\n                        <div id=\"background-display\" class=\"background-display\" style=\"display: none;\">\n                            <p>出身: <span id=\"bg-origin\"></span></p>\n                            <p>来历: <span id=\"bg-past\"></span></p>\n                            <p>邂逅: <span id=\"bg-encounter\"></span></p>\n                        </div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"oc-details-input\">身体特征与补充</label><textarea id=\"oc-details-input\" placeholder=\"发色、瞳色、体型、性格、背景故事构思...\" class=\"form-textarea\"></textarea></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第二步：能力值与技能</h3>\n                <div class=\"layout-grid\">\n                    <div class=\"form-container gsap-content-item\">\n                        <button id=\"roll-attributes-btn\" class=\"gs-button action-button\">🎲 投骰决定能力值</button>\n                        <div id=\"attributes-container\" class=\"attributes-grid\"></div>\n                        <div id=\"skills-and-desc-container\" class=\"skills-display\"></div>\n                    </div>\n                    <div id=\"radar-chart-container\" class=\"gsap-content-item\"><pre class=\"mermaid\" id=\"radar-chart\"></pre></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第三步：完成登记</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"character-summary\">角色卡预览</label><textarea id=\"character-summary\" rows=\"12\" readonly class=\"form-textarea\"></textarea></div>\n                    <button id=\"submit-btn\" class=\"gs-button gsap-content-item\" disabled>确认登记，开始冒险</button>\n                    <div id=\"validation-message\" class=\"validation-message\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div id=\"credits-screen\">\n    <p>作者 𝙀𝙡𝙖𝙞𝙣𝙖𝙙𝙚𝙨</p>\n</div>\n\n<div id=\"dice-overlay\">\n    <div class=\"dice-container\" id=\"dice-container\"></div>\n    <div id=\"dice-result-text\"></div>\n    <button id=\"skip-animation-btn\" class=\"gs-button\">跳过动画</button>\n</div>\n\n<div id=\"dice-templates\" style=\"display:none;\">\n    <div class=\"dice-cube\" data-id_template=\"dice-cube\">\n        <div class=\"dice-face face-front\" data-face=\"1\"><div class=\"pips-container\"><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-back\" data-face=\"6\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-right\" data-face=\"3\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-left\" data-face=\"4\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-top\" data-face=\"2\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-bottom\" data-face=\"5\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n    </div>\n</div>\n\n<script>\n// --- MODIFIED DATA ---\nconst raceData = {\n    '凡人': { attr_rolls: { '力量': '1d3+1', '敏捷': '1d3', '感知': '1d3', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3+2', '魔力': '1d3' }, skills: ['过载行动(初级)', '武器:投掷武器(初级)', '长距离移动(初级)']},\n    '矿人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3', '感知': '1d3+2', '知识': '1d3-1', '魅力': '1d3+1', '信仰力': '1d3+1', '魔力': '1d3-1' }, skills: ['治愈适性(初级)', '夜视(初级)', '锻造(初级)']},\n    '森人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+1', '感知': '1d3+1', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3-1', '魔力': '1d3+1' }, skills: ['武器:弩弓(初级)', '夜视(初级)', '精灵宠儿(初级)']},\n    '蜥蜴人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3+1', '感知': '1d3', '知识': '1d3', '魅力': '1d3+1', '信仰力': '1d3', '魔力': '1d3' }, skills: ['免疫强化(初级)', '夜视(初级)', '龙族血统(初级)']},\n    '圃人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+2', '感知': '1d3+1', '知识': '1d3', '魅力': '1d3-1', '信仰力': '1d3', '魔力': '1d3+2' }, skills: ['隐匿(初级)', '先发制人(初级)', '烹饪(初级)']}\n};\nconst backgroundData = {\n    origin: { \n        '凡人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '学者', class: '魔术师', level: 1, skills: ['文献调查(初级)'] }, 6: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 7: { name: '农民', skills: ['生产业:农业(初级)', '强健(初级)'] }, 8: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '骑士', class: '战士', level: 1, skills: ['骑乘(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n        '矿人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 6: { name: '酒馆老板', class: '战士', level: 1, skills: ['观察(初级)'] }, 7: { name: '铁匠', skills: ['工匠:锻造(初级)', '手工(初级)'] }, 8: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '碎盾者', class: '战士', level: 1, skills: ['强击攻击·斩(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n    },\n    past: { 2: { name: '奴隶', skills: ['劳动(初级)'] }, 3: { name: '牢狱', skills: ['犯罪知识(初级)'] }, 4: { name: '战场', skills: ['沉着冷静(初级)'] }, 5: { name: '神殿', skills: ['神学(初级)'] }, 6: { name: '孤儿', skills: ['忍耐(初级)'] }, 7: { name: '平顺', skills: ['幸运(初级)'] }, 8: { name: '贫困', skills: ['生存术(初级)'] }, 9: { name: '学校', skills: ['博识(初级)'] }, 10: { name: '深闺', skills: ['无偏见(初级)'] }, 11: { name: '奢华', skills: ['鉴定(初级)'] }, 12: { name: '宫廷', skills: ['礼仪(初级)'] }},\n    encounter: { 2: '宿敌', 3: '上司', 4: '后辈', 5: '交易对象', 6: '下属', 7: '家人', 8: '挚友', 9: '前辈', 10: '未婚夫/妻', 11: '劲敌', 12: '师父' }\n};\nbackgroundData.origin['森人'] = backgroundData.origin['凡人']; backgroundData.origin['蜥蜴人'] = backgroundData.origin['凡人']; backgroundData.origin['圃人'] = backgroundData.origin['凡人'];\nconst character = {\n    name: '', gender: '', age: '', oc_details: '', race: '凡人',\n    background: { origin: null, past: null, encounter: null },\n    attributes: { '力量': 0, '敏捷': 0, '感知': 0, '知识': 0, '魅力': 0, '信仰力': 0, '魔力': 0, '潜力': 0 },\n    skills: [], classes: {}, money: 0, _lastAttributesForChart: '',\n};\n// --- END MODIFIED DATA ---\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    gsap.registerPlugin(TextPlugin);\n    mermaid.initialize({ startOnLoad: true, theme: 'base', themeVariables: {\n        '--mermaid-font-family': \"'Vollkorn', 'Noto Serif SC', serif\",\n        primaryColor: '#f7e9d7', primaryTextColor: '#3d3d3d', lineColor: '#8b7355', textColor: '#4a3c2c',\n    }});\n    \n    const $ = (s) => document.querySelector(s);\n    const roll1D6 = () => Math.floor(Math.random() * 6) + 1;\n    const roll1D3 = () => {\n        const d6 = roll1D6();\n        if (d6 <= 2) return { d6, d3: 1 };\n        if (d6 <= 4) return { d6, d3: 2 };\n        return { d6, d3: 3 };\n    };\n    const rollDiceString = (diceString) => { const p=diceString.split('*');const d=p[0];const m=parseInt(p[1])||1;if(!d.includes('d'))return 0;const[n,s]=d.split('d').map(Number);let t=0;for(let i=0;i<n;i++){t+=Math.floor(Math.random()*s)+1;}return t*m; };\n    const formatAge = (ageValue) => { if (!ageValue && ageValue !== 0) return ageValue; const num = Number(ageValue); if (isNaN(num)) return ageValue; if (Math.abs(num) >= 1_000_000) return num.toExponential(2); return ageValue; };\n    const debounce = (func, delay) => { let timeout; return function(...args) { clearTimeout(timeout); timeout = setTimeout(() => func.apply(this, args), delay); }; };\n    const diceUnicode = ['\\u2680', '\\u2681', '\\u2682', '\\u2683', '\\u2684', '\\u2685'];\n\n    const DOM = {\n        nameInput: $('#char-name-input'), genderInput: $('#char-gender-input'), ageInput: $('#char-age-input'),\n        ocDetailsInput: $('#oc-details-input'), raceSelect: $('#char-race-select'), attributesContainer: $('#attributes-container'),\n        skillsContainer: $('#skills-and-desc-container'), radarChart: $('#radar-chart'), summarySheet: $('#character-summary'),\n        diceOverlay: $('#dice-overlay'), diceContainer: $('#dice-container'), diceResultText: $('#dice-result-text'),\n        backgroundDisplay: $('#background-display'), bgOrigin: $('#bg-origin'), bgPast: $('#bg-past'), bgEncounter: $('#bg-encounter'),\n        skipAnimationBtn: $('#skip-animation-btn'),\n        submitBtn: $('#submit-btn'),\n        validationMessage: $('#validation-message'),\n    };\n    \n    const dicePool = []; const MAX_DICE = 6;\n    let currentAnimation = null; let textAnimation = null; let isSkipping = false;\n    let currentValidationMessage = '';\n    \n    function validateAndToggleButton() {\n        let newMessage = '';\n        if (!character.age || String(character.age).trim() === '') {\n            newMessage = '请填写您的冒险者年龄。';\n        } else if (!character.gender || !character.gender.trim()) {\n            newMessage = '请设定冒险者的性别。';\n        } else if (!character.background.origin) {\n            newMessage = '请投骰决定您的冒险者经历。';\n        } else if (Object.values(character.attributes).every(val => val === 0)) {\n            newMessage = '请投骰决定您的能力值。';\n        }\n\n        if (newMessage === currentValidationMessage) return;\n        currentValidationMessage = newMessage;\n\n        if (newMessage) {\n            DOM.submitBtn.disabled = true;\n            DOM.validationMessage.textContent = newMessage;\n            gsap.fromTo(DOM.validationMessage, { autoAlpha: 0, scale: 0.8 }, { autoAlpha: 1, scale: 1, duration: 0.4, ease: 'elastic.out(1, 0.75)' });\n        } else {\n            DOM.submitBtn.disabled = false;\n            gsap.to(DOM.validationMessage, { autoAlpha: 0, duration: 0.3 });\n        }\n    }\n    function updateCharacterDataFromDOM() { character.name = DOM.nameInput.value; character.gender = DOM.genderInput.value; character.age = DOM.ageInput.value; character.oc_details = DOM.ocDetailsInput.value; character.race = DOM.raceSelect.value; }\n    function renderSkills() { const uniqueSkills = [...new Set(character.skills)]; DOM.skillsContainer.innerHTML = `<p><strong>天赋与习得技能:</strong></p><ul>${uniqueSkills.map(s => `<li>- ${s}</li>`).join('')}</ul>`; }\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key}`).value = value; }); }\n    function renderSummary() {\n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '?';\n        const originText = `出身:${character.background.origin ? character.background.origin.name : '?'}`;\n        const pastText = `来历:${character.background.past ? character.background.past.name : '?'}`;\n        const encounterText = `邂逅:${character.background.encounter || '?'}`;\n        let summary = `### 《哥布林杀手TRPG》冒险者登记卡\\n` + `**姓名:** ${finalName} | **种族:** ${character.race} | **性别:** ${character.gender || '?'} | **年龄:** ${formattedAge}\\n` + `**经历:** ${originText} / ${pastText} / ${encounterText}\\n` + `**初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n` + `**初始技能:** ${uniqueSkills.join(', ') || '无'}\\n`; if (character.oc_details) { summary += `**身体特征与补充:** ${character.oc_details}\\n`; } summary += `---\\n**能力值:**\\n`; summary += Object.entries(character.attributes).map(([key, value]) => `- ${key}: ${value}`).join('\\n'); summary += `\\n**持有资金:** ${character.money} 银币`;\n        DOM.summarySheet.value = summary.replace(/### /g, '').replace(/\\*\\*/g, '').replace(/---/g, '\\n────────────────────\\n').replace(/- /g, '  ');\n        DOM.summarySheet.setAttribute('data-raw', summary);\n    }\n    async function renderRadarChartIfNeeded() { const currentAttributesString = JSON.stringify(character.attributes); if (currentAttributesString === character._lastAttributesForChart) return; DOM.radarChart.classList.add('loading'); const radarSyntax = `radar-beta\\ntitle 能力值分布\\naxis a[\"力量 ${character.attributes['力量']}\"]\\naxis b[\"敏捷 ${character.attributes['敏捷']}\"]\\naxis c[\"感知 ${character.attributes['感知']}\"]\\naxis d[\"知识 ${character.attributes['知识']}\"]\\naxis e[\"魅力 ${character.attributes['魅力']}\"]\\naxis f[\"信仰 ${character.attributes['信仰力']}\"]\\naxis g[\"魔力 ${character.attributes['魔力']}\"]\\naxis h[\"潜力 ${character.attributes['潜力']}\"]\\ncurve current[\"能力\"]{${character.attributes['力量']},${character.attributes['敏捷']},${character.attributes['感知']},${character.attributes['知识']},${character.attributes['魅力']},${character.attributes['信仰力']},${character.attributes['魔力']},${character.attributes['潜力']}}\\nmax 10\\nmin 0`; DOM.radarChart.innerHTML = radarSyntax; DOM.radarChart.removeAttribute('data-processed'); try { await mermaid.run({ nodes: [DOM.radarChart] }); character._lastAttributesForChart = currentAttributesString; } catch(e) { console.error(\"Mermaid rendering error:\", e); } finally { DOM.radarChart.classList.remove('loading'); } }\n    async function updateUI(forceFullUpdate = false) { updateCharacterDataFromDOM(); if(forceFullUpdate) { character._lastAttributesForChart = ''; character.skills = []; character.classes = {}; character.money = 100; if(raceData[character.race].skills) character.skills.push(...raceData[character.race].skills); if (character.background.origin) { if (character.background.origin.skills) character.skills.push(...character.background.origin.skills); if (character.background.origin.class) character.classes[character.background.origin.class] = character.background.origin.level; if(character.background.origin.money) character.money += rollDiceString(character.background.origin.money); } if (character.background.past && character.background.past.skills) { character.skills.push(...character.background.past.skills); } } renderAttributes(); renderSkills(); renderSummary(); await renderRadarChartIfNeeded(); validateAndToggleButton(); }\n\n    const masterTl = gsap.timeline({ delay: 0.2 });\n    const title = $('#main-title');\n    title.innerHTML = title.textContent.split('').map(char => `<span class=\"title-char\">${char}</span>`).join('');\n    gsap.set(\".gsap-header-item, .gsap-content-item\", { autoAlpha: 0, y: 20 });\n    masterTl.to(\".title-char\", { autoAlpha: 1, y: 0, duration: 0.7, ease: \"power3.out\", stagger: 0.1 }).to(\"#wax-seal\", { autoAlpha: 1, scale: 1, duration: 0.6, ease: \"elastic.out(1, 0.7)\" }, \"-=0.5\");\n    document.querySelectorAll('.gs-creator-step').forEach((step, index) => { const stepTl = gsap.timeline(); stepTl.to(step.querySelector('.gsap-header-item'), { autoAlpha: 1, y: 0, duration: 0.6, ease: 'power2.out' }).to(step.querySelectorAll('.gsap-content-item'), { autoAlpha: 1, y: 0, duration: 0.5, ease: 'power2.out', stagger: 0.1 }, '-=0.4'); masterTl.add(stepTl, `-=${index === 0 ? 0.2 : 0.7}`); });\n    const pipPositions = { 1: [ { left: '50%', top: '50%' } ], 2: [ { left: '25%', top: '25%' }, { left: '75%', top: '75%' } ], 3: [ { left: '25%', top: '25%' }, { left: '50%', top: '50%' }, { left: '75%', top: '75%' } ], 4: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 5: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '50%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 6: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '50%' }, { left: '75%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ]};\n    function setupCube(cubeEl) { const size = 'calc(var(--dice-size) / 2)'; gsap.set(cubeEl.querySelector('.face-front'),  { transform: `rotateY(0deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-back'),   { transform: `rotateY(180deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-right'),  { transform: `rotateY(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-left'),   { transform: `rotateY(-90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-top'),   { transform: `rotateX(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-bottom'), { transform: `rotateX(-90deg) translateZ(${size})` }); const faces = cubeEl.querySelectorAll('.dice-face'); faces.forEach(face => { const faceNum = face.getAttribute('data-face'); const pips = face.querySelectorAll('.pip'); const positions = pipPositions[faceNum]; if (!pips.length || !positions) return; pips.forEach((pip, index) => { const pos = positions[index]; gsap.set(pip, { left: pos.left, top: pos.top, xPercent: -50, yPercent: -50 }); }); }); }\n    function getRotationForFace(faceValue) { switch (faceValue) { case 1: return { x: 0, y: 0 }; case 6: return { x: 0, y: 180 }; case 3: return { x: 0, y: -90 }; case 4: return { x: 0, y: 90 }; case 2: return { x: -90, y: 0 }; case 5: return { x: 90,  y: 0 }; default: return { x: 0, y: 0 }; } }\n    async function animateText(element, text) { if(isSkipping) {element.innerHTML = text.replace(/\\n/g, '<br>'); return;} return new Promise(resolve => { if (textAnimation && textAnimation.isActive()) textAnimation.kill(); element.innerHTML = ''; textAnimation = gsap.to(element, { duration: text.length * 0.05, text: { value: text.replace(/\\n/g, '<br>'), newClass: \"typed-cursor\" }, ease: \"none\", onComplete: () => { gsap.delayedCall(0.7, () => { element.querySelector('.typed-cursor')?.remove(); resolve(); }); } }); }); }\n    function initDicePool() { const diceTemplate = document.querySelector('[data-id_template=\"dice-cube\"]'); if (!diceTemplate) return; for (let i = 0; i < MAX_DICE; i++) { const dieIconElement = document.createElement('div'); dieIconElement.className = 'dice-icon'; const newCube = diceTemplate.cloneNode(true); dieIconElement.appendChild(newCube); DOM.diceContainer.appendChild(dieIconElement); setupCube(newCube); dicePool.push(dieIconElement); } }\n    async function animateRoll(numDice, preCalculatedRolls, textToShowDuringRoll = \"投掷中...\") { return new Promise(resolve => { if (currentAnimation && currentAnimation.isActive()) currentAnimation.kill(); dicePool.forEach(die => die.style.display = 'none'); const activeDice = dicePool.slice(0, numDice); animateText(DOM.diceResultText, textToShowDuringRoll); activeDice.forEach(die => { die.style.display = 'flex'; die.className = 'dice-icon'; }); const masterTl = gsap.timeline({ onComplete: () => { if(isSkipping) DOM.diceResultText.innerHTML = ''; resolve(preCalculatedRolls); }}); currentAnimation = masterTl; activeDice.forEach((dieElement, i) => { const dieCube = dieElement.querySelector('.dice-cube'); const visualRoll = preCalculatedRolls[i]; const targetRotation = getRotationForFace(visualRoll); const dieTimeline = gsap.timeline(); dieTimeline.to(dieCube, { rotationX: `+=${gsap.utils.random(720, 1080)}`, rotationY: `+=${gsap.utils.random(720, 1080)}`, duration: 1.8, ease: \"power2.in\" }).to(dieCube, { rotationX: targetRotation.x, rotationY: targetRotation.y, duration: 0.7, ease: \"power4.out\" }); masterTl.add(dieTimeline, 0); }); }); }\n    \n    const debouncedUpdate = debounce(updateUI, 400);\n    [DOM.nameInput, DOM.genderInput, DOM.ageInput, DOM.ocDetailsInput].forEach(el => el.addEventListener('input', debouncedUpdate));\n    \n    DOM.skipAnimationBtn.addEventListener('click', () => {\n        isSkipping = true;\n        if (currentAnimation && currentAnimation.isActive()) currentAnimation.progress(1);\n        if (textAnimation && textAnimation.isActive()) textAnimation.progress(1);\n    });\n\n    $('#roll-background-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const rolls = [roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6()];\n        await animateRoll(6, rolls, '投掷 经历... (2d6 x 3)');\n        \n        const sums = { origin: rolls[0] + rolls[1], past: rolls[2] + rolls[3], encounter: rolls[4] + rolls[5] };\n        \n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `出身: ${rolls[0]} + ${rolls[1]} = ${sums.origin}\\n(${backgroundData.origin[character.race][sums.origin].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `来历: ${rolls[2]} + ${rolls[3]} = ${sums.past}\\n(${backgroundData.past[sums.past].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(4, 6), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `邂逅: ${rolls[4]} + ${rolls[5]} = ${sums.encounter}\\n(${backgroundData.encounter[sums.encounter]})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        character.background.origin = backgroundData.origin[character.race][sums.origin];\n        character.background.past = backgroundData.past[sums.past];\n        character.background.encounter = backgroundData.encounter[sums.encounter];\n        DOM.bgOrigin.textContent = character.background.origin.name;\n        DOM.bgPast.textContent = character.background.past.name;\n        DOM.bgEncounter.textContent = character.background.encounter;\n        DOM.backgroundDisplay.style.display = 'block';\n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        updateUI(true);\n    });\n\n    $('#roll-attributes-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const attrRolls = raceData[character.race].attr_rolls;\n        const allCalculatedRolls = [];\n\n        // Prepare race-based attributes\n        for (const attr in attrRolls) {\n            const formula = attrRolls[attr];\n            const modifier = parseInt(formula.split('d3')[1] || '0');\n            const { d6, d3 } = roll1D3();\n            const finalValue = Math.max(0, d3 + modifier);\n            character.attributes[attr] = finalValue;\n            allCalculatedRolls.push({ attr, formula, d6, d3, modifier, finalValue });\n        }\n        \n        // Prepare \"Potential\" attribute\n        const potentialValue = Math.floor(Math.random() * 3) + 1;\n        const d6ForPotential = (potentialValue * 2) - 1; // Map 1,2,3 to d6 faces 1,3,5 for animation\n        character.attributes['潜力'] = potentialValue;\n        allCalculatedRolls.push({\n            attr: '潜力',\n            formula: '1-3', // Just a descriptor\n            d6: d6ForPotential,\n            finalValue: potentialValue\n        });\n        \n        // Animate all rolls sequentially\n        for (const roll of allCalculatedRolls) {\n            await animateRoll(1, [roll.d6], `投掷 ${roll.attr}...`);\n            if (isSkipping) break;\n\n            gsap.to(dicePool[0], { className: 'dice-icon highlight', duration: 0.3 });\n            \n            let resultText;\n            if (roll.attr === '潜力') {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.finalValue}`;\n            } else {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.d3} ${roll.modifier >= 0 ? '+' : ''} ${roll.modifier} = ${roll.finalValue}`;\n            }\n            await animateText(DOM.diceResultText, resultText);\n            \n            await updateUI();\n            \n            if (isSkipping) break;\n            \n            await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        await updateUI();\n    });\n\n    DOM.raceSelect.addEventListener('change', () => {\n        DOM.backgroundDisplay.style.display = 'none';\n        character.background = { origin: null, past: null, encounter: null };\n        Object.keys(character.attributes).forEach(k => character.attributes[k] = 0);\n        updateUI(true);\n    });\n\n    $('#submit-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        await updateUI(true);\n        \n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '未设定';\n        \n        const finalCharacterObject={ NAME:finalName, GENDER:character.gender||'未设定', AGE:formattedAge, RACE:character.race, ORIGIN: character.background.origin ? character.background.origin.name : '未知', PAST: character.background.past ? character.background.past.name : '未知', ENCOUNTER: character.background.encounter || '未知', SKILLS: uniqueSkills, OC_DETAILS:character.oc_details||'无', ...character.attributes, MONEY:character.money };\n        \n        const slashCommand=`/send <START>\\nAdmin:\\n这是一个TRPG开局，请为 User 生成一段详尽的背景故事。\\n\\n# 故事核心要求\\n请严格根据以下【角色完整设定】，撰写一段从角色童年到现在的成长故事。故事需要清晰地阐述是什么关键事件或心路历程，最终让他/她确立了要成为一名冒险者的志向。请在故事中自然地融入角色的种族、出身背景、技能和性格特点。\\n\\n# 角色完整设定\\n---\\n## 基础信息\\n- **姓名:** ${finalName}\\n- **性别:** ${character.gender||'未设定'}\\n- **年龄:** ${formattedAge}\\n- **种族:** ${character.race}\\n\\n## 经历\\n- **出身:** ${character.background.origin ? character.background.origin.name : '未知'}\\n- **来历:** ${character.background.past ? character.background.past.name : '未知'}\\n- **邂逅:** ${character.background.encounter || '未知'}\\n\\n## 背景与技能\\n- **初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n- **初始技能:** ${uniqueSkills.join(', ')||'无'}\\n\\n## 补充设定 (OC)\\n- **额外补充:** ${character.oc_details||'无'}\\n\\n## 能力值\\n- **力量:** ${character.attributes['力量']}\\n- **敏捷:** ${character.attributes['敏捷']}\\n- **感知:** ${character.attributes['感知']}\\n- **知识:** ${character.attributes['知识']}\\n- **魅力:** ${character.attributes['魅力']}\\n- **信仰力:** ${character.attributes['信仰力']}\\n- **魔力:** ${character.attributes['魔力']}\\n\\n## 初始资产\\n- **资金:** ${character.money} 银币\\n\\|\\n/trigger`; \n        \n        try {\n            if (typeof insertOrAssignVariables === 'function') {\n                await insertOrAssignVariables(finalCharacterObject);\n            } else {\n                console.log(\"SillyTavern Function 'insertOrAssignVariables' not found. Variables:\", finalCharacterObject);\n            }\n            if (typeof triggerSlash === 'function') {\n                await triggerSlash(slashCommand, 'Send');\n            } else { \n                console.log(\"SillyTavern Function 'triggerSlash' not found. Command will be copied to clipboard.\");\n                navigator.clipboard.writeText(slashCommand).then(() => {\n                    alert('角色指令已复制到剪贴板！');\n                });\n            }\n        } catch (error) {\n            console.error('与SillyTavern交互失败:', error);\n            alert('与SillyTavern交互失败，请查看浏览器控制台。');\n        }\n\n        e.target.innerHTML = \"契约成立！\";\n    });\n    \n    initDicePool();\n    Object.keys(raceData).forEach(key => DOM.raceSelect.add(new Option(key, key)));\n    Object.keys(character.attributes).forEach(key => {\n        const pointControl = document.createElement('div');\n        pointControl.className = 'point-control';\n        pointControl.innerHTML = `<span class=\"label\">${key}</span><input type=\"text\" id=\"attr-${key.replace(/\\s/g, '')}\" readonly value=\"0\">`; // ID santized just in case\n        DOM.attributesContainer.appendChild(pointControl);\n    });\n    // A small fix for renderAttributes to handle sanitized IDs\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key.replace(/\\s/g, '')}`).value = value; }); }\n    updateUI(true);\n});\n</script>\n\n</body>\n</html>\n```"
  },
  {
    "role": "user",
    "content": "```\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>哥布林杀手TRPG - 冒险者契约</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/gsap.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/TextPlugin.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.min.js\" defer></script>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Noto+Serif+SC:wght@400;700&family=Vollkorn:wght@400;700&family=Courier+Prime&display=swap\" rel=\"stylesheet\">\n\n    <style>\n        :root {\n            --leather-bg: #5a3a2a;\n            --dark-leather-bg: #3b2a1a;\n            --parchment-bg: #f5f5dc;\n            --parchment-bg-gradient: linear-gradient(165deg, #f7e9d7, #e6d5c3);\n            --text-color: #3d3d3d;\n            --heading-color: #4a3c2c;\n            --border-color: #7a5a4a;\n            --font-main: 'Vollkorn', 'Noto Serif SC', serif;\n            --font-display: 'Cinzel', 'Noto Serif SC', serif;\n            --font-code: 'Courier Prime', 'Courier New', monospace;\n            --dice-size: 5rem; \n        }\n\n        html { height: 100%; }\n        body {\n            background-color: #3a2e20;\n            font-family: var(--font-main);\n            color: var(--text-color);\n            margin: 0; padding: 20px;\n            box-sizing: border-box;\n            display: flex;\n            align-items: center; justify-content: center;\n            min-height: 100%;\n        }\n        *, *:before, *:after { box-sizing: inherit; }\n\n        .creator-wrapper {\n            width: 100%; max-width: 900px;\n            margin: 0;\n            background: var(--parchment-bg-gradient);\n            border: 12px solid #8b7355;\n            border-radius: 8px;\n            box-shadow: 0 0 40px rgba(139, 115, 85, 0.3), inset 0 0 30px rgba(255, 255, 255, 0.4);\n            position: relative;\n            overflow: hidden;\n            padding: 25px;\n            display: flex; flex-direction: column;\n            max-height: 95vh;\n        }\n\n        .border-flow, .inner-border { position: absolute; pointer-events: none; }\n        .border-flow { top: 0; left: 0; right: 0; bottom: 0; background: linear-gradient(90deg, rgba(139,115,85,0.1) 1px, transparent 1px), linear-gradient(0deg, rgba(139,115,85,0.1) 1px, transparent 1px); background-size: 20px 20px; animation: borderFlow 15s linear infinite; }\n        .inner-border { top: 5px; left: 5px; right: 5px; bottom: 5px; border: 3px solid rgba(139,115,85,0.3); border-radius: 5px; }\n        @keyframes borderFlow { from { background-position: 0 0; } to { background-position: 20px 20px; } }\n\n        .creator-header {\n            text-align: center;\n            padding: 10px;\n            margin-bottom: 25px;\n            border-bottom: 2px solid rgba(139, 115, 85, 0.3);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 15px;\n        }\n        .creator-header h1 {\n            font-family: var(--font-display);\n            font-size: clamp(24px, 5vw, 32px);\n            margin: 0;\n            font-weight: 700;\n            letter-spacing: 3px;\n            color: var(--heading-color);\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.1);\n        }\n        \n        .title-char {\n            display: inline-block;\n            opacity: 0;\n            transform: translateY(30px);\n        }\n\n        .wax-seal {\n            width: 45px;\n            height: 45px;\n            display: inline-block;\n            background-color: #c0392b;\n            border-radius: 50%;\n            position: relative;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.4), inset 0 -2px 3px rgba(0,0,0,0.3);\n            opacity: 0;\n            transform: scale(0.5);\n            font-family: 'Cinzel', serif;\n            color: #e7a49c;\n            text-align: center;\n            font-size: 24px;\n            line-height: 45px;\n            font-weight: 700;\n        }\n        .wax-seal::before {\n            content: 'GS';\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.3);\n        }\n\n        .creator-scroll-content { overflow-y: auto; padding: 10px 20px 10px 10px; }\n        .creator-scroll-content::-webkit-scrollbar { width: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-track { background: rgba(139, 115, 85, 0.1); border-radius: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-thumb { background-color: #a89072; border-radius: 10px; border: 2px solid #f7e9d7; }\n        \n        .gs-creator-step { margin-bottom: 40px; overflow: hidden; }\n        .gs-creator-step h3 { font-family: var(--font-display); font-size: 1.5em; font-weight: 700; border-bottom: 1.5px solid var(--border-color); padding-bottom: 8px; margin-bottom: 20px; color: var(--heading-color); text-align: left; }\n        \n        .layout-grid { display: grid; grid-template-columns: 1fr; gap: 25px; align-items: flex-start; }\n        @media (min-width: 768px) {\n            .layout-grid { grid-template-columns: 1fr 280px; }\n        }\n\n        .form-container { text-align: left; }\n        .gs-form-group { margin-bottom: 16px; }\n        .gs-form-group label { display: block; margin-bottom: 6px; font-weight: bold; color: var(--heading-color); }\n        .form-input, .form-select, .form-textarea { width: 100%; padding: 10px; background-color: rgba(255, 255, 255, 0.5); border: 1px solid #a58e72; border-radius: 4px; color: #3d3d3d; font-family: var(--font-main); font-size: 1em; transition: all 0.2s ease-in-out; box-shadow: inset 1px 1px 2px rgba(0,0,0,0.1); }\n        .form-input:focus, .form-select:focus, .form-textarea:focus { outline: none; border-color: #8b7355; background-color: #fff; box-shadow: 0 0 5px rgba(139, 115, 85, 0.5); }\n        .form-textarea { resize: vertical; min-height: 100px; }\n\n        .grid-cols-2 {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 16px;\n        }\n        @media (min-width: 480px) {\n            .grid-cols-2 {\n                grid-template-columns: repeat(2, 1fr);\n            }\n        }\n\n        #attributes-container .point-control { display: flex; align-items: center; justify-content: space-between; margin-bottom: 8px; padding: 6px 8px; background: rgba(0,0,0,0.03); border-left: 3px solid rgba(139,115,85,0.2); border-radius: 4px; }\n        #attributes-container .label { font-weight: bold; color: var(--heading-color); }\n        #attributes-container input[readonly] { width: 40px; text-align: center; font-weight: bold; font-size: 1.2em; font-family: var(--font-display); color: #a02c2c; border: none; background-color: transparent; box-shadow: none; padding: 0; }\n        \n        .attributes-grid {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 0 16px;\n        }\n        @media (min-width: 480px) {\n            .attributes-grid {\n                grid-template-columns: 1fr 1fr;\n            }\n        }\n        \n        .skills-display p { background-color: rgba(0,0,0,0.05); border-left: 3px solid var(--border-color); padding: 10px 15px; margin-top: 10px; font-size: 0.95em; border-radius: 0 4px 4px 0; }\n        .skills-display strong { color: #8b5b4b; font-family: var(--font-display); }\n        .skills-display ul { list-style: none; padding-left: 0; margin-top: 8px; font-size: 0.9em; }\n        .skills-display li { margin-bottom: 4px; }\n\n        #character-summary { background-color: #e9e4d9; font-family: var(--font-code); line-height: 1.6; height: 250px; color: #2c2a2a; }\n        \n        .gs-button { width: 100%; background-color: #8b7355; color: var(--parchment-bg); border: 2px solid var(--dark-leather-bg); border-radius: 5px; padding: 12px 20px; font-family: var(--font-display); font-size: 1.2em; font-weight: 700; cursor: pointer; margin-top: 10px; transition: all 0.3s ease; box-shadow: 0 3px 5px rgba(0,0,0,0.3); }\n        .gs-button:hover { background-color: #a0886c; transform: translateY(-2px); box-shadow: 0 5px 8px rgba(0,0,0,0.3); }\n        .gs-button:disabled { background-color: #9e9e9e; border-color: #757575; cursor: not-allowed; transform: none; box-shadow: none; opacity: 0.6; }\n        .action-button { background-color: #6d5b4b; font-size: 1em; padding: 10px 15px; margin-top: 0; margin-bottom: 10px; width: auto; }\n        \n        .background-display { margin-top: 15px; padding: 15px; border: 1px dashed var(--border-color); border-radius: 5px; background: rgba(0,0,0,0.02); }\n        .background-display p { margin: 0 0 8px; }\n        .background-display span { font-weight: bold; color: var(--heading-color); }\n        \n        #radar-chart-container { \n            max-width: 100%;\n        }\n        @media (min-width: 768px) {\n            #radar-chart-container {\n                position: sticky;\n                top: 0;\n                padding-top: 45px;\n            }\n        }\n\n        pre.mermaid { \n            font-family: var(--font-main); \n            background: rgba(0,0,0,0.02); \n            border: 1px solid rgba(139,115,85,0.1); \n            padding: 10px; \n            border-radius: 5px; \n            overflow: auto;\n            transition: opacity 0.3s ease-in-out;\n        }\n        pre.mermaid.loading { opacity: 0.5; pointer-events: none; }\n\n        pre.mermaid > svg {\n            max-width: 100%;\n            height: auto;\n        }\n\n        #dice-overlay {\n            position: fixed; top: 0; left: 0; width: 100%; height: 100%;\n            background: rgba(0,0,0,0.8); backdrop-filter: blur(5px);\n            display: none; align-items: center; justify-content: center; flex-direction: column;\n            z-index: 100;\n            color: #fff; text-shadow: 0 0 10px #000;\n        }\n\n        .dice-container {\n            display: flex; flex-wrap: wrap; justify-content: center;\n            gap: 2rem; margin-bottom: 2rem;\n            max-width: 600px;\n        }\n        \n        .dice-icon {\n            width: var(--dice-size); height: var(--dice-size);\n            perspective: 800px;\n            transform-style: preserve-3d;\n            display: none;\n        }\n        .dice-icon.highlight {\n            transform: scale(1.15);\n            filter: drop-shadow(0 0 15px #FFEB3B);\n            transition: transform 0.3s ease, filter 0.3s ease;\n        }\n\n        .dice-cube {\n            width: 100%; height: 100%;\n            position: relative;\n            transform-style: preserve-3d;\n            transform: translateZ(calc(var(--dice-size) / -2));\n        }\n        \n        .dice-face {\n            position: absolute;\n            width: var(--dice-size); height: var(--dice-size);\n            background-color: rgba(255, 255, 255, 0.98);\n            border: 1.5px solid #857e72;\n            border-radius: 12%;\n        }\n\n        .pips-container {\n            width: 100%; height: 100%;\n            position: relative; \n        }\n        .pip {\n            width: 22%; height: 22%; \n            background-color: #3d352e;\n            border-radius: 50%;\n            box-shadow: inset 0 1px 3px rgba(0,0,0,0.5);\n            position: absolute; \n        }\n        \n        #dice-result-text { \n            font-family: var(--font-display); \n            font-size: 2.2em;\n            color: #FFEB3B; \n            text-shadow: 0 0 12px #FFEB3B; \n            min-height: 2em;\n            line-height: 1.2;\n            text-align: center; \n        }\n        \n        #skip-animation-btn {\n            position: absolute;\n            bottom: 30px;\n            font-size: 1em;\n            padding: 8px 20px;\n            width: auto;\n            background-color: rgba(0,0,0,0.3);\n            border-color: rgba(255,255,255,0.5);\n            color: rgba(255,255,255,0.8);\n        }\n        #skip-animation-btn:hover {\n            background-color: rgba(0,0,0,0.5);\n            color: #fff;\n        }\n\n        .typed-cursor {\n            opacity: 1;\n            animation: typed-blink 0.7s infinite;\n        }\n        @keyframes typed-blink{\n            0% { opacity: 1; }\n            50% { opacity: 0; }\n            100% { opacity: 1; }\n        }\n        \n        .validation-message {\n            text-align: center;\n            color: #b71c1c;\n            font-size: 0.9em;\n            font-weight: bold;\n            margin-top: -5px;\n            margin-bottom: 10px;\n            height: 1.2em;\n            opacity: 0;\n            will-change: transform, opacity;\n        }\n\n        #credits-screen {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            pointer-events: none;\n            opacity: 0;\n        }\n\n        #credits-screen p {\n            font-family: var(--font-display);\n            font-size: 2em;\n            color: #f5f5dc;\n            text-shadow: 0 0 8px rgba(245, 245, 220, 0.7);\n        }\n    </style>\n</head>\n<body>\n\n<div class=\"creator-wrapper\">\n    <div class=\"border-flow\"></div>\n    <div class=\"inner-border\"></div>\n    <header class=\"creator-header\">\n        <h1 id=\"main-title\">冒险者契约登记</h1>\n        <div id=\"wax-seal\" class=\"wax-seal\"></div>\n    </header>\n\n    <div class=\"creator-scroll-content\">\n        <div class=\"gs-creator-container\">\n            <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第一步：身份确认</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-name-input\">姓名</label><input id=\"char-name-input\" type=\"text\" placeholder=\"可留空，默认为 {{user}}\" class=\"form-input\"></div>\n                    <div class=\"grid-cols-2 gsap-content-item\">\n                        <div class=\"gs-form-group\"><label for=\"char-gender-input\">性别</label><input id=\"char-gender-input\" type=\"text\" placeholder=\"例如: 男性/女性/双性/无性/……\" class=\"form-input\"></div>\n                        <div class=\"gs-form-group\"><label for=\"char-age-input\">年龄</label><input id=\"char-age-input\" type=\"number\" placeholder=\"可参照种族说明\" class=\"form-input\"></div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-race-select\">种族</label><select id=\"char-race-select\" class=\"form-select\"></select></div>\n                    <div class=\"gs-form-group gsap-content-item\">\n                        <label>经历 (出身/来历/邂逅)</label>\n                        <button id=\"roll-background-btn\" class=\"gs-button action-button\">🎲 投骰决定经历</button>\n                        <div id=\"background-display\" class=\"background-display\" style=\"display: none;\">\n                            <p>出身: <span id=\"bg-origin\"></span></p>\n                            <p>来历: <span id=\"bg-past\"></span></p>\n                            <p>邂逅: <span id=\"bg-encounter\"></span></p>\n                        </div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"oc-details-input\">身体特征与补充</label><textarea id=\"oc-details-input\" placeholder=\"发色、瞳色、体型、性格、背景故事构思...\" class=\"form-textarea\"></textarea></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第二步：能力值与技能</h3>\n                <div class=\"layout-grid\">\n                    <div class=\"form-container gsap-content-item\">\n                        <button id=\"roll-attributes-btn\" class=\"gs-button action-button\">🎲 投骰决定能力值</button>\n                        <div id=\"attributes-container\" class=\"attributes-grid\"></div>\n                        <div id=\"skills-and-desc-container\" class=\"skills-display\"></div>\n                    </div>\n                    <div id=\"radar-chart-container\" class=\"gsap-content-item\"><pre class=\"mermaid\" id=\"radar-chart\"></pre></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第三步：完成登记</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"character-summary\">角色卡预览</label><textarea id=\"character-summary\" rows=\"12\" readonly class=\"form-textarea\"></textarea></div>\n                    <button id=\"submit-btn\" class=\"gs-button gsap-content-item\" disabled>确认登记，开始冒险</button>\n                    <div id=\"validation-message\" class=\"validation-message\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div id=\"credits-screen\">\n    <p>作者 𝙀𝙡𝙖𝙞𝙣𝙖𝙙𝙚𝙨</p>\n</div>\n\n<div id=\"dice-overlay\">\n    <div class=\"dice-container\" id=\"dice-container\"></div>\n    <div id=\"dice-result-text\"></div>\n    <button id=\"skip-animation-btn\" class=\"gs-button\">跳过动画</button>\n</div>\n\n<div id=\"dice-templates\" style=\"display:none;\">\n    <div class=\"dice-cube\" data-id_template=\"dice-cube\">\n        <div class=\"dice-face face-front\" data-face=\"1\"><div class=\"pips-container\"><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-back\" data-face=\"6\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-right\" data-face=\"3\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-left\" data-face=\"4\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-top\" data-face=\"2\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-bottom\" data-face=\"5\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n    </div>\n</div>\n\n<script>\n// --- MODIFIED DATA ---\nconst raceData = {\n    '凡人': { attr_rolls: { '力量': '1d3+1', '敏捷': '1d3', '感知': '1d3', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3+2', '魔力': '1d3' }, skills: ['过载行动(初级)', '武器:投掷武器(初级)', '长距离移动(初级)']},\n    '矿人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3', '感知': '1d3+2', '知识': '1d3-1', '魅力': '1d3+1', '信仰力': '1d3+1', '魔力': '1d3-1' }, skills: ['治愈适性(初级)', '夜视(初级)', '锻造(初级)']},\n    '森人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+1', '感知': '1d3+1', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3-1', '魔力': '1d3+1' }, skills: ['武器:弩弓(初级)', '夜视(初级)', '精灵宠儿(初级)']},\n    '蜥蜴人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3+1', '感知': '1d3', '知识': '1d3', '魅力': '1d3+1', '信仰力': '1d3', '魔力': '1d3' }, skills: ['免疫强化(初级)', '夜视(初级)', '龙族血统(初级)']},\n    '圃人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+2', '感知': '1d3+1', '知识': '1d3', '魅力': '1d3-1', '信仰力': '1d3', '魔力': '1d3+2' }, skills: ['隐匿(初级)', '先发制人(初级)', '烹饪(初级)']}\n};\nconst backgroundData = {\n    origin: { \n        '凡人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '学者', class: '魔术师', level: 1, skills: ['文献调查(初级)'] }, 6: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 7: { name: '农民', skills: ['生产业:农业(初级)', '强健(初级)'] }, 8: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '骑士', class: '战士', level: 1, skills: ['骑乘(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n        '矿人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 6: { name: '酒馆老板', class: '战士', level: 1, skills: ['观察(初级)'] }, 7: { name: '铁匠', skills: ['工匠:锻造(初级)', '手工(初级)'] }, 8: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '碎盾者', class: '战士', level: 1, skills: ['强击攻击·斩(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n    },\n    past: { 2: { name: '奴隶', skills: ['劳动(初级)'] }, 3: { name: '牢狱', skills: ['犯罪知识(初级)'] }, 4: { name: '战场', skills: ['沉着冷静(初级)'] }, 5: { name: '神殿', skills: ['神学(初级)'] }, 6: { name: '孤儿', skills: ['忍耐(初级)'] }, 7: { name: '平顺', skills: ['幸运(初级)'] }, 8: { name: '贫困', skills: ['生存术(初级)'] }, 9: { name: '学校', skills: ['博识(初级)'] }, 10: { name: '深闺', skills: ['无偏见(初级)'] }, 11: { name: '奢华', skills: ['鉴定(初级)'] }, 12: { name: '宫廷', skills: ['礼仪(初级)'] }},\n    encounter: { 2: '宿敌', 3: '上司', 4: '后辈', 5: '交易对象', 6: '下属', 7: '家人', 8: '挚友', 9: '前辈', 10: '未婚夫/妻', 11: '劲敌', 12: '师父' }\n};\nbackgroundData.origin['森人'] = backgroundData.origin['凡人']; backgroundData.origin['蜥蜴人'] = backgroundData.origin['凡人']; backgroundData.origin['圃人'] = backgroundData.origin['凡人'];\nconst character = {\n    name: '', gender: '', age: '', oc_details: '', race: '凡人',\n    background: { origin: null, past: null, encounter: null },\n    attributes: { '力量': 0, '敏捷': 0, '感知': 0, '知识': 0, '魅力': 0, '信仰力': 0, '魔力': 0, '潜力': 0 },\n    skills: [], classes: {}, money: 0, _lastAttributesForChart: '',\n};\n// --- END MODIFIED DATA ---\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    gsap.registerPlugin(TextPlugin);\n    mermaid.initialize({ startOnLoad: true, theme: 'base', themeVariables: {\n        '--mermaid-font-family': \"'Vollkorn', 'Noto Serif SC', serif\",\n        primaryColor: '#f7e9d7', primaryTextColor: '#3d3d3d', lineColor: '#8b7355', textColor: '#4a3c2c',\n    }});\n    \n    const $ = (s) => document.querySelector(s);\n    const roll1D6 = () => Math.floor(Math.random() * 6) + 1;\n    const roll1D3 = () => {\n        const d6 = roll1D6();\n        if (d6 <= 2) return { d6, d3: 1 };\n        if (d6 <= 4) return { d6, d3: 2 };\n        return { d6, d3: 3 };\n    };\n    const rollDiceString = (diceString) => { const p=diceString.split('*');const d=p[0];const m=parseInt(p[1])||1;if(!d.includes('d'))return 0;const[n,s]=d.split('d').map(Number);let t=0;for(let i=0;i<n;i++){t+=Math.floor(Math.random()*s)+1;}return t*m; };\n    const formatAge = (ageValue) => { if (!ageValue && ageValue !== 0) return ageValue; const num = Number(ageValue); if (isNaN(num)) return ageValue; if (Math.abs(num) >= 1_000_000) return num.toExponential(2); return ageValue; };\n    const debounce = (func, delay) => { let timeout; return function(...args) { clearTimeout(timeout); timeout = setTimeout(() => func.apply(this, args), delay); }; };\n    const diceUnicode = ['\\u2680', '\\u2681', '\\u2682', '\\u2683', '\\u2684', '\\u2685'];\n\n    const DOM = {\n        nameInput: $('#char-name-input'), genderInput: $('#char-gender-input'), ageInput: $('#char-age-input'),\n        ocDetailsInput: $('#oc-details-input'), raceSelect: $('#char-race-select'), attributesContainer: $('#attributes-container'),\n        skillsContainer: $('#skills-and-desc-container'), radarChart: $('#radar-chart'), summarySheet: $('#character-summary'),\n        diceOverlay: $('#dice-overlay'), diceContainer: $('#dice-container'), diceResultText: $('#dice-result-text'),\n        backgroundDisplay: $('#background-display'), bgOrigin: $('#bg-origin'), bgPast: $('#bg-past'), bgEncounter: $('#bg-encounter'),\n        skipAnimationBtn: $('#skip-animation-btn'),\n        submitBtn: $('#submit-btn'),\n        validationMessage: $('#validation-message'),\n    };\n    \n    const dicePool = []; const MAX_DICE = 6;\n    let currentAnimation = null; let textAnimation = null; let isSkipping = false;\n    let currentValidationMessage = '';\n    \n    function validateAndToggleButton() {\n        let newMessage = '';\n        if (!character.age || String(character.age).trim() === '') {\n            newMessage = '请填写您的冒险者年龄。';\n        } else if (!character.gender || !character.gender.trim()) {\n            newMessage = '请设定冒险者的性别。';\n        } else if (!character.background.origin) {\n            newMessage = '请投骰决定您的冒险者经历。';\n        } else if (Object.values(character.attributes).every(val => val === 0)) {\n            newMessage = '请投骰决定您的能力值。';\n        }\n\n        if (newMessage === currentValidationMessage) return;\n        currentValidationMessage = newMessage;\n\n        if (newMessage) {\n            DOM.submitBtn.disabled = true;\n            DOM.validationMessage.textContent = newMessage;\n            gsap.fromTo(DOM.validationMessage, { autoAlpha: 0, scale: 0.8 }, { autoAlpha: 1, scale: 1, duration: 0.4, ease: 'elastic.out(1, 0.75)' });\n        } else {\n            DOM.submitBtn.disabled = false;\n            gsap.to(DOM.validationMessage, { autoAlpha: 0, duration: 0.3 });\n        }\n    }\n    function updateCharacterDataFromDOM() { character.name = DOM.nameInput.value; character.gender = DOM.genderInput.value; character.age = DOM.ageInput.value; character.oc_details = DOM.ocDetailsInput.value; character.race = DOM.raceSelect.value; }\n    function renderSkills() { const uniqueSkills = [...new Set(character.skills)]; DOM.skillsContainer.innerHTML = `<p><strong>天赋与习得技能:</strong></p><ul>${uniqueSkills.map(s => `<li>- ${s}</li>`).join('')}</ul>`; }\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key}`).value = value; }); }\n    function renderSummary() {\n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '?';\n        const originText = `出身:${character.background.origin ? character.background.origin.name : '?'}`;\n        const pastText = `来历:${character.background.past ? character.background.past.name : '?'}`;\n        const encounterText = `邂逅:${character.background.encounter || '?'}`;\n        let summary = `### 《哥布林杀手TRPG》冒险者登记卡\\n` + `**姓名:** ${finalName} | **种族:** ${character.race} | **性别:** ${character.gender || '?'} | **年龄:** ${formattedAge}\\n` + `**经历:** ${originText} / ${pastText} / ${encounterText}\\n` + `**初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n` + `**初始技能:** ${uniqueSkills.join(', ') || '无'}\\n`; if (character.oc_details) { summary += `**身体特征与补充:** ${character.oc_details}\\n`; } summary += `---\\n**能力值:**\\n`; summary += Object.entries(character.attributes).map(([key, value]) => `- ${key}: ${value}`).join('\\n'); summary += `\\n**持有资金:** ${character.money} 银币`;\n        DOM.summarySheet.value = summary.replace(/### /g, '').replace(/\\*\\*/g, '').replace(/---/g, '\\n────────────────────\\n').replace(/- /g, '  ');\n        DOM.summarySheet.setAttribute('data-raw', summary);\n    }\n    async function renderRadarChartIfNeeded() { const currentAttributesString = JSON.stringify(character.attributes); if (currentAttributesString === character._lastAttributesForChart) return; DOM.radarChart.classList.add('loading'); const radarSyntax = `radar-beta\\ntitle 能力值分布\\naxis a[\"力量 ${character.attributes['力量']}\"]\\naxis b[\"敏捷 ${character.attributes['敏捷']}\"]\\naxis c[\"感知 ${character.attributes['感知']}\"]\\naxis d[\"知识 ${character.attributes['知识']}\"]\\naxis e[\"魅力 ${character.attributes['魅力']}\"]\\naxis f[\"信仰 ${character.attributes['信仰力']}\"]\\naxis g[\"魔力 ${character.attributes['魔力']}\"]\\naxis h[\"潜力 ${character.attributes['潜力']}\"]\\ncurve current[\"能力\"]{${character.attributes['力量']},${character.attributes['敏捷']},${character.attributes['感知']},${character.attributes['知识']},${character.attributes['魅力']},${character.attributes['信仰力']},${character.attributes['魔力']},${character.attributes['潜力']}}\\nmax 10\\nmin 0`; DOM.radarChart.innerHTML = radarSyntax; DOM.radarChart.removeAttribute('data-processed'); try { await mermaid.run({ nodes: [DOM.radarChart] }); character._lastAttributesForChart = currentAttributesString; } catch(e) { console.error(\"Mermaid rendering error:\", e); } finally { DOM.radarChart.classList.remove('loading'); } }\n    async function updateUI(forceFullUpdate = false) { updateCharacterDataFromDOM(); if(forceFullUpdate) { character._lastAttributesForChart = ''; character.skills = []; character.classes = {}; character.money = 100; if(raceData[character.race].skills) character.skills.push(...raceData[character.race].skills); if (character.background.origin) { if (character.background.origin.skills) character.skills.push(...character.background.origin.skills); if (character.background.origin.class) character.classes[character.background.origin.class] = character.background.origin.level; if(character.background.origin.money) character.money += rollDiceString(character.background.origin.money); } if (character.background.past && character.background.past.skills) { character.skills.push(...character.background.past.skills); } } renderAttributes(); renderSkills(); renderSummary(); await renderRadarChartIfNeeded(); validateAndToggleButton(); }\n\n    const masterTl = gsap.timeline({ delay: 0.2 });\n    const title = $('#main-title');\n    title.innerHTML = title.textContent.split('').map(char => `<span class=\"title-char\">${char}</span>`).join('');\n    gsap.set(\".gsap-header-item, .gsap-content-item\", { autoAlpha: 0, y: 20 });\n    masterTl.to(\".title-char\", { autoAlpha: 1, y: 0, duration: 0.7, ease: \"power3.out\", stagger: 0.1 }).to(\"#wax-seal\", { autoAlpha: 1, scale: 1, duration: 0.6, ease: \"elastic.out(1, 0.7)\" }, \"-=0.5\");\n    document.querySelectorAll('.gs-creator-step').forEach((step, index) => { const stepTl = gsap.timeline(); stepTl.to(step.querySelector('.gsap-header-item'), { autoAlpha: 1, y: 0, duration: 0.6, ease: 'power2.out' }).to(step.querySelectorAll('.gsap-content-item'), { autoAlpha: 1, y: 0, duration: 0.5, ease: 'power2.out', stagger: 0.1 }, '-=0.4'); masterTl.add(stepTl, `-=${index === 0 ? 0.2 : 0.7}`); });\n    const pipPositions = { 1: [ { left: '50%', top: '50%' } ], 2: [ { left: '25%', top: '25%' }, { left: '75%', top: '75%' } ], 3: [ { left: '25%', top: '25%' }, { left: '50%', top: '50%' }, { left: '75%', top: '75%' } ], 4: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 5: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '50%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 6: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '50%' }, { left: '75%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ]};\n    function setupCube(cubeEl) { const size = 'calc(var(--dice-size) / 2)'; gsap.set(cubeEl.querySelector('.face-front'),  { transform: `rotateY(0deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-back'),   { transform: `rotateY(180deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-right'),  { transform: `rotateY(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-left'),   { transform: `rotateY(-90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-top'),   { transform: `rotateX(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-bottom'), { transform: `rotateX(-90deg) translateZ(${size})` }); const faces = cubeEl.querySelectorAll('.dice-face'); faces.forEach(face => { const faceNum = face.getAttribute('data-face'); const pips = face.querySelectorAll('.pip'); const positions = pipPositions[faceNum]; if (!pips.length || !positions) return; pips.forEach((pip, index) => { const pos = positions[index]; gsap.set(pip, { left: pos.left, top: pos.top, xPercent: -50, yPercent: -50 }); }); }); }\n    function getRotationForFace(faceValue) { switch (faceValue) { case 1: return { x: 0, y: 0 }; case 6: return { x: 0, y: 180 }; case 3: return { x: 0, y: -90 }; case 4: return { x: 0, y: 90 }; case 2: return { x: -90, y: 0 }; case 5: return { x: 90,  y: 0 }; default: return { x: 0, y: 0 }; } }\n    async function animateText(element, text) { if(isSkipping) {element.innerHTML = text.replace(/\\n/g, '<br>'); return;} return new Promise(resolve => { if (textAnimation && textAnimation.isActive()) textAnimation.kill(); element.innerHTML = ''; textAnimation = gsap.to(element, { duration: text.length * 0.05, text: { value: text.replace(/\\n/g, '<br>'), newClass: \"typed-cursor\" }, ease: \"none\", onComplete: () => { gsap.delayedCall(0.7, () => { element.querySelector('.typed-cursor')?.remove(); resolve(); }); } }); }); }\n    function initDicePool() { const diceTemplate = document.querySelector('[data-id_template=\"dice-cube\"]'); if (!diceTemplate) return; for (let i = 0; i < MAX_DICE; i++) { const dieIconElement = document.createElement('div'); dieIconElement.className = 'dice-icon'; const newCube = diceTemplate.cloneNode(true); dieIconElement.appendChild(newCube); DOM.diceContainer.appendChild(dieIconElement); setupCube(newCube); dicePool.push(dieIconElement); } }\n    async function animateRoll(numDice, preCalculatedRolls, textToShowDuringRoll = \"投掷中...\") { return new Promise(resolve => { if (currentAnimation && currentAnimation.isActive()) currentAnimation.kill(); dicePool.forEach(die => die.style.display = 'none'); const activeDice = dicePool.slice(0, numDice); animateText(DOM.diceResultText, textToShowDuringRoll); activeDice.forEach(die => { die.style.display = 'flex'; die.className = 'dice-icon'; }); const masterTl = gsap.timeline({ onComplete: () => { if(isSkipping) DOM.diceResultText.innerHTML = ''; resolve(preCalculatedRolls); }}); currentAnimation = masterTl; activeDice.forEach((dieElement, i) => { const dieCube = dieElement.querySelector('.dice-cube'); const visualRoll = preCalculatedRolls[i]; const targetRotation = getRotationForFace(visualRoll); const dieTimeline = gsap.timeline(); dieTimeline.to(dieCube, { rotationX: `+=${gsap.utils.random(720, 1080)}`, rotationY: `+=${gsap.utils.random(720, 1080)}`, duration: 1.8, ease: \"power2.in\" }).to(dieCube, { rotationX: targetRotation.x, rotationY: targetRotation.y, duration: 0.7, ease: \"power4.out\" }); masterTl.add(dieTimeline, 0); }); }); }\n    \n    const debouncedUpdate = debounce(updateUI, 400);\n    [DOM.nameInput, DOM.genderInput, DOM.ageInput, DOM.ocDetailsInput].forEach(el => el.addEventListener('input', debouncedUpdate));\n    \n    DOM.skipAnimationBtn.addEventListener('click', () => {\n        isSkipping = true;\n        if (currentAnimation && currentAnimation.isActive()) currentAnimation.progress(1);\n        if (textAnimation && textAnimation.isActive()) textAnimation.progress(1);\n    });\n\n    $('#roll-background-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const rolls = [roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6()];\n        await animateRoll(6, rolls, '投掷 经历... (2d6 x 3)');\n        \n        const sums = { origin: rolls[0] + rolls[1], past: rolls[2] + rolls[3], encounter: rolls[4] + rolls[5] };\n        \n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `出身: ${rolls[0]} + ${rolls[1]} = ${sums.origin}\\n(${backgroundData.origin[character.race][sums.origin].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `来历: ${rolls[2]} + ${rolls[3]} = ${sums.past}\\n(${backgroundData.past[sums.past].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(4, 6), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `邂逅: ${rolls[4]} + ${rolls[5]} = ${sums.encounter}\\n(${backgroundData.encounter[sums.encounter]})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        character.background.origin = backgroundData.origin[character.race][sums.origin];\n        character.background.past = backgroundData.past[sums.past];\n        character.background.encounter = backgroundData.encounter[sums.encounter];\n        DOM.bgOrigin.textContent = character.background.origin.name;\n        DOM.bgPast.textContent = character.background.past.name;\n        DOM.bgEncounter.textContent = character.background.encounter;\n        DOM.backgroundDisplay.style.display = 'block';\n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        updateUI(true);\n    });\n\n    $('#roll-attributes-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const attrRolls = raceData[character.race].attr_rolls;\n        const allCalculatedRolls = [];\n\n        // Prepare race-based attributes\n        for (const attr in attrRolls) {\n            const formula = attrRolls[attr];\n            const modifier = parseInt(formula.split('d3')[1] || '0');\n            const { d6, d3 } = roll1D3();\n            const finalValue = Math.max(0, d3 + modifier);\n            character.attributes[attr] = finalValue;\n            allCalculatedRolls.push({ attr, formula, d6, d3, modifier, finalValue });\n        }\n        \n        // Prepare \"Potential\" attribute\n        const potentialValue = Math.floor(Math.random() * 3) + 1;\n        const d6ForPotential = (potentialValue * 2) - 1; // Map 1,2,3 to d6 faces 1,3,5 for animation\n        character.attributes['潜力'] = potentialValue;\n        allCalculatedRolls.push({\n            attr: '潜力',\n            formula: '1-3', // Just a descriptor\n            d6: d6ForPotential,\n            finalValue: potentialValue\n        });\n        \n        // Animate all rolls sequentially\n        for (const roll of allCalculatedRolls) {\n            await animateRoll(1, [roll.d6], `投掷 ${roll.attr}...`);\n            if (isSkipping) break;\n\n            gsap.to(dicePool[0], { className: 'dice-icon highlight', duration: 0.3 });\n            \n            let resultText;\n            if (roll.attr === '潜力') {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.finalValue}`;\n            } else {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.d3} ${roll.modifier >= 0 ? '+' : ''} ${roll.modifier} = ${roll.finalValue}`;\n            }\n            await animateText(DOM.diceResultText, resultText);\n            \n            await updateUI();\n            \n            if (isSkipping) break;\n            \n            await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        await updateUI();\n    });\n\n    DOM.raceSelect.addEventListener('change', () => {\n        DOM.backgroundDisplay.style.display = 'none';\n        character.background = { origin: null, past: null, encounter: null };\n        Object.keys(character.attributes).forEach(k => character.attributes[k] = 0);\n        updateUI(true);\n    });\n\n    $('#submit-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        await updateUI(true);\n        \n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '未设定';\n        \n        const finalCharacterObject={ NAME:finalName, GENDER:character.gender||'未设定', AGE:formattedAge, RACE:character.race, ORIGIN: character.background.origin ? character.background.origin.name : '未知', PAST: character.background.past ? character.background.past.name : '未知', ENCOUNTER: character.background.encounter || '未知', SKILLS: uniqueSkills, OC_DETAILS:character.oc_details||'无', ...character.attributes, MONEY:character.money };\n        \n        const slashCommand=`/send <START>\\nAdmin:\\n这是一个TRPG开局，请为 User 生成一段详尽的背景故事。\\n\\n# 故事核心要求\\n请严格根据以下【角色完整设定】，撰写一段从角色童年到现在的成长故事。故事需要清晰地阐述是什么关键事件或心路历程，最终让他/她确立了要成为一名冒险者的志向。请在故事中自然地融入角色的种族、出身背景、技能和性格特点。\\n\\n# 角色完整设定\\n---\\n## 基础信息\\n- **姓名:** ${finalName}\\n- **性别:** ${character.gender||'未设定'}\\n- **年龄:** ${formattedAge}\\n- **种族:** ${character.race}\\n\\n## 经历\\n- **出身:** ${character.background.origin ? character.background.origin.name : '未知'}\\n- **来历:** ${character.background.past ? character.background.past.name : '未知'}\\n- **邂逅:** ${character.background.encounter || '未知'}\\n\\n## 背景与技能\\n- **初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n- **初始技能:** ${uniqueSkills.join(', ')||'无'}\\n\\n## 补充设定 (OC)\\n- **额外补充:** ${character.oc_details||'无'}\\n\\n## 能力值\\n- **力量:** ${character.attributes['力量']}\\n- **敏捷:** ${character.attributes['敏捷']}\\n- **感知:** ${character.attributes['感知']}\\n- **知识:** ${character.attributes['知识']}\\n- **魅力:** ${character.attributes['魅力']}\\n- **信仰力:** ${character.attributes['信仰力']}\\n- **魔力:** ${character.attributes['魔力']}\\n\\n## 初始资产\\n- **资金:** ${character.money} 银币\\n\\|\\n/trigger`; \n        \n        try {\n            if (typeof insertOrAssignVariables === 'function') {\n                await insertOrAssignVariables(finalCharacterObject);\n            } else {\n                console.log(\"SillyTavern Function 'insertOrAssignVariables' not found. Variables:\", finalCharacterObject);\n            }\n            if (typeof triggerSlash === 'function') {\n                await triggerSlash(slashCommand, 'Send');\n            } else { \n                console.log(\"SillyTavern Function 'triggerSlash' not found. Command will be copied to clipboard.\");\n                navigator.clipboard.writeText(slashCommand).then(() => {\n                    alert('角色指令已复制到剪贴板！');\n                });\n            }\n        } catch (error) {\n            console.error('与SillyTavern交互失败:', error);\n            alert('与SillyTavern交互失败，请查看浏览器控制台。');\n        }\n\n        e.target.innerHTML = \"契约成立！\";\n    });\n    \n    initDicePool();\n    Object.keys(raceData).forEach(key => DOM.raceSelect.add(new Option(key, key)));\n    Object.keys(character.attributes).forEach(key => {\n        const pointControl = document.createElement('div');\n        pointControl.className = 'point-control';\n        pointControl.innerHTML = `<span class=\"label\">${key}</span><input type=\"text\" id=\"attr-${key.replace(/\\s/g, '')}\" readonly value=\"0\">`; // ID santized just in case\n        DOM.attributesContainer.appendChild(pointControl);\n    });\n    // A small fix for renderAttributes to handle sanitized IDs\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key.replace(/\\s/g, '')}`).value = value; }); }\n    updateUI(true);\n});\n</script>\n\n</body>\n</html>\n```"
  },
  {
    "role": "user",
    "content": "```\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>哥布林杀手TRPG - 冒险者契约</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/gsap.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/TextPlugin.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.min.js\" defer></script>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Noto+Serif+SC:wght@400;700&family=Vollkorn:wght@400;700&family=Courier+Prime&display=swap\" rel=\"stylesheet\">\n\n    <style>\n        :root {\n            --leather-bg: #5a3a2a;\n            --dark-leather-bg: #3b2a1a;\n            --parchment-bg: #f5f5dc;\n            --parchment-bg-gradient: linear-gradient(165deg, #f7e9d7, #e6d5c3);\n            --text-color: #3d3d3d;\n            --heading-color: #4a3c2c;\n            --border-color: #7a5a4a;\n            --font-main: 'Vollkorn', 'Noto Serif SC', serif;\n            --font-display: 'Cinzel', 'Noto Serif SC', serif;\n            --font-code: 'Courier Prime', 'Courier New', monospace;\n            --dice-size: 5rem; \n        }\n\n        html { height: 100%; }\n        body {\n            background-color: #3a2e20;\n            font-family: var(--font-main);\n            color: var(--text-color);\n            margin: 0; padding: 20px;\n            box-sizing: border-box;\n            display: flex;\n            align-items: center; justify-content: center;\n            min-height: 100%;\n        }\n        *, *:before, *:after { box-sizing: inherit; }\n\n        .creator-wrapper {\n            width: 100%; max-width: 900px;\n            margin: 0;\n            background: var(--parchment-bg-gradient);\n            border: 12px solid #8b7355;\n            border-radius: 8px;\n            box-shadow: 0 0 40px rgba(139, 115, 85, 0.3), inset 0 0 30px rgba(255, 255, 255, 0.4);\n            position: relative;\n            overflow: hidden;\n            padding: 25px;\n            display: flex; flex-direction: column;\n            max-height: 95vh;\n        }\n\n        .border-flow, .inner-border { position: absolute; pointer-events: none; }\n        .border-flow { top: 0; left: 0; right: 0; bottom: 0; background: linear-gradient(90deg, rgba(139,115,85,0.1) 1px, transparent 1px), linear-gradient(0deg, rgba(139,115,85,0.1) 1px, transparent 1px); background-size: 20px 20px; animation: borderFlow 15s linear infinite; }\n        .inner-border { top: 5px; left: 5px; right: 5px; bottom: 5px; border: 3px solid rgba(139,115,85,0.3); border-radius: 5px; }\n        @keyframes borderFlow { from { background-position: 0 0; } to { background-position: 20px 20px; } }\n\n        .creator-header {\n            text-align: center;\n            padding: 10px;\n            margin-bottom: 25px;\n            border-bottom: 2px solid rgba(139, 115, 85, 0.3);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 15px;\n        }\n        .creator-header h1 {\n            font-family: var(--font-display);\n            font-size: clamp(24px, 5vw, 32px);\n            margin: 0;\n            font-weight: 700;\n            letter-spacing: 3px;\n            color: var(--heading-color);\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.1);\n        }\n        \n        .title-char {\n            display: inline-block;\n            opacity: 0;\n            transform: translateY(30px);\n        }\n\n        .wax-seal {\n            width: 45px;\n            height: 45px;\n            display: inline-block;\n            background-color: #c0392b;\n            border-radius: 50%;\n            position: relative;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.4), inset 0 -2px 3px rgba(0,0,0,0.3);\n            opacity: 0;\n            transform: scale(0.5);\n            font-family: 'Cinzel', serif;\n            color: #e7a49c;\n            text-align: center;\n            font-size: 24px;\n            line-height: 45px;\n            font-weight: 700;\n        }\n        .wax-seal::before {\n            content: 'GS';\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.3);\n        }\n\n        .creator-scroll-content { overflow-y: auto; padding: 10px 20px 10px 10px; }\n        .creator-scroll-content::-webkit-scrollbar { width: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-track { background: rgba(139, 115, 85, 0.1); border-radius: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-thumb { background-color: #a89072; border-radius: 10px; border: 2px solid #f7e9d7; }\n        \n        .gs-creator-step { margin-bottom: 40px; overflow: hidden; }\n        .gs-creator-step h3 { font-family: var(--font-display); font-size: 1.5em; font-weight: 700; border-bottom: 1.5px solid var(--border-color); padding-bottom: 8px; margin-bottom: 20px; color: var(--heading-color); text-align: left; }\n        \n        .layout-grid { display: grid; grid-template-columns: 1fr; gap: 25px; align-items: flex-start; }\n        @media (min-width: 768px) {\n            .layout-grid { grid-template-columns: 1fr 280px; }\n        }\n\n        .form-container { text-align: left; }\n        .gs-form-group { margin-bottom: 16px; }\n        .gs-form-group label { display: block; margin-bottom: 6px; font-weight: bold; color: var(--heading-color); }\n        .form-input, .form-select, .form-textarea { width: 100%; padding: 10px; background-color: rgba(255, 255, 255, 0.5); border: 1px solid #a58e72; border-radius: 4px; color: #3d3d3d; font-family: var(--font-main); font-size: 1em; transition: all 0.2s ease-in-out; box-shadow: inset 1px 1px 2px rgba(0,0,0,0.1); }\n        .form-input:focus, .form-select:focus, .form-textarea:focus { outline: none; border-color: #8b7355; background-color: #fff; box-shadow: 0 0 5px rgba(139, 115, 85, 0.5); }\n        .form-textarea { resize: vertical; min-height: 100px; }\n\n        .grid-cols-2 {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 16px;\n        }\n        @media (min-width: 480px) {\n            .grid-cols-2 {\n                grid-template-columns: repeat(2, 1fr);\n            }\n        }\n\n        #attributes-container .point-control { display: flex; align-items: center; justify-content: space-between; margin-bottom: 8px; padding: 6px 8px; background: rgba(0,0,0,0.03); border-left: 3px solid rgba(139,115,85,0.2); border-radius: 4px; }\n        #attributes-container .label { font-weight: bold; color: var(--heading-color); }\n        #attributes-container input[readonly] { width: 40px; text-align: center; font-weight: bold; font-size: 1.2em; font-family: var(--font-display); color: #a02c2c; border: none; background-color: transparent; box-shadow: none; padding: 0; }\n        \n        .attributes-grid {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 0 16px;\n        }\n        @media (min-width: 480px) {\n            .attributes-grid {\n                grid-template-columns: 1fr 1fr;\n            }\n        }\n        \n        .skills-display p { background-color: rgba(0,0,0,0.05); border-left: 3px solid var(--border-color); padding: 10px 15px; margin-top: 10px; font-size: 0.95em; border-radius: 0 4px 4px 0; }\n        .skills-display strong { color: #8b5b4b; font-family: var(--font-display); }\n        .skills-display ul { list-style: none; padding-left: 0; margin-top: 8px; font-size: 0.9em; }\n        .skills-display li { margin-bottom: 4px; }\n\n        #character-summary { background-color: #e9e4d9; font-family: var(--font-code); line-height: 1.6; height: 250px; color: #2c2a2a; }\n        \n        .gs-button { width: 100%; background-color: #8b7355; color: var(--parchment-bg); border: 2px solid var(--dark-leather-bg); border-radius: 5px; padding: 12px 20px; font-family: var(--font-display); font-size: 1.2em; font-weight: 700; cursor: pointer; margin-top: 10px; transition: all 0.3s ease; box-shadow: 0 3px 5px rgba(0,0,0,0.3); }\n        .gs-button:hover { background-color: #a0886c; transform: translateY(-2px); box-shadow: 0 5px 8px rgba(0,0,0,0.3); }\n        .gs-button:disabled { background-color: #9e9e9e; border-color: #757575; cursor: not-allowed; transform: none; box-shadow: none; opacity: 0.6; }\n        .action-button { background-color: #6d5b4b; font-size: 1em; padding: 10px 15px; margin-top: 0; margin-bottom: 10px; width: auto; }\n        \n        .background-display { margin-top: 15px; padding: 15px; border: 1px dashed var(--border-color); border-radius: 5px; background: rgba(0,0,0,0.02); }\n        .background-display p { margin: 0 0 8px; }\n        .background-display span { font-weight: bold; color: var(--heading-color); }\n        \n        #radar-chart-container { \n            max-width: 100%;\n        }\n        @media (min-width: 768px) {\n            #radar-chart-container {\n                position: sticky;\n                top: 0;\n                padding-top: 45px;\n            }\n        }\n\n        pre.mermaid { \n            font-family: var(--font-main); \n            background: rgba(0,0,0,0.02); \n            border: 1px solid rgba(139,115,85,0.1); \n            padding: 10px; \n            border-radius: 5px; \n            overflow: auto;\n            transition: opacity 0.3s ease-in-out;\n        }\n        pre.mermaid.loading { opacity: 0.5; pointer-events: none; }\n\n        pre.mermaid > svg {\n            max-width: 100%;\n            height: auto;\n        }\n\n        #dice-overlay {\n            position: fixed; top: 0; left: 0; width: 100%; height: 100%;\n            background: rgba(0,0,0,0.8); backdrop-filter: blur(5px);\n            display: none; align-items: center; justify-content: center; flex-direction: column;\n            z-index: 100;\n            color: #fff; text-shadow: 0 0 10px #000;\n        }\n\n        .dice-container {\n            display: flex; flex-wrap: wrap; justify-content: center;\n            gap: 2rem; margin-bottom: 2rem;\n            max-width: 600px;\n        }\n        \n        .dice-icon {\n            width: var(--dice-size); height: var(--dice-size);\n            perspective: 800px;\n            transform-style: preserve-3d;\n            display: none;\n        }\n        .dice-icon.highlight {\n            transform: scale(1.15);\n            filter: drop-shadow(0 0 15px #FFEB3B);\n            transition: transform 0.3s ease, filter 0.3s ease;\n        }\n\n        .dice-cube {\n            width: 100%; height: 100%;\n            position: relative;\n            transform-style: preserve-3d;\n            transform: translateZ(calc(var(--dice-size) / -2));\n        }\n        \n        .dice-face {\n            position: absolute;\n            width: var(--dice-size); height: var(--dice-size);\n            background-color: rgba(255, 255, 255, 0.98);\n            border: 1.5px solid #857e72;\n            border-radius: 12%;\n        }\n\n        .pips-container {\n            width: 100%; height: 100%;\n            position: relative; \n        }\n        .pip {\n            width: 22%; height: 22%; \n            background-color: #3d352e;\n            border-radius: 50%;\n            box-shadow: inset 0 1px 3px rgba(0,0,0,0.5);\n            position: absolute; \n        }\n        \n        #dice-result-text { \n            font-family: var(--font-display); \n            font-size: 2.2em;\n            color: #FFEB3B; \n            text-shadow: 0 0 12px #FFEB3B; \n            min-height: 2em;\n            line-height: 1.2;\n            text-align: center; \n        }\n        \n        #skip-animation-btn {\n            position: absolute;\n            bottom: 30px;\n            font-size: 1em;\n            padding: 8px 20px;\n            width: auto;\n            background-color: rgba(0,0,0,0.3);\n            border-color: rgba(255,255,255,0.5);\n            color: rgba(255,255,255,0.8);\n        }\n        #skip-animation-btn:hover {\n            background-color: rgba(0,0,0,0.5);\n            color: #fff;\n        }\n\n        .typed-cursor {\n            opacity: 1;\n            animation: typed-blink 0.7s infinite;\n        }\n        @keyframes typed-blink{\n            0% { opacity: 1; }\n            50% { opacity: 0; }\n            100% { opacity: 1; }\n        }\n        \n        .validation-message {\n            text-align: center;\n            color: #b71c1c;\n            font-size: 0.9em;\n            font-weight: bold;\n            margin-top: -5px;\n            margin-bottom: 10px;\n            height: 1.2em;\n            opacity: 0;\n            will-change: transform, opacity;\n        }\n\n        #credits-screen {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            pointer-events: none;\n            opacity: 0;\n        }\n\n        #credits-screen p {\n            font-family: var(--font-display);\n            font-size: 2em;\n            color: #f5f5dc;\n            text-shadow: 0 0 8px rgba(245, 245, 220, 0.7);\n        }\n    </style>\n</head>\n<body>\n\n<div class=\"creator-wrapper\">\n    <div class=\"border-flow\"></div>\n    <div class=\"inner-border\"></div>\n    <header class=\"creator-header\">\n        <h1 id=\"main-title\">冒险者契约登记</h1>\n        <div id=\"wax-seal\" class=\"wax-seal\"></div>\n    </header>\n\n    <div class=\"creator-scroll-content\">\n        <div class=\"gs-creator-container\">\n            <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第一步：身份确认</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-name-input\">姓名</label><input id=\"char-name-input\" type=\"text\" placeholder=\"可留空，默认为 {{user}}\" class=\"form-input\"></div>\n                    <div class=\"grid-cols-2 gsap-content-item\">\n                        <div class=\"gs-form-group\"><label for=\"char-gender-input\">性别</label><input id=\"char-gender-input\" type=\"text\" placeholder=\"例如: 男性/女性/双性/无性/……\" class=\"form-input\"></div>\n                        <div class=\"gs-form-group\"><label for=\"char-age-input\">年龄</label><input id=\"char-age-input\" type=\"number\" placeholder=\"可参照种族说明\" class=\"form-input\"></div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-race-select\">种族</label><select id=\"char-race-select\" class=\"form-select\"></select></div>\n                    <div class=\"gs-form-group gsap-content-item\">\n                        <label>经历 (出身/来历/邂逅)</label>\n                        <button id=\"roll-background-btn\" class=\"gs-button action-button\">🎲 投骰决定经历</button>\n                        <div id=\"background-display\" class=\"background-display\" style=\"display: none;\">\n                            <p>出身: <span id=\"bg-origin\"></span></p>\n                            <p>来历: <span id=\"bg-past\"></span></p>\n                            <p>邂逅: <span id=\"bg-encounter\"></span></p>\n                        </div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"oc-details-input\">身体特征与补充</label><textarea id=\"oc-details-input\" placeholder=\"发色、瞳色、体型、性格、背景故事构思...\" class=\"form-textarea\"></textarea></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第二步：能力值与技能</h3>\n                <div class=\"layout-grid\">\n                    <div class=\"form-container gsap-content-item\">\n                        <button id=\"roll-attributes-btn\" class=\"gs-button action-button\">🎲 投骰决定能力值</button>\n                        <div id=\"attributes-container\" class=\"attributes-grid\"></div>\n                        <div id=\"skills-and-desc-container\" class=\"skills-display\"></div>\n                    </div>\n                    <div id=\"radar-chart-container\" class=\"gsap-content-item\"><pre class=\"mermaid\" id=\"radar-chart\"></pre></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第三步：完成登记</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"character-summary\">角色卡预览</label><textarea id=\"character-summary\" rows=\"12\" readonly class=\"form-textarea\"></textarea></div>\n                    <button id=\"submit-btn\" class=\"gs-button gsap-content-item\" disabled>确认登记，开始冒险</button>\n                    <div id=\"validation-message\" class=\"validation-message\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div id=\"credits-screen\">\n    <p>作者 𝙀𝙡𝙖𝙞𝙣𝙖𝙙𝙚𝙨</p>\n</div>\n\n<div id=\"dice-overlay\">\n    <div class=\"dice-container\" id=\"dice-container\"></div>\n    <div id=\"dice-result-text\"></div>\n    <button id=\"skip-animation-btn\" class=\"gs-button\">跳过动画</button>\n</div>\n\n<div id=\"dice-templates\" style=\"display:none;\">\n    <div class=\"dice-cube\" data-id_template=\"dice-cube\">\n        <div class=\"dice-face face-front\" data-face=\"1\"><div class=\"pips-container\"><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-back\" data-face=\"6\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-right\" data-face=\"3\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-left\" data-face=\"4\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-top\" data-face=\"2\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-bottom\" data-face=\"5\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n    </div>\n</div>\n\n<script>\n// --- MODIFIED DATA ---\nconst raceData = {\n    '凡人': { attr_rolls: { '力量': '1d3+1', '敏捷': '1d3', '感知': '1d3', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3+2', '魔力': '1d3' }, skills: ['过载行动(初级)', '武器:投掷武器(初级)', '长距离移动(初级)']},\n    '矿人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3', '感知': '1d3+2', '知识': '1d3-1', '魅力': '1d3+1', '信仰力': '1d3+1', '魔力': '1d3-1' }, skills: ['治愈适性(初级)', '夜视(初级)', '锻造(初级)']},\n    '森人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+1', '感知': '1d3+1', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3-1', '魔力': '1d3+1' }, skills: ['武器:弩弓(初级)', '夜视(初级)', '精灵宠儿(初级)']},\n    '蜥蜴人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3+1', '感知': '1d3', '知识': '1d3', '魅力': '1d3+1', '信仰力': '1d3', '魔力': '1d3' }, skills: ['免疫强化(初级)', '夜视(初级)', '龙族血统(初级)']},\n    '圃人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+2', '感知': '1d3+1', '知识': '1d3', '魅力': '1d3-1', '信仰力': '1d3', '魔力': '1d3+2' }, skills: ['隐匿(初级)', '先发制人(初级)', '烹饪(初级)']}\n};\nconst backgroundData = {\n    origin: { \n        '凡人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '学者', class: '魔术师', level: 1, skills: ['文献调查(初级)'] }, 6: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 7: { name: '农民', skills: ['生产业:农业(初级)', '强健(初级)'] }, 8: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '骑士', class: '战士', level: 1, skills: ['骑乘(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n        '矿人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 6: { name: '酒馆老板', class: '战士', level: 1, skills: ['观察(初级)'] }, 7: { name: '铁匠', skills: ['工匠:锻造(初级)', '手工(初级)'] }, 8: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '碎盾者', class: '战士', level: 1, skills: ['强击攻击·斩(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n    },\n    past: { 2: { name: '奴隶', skills: ['劳动(初级)'] }, 3: { name: '牢狱', skills: ['犯罪知识(初级)'] }, 4: { name: '战场', skills: ['沉着冷静(初级)'] }, 5: { name: '神殿', skills: ['神学(初级)'] }, 6: { name: '孤儿', skills: ['忍耐(初级)'] }, 7: { name: '平顺', skills: ['幸运(初级)'] }, 8: { name: '贫困', skills: ['生存术(初级)'] }, 9: { name: '学校', skills: ['博识(初级)'] }, 10: { name: '深闺', skills: ['无偏见(初级)'] }, 11: { name: '奢华', skills: ['鉴定(初级)'] }, 12: { name: '宫廷', skills: ['礼仪(初级)'] }},\n    encounter: { 2: '宿敌', 3: '上司', 4: '后辈', 5: '交易对象', 6: '下属', 7: '家人', 8: '挚友', 9: '前辈', 10: '未婚夫/妻', 11: '劲敌', 12: '师父' }\n};\nbackgroundData.origin['森人'] = backgroundData.origin['凡人']; backgroundData.origin['蜥蜴人'] = backgroundData.origin['凡人']; backgroundData.origin['圃人'] = backgroundData.origin['凡人'];\nconst character = {\n    name: '', gender: '', age: '', oc_details: '', race: '凡人',\n    background: { origin: null, past: null, encounter: null },\n    attributes: { '力量': 0, '敏捷': 0, '感知': 0, '知识': 0, '魅力': 0, '信仰力': 0, '魔力': 0, '潜力': 0 },\n    skills: [], classes: {}, money: 0, _lastAttributesForChart: '',\n};\n// --- END MODIFIED DATA ---\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    gsap.registerPlugin(TextPlugin);\n    mermaid.initialize({ startOnLoad: true, theme: 'base', themeVariables: {\n        '--mermaid-font-family': \"'Vollkorn', 'Noto Serif SC', serif\",\n        primaryColor: '#f7e9d7', primaryTextColor: '#3d3d3d', lineColor: '#8b7355', textColor: '#4a3c2c',\n    }});\n    \n    const $ = (s) => document.querySelector(s);\n    const roll1D6 = () => Math.floor(Math.random() * 6) + 1;\n    const roll1D3 = () => {\n        const d6 = roll1D6();\n        if (d6 <= 2) return { d6, d3: 1 };\n        if (d6 <= 4) return { d6, d3: 2 };\n        return { d6, d3: 3 };\n    };\n    const rollDiceString = (diceString) => { const p=diceString.split('*');const d=p[0];const m=parseInt(p[1])||1;if(!d.includes('d'))return 0;const[n,s]=d.split('d').map(Number);let t=0;for(let i=0;i<n;i++){t+=Math.floor(Math.random()*s)+1;}return t*m; };\n    const formatAge = (ageValue) => { if (!ageValue && ageValue !== 0) return ageValue; const num = Number(ageValue); if (isNaN(num)) return ageValue; if (Math.abs(num) >= 1_000_000) return num.toExponential(2); return ageValue; };\n    const debounce = (func, delay) => { let timeout; return function(...args) { clearTimeout(timeout); timeout = setTimeout(() => func.apply(this, args), delay); }; };\n    const diceUnicode = ['\\u2680', '\\u2681', '\\u2682', '\\u2683', '\\u2684', '\\u2685'];\n\n    const DOM = {\n        nameInput: $('#char-name-input'), genderInput: $('#char-gender-input'), ageInput: $('#char-age-input'),\n        ocDetailsInput: $('#oc-details-input'), raceSelect: $('#char-race-select'), attributesContainer: $('#attributes-container'),\n        skillsContainer: $('#skills-and-desc-container'), radarChart: $('#radar-chart'), summarySheet: $('#character-summary'),\n        diceOverlay: $('#dice-overlay'), diceContainer: $('#dice-container'), diceResultText: $('#dice-result-text'),\n        backgroundDisplay: $('#background-display'), bgOrigin: $('#bg-origin'), bgPast: $('#bg-past'), bgEncounter: $('#bg-encounter'),\n        skipAnimationBtn: $('#skip-animation-btn'),\n        submitBtn: $('#submit-btn'),\n        validationMessage: $('#validation-message'),\n    };\n    \n    const dicePool = []; const MAX_DICE = 6;\n    let currentAnimation = null; let textAnimation = null; let isSkipping = false;\n    let currentValidationMessage = '';\n    \n    function validateAndToggleButton() {\n        let newMessage = '';\n        if (!character.age || String(character.age).trim() === '') {\n            newMessage = '请填写您的冒险者年龄。';\n        } else if (!character.gender || !character.gender.trim()) {\n            newMessage = '请设定冒险者的性别。';\n        } else if (!character.background.origin) {\n            newMessage = '请投骰决定您的冒险者经历。';\n        } else if (Object.values(character.attributes).every(val => val === 0)) {\n            newMessage = '请投骰决定您的能力值。';\n        }\n\n        if (newMessage === currentValidationMessage) return;\n        currentValidationMessage = newMessage;\n\n        if (newMessage) {\n            DOM.submitBtn.disabled = true;\n            DOM.validationMessage.textContent = newMessage;\n            gsap.fromTo(DOM.validationMessage, { autoAlpha: 0, scale: 0.8 }, { autoAlpha: 1, scale: 1, duration: 0.4, ease: 'elastic.out(1, 0.75)' });\n        } else {\n            DOM.submitBtn.disabled = false;\n            gsap.to(DOM.validationMessage, { autoAlpha: 0, duration: 0.3 });\n        }\n    }\n    function updateCharacterDataFromDOM() { character.name = DOM.nameInput.value; character.gender = DOM.genderInput.value; character.age = DOM.ageInput.value; character.oc_details = DOM.ocDetailsInput.value; character.race = DOM.raceSelect.value; }\n    function renderSkills() { const uniqueSkills = [...new Set(character.skills)]; DOM.skillsContainer.innerHTML = `<p><strong>天赋与习得技能:</strong></p><ul>${uniqueSkills.map(s => `<li>- ${s}</li>`).join('')}</ul>`; }\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key}`).value = value; }); }\n    function renderSummary() {\n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '?';\n        const originText = `出身:${character.background.origin ? character.background.origin.name : '?'}`;\n        const pastText = `来历:${character.background.past ? character.background.past.name : '?'}`;\n        const encounterText = `邂逅:${character.background.encounter || '?'}`;\n        let summary = `### 《哥布林杀手TRPG》冒险者登记卡\\n` + `**姓名:** ${finalName} | **种族:** ${character.race} | **性别:** ${character.gender || '?'} | **年龄:** ${formattedAge}\\n` + `**经历:** ${originText} / ${pastText} / ${encounterText}\\n` + `**初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n` + `**初始技能:** ${uniqueSkills.join(', ') || '无'}\\n`; if (character.oc_details) { summary += `**身体特征与补充:** ${character.oc_details}\\n`; } summary += `---\\n**能力值:**\\n`; summary += Object.entries(character.attributes).map(([key, value]) => `- ${key}: ${value}`).join('\\n'); summary += `\\n**持有资金:** ${character.money} 银币`;\n        DOM.summarySheet.value = summary.replace(/### /g, '').replace(/\\*\\*/g, '').replace(/---/g, '\\n────────────────────\\n').replace(/- /g, '  ');\n        DOM.summarySheet.setAttribute('data-raw', summary);\n    }\n    async function renderRadarChartIfNeeded() { const currentAttributesString = JSON.stringify(character.attributes); if (currentAttributesString === character._lastAttributesForChart) return; DOM.radarChart.classList.add('loading'); const radarSyntax = `radar-beta\\ntitle 能力值分布\\naxis a[\"力量 ${character.attributes['力量']}\"]\\naxis b[\"敏捷 ${character.attributes['敏捷']}\"]\\naxis c[\"感知 ${character.attributes['感知']}\"]\\naxis d[\"知识 ${character.attributes['知识']}\"]\\naxis e[\"魅力 ${character.attributes['魅力']}\"]\\naxis f[\"信仰 ${character.attributes['信仰力']}\"]\\naxis g[\"魔力 ${character.attributes['魔力']}\"]\\naxis h[\"潜力 ${character.attributes['潜力']}\"]\\ncurve current[\"能力\"]{${character.attributes['力量']},${character.attributes['敏捷']},${character.attributes['感知']},${character.attributes['知识']},${character.attributes['魅力']},${character.attributes['信仰力']},${character.attributes['魔力']},${character.attributes['潜力']}}\\nmax 10\\nmin 0`; DOM.radarChart.innerHTML = radarSyntax; DOM.radarChart.removeAttribute('data-processed'); try { await mermaid.run({ nodes: [DOM.radarChart] }); character._lastAttributesForChart = currentAttributesString; } catch(e) { console.error(\"Mermaid rendering error:\", e); } finally { DOM.radarChart.classList.remove('loading'); } }\n    async function updateUI(forceFullUpdate = false) { updateCharacterDataFromDOM(); if(forceFullUpdate) { character._lastAttributesForChart = ''; character.skills = []; character.classes = {}; character.money = 100; if(raceData[character.race].skills) character.skills.push(...raceData[character.race].skills); if (character.background.origin) { if (character.background.origin.skills) character.skills.push(...character.background.origin.skills); if (character.background.origin.class) character.classes[character.background.origin.class] = character.background.origin.level; if(character.background.origin.money) character.money += rollDiceString(character.background.origin.money); } if (character.background.past && character.background.past.skills) { character.skills.push(...character.background.past.skills); } } renderAttributes(); renderSkills(); renderSummary(); await renderRadarChartIfNeeded(); validateAndToggleButton(); }\n\n    const masterTl = gsap.timeline({ delay: 0.2 });\n    const title = $('#main-title');\n    title.innerHTML = title.textContent.split('').map(char => `<span class=\"title-char\">${char}</span>`).join('');\n    gsap.set(\".gsap-header-item, .gsap-content-item\", { autoAlpha: 0, y: 20 });\n    masterTl.to(\".title-char\", { autoAlpha: 1, y: 0, duration: 0.7, ease: \"power3.out\", stagger: 0.1 }).to(\"#wax-seal\", { autoAlpha: 1, scale: 1, duration: 0.6, ease: \"elastic.out(1, 0.7)\" }, \"-=0.5\");\n    document.querySelectorAll('.gs-creator-step').forEach((step, index) => { const stepTl = gsap.timeline(); stepTl.to(step.querySelector('.gsap-header-item'), { autoAlpha: 1, y: 0, duration: 0.6, ease: 'power2.out' }).to(step.querySelectorAll('.gsap-content-item'), { autoAlpha: 1, y: 0, duration: 0.5, ease: 'power2.out', stagger: 0.1 }, '-=0.4'); masterTl.add(stepTl, `-=${index === 0 ? 0.2 : 0.7}`); });\n    const pipPositions = { 1: [ { left: '50%', top: '50%' } ], 2: [ { left: '25%', top: '25%' }, { left: '75%', top: '75%' } ], 3: [ { left: '25%', top: '25%' }, { left: '50%', top: '50%' }, { left: '75%', top: '75%' } ], 4: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 5: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '50%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 6: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '50%' }, { left: '75%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ]};\n    function setupCube(cubeEl) { const size = 'calc(var(--dice-size) / 2)'; gsap.set(cubeEl.querySelector('.face-front'),  { transform: `rotateY(0deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-back'),   { transform: `rotateY(180deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-right'),  { transform: `rotateY(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-left'),   { transform: `rotateY(-90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-top'),   { transform: `rotateX(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-bottom'), { transform: `rotateX(-90deg) translateZ(${size})` }); const faces = cubeEl.querySelectorAll('.dice-face'); faces.forEach(face => { const faceNum = face.getAttribute('data-face'); const pips = face.querySelectorAll('.pip'); const positions = pipPositions[faceNum]; if (!pips.length || !positions) return; pips.forEach((pip, index) => { const pos = positions[index]; gsap.set(pip, { left: pos.left, top: pos.top, xPercent: -50, yPercent: -50 }); }); }); }\n    function getRotationForFace(faceValue) { switch (faceValue) { case 1: return { x: 0, y: 0 }; case 6: return { x: 0, y: 180 }; case 3: return { x: 0, y: -90 }; case 4: return { x: 0, y: 90 }; case 2: return { x: -90, y: 0 }; case 5: return { x: 90,  y: 0 }; default: return { x: 0, y: 0 }; } }\n    async function animateText(element, text) { if(isSkipping) {element.innerHTML = text.replace(/\\n/g, '<br>'); return;} return new Promise(resolve => { if (textAnimation && textAnimation.isActive()) textAnimation.kill(); element.innerHTML = ''; textAnimation = gsap.to(element, { duration: text.length * 0.05, text: { value: text.replace(/\\n/g, '<br>'), newClass: \"typed-cursor\" }, ease: \"none\", onComplete: () => { gsap.delayedCall(0.7, () => { element.querySelector('.typed-cursor')?.remove(); resolve(); }); } }); }); }\n    function initDicePool() { const diceTemplate = document.querySelector('[data-id_template=\"dice-cube\"]'); if (!diceTemplate) return; for (let i = 0; i < MAX_DICE; i++) { const dieIconElement = document.createElement('div'); dieIconElement.className = 'dice-icon'; const newCube = diceTemplate.cloneNode(true); dieIconElement.appendChild(newCube); DOM.diceContainer.appendChild(dieIconElement); setupCube(newCube); dicePool.push(dieIconElement); } }\n    async function animateRoll(numDice, preCalculatedRolls, textToShowDuringRoll = \"投掷中...\") { return new Promise(resolve => { if (currentAnimation && currentAnimation.isActive()) currentAnimation.kill(); dicePool.forEach(die => die.style.display = 'none'); const activeDice = dicePool.slice(0, numDice); animateText(DOM.diceResultText, textToShowDuringRoll); activeDice.forEach(die => { die.style.display = 'flex'; die.className = 'dice-icon'; }); const masterTl = gsap.timeline({ onComplete: () => { if(isSkipping) DOM.diceResultText.innerHTML = ''; resolve(preCalculatedRolls); }}); currentAnimation = masterTl; activeDice.forEach((dieElement, i) => { const dieCube = dieElement.querySelector('.dice-cube'); const visualRoll = preCalculatedRolls[i]; const targetRotation = getRotationForFace(visualRoll); const dieTimeline = gsap.timeline(); dieTimeline.to(dieCube, { rotationX: `+=${gsap.utils.random(720, 1080)}`, rotationY: `+=${gsap.utils.random(720, 1080)}`, duration: 1.8, ease: \"power2.in\" }).to(dieCube, { rotationX: targetRotation.x, rotationY: targetRotation.y, duration: 0.7, ease: \"power4.out\" }); masterTl.add(dieTimeline, 0); }); }); }\n    \n    const debouncedUpdate = debounce(updateUI, 400);\n    [DOM.nameInput, DOM.genderInput, DOM.ageInput, DOM.ocDetailsInput].forEach(el => el.addEventListener('input', debouncedUpdate));\n    \n    DOM.skipAnimationBtn.addEventListener('click', () => {\n        isSkipping = true;\n        if (currentAnimation && currentAnimation.isActive()) currentAnimation.progress(1);\n        if (textAnimation && textAnimation.isActive()) textAnimation.progress(1);\n    });\n\n    $('#roll-background-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const rolls = [roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6()];\n        await animateRoll(6, rolls, '投掷 经历... (2d6 x 3)');\n        \n        const sums = { origin: rolls[0] + rolls[1], past: rolls[2] + rolls[3], encounter: rolls[4] + rolls[5] };\n        \n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `出身: ${rolls[0]} + ${rolls[1]} = ${sums.origin}\\n(${backgroundData.origin[character.race][sums.origin].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `来历: ${rolls[2]} + ${rolls[3]} = ${sums.past}\\n(${backgroundData.past[sums.past].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(4, 6), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `邂逅: ${rolls[4]} + ${rolls[5]} = ${sums.encounter}\\n(${backgroundData.encounter[sums.encounter]})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        character.background.origin = backgroundData.origin[character.race][sums.origin];\n        character.background.past = backgroundData.past[sums.past];\n        character.background.encounter = backgroundData.encounter[sums.encounter];\n        DOM.bgOrigin.textContent = character.background.origin.name;\n        DOM.bgPast.textContent = character.background.past.name;\n        DOM.bgEncounter.textContent = character.background.encounter;\n        DOM.backgroundDisplay.style.display = 'block';\n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        updateUI(true);\n    });\n\n    $('#roll-attributes-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const attrRolls = raceData[character.race].attr_rolls;\n        const allCalculatedRolls = [];\n\n        // Prepare race-based attributes\n        for (const attr in attrRolls) {\n            const formula = attrRolls[attr];\n            const modifier = parseInt(formula.split('d3')[1] || '0');\n            const { d6, d3 } = roll1D3();\n            const finalValue = Math.max(0, d3 + modifier);\n            character.attributes[attr] = finalValue;\n            allCalculatedRolls.push({ attr, formula, d6, d3, modifier, finalValue });\n        }\n        \n        // Prepare \"Potential\" attribute\n        const potentialValue = Math.floor(Math.random() * 3) + 1;\n        const d6ForPotential = (potentialValue * 2) - 1; // Map 1,2,3 to d6 faces 1,3,5 for animation\n        character.attributes['潜力'] = potentialValue;\n        allCalculatedRolls.push({\n            attr: '潜力',\n            formula: '1-3', // Just a descriptor\n            d6: d6ForPotential,\n            finalValue: potentialValue\n        });\n        \n        // Animate all rolls sequentially\n        for (const roll of allCalculatedRolls) {\n            await animateRoll(1, [roll.d6], `投掷 ${roll.attr}...`);\n            if (isSkipping) break;\n\n            gsap.to(dicePool[0], { className: 'dice-icon highlight', duration: 0.3 });\n            \n            let resultText;\n            if (roll.attr === '潜力') {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.finalValue}`;\n            } else {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.d3} ${roll.modifier >= 0 ? '+' : ''} ${roll.modifier} = ${roll.finalValue}`;\n            }\n            await animateText(DOM.diceResultText, resultText);\n            \n            await updateUI();\n            \n            if (isSkipping) break;\n            \n            await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        await updateUI();\n    });\n\n    DOM.raceSelect.addEventListener('change', () => {\n        DOM.backgroundDisplay.style.display = 'none';\n        character.background = { origin: null, past: null, encounter: null };\n        Object.keys(character.attributes).forEach(k => character.attributes[k] = 0);\n        updateUI(true);\n    });\n\n    $('#submit-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        await updateUI(true);\n        \n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '未设定';\n        \n        const finalCharacterObject={ NAME:finalName, GENDER:character.gender||'未设定', AGE:formattedAge, RACE:character.race, ORIGIN: character.background.origin ? character.background.origin.name : '未知', PAST: character.background.past ? character.background.past.name : '未知', ENCOUNTER: character.background.encounter || '未知', SKILLS: uniqueSkills, OC_DETAILS:character.oc_details||'无', ...character.attributes, MONEY:character.money };\n        \n        const slashCommand=`/send <START>\\nAdmin:\\n这是一个TRPG开局，请为 User 生成一段详尽的背景故事。\\n\\n# 故事核心要求\\n请严格根据以下【角色完整设定】，撰写一段从角色童年到现在的成长故事。故事需要清晰地阐述是什么关键事件或心路历程，最终让他/她确立了要成为一名冒险者的志向。请在故事中自然地融入角色的种族、出身背景、技能和性格特点。\\n\\n# 角色完整设定\\n---\\n## 基础信息\\n- **姓名:** ${finalName}\\n- **性别:** ${character.gender||'未设定'}\\n- **年龄:** ${formattedAge}\\n- **种族:** ${character.race}\\n\\n## 经历\\n- **出身:** ${character.background.origin ? character.background.origin.name : '未知'}\\n- **来历:** ${character.background.past ? character.background.past.name : '未知'}\\n- **邂逅:** ${character.background.encounter || '未知'}\\n\\n## 背景与技能\\n- **初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n- **初始技能:** ${uniqueSkills.join(', ')||'无'}\\n\\n## 补充设定 (OC)\\n- **额外补充:** ${character.oc_details||'无'}\\n\\n## 能力值\\n- **力量:** ${character.attributes['力量']}\\n- **敏捷:** ${character.attributes['敏捷']}\\n- **感知:** ${character.attributes['感知']}\\n- **知识:** ${character.attributes['知识']}\\n- **魅力:** ${character.attributes['魅力']}\\n- **信仰力:** ${character.attributes['信仰力']}\\n- **魔力:** ${character.attributes['魔力']}\\n\\n## 初始资产\\n- **资金:** ${character.money} 银币\\n\\|\\n/trigger`; \n        \n        try {\n            if (typeof insertOrAssignVariables === 'function') {\n                await insertOrAssignVariables(finalCharacterObject);\n            } else {\n                console.log(\"SillyTavern Function 'insertOrAssignVariables' not found. Variables:\", finalCharacterObject);\n            }\n            if (typeof triggerSlash === 'function') {\n                await triggerSlash(slashCommand, 'Send');\n            } else { \n                console.log(\"SillyTavern Function 'triggerSlash' not found. Command will be copied to clipboard.\");\n                navigator.clipboard.writeText(slashCommand).then(() => {\n                    alert('角色指令已复制到剪贴板！');\n                });\n            }\n        } catch (error) {\n            console.error('与SillyTavern交互失败:', error);\n            alert('与SillyTavern交互失败，请查看浏览器控制台。');\n        }\n\n        e.target.innerHTML = \"契约成立！\";\n    });\n    \n    initDicePool();\n    Object.keys(raceData).forEach(key => DOM.raceSelect.add(new Option(key, key)));\n    Object.keys(character.attributes).forEach(key => {\n        const pointControl = document.createElement('div');\n        pointControl.className = 'point-control';\n        pointControl.innerHTML = `<span class=\"label\">${key}</span><input type=\"text\" id=\"attr-${key.replace(/\\s/g, '')}\" readonly value=\"0\">`; // ID santized just in case\n        DOM.attributesContainer.appendChild(pointControl);\n    });\n    // A small fix for renderAttributes to handle sanitized IDs\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key.replace(/\\s/g, '')}`).value = value; }); }\n    updateUI(true);\n});\n</script>\n\n</body>\n</html>\n```"
  },
  {
    "role": "user",
    "content": "```\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>哥布林杀手TRPG - 冒险者契约</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/gsap.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/TextPlugin.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.min.js\" defer></script>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Noto+Serif+SC:wght@400;700&family=Vollkorn:wght@400;700&family=Courier+Prime&display=swap\" rel=\"stylesheet\">\n\n    <style>\n        :root {\n            --leather-bg: #5a3a2a;\n            --dark-leather-bg: #3b2a1a;\n            --parchment-bg: #f5f5dc;\n            --parchment-bg-gradient: linear-gradient(165deg, #f7e9d7, #e6d5c3);\n            --text-color: #3d3d3d;\n            --heading-color: #4a3c2c;\n            --border-color: #7a5a4a;\n            --font-main: 'Vollkorn', 'Noto Serif SC', serif;\n            --font-display: 'Cinzel', 'Noto Serif SC', serif;\n            --font-code: 'Courier Prime', 'Courier New', monospace;\n            --dice-size: 5rem; \n        }\n\n        html { height: 100%; }\n        body {\n            background-color: #3a2e20;\n            font-family: var(--font-main);\n            color: var(--text-color);\n            margin: 0; padding: 20px;\n            box-sizing: border-box;\n            display: flex;\n            align-items: center; justify-content: center;\n            min-height: 100%;\n        }\n        *, *:before, *:after { box-sizing: inherit; }\n\n        .creator-wrapper {\n            width: 100%; max-width: 900px;\n            margin: 0;\n            background: var(--parchment-bg-gradient);\n            border: 12px solid #8b7355;\n            border-radius: 8px;\n            box-shadow: 0 0 40px rgba(139, 115, 85, 0.3), inset 0 0 30px rgba(255, 255, 255, 0.4);\n            position: relative;\n            overflow: hidden;\n            padding: 25px;\n            display: flex; flex-direction: column;\n            max-height: 95vh;\n        }\n\n        .border-flow, .inner-border { position: absolute; pointer-events: none; }\n        .border-flow { top: 0; left: 0; right: 0; bottom: 0; background: linear-gradient(90deg, rgba(139,115,85,0.1) 1px, transparent 1px), linear-gradient(0deg, rgba(139,115,85,0.1) 1px, transparent 1px); background-size: 20px 20px; animation: borderFlow 15s linear infinite; }\n        .inner-border { top: 5px; left: 5px; right: 5px; bottom: 5px; border: 3px solid rgba(139,115,85,0.3); border-radius: 5px; }\n        @keyframes borderFlow { from { background-position: 0 0; } to { background-position: 20px 20px; } }\n\n        .creator-header {\n            text-align: center;\n            padding: 10px;\n            margin-bottom: 25px;\n            border-bottom: 2px solid rgba(139, 115, 85, 0.3);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 15px;\n        }\n        .creator-header h1 {\n            font-family: var(--font-display);\n            font-size: clamp(24px, 5vw, 32px);\n            margin: 0;\n            font-weight: 700;\n            letter-spacing: 3px;\n            color: var(--heading-color);\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.1);\n        }\n        \n        .title-char {\n            display: inline-block;\n            opacity: 0;\n            transform: translateY(30px);\n        }\n\n        .wax-seal {\n            width: 45px;\n            height: 45px;\n            display: inline-block;\n            background-color: #c0392b;\n            border-radius: 50%;\n            position: relative;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.4), inset 0 -2px 3px rgba(0,0,0,0.3);\n            opacity: 0;\n            transform: scale(0.5);\n            font-family: 'Cinzel', serif;\n            color: #e7a49c;\n            text-align: center;\n            font-size: 24px;\n            line-height: 45px;\n            font-weight: 700;\n        }\n        .wax-seal::before {\n            content: 'GS';\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.3);\n        }\n\n        .creator-scroll-content { overflow-y: auto; padding: 10px 20px 10px 10px; }\n        .creator-scroll-content::-webkit-scrollbar { width: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-track { background: rgba(139, 115, 85, 0.1); border-radius: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-thumb { background-color: #a89072; border-radius: 10px; border: 2px solid #f7e9d7; }\n        \n        .gs-creator-step { margin-bottom: 40px; overflow: hidden; }\n        .gs-creator-step h3 { font-family: var(--font-display); font-size: 1.5em; font-weight: 700; border-bottom: 1.5px solid var(--border-color); padding-bottom: 8px; margin-bottom: 20px; color: var(--heading-color); text-align: left; }\n        \n        .layout-grid { display: grid; grid-template-columns: 1fr; gap: 25px; align-items: flex-start; }\n        @media (min-width: 768px) {\n            .layout-grid { grid-template-columns: 1fr 280px; }\n        }\n\n        .form-container { text-align: left; }\n        .gs-form-group { margin-bottom: 16px; }\n        .gs-form-group label { display: block; margin-bottom: 6px; font-weight: bold; color: var(--heading-color); }\n        .form-input, .form-select, .form-textarea { width: 100%; padding: 10px; background-color: rgba(255, 255, 255, 0.5); border: 1px solid #a58e72; border-radius: 4px; color: #3d3d3d; font-family: var(--font-main); font-size: 1em; transition: all 0.2s ease-in-out; box-shadow: inset 1px 1px 2px rgba(0,0,0,0.1); }\n        .form-input:focus, .form-select:focus, .form-textarea:focus { outline: none; border-color: #8b7355; background-color: #fff; box-shadow: 0 0 5px rgba(139, 115, 85, 0.5); }\n        .form-textarea { resize: vertical; min-height: 100px; }\n\n        .grid-cols-2 {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 16px;\n        }\n        @media (min-width: 480px) {\n            .grid-cols-2 {\n                grid-template-columns: repeat(2, 1fr);\n            }\n        }\n\n        #attributes-container .point-control { display: flex; align-items: center; justify-content: space-between; margin-bottom: 8px; padding: 6px 8px; background: rgba(0,0,0,0.03); border-left: 3px solid rgba(139,115,85,0.2); border-radius: 4px; }\n        #attributes-container .label { font-weight: bold; color: var(--heading-color); }\n        #attributes-container input[readonly] { width: 40px; text-align: center; font-weight: bold; font-size: 1.2em; font-family: var(--font-display); color: #a02c2c; border: none; background-color: transparent; box-shadow: none; padding: 0; }\n        \n        .attributes-grid {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 0 16px;\n        }\n        @media (min-width: 480px) {\n            .attributes-grid {\n                grid-template-columns: 1fr 1fr;\n            }\n        }\n        \n        .skills-display p { background-color: rgba(0,0,0,0.05); border-left: 3px solid var(--border-color); padding: 10px 15px; margin-top: 10px; font-size: 0.95em; border-radius: 0 4px 4px 0; }\n        .skills-display strong { color: #8b5b4b; font-family: var(--font-display); }\n        .skills-display ul { list-style: none; padding-left: 0; margin-top: 8px; font-size: 0.9em; }\n        .skills-display li { margin-bottom: 4px; }\n\n        #character-summary { background-color: #e9e4d9; font-family: var(--font-code); line-height: 1.6; height: 250px; color: #2c2a2a; }\n        \n        .gs-button { width: 100%; background-color: #8b7355; color: var(--parchment-bg); border: 2px solid var(--dark-leather-bg); border-radius: 5px; padding: 12px 20px; font-family: var(--font-display); font-size: 1.2em; font-weight: 700; cursor: pointer; margin-top: 10px; transition: all 0.3s ease; box-shadow: 0 3px 5px rgba(0,0,0,0.3); }\n        .gs-button:hover { background-color: #a0886c; transform: translateY(-2px); box-shadow: 0 5px 8px rgba(0,0,0,0.3); }\n        .gs-button:disabled { background-color: #9e9e9e; border-color: #757575; cursor: not-allowed; transform: none; box-shadow: none; opacity: 0.6; }\n        .action-button { background-color: #6d5b4b; font-size: 1em; padding: 10px 15px; margin-top: 0; margin-bottom: 10px; width: auto; }\n        \n        .background-display { margin-top: 15px; padding: 15px; border: 1px dashed var(--border-color); border-radius: 5px; background: rgba(0,0,0,0.02); }\n        .background-display p { margin: 0 0 8px; }\n        .background-display span { font-weight: bold; color: var(--heading-color); }\n        \n        #radar-chart-container { \n            max-width: 100%;\n        }\n        @media (min-width: 768px) {\n            #radar-chart-container {\n                position: sticky;\n                top: 0;\n                padding-top: 45px;\n            }\n        }\n\n        pre.mermaid { \n            font-family: var(--font-main); \n            background: rgba(0,0,0,0.02); \n            border: 1px solid rgba(139,115,85,0.1); \n            padding: 10px; \n            border-radius: 5px; \n            overflow: auto;\n            transition: opacity 0.3s ease-in-out;\n        }\n        pre.mermaid.loading { opacity: 0.5; pointer-events: none; }\n\n        pre.mermaid > svg {\n            max-width: 100%;\n            height: auto;\n        }\n\n        #dice-overlay {\n            position: fixed; top: 0; left: 0; width: 100%; height: 100%;\n            background: rgba(0,0,0,0.8); backdrop-filter: blur(5px);\n            display: none; align-items: center; justify-content: center; flex-direction: column;\n            z-index: 100;\n            color: #fff; text-shadow: 0 0 10px #000;\n        }\n\n        .dice-container {\n            display: flex; flex-wrap: wrap; justify-content: center;\n            gap: 2rem; margin-bottom: 2rem;\n            max-width: 600px;\n        }\n        \n        .dice-icon {\n            width: var(--dice-size); height: var(--dice-size);\n            perspective: 800px;\n            transform-style: preserve-3d;\n            display: none;\n        }\n        .dice-icon.highlight {\n            transform: scale(1.15);\n            filter: drop-shadow(0 0 15px #FFEB3B);\n            transition: transform 0.3s ease, filter 0.3s ease;\n        }\n\n        .dice-cube {\n            width: 100%; height: 100%;\n            position: relative;\n            transform-style: preserve-3d;\n            transform: translateZ(calc(var(--dice-size) / -2));\n        }\n        \n        .dice-face {\n            position: absolute;\n            width: var(--dice-size); height: var(--dice-size);\n            background-color: rgba(255, 255, 255, 0.98);\n            border: 1.5px solid #857e72;\n            border-radius: 12%;\n        }\n\n        .pips-container {\n            width: 100%; height: 100%;\n            position: relative; \n        }\n        .pip {\n            width: 22%; height: 22%; \n            background-color: #3d352e;\n            border-radius: 50%;\n            box-shadow: inset 0 1px 3px rgba(0,0,0,0.5);\n            position: absolute; \n        }\n        \n        #dice-result-text { \n            font-family: var(--font-display); \n            font-size: 2.2em;\n            color: #FFEB3B; \n            text-shadow: 0 0 12px #FFEB3B; \n            min-height: 2em;\n            line-height: 1.2;\n            text-align: center; \n        }\n        \n        #skip-animation-btn {\n            position: absolute;\n            bottom: 30px;\n            font-size: 1em;\n            padding: 8px 20px;\n            width: auto;\n            background-color: rgba(0,0,0,0.3);\n            border-color: rgba(255,255,255,0.5);\n            color: rgba(255,255,255,0.8);\n        }\n        #skip-animation-btn:hover {\n            background-color: rgba(0,0,0,0.5);\n            color: #fff;\n        }\n\n        .typed-cursor {\n            opacity: 1;\n            animation: typed-blink 0.7s infinite;\n        }\n        @keyframes typed-blink{\n            0% { opacity: 1; }\n            50% { opacity: 0; }\n            100% { opacity: 1; }\n        }\n        \n        .validation-message {\n            text-align: center;\n            color: #b71c1c;\n            font-size: 0.9em;\n            font-weight: bold;\n            margin-top: -5px;\n            margin-bottom: 10px;\n            height: 1.2em;\n            opacity: 0;\n            will-change: transform, opacity;\n        }\n\n        #credits-screen {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            pointer-events: none;\n            opacity: 0;\n        }\n\n        #credits-screen p {\n            font-family: var(--font-display);\n            font-size: 2em;\n            color: #f5f5dc;\n            text-shadow: 0 0 8px rgba(245, 245, 220, 0.7);\n        }\n    </style>\n</head>\n<body>\n\n<div class=\"creator-wrapper\">\n    <div class=\"border-flow\"></div>\n    <div class=\"inner-border\"></div>\n    <header class=\"creator-header\">\n        <h1 id=\"main-title\">冒险者契约登记</h1>\n        <div id=\"wax-seal\" class=\"wax-seal\"></div>\n    </header>\n\n    <div class=\"creator-scroll-content\">\n        <div class=\"gs-creator-container\">\n            <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第一步：身份确认</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-name-input\">姓名</label><input id=\"char-name-input\" type=\"text\" placeholder=\"可留空，默认为 {{user}}\" class=\"form-input\"></div>\n                    <div class=\"grid-cols-2 gsap-content-item\">\n                        <div class=\"gs-form-group\"><label for=\"char-gender-input\">性别</label><input id=\"char-gender-input\" type=\"text\" placeholder=\"例如: 男性/女性/双性/无性/……\" class=\"form-input\"></div>\n                        <div class=\"gs-form-group\"><label for=\"char-age-input\">年龄</label><input id=\"char-age-input\" type=\"number\" placeholder=\"可参照种族说明\" class=\"form-input\"></div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-race-select\">种族</label><select id=\"char-race-select\" class=\"form-select\"></select></div>\n                    <div class=\"gs-form-group gsap-content-item\">\n                        <label>经历 (出身/来历/邂逅)</label>\n                        <button id=\"roll-background-btn\" class=\"gs-button action-button\">🎲 投骰决定经历</button>\n                        <div id=\"background-display\" class=\"background-display\" style=\"display: none;\">\n                            <p>出身: <span id=\"bg-origin\"></span></p>\n                            <p>来历: <span id=\"bg-past\"></span></p>\n                            <p>邂逅: <span id=\"bg-encounter\"></span></p>\n                        </div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"oc-details-input\">身体特征与补充</label><textarea id=\"oc-details-input\" placeholder=\"发色、瞳色、体型、性格、背景故事构思...\" class=\"form-textarea\"></textarea></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第二步：能力值与技能</h3>\n                <div class=\"layout-grid\">\n                    <div class=\"form-container gsap-content-item\">\n                        <button id=\"roll-attributes-btn\" class=\"gs-button action-button\">🎲 投骰决定能力值</button>\n                        <div id=\"attributes-container\" class=\"attributes-grid\"></div>\n                        <div id=\"skills-and-desc-container\" class=\"skills-display\"></div>\n                    </div>\n                    <div id=\"radar-chart-container\" class=\"gsap-content-item\"><pre class=\"mermaid\" id=\"radar-chart\"></pre></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第三步：完成登记</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"character-summary\">角色卡预览</label><textarea id=\"character-summary\" rows=\"12\" readonly class=\"form-textarea\"></textarea></div>\n                    <button id=\"submit-btn\" class=\"gs-button gsap-content-item\" disabled>确认登记，开始冒险</button>\n                    <div id=\"validation-message\" class=\"validation-message\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div id=\"credits-screen\">\n    <p>作者 𝙀𝙡𝙖𝙞𝙣𝙖𝙙𝙚𝙨</p>\n</div>\n\n<div id=\"dice-overlay\">\n    <div class=\"dice-container\" id=\"dice-container\"></div>\n    <div id=\"dice-result-text\"></div>\n    <button id=\"skip-animation-btn\" class=\"gs-button\">跳过动画</button>\n</div>\n\n<div id=\"dice-templates\" style=\"display:none;\">\n    <div class=\"dice-cube\" data-id_template=\"dice-cube\">\n        <div class=\"dice-face face-front\" data-face=\"1\"><div class=\"pips-container\"><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-back\" data-face=\"6\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-right\" data-face=\"3\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-left\" data-face=\"4\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-top\" data-face=\"2\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-bottom\" data-face=\"5\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n    </div>\n</div>\n\n<script>\n// --- MODIFIED DATA ---\nconst raceData = {\n    '凡人': { attr_rolls: { '力量': '1d3+1', '敏捷': '1d3', '感知': '1d3', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3+2', '魔力': '1d3' }, skills: ['过载行动(初级)', '武器:投掷武器(初级)', '长距离移动(初级)']},\n    '矿人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3', '感知': '1d3+2', '知识': '1d3-1', '魅力': '1d3+1', '信仰力': '1d3+1', '魔力': '1d3-1' }, skills: ['治愈适性(初级)', '夜视(初级)', '锻造(初级)']},\n    '森人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+1', '感知': '1d3+1', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3-1', '魔力': '1d3+1' }, skills: ['武器:弩弓(初级)', '夜视(初级)', '精灵宠儿(初级)']},\n    '蜥蜴人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3+1', '感知': '1d3', '知识': '1d3', '魅力': '1d3+1', '信仰力': '1d3', '魔力': '1d3' }, skills: ['免疫强化(初级)', '夜视(初级)', '龙族血统(初级)']},\n    '圃人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+2', '感知': '1d3+1', '知识': '1d3', '魅力': '1d3-1', '信仰力': '1d3', '魔力': '1d3+2' }, skills: ['隐匿(初级)', '先发制人(初级)', '烹饪(初级)']}\n};\nconst backgroundData = {\n    origin: { \n        '凡人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '学者', class: '魔术师', level: 1, skills: ['文献调查(初级)'] }, 6: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 7: { name: '农民', skills: ['生产业:农业(初级)', '强健(初级)'] }, 8: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '骑士', class: '战士', level: 1, skills: ['骑乘(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n        '矿人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 6: { name: '酒馆老板', class: '战士', level: 1, skills: ['观察(初级)'] }, 7: { name: '铁匠', skills: ['工匠:锻造(初级)', '手工(初级)'] }, 8: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '碎盾者', class: '战士', level: 1, skills: ['强击攻击·斩(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n    },\n    past: { 2: { name: '奴隶', skills: ['劳动(初级)'] }, 3: { name: '牢狱', skills: ['犯罪知识(初级)'] }, 4: { name: '战场', skills: ['沉着冷静(初级)'] }, 5: { name: '神殿', skills: ['神学(初级)'] }, 6: { name: '孤儿', skills: ['忍耐(初级)'] }, 7: { name: '平顺', skills: ['幸运(初级)'] }, 8: { name: '贫困', skills: ['生存术(初级)'] }, 9: { name: '学校', skills: ['博识(初级)'] }, 10: { name: '深闺', skills: ['无偏见(初级)'] }, 11: { name: '奢华', skills: ['鉴定(初级)'] }, 12: { name: '宫廷', skills: ['礼仪(初级)'] }},\n    encounter: { 2: '宿敌', 3: '上司', 4: '后辈', 5: '交易对象', 6: '下属', 7: '家人', 8: '挚友', 9: '前辈', 10: '未婚夫/妻', 11: '劲敌', 12: '师父' }\n};\nbackgroundData.origin['森人'] = backgroundData.origin['凡人']; backgroundData.origin['蜥蜴人'] = backgroundData.origin['凡人']; backgroundData.origin['圃人'] = backgroundData.origin['凡人'];\nconst character = {\n    name: '', gender: '', age: '', oc_details: '', race: '凡人',\n    background: { origin: null, past: null, encounter: null },\n    attributes: { '力量': 0, '敏捷': 0, '感知': 0, '知识': 0, '魅力': 0, '信仰力': 0, '魔力': 0, '潜力': 0 },\n    skills: [], classes: {}, money: 0, _lastAttributesForChart: '',\n};\n// --- END MODIFIED DATA ---\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    gsap.registerPlugin(TextPlugin);\n    mermaid.initialize({ startOnLoad: true, theme: 'base', themeVariables: {\n        '--mermaid-font-family': \"'Vollkorn', 'Noto Serif SC', serif\",\n        primaryColor: '#f7e9d7', primaryTextColor: '#3d3d3d', lineColor: '#8b7355', textColor: '#4a3c2c',\n    }});\n    \n    const $ = (s) => document.querySelector(s);\n    const roll1D6 = () => Math.floor(Math.random() * 6) + 1;\n    const roll1D3 = () => {\n        const d6 = roll1D6();\n        if (d6 <= 2) return { d6, d3: 1 };\n        if (d6 <= 4) return { d6, d3: 2 };\n        return { d6, d3: 3 };\n    };\n    const rollDiceString = (diceString) => { const p=diceString.split('*');const d=p[0];const m=parseInt(p[1])||1;if(!d.includes('d'))return 0;const[n,s]=d.split('d').map(Number);let t=0;for(let i=0;i<n;i++){t+=Math.floor(Math.random()*s)+1;}return t*m; };\n    const formatAge = (ageValue) => { if (!ageValue && ageValue !== 0) return ageValue; const num = Number(ageValue); if (isNaN(num)) return ageValue; if (Math.abs(num) >= 1_000_000) return num.toExponential(2); return ageValue; };\n    const debounce = (func, delay) => { let timeout; return function(...args) { clearTimeout(timeout); timeout = setTimeout(() => func.apply(this, args), delay); }; };\n    const diceUnicode = ['\\u2680', '\\u2681', '\\u2682', '\\u2683', '\\u2684', '\\u2685'];\n\n    const DOM = {\n        nameInput: $('#char-name-input'), genderInput: $('#char-gender-input'), ageInput: $('#char-age-input'),\n        ocDetailsInput: $('#oc-details-input'), raceSelect: $('#char-race-select'), attributesContainer: $('#attributes-container'),\n        skillsContainer: $('#skills-and-desc-container'), radarChart: $('#radar-chart'), summarySheet: $('#character-summary'),\n        diceOverlay: $('#dice-overlay'), diceContainer: $('#dice-container'), diceResultText: $('#dice-result-text'),\n        backgroundDisplay: $('#background-display'), bgOrigin: $('#bg-origin'), bgPast: $('#bg-past'), bgEncounter: $('#bg-encounter'),\n        skipAnimationBtn: $('#skip-animation-btn'),\n        submitBtn: $('#submit-btn'),\n        validationMessage: $('#validation-message'),\n    };\n    \n    const dicePool = []; const MAX_DICE = 6;\n    let currentAnimation = null; let textAnimation = null; let isSkipping = false;\n    let currentValidationMessage = '';\n    \n    function validateAndToggleButton() {\n        let newMessage = '';\n        if (!character.age || String(character.age).trim() === '') {\n            newMessage = '请填写您的冒险者年龄。';\n        } else if (!character.gender || !character.gender.trim()) {\n            newMessage = '请设定冒险者的性别。';\n        } else if (!character.background.origin) {\n            newMessage = '请投骰决定您的冒险者经历。';\n        } else if (Object.values(character.attributes).every(val => val === 0)) {\n            newMessage = '请投骰决定您的能力值。';\n        }\n\n        if (newMessage === currentValidationMessage) return;\n        currentValidationMessage = newMessage;\n\n        if (newMessage) {\n            DOM.submitBtn.disabled = true;\n            DOM.validationMessage.textContent = newMessage;\n            gsap.fromTo(DOM.validationMessage, { autoAlpha: 0, scale: 0.8 }, { autoAlpha: 1, scale: 1, duration: 0.4, ease: 'elastic.out(1, 0.75)' });\n        } else {\n            DOM.submitBtn.disabled = false;\n            gsap.to(DOM.validationMessage, { autoAlpha: 0, duration: 0.3 });\n        }\n    }\n    function updateCharacterDataFromDOM() { character.name = DOM.nameInput.value; character.gender = DOM.genderInput.value; character.age = DOM.ageInput.value; character.oc_details = DOM.ocDetailsInput.value; character.race = DOM.raceSelect.value; }\n    function renderSkills() { const uniqueSkills = [...new Set(character.skills)]; DOM.skillsContainer.innerHTML = `<p><strong>天赋与习得技能:</strong></p><ul>${uniqueSkills.map(s => `<li>- ${s}</li>`).join('')}</ul>`; }\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key}`).value = value; }); }\n    function renderSummary() {\n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '?';\n        const originText = `出身:${character.background.origin ? character.background.origin.name : '?'}`;\n        const pastText = `来历:${character.background.past ? character.background.past.name : '?'}`;\n        const encounterText = `邂逅:${character.background.encounter || '?'}`;\n        let summary = `### 《哥布林杀手TRPG》冒险者登记卡\\n` + `**姓名:** ${finalName} | **种族:** ${character.race} | **性别:** ${character.gender || '?'} | **年龄:** ${formattedAge}\\n` + `**经历:** ${originText} / ${pastText} / ${encounterText}\\n` + `**初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n` + `**初始技能:** ${uniqueSkills.join(', ') || '无'}\\n`; if (character.oc_details) { summary += `**身体特征与补充:** ${character.oc_details}\\n`; } summary += `---\\n**能力值:**\\n`; summary += Object.entries(character.attributes).map(([key, value]) => `- ${key}: ${value}`).join('\\n'); summary += `\\n**持有资金:** ${character.money} 银币`;\n        DOM.summarySheet.value = summary.replace(/### /g, '').replace(/\\*\\*/g, '').replace(/---/g, '\\n────────────────────\\n').replace(/- /g, '  ');\n        DOM.summarySheet.setAttribute('data-raw', summary);\n    }\n    async function renderRadarChartIfNeeded() { const currentAttributesString = JSON.stringify(character.attributes); if (currentAttributesString === character._lastAttributesForChart) return; DOM.radarChart.classList.add('loading'); const radarSyntax = `radar-beta\\ntitle 能力值分布\\naxis a[\"力量 ${character.attributes['力量']}\"]\\naxis b[\"敏捷 ${character.attributes['敏捷']}\"]\\naxis c[\"感知 ${character.attributes['感知']}\"]\\naxis d[\"知识 ${character.attributes['知识']}\"]\\naxis e[\"魅力 ${character.attributes['魅力']}\"]\\naxis f[\"信仰 ${character.attributes['信仰力']}\"]\\naxis g[\"魔力 ${character.attributes['魔力']}\"]\\naxis h[\"潜力 ${character.attributes['潜力']}\"]\\ncurve current[\"能力\"]{${character.attributes['力量']},${character.attributes['敏捷']},${character.attributes['感知']},${character.attributes['知识']},${character.attributes['魅力']},${character.attributes['信仰力']},${character.attributes['魔力']},${character.attributes['潜力']}}\\nmax 10\\nmin 0`; DOM.radarChart.innerHTML = radarSyntax; DOM.radarChart.removeAttribute('data-processed'); try { await mermaid.run({ nodes: [DOM.radarChart] }); character._lastAttributesForChart = currentAttributesString; } catch(e) { console.error(\"Mermaid rendering error:\", e); } finally { DOM.radarChart.classList.remove('loading'); } }\n    async function updateUI(forceFullUpdate = false) { updateCharacterDataFromDOM(); if(forceFullUpdate) { character._lastAttributesForChart = ''; character.skills = []; character.classes = {}; character.money = 100; if(raceData[character.race].skills) character.skills.push(...raceData[character.race].skills); if (character.background.origin) { if (character.background.origin.skills) character.skills.push(...character.background.origin.skills); if (character.background.origin.class) character.classes[character.background.origin.class] = character.background.origin.level; if(character.background.origin.money) character.money += rollDiceString(character.background.origin.money); } if (character.background.past && character.background.past.skills) { character.skills.push(...character.background.past.skills); } } renderAttributes(); renderSkills(); renderSummary(); await renderRadarChartIfNeeded(); validateAndToggleButton(); }\n\n    const masterTl = gsap.timeline({ delay: 0.2 });\n    const title = $('#main-title');\n    title.innerHTML = title.textContent.split('').map(char => `<span class=\"title-char\">${char}</span>`).join('');\n    gsap.set(\".gsap-header-item, .gsap-content-item\", { autoAlpha: 0, y: 20 });\n    masterTl.to(\".title-char\", { autoAlpha: 1, y: 0, duration: 0.7, ease: \"power3.out\", stagger: 0.1 }).to(\"#wax-seal\", { autoAlpha: 1, scale: 1, duration: 0.6, ease: \"elastic.out(1, 0.7)\" }, \"-=0.5\");\n    document.querySelectorAll('.gs-creator-step').forEach((step, index) => { const stepTl = gsap.timeline(); stepTl.to(step.querySelector('.gsap-header-item'), { autoAlpha: 1, y: 0, duration: 0.6, ease: 'power2.out' }).to(step.querySelectorAll('.gsap-content-item'), { autoAlpha: 1, y: 0, duration: 0.5, ease: 'power2.out', stagger: 0.1 }, '-=0.4'); masterTl.add(stepTl, `-=${index === 0 ? 0.2 : 0.7}`); });\n    const pipPositions = { 1: [ { left: '50%', top: '50%' } ], 2: [ { left: '25%', top: '25%' }, { left: '75%', top: '75%' } ], 3: [ { left: '25%', top: '25%' }, { left: '50%', top: '50%' }, { left: '75%', top: '75%' } ], 4: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 5: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '50%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 6: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '50%' }, { left: '75%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ]};\n    function setupCube(cubeEl) { const size = 'calc(var(--dice-size) / 2)'; gsap.set(cubeEl.querySelector('.face-front'),  { transform: `rotateY(0deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-back'),   { transform: `rotateY(180deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-right'),  { transform: `rotateY(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-left'),   { transform: `rotateY(-90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-top'),   { transform: `rotateX(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-bottom'), { transform: `rotateX(-90deg) translateZ(${size})` }); const faces = cubeEl.querySelectorAll('.dice-face'); faces.forEach(face => { const faceNum = face.getAttribute('data-face'); const pips = face.querySelectorAll('.pip'); const positions = pipPositions[faceNum]; if (!pips.length || !positions) return; pips.forEach((pip, index) => { const pos = positions[index]; gsap.set(pip, { left: pos.left, top: pos.top, xPercent: -50, yPercent: -50 }); }); }); }\n    function getRotationForFace(faceValue) { switch (faceValue) { case 1: return { x: 0, y: 0 }; case 6: return { x: 0, y: 180 }; case 3: return { x: 0, y: -90 }; case 4: return { x: 0, y: 90 }; case 2: return { x: -90, y: 0 }; case 5: return { x: 90,  y: 0 }; default: return { x: 0, y: 0 }; } }\n    async function animateText(element, text) { if(isSkipping) {element.innerHTML = text.replace(/\\n/g, '<br>'); return;} return new Promise(resolve => { if (textAnimation && textAnimation.isActive()) textAnimation.kill(); element.innerHTML = ''; textAnimation = gsap.to(element, { duration: text.length * 0.05, text: { value: text.replace(/\\n/g, '<br>'), newClass: \"typed-cursor\" }, ease: \"none\", onComplete: () => { gsap.delayedCall(0.7, () => { element.querySelector('.typed-cursor')?.remove(); resolve(); }); } }); }); }\n    function initDicePool() { const diceTemplate = document.querySelector('[data-id_template=\"dice-cube\"]'); if (!diceTemplate) return; for (let i = 0; i < MAX_DICE; i++) { const dieIconElement = document.createElement('div'); dieIconElement.className = 'dice-icon'; const newCube = diceTemplate.cloneNode(true); dieIconElement.appendChild(newCube); DOM.diceContainer.appendChild(dieIconElement); setupCube(newCube); dicePool.push(dieIconElement); } }\n    async function animateRoll(numDice, preCalculatedRolls, textToShowDuringRoll = \"投掷中...\") { return new Promise(resolve => { if (currentAnimation && currentAnimation.isActive()) currentAnimation.kill(); dicePool.forEach(die => die.style.display = 'none'); const activeDice = dicePool.slice(0, numDice); animateText(DOM.diceResultText, textToShowDuringRoll); activeDice.forEach(die => { die.style.display = 'flex'; die.className = 'dice-icon'; }); const masterTl = gsap.timeline({ onComplete: () => { if(isSkipping) DOM.diceResultText.innerHTML = ''; resolve(preCalculatedRolls); }}); currentAnimation = masterTl; activeDice.forEach((dieElement, i) => { const dieCube = dieElement.querySelector('.dice-cube'); const visualRoll = preCalculatedRolls[i]; const targetRotation = getRotationForFace(visualRoll); const dieTimeline = gsap.timeline(); dieTimeline.to(dieCube, { rotationX: `+=${gsap.utils.random(720, 1080)}`, rotationY: `+=${gsap.utils.random(720, 1080)}`, duration: 1.8, ease: \"power2.in\" }).to(dieCube, { rotationX: targetRotation.x, rotationY: targetRotation.y, duration: 0.7, ease: \"power4.out\" }); masterTl.add(dieTimeline, 0); }); }); }\n    \n    const debouncedUpdate = debounce(updateUI, 400);\n    [DOM.nameInput, DOM.genderInput, DOM.ageInput, DOM.ocDetailsInput].forEach(el => el.addEventListener('input', debouncedUpdate));\n    \n    DOM.skipAnimationBtn.addEventListener('click', () => {\n        isSkipping = true;\n        if (currentAnimation && currentAnimation.isActive()) currentAnimation.progress(1);\n        if (textAnimation && textAnimation.isActive()) textAnimation.progress(1);\n    });\n\n    $('#roll-background-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const rolls = [roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6()];\n        await animateRoll(6, rolls, '投掷 经历... (2d6 x 3)');\n        \n        const sums = { origin: rolls[0] + rolls[1], past: rolls[2] + rolls[3], encounter: rolls[4] + rolls[5] };\n        \n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `出身: ${rolls[0]} + ${rolls[1]} = ${sums.origin}\\n(${backgroundData.origin[character.race][sums.origin].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `来历: ${rolls[2]} + ${rolls[3]} = ${sums.past}\\n(${backgroundData.past[sums.past].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(4, 6), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `邂逅: ${rolls[4]} + ${rolls[5]} = ${sums.encounter}\\n(${backgroundData.encounter[sums.encounter]})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        character.background.origin = backgroundData.origin[character.race][sums.origin];\n        character.background.past = backgroundData.past[sums.past];\n        character.background.encounter = backgroundData.encounter[sums.encounter];\n        DOM.bgOrigin.textContent = character.background.origin.name;\n        DOM.bgPast.textContent = character.background.past.name;\n        DOM.bgEncounter.textContent = character.background.encounter;\n        DOM.backgroundDisplay.style.display = 'block';\n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        updateUI(true);\n    });\n\n    $('#roll-attributes-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const attrRolls = raceData[character.race].attr_rolls;\n        const allCalculatedRolls = [];\n\n        // Prepare race-based attributes\n        for (const attr in attrRolls) {\n            const formula = attrRolls[attr];\n            const modifier = parseInt(formula.split('d3')[1] || '0');\n            const { d6, d3 } = roll1D3();\n            const finalValue = Math.max(0, d3 + modifier);\n            character.attributes[attr] = finalValue;\n            allCalculatedRolls.push({ attr, formula, d6, d3, modifier, finalValue });\n        }\n        \n        // Prepare \"Potential\" attribute\n        const potentialValue = Math.floor(Math.random() * 3) + 1;\n        const d6ForPotential = (potentialValue * 2) - 1; // Map 1,2,3 to d6 faces 1,3,5 for animation\n        character.attributes['潜力'] = potentialValue;\n        allCalculatedRolls.push({\n            attr: '潜力',\n            formula: '1-3', // Just a descriptor\n            d6: d6ForPotential,\n            finalValue: potentialValue\n        });\n        \n        // Animate all rolls sequentially\n        for (const roll of allCalculatedRolls) {\n            await animateRoll(1, [roll.d6], `投掷 ${roll.attr}...`);\n            if (isSkipping) break;\n\n            gsap.to(dicePool[0], { className: 'dice-icon highlight', duration: 0.3 });\n            \n            let resultText;\n            if (roll.attr === '潜力') {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.finalValue}`;\n            } else {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.d3} ${roll.modifier >= 0 ? '+' : ''} ${roll.modifier} = ${roll.finalValue}`;\n            }\n            await animateText(DOM.diceResultText, resultText);\n            \n            await updateUI();\n            \n            if (isSkipping) break;\n            \n            await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        await updateUI();\n    });\n\n    DOM.raceSelect.addEventListener('change', () => {\n        DOM.backgroundDisplay.style.display = 'none';\n        character.background = { origin: null, past: null, encounter: null };\n        Object.keys(character.attributes).forEach(k => character.attributes[k] = 0);\n        updateUI(true);\n    });\n\n    $('#submit-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        await updateUI(true);\n        \n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '未设定';\n        \n        const finalCharacterObject={ NAME:finalName, GENDER:character.gender||'未设定', AGE:formattedAge, RACE:character.race, ORIGIN: character.background.origin ? character.background.origin.name : '未知', PAST: character.background.past ? character.background.past.name : '未知', ENCOUNTER: character.background.encounter || '未知', SKILLS: uniqueSkills, OC_DETAILS:character.oc_details||'无', ...character.attributes, MONEY:character.money };\n        \n        const slashCommand=`/send <START>\\nAdmin:\\n这是一个TRPG开局，请为 User 生成一段详尽的背景故事。\\n\\n# 故事核心要求\\n请严格根据以下【角色完整设定】，撰写一段从角色童年到现在的成长故事。故事需要清晰地阐述是什么关键事件或心路历程，最终让他/她确立了要成为一名冒险者的志向。请在故事中自然地融入角色的种族、出身背景、技能和性格特点。\\n\\n# 角色完整设定\\n---\\n## 基础信息\\n- **姓名:** ${finalName}\\n- **性别:** ${character.gender||'未设定'}\\n- **年龄:** ${formattedAge}\\n- **种族:** ${character.race}\\n\\n## 经历\\n- **出身:** ${character.background.origin ? character.background.origin.name : '未知'}\\n- **来历:** ${character.background.past ? character.background.past.name : '未知'}\\n- **邂逅:** ${character.background.encounter || '未知'}\\n\\n## 背景与技能\\n- **初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n- **初始技能:** ${uniqueSkills.join(', ')||'无'}\\n\\n## 补充设定 (OC)\\n- **额外补充:** ${character.oc_details||'无'}\\n\\n## 能力值\\n- **力量:** ${character.attributes['力量']}\\n- **敏捷:** ${character.attributes['敏捷']}\\n- **感知:** ${character.attributes['感知']}\\n- **知识:** ${character.attributes['知识']}\\n- **魅力:** ${character.attributes['魅力']}\\n- **信仰力:** ${character.attributes['信仰力']}\\n- **魔力:** ${character.attributes['魔力']}\\n\\n## 初始资产\\n- **资金:** ${character.money} 银币\\n\\|\\n/trigger`; \n        \n        try {\n            if (typeof insertOrAssignVariables === 'function') {\n                await insertOrAssignVariables(finalCharacterObject);\n            } else {\n                console.log(\"SillyTavern Function 'insertOrAssignVariables' not found. Variables:\", finalCharacterObject);\n            }\n            if (typeof triggerSlash === 'function') {\n                await triggerSlash(slashCommand, 'Send');\n            } else { \n                console.log(\"SillyTavern Function 'triggerSlash' not found. Command will be copied to clipboard.\");\n                navigator.clipboard.writeText(slashCommand).then(() => {\n                    alert('角色指令已复制到剪贴板！');\n                });\n            }\n        } catch (error) {\n            console.error('与SillyTavern交互失败:', error);\n            alert('与SillyTavern交互失败，请查看浏览器控制台。');\n        }\n\n        e.target.innerHTML = \"契约成立！\";\n    });\n    \n    initDicePool();\n    Object.keys(raceData).forEach(key => DOM.raceSelect.add(new Option(key, key)));\n    Object.keys(character.attributes).forEach(key => {\n        const pointControl = document.createElement('div');\n        pointControl.className = 'point-control';\n        pointControl.innerHTML = `<span class=\"label\">${key}</span><input type=\"text\" id=\"attr-${key.replace(/\\s/g, '')}\" readonly value=\"0\">`; // ID santized just in case\n        DOM.attributesContainer.appendChild(pointControl);\n    });\n    // A small fix for renderAttributes to handle sanitized IDs\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key.replace(/\\s/g, '')}`).value = value; }); }\n    updateUI(true);\n});\n</script>\n\n</body>\n</html>\n```"
  },
  {
    "role": "user",
    "content": "```\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>哥布林杀手TRPG - 冒险者契约</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/gsap.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/TextPlugin.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.min.js\" defer></script>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Noto+Serif+SC:wght@400;700&family=Vollkorn:wght@400;700&family=Courier+Prime&display=swap\" rel=\"stylesheet\">\n\n    <style>\n        :root {\n            --leather-bg: #5a3a2a;\n            --dark-leather-bg: #3b2a1a;\n            --parchment-bg: #f5f5dc;\n            --parchment-bg-gradient: linear-gradient(165deg, #f7e9d7, #e6d5c3);\n            --text-color: #3d3d3d;\n            --heading-color: #4a3c2c;\n            --border-color: #7a5a4a;\n            --font-main: 'Vollkorn', 'Noto Serif SC', serif;\n            --font-display: 'Cinzel', 'Noto Serif SC', serif;\n            --font-code: 'Courier Prime', 'Courier New', monospace;\n            --dice-size: 5rem; \n        }\n\n        html { height: 100%; }\n        body {\n            background-color: #3a2e20;\n            font-family: var(--font-main);\n            color: var(--text-color);\n            margin: 0; padding: 20px;\n            box-sizing: border-box;\n            display: flex;\n            align-items: center; justify-content: center;\n            min-height: 100%;\n        }\n        *, *:before, *:after { box-sizing: inherit; }\n\n        .creator-wrapper {\n            width: 100%; max-width: 900px;\n            margin: 0;\n            background: var(--parchment-bg-gradient);\n            border: 12px solid #8b7355;\n            border-radius: 8px;\n            box-shadow: 0 0 40px rgba(139, 115, 85, 0.3), inset 0 0 30px rgba(255, 255, 255, 0.4);\n            position: relative;\n            overflow: hidden;\n            padding: 25px;\n            display: flex; flex-direction: column;\n            max-height: 95vh;\n        }\n\n        .border-flow, .inner-border { position: absolute; pointer-events: none; }\n        .border-flow { top: 0; left: 0; right: 0; bottom: 0; background: linear-gradient(90deg, rgba(139,115,85,0.1) 1px, transparent 1px), linear-gradient(0deg, rgba(139,115,85,0.1) 1px, transparent 1px); background-size: 20px 20px; animation: borderFlow 15s linear infinite; }\n        .inner-border { top: 5px; left: 5px; right: 5px; bottom: 5px; border: 3px solid rgba(139,115,85,0.3); border-radius: 5px; }\n        @keyframes borderFlow { from { background-position: 0 0; } to { background-position: 20px 20px; } }\n\n        .creator-header {\n            text-align: center;\n            padding: 10px;\n            margin-bottom: 25px;\n            border-bottom: 2px solid rgba(139, 115, 85, 0.3);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 15px;\n        }\n        .creator-header h1 {\n            font-family: var(--font-display);\n            font-size: clamp(24px, 5vw, 32px);\n            margin: 0;\n            font-weight: 700;\n            letter-spacing: 3px;\n            color: var(--heading-color);\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.1);\n        }\n        \n        .title-char {\n            display: inline-block;\n            opacity: 0;\n            transform: translateY(30px);\n        }\n\n        .wax-seal {\n            width: 45px;\n            height: 45px;\n            display: inline-block;\n            background-color: #c0392b;\n            border-radius: 50%;\n            position: relative;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.4), inset 0 -2px 3px rgba(0,0,0,0.3);\n            opacity: 0;\n            transform: scale(0.5);\n            font-family: 'Cinzel', serif;\n            color: #e7a49c;\n            text-align: center;\n            font-size: 24px;\n            line-height: 45px;\n            font-weight: 700;\n        }\n        .wax-seal::before {\n            content: 'GS';\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.3);\n        }\n\n        .creator-scroll-content { overflow-y: auto; padding: 10px 20px 10px 10px; }\n        .creator-scroll-content::-webkit-scrollbar { width: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-track { background: rgba(139, 115, 85, 0.1); border-radius: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-thumb { background-color: #a89072; border-radius: 10px; border: 2px solid #f7e9d7; }\n        \n        .gs-creator-step { margin-bottom: 40px; overflow: hidden; }\n        .gs-creator-step h3 { font-family: var(--font-display); font-size: 1.5em; font-weight: 700; border-bottom: 1.5px solid var(--border-color); padding-bottom: 8px; margin-bottom: 20px; color: var(--heading-color); text-align: left; }\n        \n        .layout-grid { display: grid; grid-template-columns: 1fr; gap: 25px; align-items: flex-start; }\n        @media (min-width: 768px) {\n            .layout-grid { grid-template-columns: 1fr 280px; }\n        }\n\n        .form-container { text-align: left; }\n        .gs-form-group { margin-bottom: 16px; }\n        .gs-form-group label { display: block; margin-bottom: 6px; font-weight: bold; color: var(--heading-color); }\n        .form-input, .form-select, .form-textarea { width: 100%; padding: 10px; background-color: rgba(255, 255, 255, 0.5); border: 1px solid #a58e72; border-radius: 4px; color: #3d3d3d; font-family: var(--font-main); font-size: 1em; transition: all 0.2s ease-in-out; box-shadow: inset 1px 1px 2px rgba(0,0,0,0.1); }\n        .form-input:focus, .form-select:focus, .form-textarea:focus { outline: none; border-color: #8b7355; background-color: #fff; box-shadow: 0 0 5px rgba(139, 115, 85, 0.5); }\n        .form-textarea { resize: vertical; min-height: 100px; }\n\n        .grid-cols-2 {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 16px;\n        }\n        @media (min-width: 480px) {\n            .grid-cols-2 {\n                grid-template-columns: repeat(2, 1fr);\n            }\n        }\n\n        #attributes-container .point-control { display: flex; align-items: center; justify-content: space-between; margin-bottom: 8px; padding: 6px 8px; background: rgba(0,0,0,0.03); border-left: 3px solid rgba(139,115,85,0.2); border-radius: 4px; }\n        #attributes-container .label { font-weight: bold; color: var(--heading-color); }\n        #attributes-container input[readonly] { width: 40px; text-align: center; font-weight: bold; font-size: 1.2em; font-family: var(--font-display); color: #a02c2c; border: none; background-color: transparent; box-shadow: none; padding: 0; }\n        \n        .attributes-grid {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 0 16px;\n        }\n        @media (min-width: 480px) {\n            .attributes-grid {\n                grid-template-columns: 1fr 1fr;\n            }\n        }\n        \n        .skills-display p { background-color: rgba(0,0,0,0.05); border-left: 3px solid var(--border-color); padding: 10px 15px; margin-top: 10px; font-size: 0.95em; border-radius: 0 4px 4px 0; }\n        .skills-display strong { color: #8b5b4b; font-family: var(--font-display); }\n        .skills-display ul { list-style: none; padding-left: 0; margin-top: 8px; font-size: 0.9em; }\n        .skills-display li { margin-bottom: 4px; }\n\n        #character-summary { background-color: #e9e4d9; font-family: var(--font-code); line-height: 1.6; height: 250px; color: #2c2a2a; }\n        \n        .gs-button { width: 100%; background-color: #8b7355; color: var(--parchment-bg); border: 2px solid var(--dark-leather-bg); border-radius: 5px; padding: 12px 20px; font-family: var(--font-display); font-size: 1.2em; font-weight: 700; cursor: pointer; margin-top: 10px; transition: all 0.3s ease; box-shadow: 0 3px 5px rgba(0,0,0,0.3); }\n        .gs-button:hover { background-color: #a0886c; transform: translateY(-2px); box-shadow: 0 5px 8px rgba(0,0,0,0.3); }\n        .gs-button:disabled { background-color: #9e9e9e; border-color: #757575; cursor: not-allowed; transform: none; box-shadow: none; opacity: 0.6; }\n        .action-button { background-color: #6d5b4b; font-size: 1em; padding: 10px 15px; margin-top: 0; margin-bottom: 10px; width: auto; }\n        \n        .background-display { margin-top: 15px; padding: 15px; border: 1px dashed var(--border-color); border-radius: 5px; background: rgba(0,0,0,0.02); }\n        .background-display p { margin: 0 0 8px; }\n        .background-display span { font-weight: bold; color: var(--heading-color); }\n        \n        #radar-chart-container { \n            max-width: 100%;\n        }\n        @media (min-width: 768px) {\n            #radar-chart-container {\n                position: sticky;\n                top: 0;\n                padding-top: 45px;\n            }\n        }\n\n        pre.mermaid { \n            font-family: var(--font-main); \n            background: rgba(0,0,0,0.02); \n            border: 1px solid rgba(139,115,85,0.1); \n            padding: 10px; \n            border-radius: 5px; \n            overflow: auto;\n            transition: opacity 0.3s ease-in-out;\n        }\n        pre.mermaid.loading { opacity: 0.5; pointer-events: none; }\n\n        pre.mermaid > svg {\n            max-width: 100%;\n            height: auto;\n        }\n\n        #dice-overlay {\n            position: fixed; top: 0; left: 0; width: 100%; height: 100%;\n            background: rgba(0,0,0,0.8); backdrop-filter: blur(5px);\n            display: none; align-items: center; justify-content: center; flex-direction: column;\n            z-index: 100;\n            color: #fff; text-shadow: 0 0 10px #000;\n        }\n\n        .dice-container {\n            display: flex; flex-wrap: wrap; justify-content: center;\n            gap: 2rem; margin-bottom: 2rem;\n            max-width: 600px;\n        }\n        \n        .dice-icon {\n            width: var(--dice-size); height: var(--dice-size);\n            perspective: 800px;\n            transform-style: preserve-3d;\n            display: none;\n        }\n        .dice-icon.highlight {\n            transform: scale(1.15);\n            filter: drop-shadow(0 0 15px #FFEB3B);\n            transition: transform 0.3s ease, filter 0.3s ease;\n        }\n\n        .dice-cube {\n            width: 100%; height: 100%;\n            position: relative;\n            transform-style: preserve-3d;\n            transform: translateZ(calc(var(--dice-size) / -2));\n        }\n        \n        .dice-face {\n            position: absolute;\n            width: var(--dice-size); height: var(--dice-size);\n            background-color: rgba(255, 255, 255, 0.98);\n            border: 1.5px solid #857e72;\n            border-radius: 12%;\n        }\n\n        .pips-container {\n            width: 100%; height: 100%;\n            position: relative; \n        }\n        .pip {\n            width: 22%; height: 22%; \n            background-color: #3d352e;\n            border-radius: 50%;\n            box-shadow: inset 0 1px 3px rgba(0,0,0,0.5);\n            position: absolute; \n        }\n        \n        #dice-result-text { \n            font-family: var(--font-display); \n            font-size: 2.2em;\n            color: #FFEB3B; \n            text-shadow: 0 0 12px #FFEB3B; \n            min-height: 2em;\n            line-height: 1.2;\n            text-align: center; \n        }\n        \n        #skip-animation-btn {\n            position: absolute;\n            bottom: 30px;\n            font-size: 1em;\n            padding: 8px 20px;\n            width: auto;\n            background-color: rgba(0,0,0,0.3);\n            border-color: rgba(255,255,255,0.5);\n            color: rgba(255,255,255,0.8);\n        }\n        #skip-animation-btn:hover {\n            background-color: rgba(0,0,0,0.5);\n            color: #fff;\n        }\n\n        .typed-cursor {\n            opacity: 1;\n            animation: typed-blink 0.7s infinite;\n        }\n        @keyframes typed-blink{\n            0% { opacity: 1; }\n            50% { opacity: 0; }\n            100% { opacity: 1; }\n        }\n        \n        .validation-message {\n            text-align: center;\n            color: #b71c1c;\n            font-size: 0.9em;\n            font-weight: bold;\n            margin-top: -5px;\n            margin-bottom: 10px;\n            height: 1.2em;\n            opacity: 0;\n            will-change: transform, opacity;\n        }\n\n        #credits-screen {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            pointer-events: none;\n            opacity: 0;\n        }\n\n        #credits-screen p {\n            font-family: var(--font-display);\n            font-size: 2em;\n            color: #f5f5dc;\n            text-shadow: 0 0 8px rgba(245, 245, 220, 0.7);\n        }\n    </style>\n</head>\n<body>\n\n<div class=\"creator-wrapper\">\n    <div class=\"border-flow\"></div>\n    <div class=\"inner-border\"></div>\n    <header class=\"creator-header\">\n        <h1 id=\"main-title\">冒险者契约登记</h1>\n        <div id=\"wax-seal\" class=\"wax-seal\"></div>\n    </header>\n\n    <div class=\"creator-scroll-content\">\n        <div class=\"gs-creator-container\">\n            <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第一步：身份确认</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-name-input\">姓名</label><input id=\"char-name-input\" type=\"text\" placeholder=\"可留空，默认为 {{user}}\" class=\"form-input\"></div>\n                    <div class=\"grid-cols-2 gsap-content-item\">\n                        <div class=\"gs-form-group\"><label for=\"char-gender-input\">性别</label><input id=\"char-gender-input\" type=\"text\" placeholder=\"例如: 男性/女性/双性/无性/……\" class=\"form-input\"></div>\n                        <div class=\"gs-form-group\"><label for=\"char-age-input\">年龄</label><input id=\"char-age-input\" type=\"number\" placeholder=\"可参照种族说明\" class=\"form-input\"></div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-race-select\">种族</label><select id=\"char-race-select\" class=\"form-select\"></select></div>\n                    <div class=\"gs-form-group gsap-content-item\">\n                        <label>经历 (出身/来历/邂逅)</label>\n                        <button id=\"roll-background-btn\" class=\"gs-button action-button\">🎲 投骰决定经历</button>\n                        <div id=\"background-display\" class=\"background-display\" style=\"display: none;\">\n                            <p>出身: <span id=\"bg-origin\"></span></p>\n                            <p>来历: <span id=\"bg-past\"></span></p>\n                            <p>邂逅: <span id=\"bg-encounter\"></span></p>\n                        </div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"oc-details-input\">身体特征与补充</label><textarea id=\"oc-details-input\" placeholder=\"发色、瞳色、体型、性格、背景故事构思...\" class=\"form-textarea\"></textarea></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第二步：能力值与技能</h3>\n                <div class=\"layout-grid\">\n                    <div class=\"form-container gsap-content-item\">\n                        <button id=\"roll-attributes-btn\" class=\"gs-button action-button\">🎲 投骰决定能力值</button>\n                        <div id=\"attributes-container\" class=\"attributes-grid\"></div>\n                        <div id=\"skills-and-desc-container\" class=\"skills-display\"></div>\n                    </div>\n                    <div id=\"radar-chart-container\" class=\"gsap-content-item\"><pre class=\"mermaid\" id=\"radar-chart\"></pre></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第三步：完成登记</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"character-summary\">角色卡预览</label><textarea id=\"character-summary\" rows=\"12\" readonly class=\"form-textarea\"></textarea></div>\n                    <button id=\"submit-btn\" class=\"gs-button gsap-content-item\" disabled>确认登记，开始冒险</button>\n                    <div id=\"validation-message\" class=\"validation-message\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div id=\"credits-screen\">\n    <p>作者 𝙀𝙡𝙖𝙞𝙣𝙖𝙙𝙚𝙨</p>\n</div>\n\n<div id=\"dice-overlay\">\n    <div class=\"dice-container\" id=\"dice-container\"></div>\n    <div id=\"dice-result-text\"></div>\n    <button id=\"skip-animation-btn\" class=\"gs-button\">跳过动画</button>\n</div>\n\n<div id=\"dice-templates\" style=\"display:none;\">\n    <div class=\"dice-cube\" data-id_template=\"dice-cube\">\n        <div class=\"dice-face face-front\" data-face=\"1\"><div class=\"pips-container\"><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-back\" data-face=\"6\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-right\" data-face=\"3\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-left\" data-face=\"4\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-top\" data-face=\"2\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-bottom\" data-face=\"5\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n    </div>\n</div>\n\n<script>\n// --- MODIFIED DATA ---\nconst raceData = {\n    '凡人': { attr_rolls: { '力量': '1d3+1', '敏捷': '1d3', '感知': '1d3', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3+2', '魔力': '1d3' }, skills: ['过载行动(初级)', '武器:投掷武器(初级)', '长距离移动(初级)']},\n    '矿人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3', '感知': '1d3+2', '知识': '1d3-1', '魅力': '1d3+1', '信仰力': '1d3+1', '魔力': '1d3-1' }, skills: ['治愈适性(初级)', '夜视(初级)', '锻造(初级)']},\n    '森人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+1', '感知': '1d3+1', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3-1', '魔力': '1d3+1' }, skills: ['武器:弩弓(初级)', '夜视(初级)', '精灵宠儿(初级)']},\n    '蜥蜴人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3+1', '感知': '1d3', '知识': '1d3', '魅力': '1d3+1', '信仰力': '1d3', '魔力': '1d3' }, skills: ['免疫强化(初级)', '夜视(初级)', '龙族血统(初级)']},\n    '圃人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+2', '感知': '1d3+1', '知识': '1d3', '魅力': '1d3-1', '信仰力': '1d3', '魔力': '1d3+2' }, skills: ['隐匿(初级)', '先发制人(初级)', '烹饪(初级)']}\n};\nconst backgroundData = {\n    origin: { \n        '凡人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '学者', class: '魔术师', level: 1, skills: ['文献调查(初级)'] }, 6: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 7: { name: '农民', skills: ['生产业:农业(初级)', '强健(初级)'] }, 8: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '骑士', class: '战士', level: 1, skills: ['骑乘(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n        '矿人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 6: { name: '酒馆老板', class: '战士', level: 1, skills: ['观察(初级)'] }, 7: { name: '铁匠', skills: ['工匠:锻造(初级)', '手工(初级)'] }, 8: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '碎盾者', class: '战士', level: 1, skills: ['强击攻击·斩(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n    },\n    past: { 2: { name: '奴隶', skills: ['劳动(初级)'] }, 3: { name: '牢狱', skills: ['犯罪知识(初级)'] }, 4: { name: '战场', skills: ['沉着冷静(初级)'] }, 5: { name: '神殿', skills: ['神学(初级)'] }, 6: { name: '孤儿', skills: ['忍耐(初级)'] }, 7: { name: '平顺', skills: ['幸运(初级)'] }, 8: { name: '贫困', skills: ['生存术(初级)'] }, 9: { name: '学校', skills: ['博识(初级)'] }, 10: { name: '深闺', skills: ['无偏见(初级)'] }, 11: { name: '奢华', skills: ['鉴定(初级)'] }, 12: { name: '宫廷', skills: ['礼仪(初级)'] }},\n    encounter: { 2: '宿敌', 3: '上司', 4: '后辈', 5: '交易对象', 6: '下属', 7: '家人', 8: '挚友', 9: '前辈', 10: '未婚夫/妻', 11: '劲敌', 12: '师父' }\n};\nbackgroundData.origin['森人'] = backgroundData.origin['凡人']; backgroundData.origin['蜥蜴人'] = backgroundData.origin['凡人']; backgroundData.origin['圃人'] = backgroundData.origin['凡人'];\nconst character = {\n    name: '', gender: '', age: '', oc_details: '', race: '凡人',\n    background: { origin: null, past: null, encounter: null },\n    attributes: { '力量': 0, '敏捷': 0, '感知': 0, '知识': 0, '魅力': 0, '信仰力': 0, '魔力': 0, '潜力': 0 },\n    skills: [], classes: {}, money: 0, _lastAttributesForChart: '',\n};\n// --- END MODIFIED DATA ---\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    gsap.registerPlugin(TextPlugin);\n    mermaid.initialize({ startOnLoad: true, theme: 'base', themeVariables: {\n        '--mermaid-font-family': \"'Vollkorn', 'Noto Serif SC', serif\",\n        primaryColor: '#f7e9d7', primaryTextColor: '#3d3d3d', lineColor: '#8b7355', textColor: '#4a3c2c',\n    }});\n    \n    const $ = (s) => document.querySelector(s);\n    const roll1D6 = () => Math.floor(Math.random() * 6) + 1;\n    const roll1D3 = () => {\n        const d6 = roll1D6();\n        if (d6 <= 2) return { d6, d3: 1 };\n        if (d6 <= 4) return { d6, d3: 2 };\n        return { d6, d3: 3 };\n    };\n    const rollDiceString = (diceString) => { const p=diceString.split('*');const d=p[0];const m=parseInt(p[1])||1;if(!d.includes('d'))return 0;const[n,s]=d.split('d').map(Number);let t=0;for(let i=0;i<n;i++){t+=Math.floor(Math.random()*s)+1;}return t*m; };\n    const formatAge = (ageValue) => { if (!ageValue && ageValue !== 0) return ageValue; const num = Number(ageValue); if (isNaN(num)) return ageValue; if (Math.abs(num) >= 1_000_000) return num.toExponential(2); return ageValue; };\n    const debounce = (func, delay) => { let timeout; return function(...args) { clearTimeout(timeout); timeout = setTimeout(() => func.apply(this, args), delay); }; };\n    const diceUnicode = ['\\u2680', '\\u2681', '\\u2682', '\\u2683', '\\u2684', '\\u2685'];\n\n    const DOM = {\n        nameInput: $('#char-name-input'), genderInput: $('#char-gender-input'), ageInput: $('#char-age-input'),\n        ocDetailsInput: $('#oc-details-input'), raceSelect: $('#char-race-select'), attributesContainer: $('#attributes-container'),\n        skillsContainer: $('#skills-and-desc-container'), radarChart: $('#radar-chart'), summarySheet: $('#character-summary'),\n        diceOverlay: $('#dice-overlay'), diceContainer: $('#dice-container'), diceResultText: $('#dice-result-text'),\n        backgroundDisplay: $('#background-display'), bgOrigin: $('#bg-origin'), bgPast: $('#bg-past'), bgEncounter: $('#bg-encounter'),\n        skipAnimationBtn: $('#skip-animation-btn'),\n        submitBtn: $('#submit-btn'),\n        validationMessage: $('#validation-message'),\n    };\n    \n    const dicePool = []; const MAX_DICE = 6;\n    let currentAnimation = null; let textAnimation = null; let isSkipping = false;\n    let currentValidationMessage = '';\n    \n    function validateAndToggleButton() {\n        let newMessage = '';\n        if (!character.age || String(character.age).trim() === '') {\n            newMessage = '请填写您的冒险者年龄。';\n        } else if (!character.gender || !character.gender.trim()) {\n            newMessage = '请设定冒险者的性别。';\n        } else if (!character.background.origin) {\n            newMessage = '请投骰决定您的冒险者经历。';\n        } else if (Object.values(character.attributes).every(val => val === 0)) {\n            newMessage = '请投骰决定您的能力值。';\n        }\n\n        if (newMessage === currentValidationMessage) return;\n        currentValidationMessage = newMessage;\n\n        if (newMessage) {\n            DOM.submitBtn.disabled = true;\n            DOM.validationMessage.textContent = newMessage;\n            gsap.fromTo(DOM.validationMessage, { autoAlpha: 0, scale: 0.8 }, { autoAlpha: 1, scale: 1, duration: 0.4, ease: 'elastic.out(1, 0.75)' });\n        } else {\n            DOM.submitBtn.disabled = false;\n            gsap.to(DOM.validationMessage, { autoAlpha: 0, duration: 0.3 });\n        }\n    }\n    function updateCharacterDataFromDOM() { character.name = DOM.nameInput.value; character.gender = DOM.genderInput.value; character.age = DOM.ageInput.value; character.oc_details = DOM.ocDetailsInput.value; character.race = DOM.raceSelect.value; }\n    function renderSkills() { const uniqueSkills = [...new Set(character.skills)]; DOM.skillsContainer.innerHTML = `<p><strong>天赋与习得技能:</strong></p><ul>${uniqueSkills.map(s => `<li>- ${s}</li>`).join('')}</ul>`; }\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key}`).value = value; }); }\n    function renderSummary() {\n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '?';\n        const originText = `出身:${character.background.origin ? character.background.origin.name : '?'}`;\n        const pastText = `来历:${character.background.past ? character.background.past.name : '?'}`;\n        const encounterText = `邂逅:${character.background.encounter || '?'}`;\n        let summary = `### 《哥布林杀手TRPG》冒险者登记卡\\n` + `**姓名:** ${finalName} | **种族:** ${character.race} | **性别:** ${character.gender || '?'} | **年龄:** ${formattedAge}\\n` + `**经历:** ${originText} / ${pastText} / ${encounterText}\\n` + `**初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n` + `**初始技能:** ${uniqueSkills.join(', ') || '无'}\\n`; if (character.oc_details) { summary += `**身体特征与补充:** ${character.oc_details}\\n`; } summary += `---\\n**能力值:**\\n`; summary += Object.entries(character.attributes).map(([key, value]) => `- ${key}: ${value}`).join('\\n'); summary += `\\n**持有资金:** ${character.money} 银币`;\n        DOM.summarySheet.value = summary.replace(/### /g, '').replace(/\\*\\*/g, '').replace(/---/g, '\\n────────────────────\\n').replace(/- /g, '  ');\n        DOM.summarySheet.setAttribute('data-raw', summary);\n    }\n    async function renderRadarChartIfNeeded() { const currentAttributesString = JSON.stringify(character.attributes); if (currentAttributesString === character._lastAttributesForChart) return; DOM.radarChart.classList.add('loading'); const radarSyntax = `radar-beta\\ntitle 能力值分布\\naxis a[\"力量 ${character.attributes['力量']}\"]\\naxis b[\"敏捷 ${character.attributes['敏捷']}\"]\\naxis c[\"感知 ${character.attributes['感知']}\"]\\naxis d[\"知识 ${character.attributes['知识']}\"]\\naxis e[\"魅力 ${character.attributes['魅力']}\"]\\naxis f[\"信仰 ${character.attributes['信仰力']}\"]\\naxis g[\"魔力 ${character.attributes['魔力']}\"]\\naxis h[\"潜力 ${character.attributes['潜力']}\"]\\ncurve current[\"能力\"]{${character.attributes['力量']},${character.attributes['敏捷']},${character.attributes['感知']},${character.attributes['知识']},${character.attributes['魅力']},${character.attributes['信仰力']},${character.attributes['魔力']},${character.attributes['潜力']}}\\nmax 10\\nmin 0`; DOM.radarChart.innerHTML = radarSyntax; DOM.radarChart.removeAttribute('data-processed'); try { await mermaid.run({ nodes: [DOM.radarChart] }); character._lastAttributesForChart = currentAttributesString; } catch(e) { console.error(\"Mermaid rendering error:\", e); } finally { DOM.radarChart.classList.remove('loading'); } }\n    async function updateUI(forceFullUpdate = false) { updateCharacterDataFromDOM(); if(forceFullUpdate) { character._lastAttributesForChart = ''; character.skills = []; character.classes = {}; character.money = 100; if(raceData[character.race].skills) character.skills.push(...raceData[character.race].skills); if (character.background.origin) { if (character.background.origin.skills) character.skills.push(...character.background.origin.skills); if (character.background.origin.class) character.classes[character.background.origin.class] = character.background.origin.level; if(character.background.origin.money) character.money += rollDiceString(character.background.origin.money); } if (character.background.past && character.background.past.skills) { character.skills.push(...character.background.past.skills); } } renderAttributes(); renderSkills(); renderSummary(); await renderRadarChartIfNeeded(); validateAndToggleButton(); }\n\n    const masterTl = gsap.timeline({ delay: 0.2 });\n    const title = $('#main-title');\n    title.innerHTML = title.textContent.split('').map(char => `<span class=\"title-char\">${char}</span>`).join('');\n    gsap.set(\".gsap-header-item, .gsap-content-item\", { autoAlpha: 0, y: 20 });\n    masterTl.to(\".title-char\", { autoAlpha: 1, y: 0, duration: 0.7, ease: \"power3.out\", stagger: 0.1 }).to(\"#wax-seal\", { autoAlpha: 1, scale: 1, duration: 0.6, ease: \"elastic.out(1, 0.7)\" }, \"-=0.5\");\n    document.querySelectorAll('.gs-creator-step').forEach((step, index) => { const stepTl = gsap.timeline(); stepTl.to(step.querySelector('.gsap-header-item'), { autoAlpha: 1, y: 0, duration: 0.6, ease: 'power2.out' }).to(step.querySelectorAll('.gsap-content-item'), { autoAlpha: 1, y: 0, duration: 0.5, ease: 'power2.out', stagger: 0.1 }, '-=0.4'); masterTl.add(stepTl, `-=${index === 0 ? 0.2 : 0.7}`); });\n    const pipPositions = { 1: [ { left: '50%', top: '50%' } ], 2: [ { left: '25%', top: '25%' }, { left: '75%', top: '75%' } ], 3: [ { left: '25%', top: '25%' }, { left: '50%', top: '50%' }, { left: '75%', top: '75%' } ], 4: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 5: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '50%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 6: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '50%' }, { left: '75%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ]};\n    function setupCube(cubeEl) { const size = 'calc(var(--dice-size) / 2)'; gsap.set(cubeEl.querySelector('.face-front'),  { transform: `rotateY(0deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-back'),   { transform: `rotateY(180deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-right'),  { transform: `rotateY(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-left'),   { transform: `rotateY(-90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-top'),   { transform: `rotateX(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-bottom'), { transform: `rotateX(-90deg) translateZ(${size})` }); const faces = cubeEl.querySelectorAll('.dice-face'); faces.forEach(face => { const faceNum = face.getAttribute('data-face'); const pips = face.querySelectorAll('.pip'); const positions = pipPositions[faceNum]; if (!pips.length || !positions) return; pips.forEach((pip, index) => { const pos = positions[index]; gsap.set(pip, { left: pos.left, top: pos.top, xPercent: -50, yPercent: -50 }); }); }); }\n    function getRotationForFace(faceValue) { switch (faceValue) { case 1: return { x: 0, y: 0 }; case 6: return { x: 0, y: 180 }; case 3: return { x: 0, y: -90 }; case 4: return { x: 0, y: 90 }; case 2: return { x: -90, y: 0 }; case 5: return { x: 90,  y: 0 }; default: return { x: 0, y: 0 }; } }\n    async function animateText(element, text) { if(isSkipping) {element.innerHTML = text.replace(/\\n/g, '<br>'); return;} return new Promise(resolve => { if (textAnimation && textAnimation.isActive()) textAnimation.kill(); element.innerHTML = ''; textAnimation = gsap.to(element, { duration: text.length * 0.05, text: { value: text.replace(/\\n/g, '<br>'), newClass: \"typed-cursor\" }, ease: \"none\", onComplete: () => { gsap.delayedCall(0.7, () => { element.querySelector('.typed-cursor')?.remove(); resolve(); }); } }); }); }\n    function initDicePool() { const diceTemplate = document.querySelector('[data-id_template=\"dice-cube\"]'); if (!diceTemplate) return; for (let i = 0; i < MAX_DICE; i++) { const dieIconElement = document.createElement('div'); dieIconElement.className = 'dice-icon'; const newCube = diceTemplate.cloneNode(true); dieIconElement.appendChild(newCube); DOM.diceContainer.appendChild(dieIconElement); setupCube(newCube); dicePool.push(dieIconElement); } }\n    async function animateRoll(numDice, preCalculatedRolls, textToShowDuringRoll = \"投掷中...\") { return new Promise(resolve => { if (currentAnimation && currentAnimation.isActive()) currentAnimation.kill(); dicePool.forEach(die => die.style.display = 'none'); const activeDice = dicePool.slice(0, numDice); animateText(DOM.diceResultText, textToShowDuringRoll); activeDice.forEach(die => { die.style.display = 'flex'; die.className = 'dice-icon'; }); const masterTl = gsap.timeline({ onComplete: () => { if(isSkipping) DOM.diceResultText.innerHTML = ''; resolve(preCalculatedRolls); }}); currentAnimation = masterTl; activeDice.forEach((dieElement, i) => { const dieCube = dieElement.querySelector('.dice-cube'); const visualRoll = preCalculatedRolls[i]; const targetRotation = getRotationForFace(visualRoll); const dieTimeline = gsap.timeline(); dieTimeline.to(dieCube, { rotationX: `+=${gsap.utils.random(720, 1080)}`, rotationY: `+=${gsap.utils.random(720, 1080)}`, duration: 1.8, ease: \"power2.in\" }).to(dieCube, { rotationX: targetRotation.x, rotationY: targetRotation.y, duration: 0.7, ease: \"power4.out\" }); masterTl.add(dieTimeline, 0); }); }); }\n    \n    const debouncedUpdate = debounce(updateUI, 400);\n    [DOM.nameInput, DOM.genderInput, DOM.ageInput, DOM.ocDetailsInput].forEach(el => el.addEventListener('input', debouncedUpdate));\n    \n    DOM.skipAnimationBtn.addEventListener('click', () => {\n        isSkipping = true;\n        if (currentAnimation && currentAnimation.isActive()) currentAnimation.progress(1);\n        if (textAnimation && textAnimation.isActive()) textAnimation.progress(1);\n    });\n\n    $('#roll-background-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const rolls = [roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6()];\n        await animateRoll(6, rolls, '投掷 经历... (2d6 x 3)');\n        \n        const sums = { origin: rolls[0] + rolls[1], past: rolls[2] + rolls[3], encounter: rolls[4] + rolls[5] };\n        \n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `出身: ${rolls[0]} + ${rolls[1]} = ${sums.origin}\\n(${backgroundData.origin[character.race][sums.origin].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `来历: ${rolls[2]} + ${rolls[3]} = ${sums.past}\\n(${backgroundData.past[sums.past].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(4, 6), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `邂逅: ${rolls[4]} + ${rolls[5]} = ${sums.encounter}\\n(${backgroundData.encounter[sums.encounter]})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        character.background.origin = backgroundData.origin[character.race][sums.origin];\n        character.background.past = backgroundData.past[sums.past];\n        character.background.encounter = backgroundData.encounter[sums.encounter];\n        DOM.bgOrigin.textContent = character.background.origin.name;\n        DOM.bgPast.textContent = character.background.past.name;\n        DOM.bgEncounter.textContent = character.background.encounter;\n        DOM.backgroundDisplay.style.display = 'block';\n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        updateUI(true);\n    });\n\n    $('#roll-attributes-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const attrRolls = raceData[character.race].attr_rolls;\n        const allCalculatedRolls = [];\n\n        // Prepare race-based attributes\n        for (const attr in attrRolls) {\n            const formula = attrRolls[attr];\n            const modifier = parseInt(formula.split('d3')[1] || '0');\n            const { d6, d3 } = roll1D3();\n            const finalValue = Math.max(0, d3 + modifier);\n            character.attributes[attr] = finalValue;\n            allCalculatedRolls.push({ attr, formula, d6, d3, modifier, finalValue });\n        }\n        \n        // Prepare \"Potential\" attribute\n        const potentialValue = Math.floor(Math.random() * 3) + 1;\n        const d6ForPotential = (potentialValue * 2) - 1; // Map 1,2,3 to d6 faces 1,3,5 for animation\n        character.attributes['潜力'] = potentialValue;\n        allCalculatedRolls.push({\n            attr: '潜力',\n            formula: '1-3', // Just a descriptor\n            d6: d6ForPotential,\n            finalValue: potentialValue\n        });\n        \n        // Animate all rolls sequentially\n        for (const roll of allCalculatedRolls) {\n            await animateRoll(1, [roll.d6], `投掷 ${roll.attr}...`);\n            if (isSkipping) break;\n\n            gsap.to(dicePool[0], { className: 'dice-icon highlight', duration: 0.3 });\n            \n            let resultText;\n            if (roll.attr === '潜力') {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.finalValue}`;\n            } else {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.d3} ${roll.modifier >= 0 ? '+' : ''} ${roll.modifier} = ${roll.finalValue}`;\n            }\n            await animateText(DOM.diceResultText, resultText);\n            \n            await updateUI();\n            \n            if (isSkipping) break;\n            \n            await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        await updateUI();\n    });\n\n    DOM.raceSelect.addEventListener('change', () => {\n        DOM.backgroundDisplay.style.display = 'none';\n        character.background = { origin: null, past: null, encounter: null };\n        Object.keys(character.attributes).forEach(k => character.attributes[k] = 0);\n        updateUI(true);\n    });\n\n    $('#submit-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        await updateUI(true);\n        \n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '未设定';\n        \n        const finalCharacterObject={ NAME:finalName, GENDER:character.gender||'未设定', AGE:formattedAge, RACE:character.race, ORIGIN: character.background.origin ? character.background.origin.name : '未知', PAST: character.background.past ? character.background.past.name : '未知', ENCOUNTER: character.background.encounter || '未知', SKILLS: uniqueSkills, OC_DETAILS:character.oc_details||'无', ...character.attributes, MONEY:character.money };\n        \n        const slashCommand=`/send <START>\\nAdmin:\\n这是一个TRPG开局，请为 User 生成一段详尽的背景故事。\\n\\n# 故事核心要求\\n请严格根据以下【角色完整设定】，撰写一段从角色童年到现在的成长故事。故事需要清晰地阐述是什么关键事件或心路历程，最终让他/她确立了要成为一名冒险者的志向。请在故事中自然地融入角色的种族、出身背景、技能和性格特点。\\n\\n# 角色完整设定\\n---\\n## 基础信息\\n- **姓名:** ${finalName}\\n- **性别:** ${character.gender||'未设定'}\\n- **年龄:** ${formattedAge}\\n- **种族:** ${character.race}\\n\\n## 经历\\n- **出身:** ${character.background.origin ? character.background.origin.name : '未知'}\\n- **来历:** ${character.background.past ? character.background.past.name : '未知'}\\n- **邂逅:** ${character.background.encounter || '未知'}\\n\\n## 背景与技能\\n- **初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n- **初始技能:** ${uniqueSkills.join(', ')||'无'}\\n\\n## 补充设定 (OC)\\n- **额外补充:** ${character.oc_details||'无'}\\n\\n## 能力值\\n- **力量:** ${character.attributes['力量']}\\n- **敏捷:** ${character.attributes['敏捷']}\\n- **感知:** ${character.attributes['感知']}\\n- **知识:** ${character.attributes['知识']}\\n- **魅力:** ${character.attributes['魅力']}\\n- **信仰力:** ${character.attributes['信仰力']}\\n- **魔力:** ${character.attributes['魔力']}\\n\\n## 初始资产\\n- **资金:** ${character.money} 银币\\n\\|\\n/trigger`; \n        \n        try {\n            if (typeof insertOrAssignVariables === 'function') {\n                await insertOrAssignVariables(finalCharacterObject);\n            } else {\n                console.log(\"SillyTavern Function 'insertOrAssignVariables' not found. Variables:\", finalCharacterObject);\n            }\n            if (typeof triggerSlash === 'function') {\n                await triggerSlash(slashCommand, 'Send');\n            } else { \n                console.log(\"SillyTavern Function 'triggerSlash' not found. Command will be copied to clipboard.\");\n                navigator.clipboard.writeText(slashCommand).then(() => {\n                    alert('角色指令已复制到剪贴板！');\n                });\n            }\n        } catch (error) {\n            console.error('与SillyTavern交互失败:', error);\n            alert('与SillyTavern交互失败，请查看浏览器控制台。');\n        }\n\n        e.target.innerHTML = \"契约成立！\";\n    });\n    \n    initDicePool();\n    Object.keys(raceData).forEach(key => DOM.raceSelect.add(new Option(key, key)));\n    Object.keys(character.attributes).forEach(key => {\n        const pointControl = document.createElement('div');\n        pointControl.className = 'point-control';\n        pointControl.innerHTML = `<span class=\"label\">${key}</span><input type=\"text\" id=\"attr-${key.replace(/\\s/g, '')}\" readonly value=\"0\">`; // ID santized just in case\n        DOM.attributesContainer.appendChild(pointControl);\n    });\n    // A small fix for renderAttributes to handle sanitized IDs\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key.replace(/\\s/g, '')}`).value = value; }); }\n    updateUI(true);\n});\n</script>\n\n</body>\n</html>\n```"
  },
  {
    "role": "user",
    "content": "```\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>哥布林杀手TRPG - 冒险者契约</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/gsap.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/TextPlugin.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.min.js\" defer></script>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Noto+Serif+SC:wght@400;700&family=Vollkorn:wght@400;700&family=Courier+Prime&display=swap\" rel=\"stylesheet\">\n\n    <style>\n        :root {\n            --leather-bg: #5a3a2a;\n            --dark-leather-bg: #3b2a1a;\n            --parchment-bg: #f5f5dc;\n            --parchment-bg-gradient: linear-gradient(165deg, #f7e9d7, #e6d5c3);\n            --text-color: #3d3d3d;\n            --heading-color: #4a3c2c;\n            --border-color: #7a5a4a;\n            --font-main: 'Vollkorn', 'Noto Serif SC', serif;\n            --font-display: 'Cinzel', 'Noto Serif SC', serif;\n            --font-code: 'Courier Prime', 'Courier New', monospace;\n            --dice-size: 5rem; \n        }\n\n        html { height: 100%; }\n        body {\n            background-color: #3a2e20;\n            font-family: var(--font-main);\n            color: var(--text-color);\n            margin: 0; padding: 20px;\n            box-sizing: border-box;\n            display: flex;\n            align-items: center; justify-content: center;\n            min-height: 100%;\n        }\n        *, *:before, *:after { box-sizing: inherit; }\n\n        .creator-wrapper {\n            width: 100%; max-width: 900px;\n            margin: 0;\n            background: var(--parchment-bg-gradient);\n            border: 12px solid #8b7355;\n            border-radius: 8px;\n            box-shadow: 0 0 40px rgba(139, 115, 85, 0.3), inset 0 0 30px rgba(255, 255, 255, 0.4);\n            position: relative;\n            overflow: hidden;\n            padding: 25px;\n            display: flex; flex-direction: column;\n            max-height: 95vh;\n        }\n\n        .border-flow, .inner-border { position: absolute; pointer-events: none; }\n        .border-flow { top: 0; left: 0; right: 0; bottom: 0; background: linear-gradient(90deg, rgba(139,115,85,0.1) 1px, transparent 1px), linear-gradient(0deg, rgba(139,115,85,0.1) 1px, transparent 1px); background-size: 20px 20px; animation: borderFlow 15s linear infinite; }\n        .inner-border { top: 5px; left: 5px; right: 5px; bottom: 5px; border: 3px solid rgba(139,115,85,0.3); border-radius: 5px; }\n        @keyframes borderFlow { from { background-position: 0 0; } to { background-position: 20px 20px; } }\n\n        .creator-header {\n            text-align: center;\n            padding: 10px;\n            margin-bottom: 25px;\n            border-bottom: 2px solid rgba(139, 115, 85, 0.3);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 15px;\n        }\n        .creator-header h1 {\n            font-family: var(--font-display);\n            font-size: clamp(24px, 5vw, 32px);\n            margin: 0;\n            font-weight: 700;\n            letter-spacing: 3px;\n            color: var(--heading-color);\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.1);\n        }\n        \n        .title-char {\n            display: inline-block;\n            opacity: 0;\n            transform: translateY(30px);\n        }\n\n        .wax-seal {\n            width: 45px;\n            height: 45px;\n            display: inline-block;\n            background-color: #c0392b;\n            border-radius: 50%;\n            position: relative;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.4), inset 0 -2px 3px rgba(0,0,0,0.3);\n            opacity: 0;\n            transform: scale(0.5);\n            font-family: 'Cinzel', serif;\n            color: #e7a49c;\n            text-align: center;\n            font-size: 24px;\n            line-height: 45px;\n            font-weight: 700;\n        }\n        .wax-seal::before {\n            content: 'GS';\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.3);\n        }\n\n        .creator-scroll-content { overflow-y: auto; padding: 10px 20px 10px 10px; }\n        .creator-scroll-content::-webkit-scrollbar { width: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-track { background: rgba(139, 115, 85, 0.1); border-radius: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-thumb { background-color: #a89072; border-radius: 10px; border: 2px solid #f7e9d7; }\n        \n        .gs-creator-step { margin-bottom: 40px; overflow: hidden; }\n        .gs-creator-step h3 { font-family: var(--font-display); font-size: 1.5em; font-weight: 700; border-bottom: 1.5px solid var(--border-color); padding-bottom: 8px; margin-bottom: 20px; color: var(--heading-color); text-align: left; }\n        \n        .layout-grid { display: grid; grid-template-columns: 1fr; gap: 25px; align-items: flex-start; }\n        @media (min-width: 768px) {\n            .layout-grid { grid-template-columns: 1fr 280px; }\n        }\n\n        .form-container { text-align: left; }\n        .gs-form-group { margin-bottom: 16px; }\n        .gs-form-group label { display: block; margin-bottom: 6px; font-weight: bold; color: var(--heading-color); }\n        .form-input, .form-select, .form-textarea { width: 100%; padding: 10px; background-color: rgba(255, 255, 255, 0.5); border: 1px solid #a58e72; border-radius: 4px; color: #3d3d3d; font-family: var(--font-main); font-size: 1em; transition: all 0.2s ease-in-out; box-shadow: inset 1px 1px 2px rgba(0,0,0,0.1); }\n        .form-input:focus, .form-select:focus, .form-textarea:focus { outline: none; border-color: #8b7355; background-color: #fff; box-shadow: 0 0 5px rgba(139, 115, 85, 0.5); }\n        .form-textarea { resize: vertical; min-height: 100px; }\n\n        .grid-cols-2 {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 16px;\n        }\n        @media (min-width: 480px) {\n            .grid-cols-2 {\n                grid-template-columns: repeat(2, 1fr);\n            }\n        }\n\n        #attributes-container .point-control { display: flex; align-items: center; justify-content: space-between; margin-bottom: 8px; padding: 6px 8px; background: rgba(0,0,0,0.03); border-left: 3px solid rgba(139,115,85,0.2); border-radius: 4px; }\n        #attributes-container .label { font-weight: bold; color: var(--heading-color); }\n        #attributes-container input[readonly] { width: 40px; text-align: center; font-weight: bold; font-size: 1.2em; font-family: var(--font-display); color: #a02c2c; border: none; background-color: transparent; box-shadow: none; padding: 0; }\n        \n        .attributes-grid {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 0 16px;\n        }\n        @media (min-width: 480px) {\n            .attributes-grid {\n                grid-template-columns: 1fr 1fr;\n            }\n        }\n        \n        .skills-display p { background-color: rgba(0,0,0,0.05); border-left: 3px solid var(--border-color); padding: 10px 15px; margin-top: 10px; font-size: 0.95em; border-radius: 0 4px 4px 0; }\n        .skills-display strong { color: #8b5b4b; font-family: var(--font-display); }\n        .skills-display ul { list-style: none; padding-left: 0; margin-top: 8px; font-size: 0.9em; }\n        .skills-display li { margin-bottom: 4px; }\n\n        #character-summary { background-color: #e9e4d9; font-family: var(--font-code); line-height: 1.6; height: 250px; color: #2c2a2a; }\n        \n        .gs-button { width: 100%; background-color: #8b7355; color: var(--parchment-bg); border: 2px solid var(--dark-leather-bg); border-radius: 5px; padding: 12px 20px; font-family: var(--font-display); font-size: 1.2em; font-weight: 700; cursor: pointer; margin-top: 10px; transition: all 0.3s ease; box-shadow: 0 3px 5px rgba(0,0,0,0.3); }\n        .gs-button:hover { background-color: #a0886c; transform: translateY(-2px); box-shadow: 0 5px 8px rgba(0,0,0,0.3); }\n        .gs-button:disabled { background-color: #9e9e9e; border-color: #757575; cursor: not-allowed; transform: none; box-shadow: none; opacity: 0.6; }\n        .action-button { background-color: #6d5b4b; font-size: 1em; padding: 10px 15px; margin-top: 0; margin-bottom: 10px; width: auto; }\n        \n        .background-display { margin-top: 15px; padding: 15px; border: 1px dashed var(--border-color); border-radius: 5px; background: rgba(0,0,0,0.02); }\n        .background-display p { margin: 0 0 8px; }\n        .background-display span { font-weight: bold; color: var(--heading-color); }\n        \n        #radar-chart-container { \n            max-width: 100%;\n        }\n        @media (min-width: 768px) {\n            #radar-chart-container {\n                position: sticky;\n                top: 0;\n                padding-top: 45px;\n            }\n        }\n\n        pre.mermaid { \n            font-family: var(--font-main); \n            background: rgba(0,0,0,0.02); \n            border: 1px solid rgba(139,115,85,0.1); \n            padding: 10px; \n            border-radius: 5px; \n            overflow: auto;\n            transition: opacity 0.3s ease-in-out;\n        }\n        pre.mermaid.loading { opacity: 0.5; pointer-events: none; }\n\n        pre.mermaid > svg {\n            max-width: 100%;\n            height: auto;\n        }\n\n        #dice-overlay {\n            position: fixed; top: 0; left: 0; width: 100%; height: 100%;\n            background: rgba(0,0,0,0.8); backdrop-filter: blur(5px);\n            display: none; align-items: center; justify-content: center; flex-direction: column;\n            z-index: 100;\n            color: #fff; text-shadow: 0 0 10px #000;\n        }\n\n        .dice-container {\n            display: flex; flex-wrap: wrap; justify-content: center;\n            gap: 2rem; margin-bottom: 2rem;\n            max-width: 600px;\n        }\n        \n        .dice-icon {\n            width: var(--dice-size); height: var(--dice-size);\n            perspective: 800px;\n            transform-style: preserve-3d;\n            display: none;\n        }\n        .dice-icon.highlight {\n            transform: scale(1.15);\n            filter: drop-shadow(0 0 15px #FFEB3B);\n            transition: transform 0.3s ease, filter 0.3s ease;\n        }\n\n        .dice-cube {\n            width: 100%; height: 100%;\n            position: relative;\n            transform-style: preserve-3d;\n            transform: translateZ(calc(var(--dice-size) / -2));\n        }\n        \n        .dice-face {\n            position: absolute;\n            width: var(--dice-size); height: var(--dice-size);\n            background-color: rgba(255, 255, 255, 0.98);\n            border: 1.5px solid #857e72;\n            border-radius: 12%;\n        }\n\n        .pips-container {\n            width: 100%; height: 100%;\n            position: relative; \n        }\n        .pip {\n            width: 22%; height: 22%; \n            background-color: #3d352e;\n            border-radius: 50%;\n            box-shadow: inset 0 1px 3px rgba(0,0,0,0.5);\n            position: absolute; \n        }\n        \n        #dice-result-text { \n            font-family: var(--font-display); \n            font-size: 2.2em;\n            color: #FFEB3B; \n            text-shadow: 0 0 12px #FFEB3B; \n            min-height: 2em;\n            line-height: 1.2;\n            text-align: center; \n        }\n        \n        #skip-animation-btn {\n            position: absolute;\n            bottom: 30px;\n            font-size: 1em;\n            padding: 8px 20px;\n            width: auto;\n            background-color: rgba(0,0,0,0.3);\n            border-color: rgba(255,255,255,0.5);\n            color: rgba(255,255,255,0.8);\n        }\n        #skip-animation-btn:hover {\n            background-color: rgba(0,0,0,0.5);\n            color: #fff;\n        }\n\n        .typed-cursor {\n            opacity: 1;\n            animation: typed-blink 0.7s infinite;\n        }\n        @keyframes typed-blink{\n            0% { opacity: 1; }\n            50% { opacity: 0; }\n            100% { opacity: 1; }\n        }\n        \n        .validation-message {\n            text-align: center;\n            color: #b71c1c;\n            font-size: 0.9em;\n            font-weight: bold;\n            margin-top: -5px;\n            margin-bottom: 10px;\n            height: 1.2em;\n            opacity: 0;\n            will-change: transform, opacity;\n        }\n\n        #credits-screen {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            pointer-events: none;\n            opacity: 0;\n        }\n\n        #credits-screen p {\n            font-family: var(--font-display);\n            font-size: 2em;\n            color: #f5f5dc;\n            text-shadow: 0 0 8px rgba(245, 245, 220, 0.7);\n        }\n    </style>\n</head>\n<body>\n\n<div class=\"creator-wrapper\">\n    <div class=\"border-flow\"></div>\n    <div class=\"inner-border\"></div>\n    <header class=\"creator-header\">\n        <h1 id=\"main-title\">冒险者契约登记</h1>\n        <div id=\"wax-seal\" class=\"wax-seal\"></div>\n    </header>\n\n    <div class=\"creator-scroll-content\">\n        <div class=\"gs-creator-container\">\n            <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第一步：身份确认</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-name-input\">姓名</label><input id=\"char-name-input\" type=\"text\" placeholder=\"可留空，默认为 {{user}}\" class=\"form-input\"></div>\n                    <div class=\"grid-cols-2 gsap-content-item\">\n                        <div class=\"gs-form-group\"><label for=\"char-gender-input\">性别</label><input id=\"char-gender-input\" type=\"text\" placeholder=\"例如: 男性/女性/双性/无性/……\" class=\"form-input\"></div>\n                        <div class=\"gs-form-group\"><label for=\"char-age-input\">年龄</label><input id=\"char-age-input\" type=\"number\" placeholder=\"可参照种族说明\" class=\"form-input\"></div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-race-select\">种族</label><select id=\"char-race-select\" class=\"form-select\"></select></div>\n                    <div class=\"gs-form-group gsap-content-item\">\n                        <label>经历 (出身/来历/邂逅)</label>\n                        <button id=\"roll-background-btn\" class=\"gs-button action-button\">🎲 投骰决定经历</button>\n                        <div id=\"background-display\" class=\"background-display\" style=\"display: none;\">\n                            <p>出身: <span id=\"bg-origin\"></span></p>\n                            <p>来历: <span id=\"bg-past\"></span></p>\n                            <p>邂逅: <span id=\"bg-encounter\"></span></p>\n                        </div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"oc-details-input\">身体特征与补充</label><textarea id=\"oc-details-input\" placeholder=\"发色、瞳色、体型、性格、背景故事构思...\" class=\"form-textarea\"></textarea></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第二步：能力值与技能</h3>\n                <div class=\"layout-grid\">\n                    <div class=\"form-container gsap-content-item\">\n                        <button id=\"roll-attributes-btn\" class=\"gs-button action-button\">🎲 投骰决定能力值</button>\n                        <div id=\"attributes-container\" class=\"attributes-grid\"></div>\n                        <div id=\"skills-and-desc-container\" class=\"skills-display\"></div>\n                    </div>\n                    <div id=\"radar-chart-container\" class=\"gsap-content-item\"><pre class=\"mermaid\" id=\"radar-chart\"></pre></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第三步：完成登记</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"character-summary\">角色卡预览</label><textarea id=\"character-summary\" rows=\"12\" readonly class=\"form-textarea\"></textarea></div>\n                    <button id=\"submit-btn\" class=\"gs-button gsap-content-item\" disabled>确认登记，开始冒险</button>\n                    <div id=\"validation-message\" class=\"validation-message\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div id=\"credits-screen\">\n    <p>作者 𝙀𝙡𝙖𝙞𝙣𝙖𝙙𝙚𝙨</p>\n</div>\n\n<div id=\"dice-overlay\">\n    <div class=\"dice-container\" id=\"dice-container\"></div>\n    <div id=\"dice-result-text\"></div>\n    <button id=\"skip-animation-btn\" class=\"gs-button\">跳过动画</button>\n</div>\n\n<div id=\"dice-templates\" style=\"display:none;\">\n    <div class=\"dice-cube\" data-id_template=\"dice-cube\">\n        <div class=\"dice-face face-front\" data-face=\"1\"><div class=\"pips-container\"><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-back\" data-face=\"6\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-right\" data-face=\"3\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-left\" data-face=\"4\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-top\" data-face=\"2\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-bottom\" data-face=\"5\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n    </div>\n</div>\n\n<script>\n// --- MODIFIED DATA ---\nconst raceData = {\n    '凡人': { attr_rolls: { '力量': '1d3+1', '敏捷': '1d3', '感知': '1d3', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3+2', '魔力': '1d3' }, skills: ['过载行动(初级)', '武器:投掷武器(初级)', '长距离移动(初级)']},\n    '矿人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3', '感知': '1d3+2', '知识': '1d3-1', '魅力': '1d3+1', '信仰力': '1d3+1', '魔力': '1d3-1' }, skills: ['治愈适性(初级)', '夜视(初级)', '锻造(初级)']},\n    '森人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+1', '感知': '1d3+1', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3-1', '魔力': '1d3+1' }, skills: ['武器:弩弓(初级)', '夜视(初级)', '精灵宠儿(初级)']},\n    '蜥蜴人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3+1', '感知': '1d3', '知识': '1d3', '魅力': '1d3+1', '信仰力': '1d3', '魔力': '1d3' }, skills: ['免疫强化(初级)', '夜视(初级)', '龙族血统(初级)']},\n    '圃人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+2', '感知': '1d3+1', '知识': '1d3', '魅力': '1d3-1', '信仰力': '1d3', '魔力': '1d3+2' }, skills: ['隐匿(初级)', '先发制人(初级)', '烹饪(初级)']}\n};\nconst backgroundData = {\n    origin: { \n        '凡人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '学者', class: '魔术师', level: 1, skills: ['文献调查(初级)'] }, 6: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 7: { name: '农民', skills: ['生产业:农业(初级)', '强健(初级)'] }, 8: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '骑士', class: '战士', level: 1, skills: ['骑乘(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n        '矿人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 6: { name: '酒馆老板', class: '战士', level: 1, skills: ['观察(初级)'] }, 7: { name: '铁匠', skills: ['工匠:锻造(初级)', '手工(初级)'] }, 8: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '碎盾者', class: '战士', level: 1, skills: ['强击攻击·斩(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n    },\n    past: { 2: { name: '奴隶', skills: ['劳动(初级)'] }, 3: { name: '牢狱', skills: ['犯罪知识(初级)'] }, 4: { name: '战场', skills: ['沉着冷静(初级)'] }, 5: { name: '神殿', skills: ['神学(初级)'] }, 6: { name: '孤儿', skills: ['忍耐(初级)'] }, 7: { name: '平顺', skills: ['幸运(初级)'] }, 8: { name: '贫困', skills: ['生存术(初级)'] }, 9: { name: '学校', skills: ['博识(初级)'] }, 10: { name: '深闺', skills: ['无偏见(初级)'] }, 11: { name: '奢华', skills: ['鉴定(初级)'] }, 12: { name: '宫廷', skills: ['礼仪(初级)'] }},\n    encounter: { 2: '宿敌', 3: '上司', 4: '后辈', 5: '交易对象', 6: '下属', 7: '家人', 8: '挚友', 9: '前辈', 10: '未婚夫/妻', 11: '劲敌', 12: '师父' }\n};\nbackgroundData.origin['森人'] = backgroundData.origin['凡人']; backgroundData.origin['蜥蜴人'] = backgroundData.origin['凡人']; backgroundData.origin['圃人'] = backgroundData.origin['凡人'];\nconst character = {\n    name: '', gender: '', age: '', oc_details: '', race: '凡人',\n    background: { origin: null, past: null, encounter: null },\n    attributes: { '力量': 0, '敏捷': 0, '感知': 0, '知识': 0, '魅力': 0, '信仰力': 0, '魔力': 0, '潜力': 0 },\n    skills: [], classes: {}, money: 0, _lastAttributesForChart: '',\n};\n// --- END MODIFIED DATA ---\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    gsap.registerPlugin(TextPlugin);\n    mermaid.initialize({ startOnLoad: true, theme: 'base', themeVariables: {\n        '--mermaid-font-family': \"'Vollkorn', 'Noto Serif SC', serif\",\n        primaryColor: '#f7e9d7', primaryTextColor: '#3d3d3d', lineColor: '#8b7355', textColor: '#4a3c2c',\n    }});\n    \n    const $ = (s) => document.querySelector(s);\n    const roll1D6 = () => Math.floor(Math.random() * 6) + 1;\n    const roll1D3 = () => {\n        const d6 = roll1D6();\n        if (d6 <= 2) return { d6, d3: 1 };\n        if (d6 <= 4) return { d6, d3: 2 };\n        return { d6, d3: 3 };\n    };\n    const rollDiceString = (diceString) => { const p=diceString.split('*');const d=p[0];const m=parseInt(p[1])||1;if(!d.includes('d'))return 0;const[n,s]=d.split('d').map(Number);let t=0;for(let i=0;i<n;i++){t+=Math.floor(Math.random()*s)+1;}return t*m; };\n    const formatAge = (ageValue) => { if (!ageValue && ageValue !== 0) return ageValue; const num = Number(ageValue); if (isNaN(num)) return ageValue; if (Math.abs(num) >= 1_000_000) return num.toExponential(2); return ageValue; };\n    const debounce = (func, delay) => { let timeout; return function(...args) { clearTimeout(timeout); timeout = setTimeout(() => func.apply(this, args), delay); }; };\n    const diceUnicode = ['\\u2680', '\\u2681', '\\u2682', '\\u2683', '\\u2684', '\\u2685'];\n\n    const DOM = {\n        nameInput: $('#char-name-input'), genderInput: $('#char-gender-input'), ageInput: $('#char-age-input'),\n        ocDetailsInput: $('#oc-details-input'), raceSelect: $('#char-race-select'), attributesContainer: $('#attributes-container'),\n        skillsContainer: $('#skills-and-desc-container'), radarChart: $('#radar-chart'), summarySheet: $('#character-summary'),\n        diceOverlay: $('#dice-overlay'), diceContainer: $('#dice-container'), diceResultText: $('#dice-result-text'),\n        backgroundDisplay: $('#background-display'), bgOrigin: $('#bg-origin'), bgPast: $('#bg-past'), bgEncounter: $('#bg-encounter'),\n        skipAnimationBtn: $('#skip-animation-btn'),\n        submitBtn: $('#submit-btn'),\n        validationMessage: $('#validation-message'),\n    };\n    \n    const dicePool = []; const MAX_DICE = 6;\n    let currentAnimation = null; let textAnimation = null; let isSkipping = false;\n    let currentValidationMessage = '';\n    \n    function validateAndToggleButton() {\n        let newMessage = '';\n        if (!character.age || String(character.age).trim() === '') {\n            newMessage = '请填写您的冒险者年龄。';\n        } else if (!character.gender || !character.gender.trim()) {\n            newMessage = '请设定冒险者的性别。';\n        } else if (!character.background.origin) {\n            newMessage = '请投骰决定您的冒险者经历。';\n        } else if (Object.values(character.attributes).every(val => val === 0)) {\n            newMessage = '请投骰决定您的能力值。';\n        }\n\n        if (newMessage === currentValidationMessage) return;\n        currentValidationMessage = newMessage;\n\n        if (newMessage) {\n            DOM.submitBtn.disabled = true;\n            DOM.validationMessage.textContent = newMessage;\n            gsap.fromTo(DOM.validationMessage, { autoAlpha: 0, scale: 0.8 }, { autoAlpha: 1, scale: 1, duration: 0.4, ease: 'elastic.out(1, 0.75)' });\n        } else {\n            DOM.submitBtn.disabled = false;\n            gsap.to(DOM.validationMessage, { autoAlpha: 0, duration: 0.3 });\n        }\n    }\n    function updateCharacterDataFromDOM() { character.name = DOM.nameInput.value; character.gender = DOM.genderInput.value; character.age = DOM.ageInput.value; character.oc_details = DOM.ocDetailsInput.value; character.race = DOM.raceSelect.value; }\n    function renderSkills() { const uniqueSkills = [...new Set(character.skills)]; DOM.skillsContainer.innerHTML = `<p><strong>天赋与习得技能:</strong></p><ul>${uniqueSkills.map(s => `<li>- ${s}</li>`).join('')}</ul>`; }\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key}`).value = value; }); }\n    function renderSummary() {\n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '?';\n        const originText = `出身:${character.background.origin ? character.background.origin.name : '?'}`;\n        const pastText = `来历:${character.background.past ? character.background.past.name : '?'}`;\n        const encounterText = `邂逅:${character.background.encounter || '?'}`;\n        let summary = `### 《哥布林杀手TRPG》冒险者登记卡\\n` + `**姓名:** ${finalName} | **种族:** ${character.race} | **性别:** ${character.gender || '?'} | **年龄:** ${formattedAge}\\n` + `**经历:** ${originText} / ${pastText} / ${encounterText}\\n` + `**初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n` + `**初始技能:** ${uniqueSkills.join(', ') || '无'}\\n`; if (character.oc_details) { summary += `**身体特征与补充:** ${character.oc_details}\\n`; } summary += `---\\n**能力值:**\\n`; summary += Object.entries(character.attributes).map(([key, value]) => `- ${key}: ${value}`).join('\\n'); summary += `\\n**持有资金:** ${character.money} 银币`;\n        DOM.summarySheet.value = summary.replace(/### /g, '').replace(/\\*\\*/g, '').replace(/---/g, '\\n────────────────────\\n').replace(/- /g, '  ');\n        DOM.summarySheet.setAttribute('data-raw', summary);\n    }\n    async function renderRadarChartIfNeeded() { const currentAttributesString = JSON.stringify(character.attributes); if (currentAttributesString === character._lastAttributesForChart) return; DOM.radarChart.classList.add('loading'); const radarSyntax = `radar-beta\\ntitle 能力值分布\\naxis a[\"力量 ${character.attributes['力量']}\"]\\naxis b[\"敏捷 ${character.attributes['敏捷']}\"]\\naxis c[\"感知 ${character.attributes['感知']}\"]\\naxis d[\"知识 ${character.attributes['知识']}\"]\\naxis e[\"魅力 ${character.attributes['魅力']}\"]\\naxis f[\"信仰 ${character.attributes['信仰力']}\"]\\naxis g[\"魔力 ${character.attributes['魔力']}\"]\\naxis h[\"潜力 ${character.attributes['潜力']}\"]\\ncurve current[\"能力\"]{${character.attributes['力量']},${character.attributes['敏捷']},${character.attributes['感知']},${character.attributes['知识']},${character.attributes['魅力']},${character.attributes['信仰力']},${character.attributes['魔力']},${character.attributes['潜力']}}\\nmax 10\\nmin 0`; DOM.radarChart.innerHTML = radarSyntax; DOM.radarChart.removeAttribute('data-processed'); try { await mermaid.run({ nodes: [DOM.radarChart] }); character._lastAttributesForChart = currentAttributesString; } catch(e) { console.error(\"Mermaid rendering error:\", e); } finally { DOM.radarChart.classList.remove('loading'); } }\n    async function updateUI(forceFullUpdate = false) { updateCharacterDataFromDOM(); if(forceFullUpdate) { character._lastAttributesForChart = ''; character.skills = []; character.classes = {}; character.money = 100; if(raceData[character.race].skills) character.skills.push(...raceData[character.race].skills); if (character.background.origin) { if (character.background.origin.skills) character.skills.push(...character.background.origin.skills); if (character.background.origin.class) character.classes[character.background.origin.class] = character.background.origin.level; if(character.background.origin.money) character.money += rollDiceString(character.background.origin.money); } if (character.background.past && character.background.past.skills) { character.skills.push(...character.background.past.skills); } } renderAttributes(); renderSkills(); renderSummary(); await renderRadarChartIfNeeded(); validateAndToggleButton(); }\n\n    const masterTl = gsap.timeline({ delay: 0.2 });\n    const title = $('#main-title');\n    title.innerHTML = title.textContent.split('').map(char => `<span class=\"title-char\">${char}</span>`).join('');\n    gsap.set(\".gsap-header-item, .gsap-content-item\", { autoAlpha: 0, y: 20 });\n    masterTl.to(\".title-char\", { autoAlpha: 1, y: 0, duration: 0.7, ease: \"power3.out\", stagger: 0.1 }).to(\"#wax-seal\", { autoAlpha: 1, scale: 1, duration: 0.6, ease: \"elastic.out(1, 0.7)\" }, \"-=0.5\");\n    document.querySelectorAll('.gs-creator-step').forEach((step, index) => { const stepTl = gsap.timeline(); stepTl.to(step.querySelector('.gsap-header-item'), { autoAlpha: 1, y: 0, duration: 0.6, ease: 'power2.out' }).to(step.querySelectorAll('.gsap-content-item'), { autoAlpha: 1, y: 0, duration: 0.5, ease: 'power2.out', stagger: 0.1 }, '-=0.4'); masterTl.add(stepTl, `-=${index === 0 ? 0.2 : 0.7}`); });\n    const pipPositions = { 1: [ { left: '50%', top: '50%' } ], 2: [ { left: '25%', top: '25%' }, { left: '75%', top: '75%' } ], 3: [ { left: '25%', top: '25%' }, { left: '50%', top: '50%' }, { left: '75%', top: '75%' } ], 4: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 5: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '50%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 6: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '50%' }, { left: '75%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ]};\n    function setupCube(cubeEl) { const size = 'calc(var(--dice-size) / 2)'; gsap.set(cubeEl.querySelector('.face-front'),  { transform: `rotateY(0deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-back'),   { transform: `rotateY(180deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-right'),  { transform: `rotateY(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-left'),   { transform: `rotateY(-90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-top'),   { transform: `rotateX(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-bottom'), { transform: `rotateX(-90deg) translateZ(${size})` }); const faces = cubeEl.querySelectorAll('.dice-face'); faces.forEach(face => { const faceNum = face.getAttribute('data-face'); const pips = face.querySelectorAll('.pip'); const positions = pipPositions[faceNum]; if (!pips.length || !positions) return; pips.forEach((pip, index) => { const pos = positions[index]; gsap.set(pip, { left: pos.left, top: pos.top, xPercent: -50, yPercent: -50 }); }); }); }\n    function getRotationForFace(faceValue) { switch (faceValue) { case 1: return { x: 0, y: 0 }; case 6: return { x: 0, y: 180 }; case 3: return { x: 0, y: -90 }; case 4: return { x: 0, y: 90 }; case 2: return { x: -90, y: 0 }; case 5: return { x: 90,  y: 0 }; default: return { x: 0, y: 0 }; } }\n    async function animateText(element, text) { if(isSkipping) {element.innerHTML = text.replace(/\\n/g, '<br>'); return;} return new Promise(resolve => { if (textAnimation && textAnimation.isActive()) textAnimation.kill(); element.innerHTML = ''; textAnimation = gsap.to(element, { duration: text.length * 0.05, text: { value: text.replace(/\\n/g, '<br>'), newClass: \"typed-cursor\" }, ease: \"none\", onComplete: () => { gsap.delayedCall(0.7, () => { element.querySelector('.typed-cursor')?.remove(); resolve(); }); } }); }); }\n    function initDicePool() { const diceTemplate = document.querySelector('[data-id_template=\"dice-cube\"]'); if (!diceTemplate) return; for (let i = 0; i < MAX_DICE; i++) { const dieIconElement = document.createElement('div'); dieIconElement.className = 'dice-icon'; const newCube = diceTemplate.cloneNode(true); dieIconElement.appendChild(newCube); DOM.diceContainer.appendChild(dieIconElement); setupCube(newCube); dicePool.push(dieIconElement); } }\n    async function animateRoll(numDice, preCalculatedRolls, textToShowDuringRoll = \"投掷中...\") { return new Promise(resolve => { if (currentAnimation && currentAnimation.isActive()) currentAnimation.kill(); dicePool.forEach(die => die.style.display = 'none'); const activeDice = dicePool.slice(0, numDice); animateText(DOM.diceResultText, textToShowDuringRoll); activeDice.forEach(die => { die.style.display = 'flex'; die.className = 'dice-icon'; }); const masterTl = gsap.timeline({ onComplete: () => { if(isSkipping) DOM.diceResultText.innerHTML = ''; resolve(preCalculatedRolls); }}); currentAnimation = masterTl; activeDice.forEach((dieElement, i) => { const dieCube = dieElement.querySelector('.dice-cube'); const visualRoll = preCalculatedRolls[i]; const targetRotation = getRotationForFace(visualRoll); const dieTimeline = gsap.timeline(); dieTimeline.to(dieCube, { rotationX: `+=${gsap.utils.random(720, 1080)}`, rotationY: `+=${gsap.utils.random(720, 1080)}`, duration: 1.8, ease: \"power2.in\" }).to(dieCube, { rotationX: targetRotation.x, rotationY: targetRotation.y, duration: 0.7, ease: \"power4.out\" }); masterTl.add(dieTimeline, 0); }); }); }\n    \n    const debouncedUpdate = debounce(updateUI, 400);\n    [DOM.nameInput, DOM.genderInput, DOM.ageInput, DOM.ocDetailsInput].forEach(el => el.addEventListener('input', debouncedUpdate));\n    \n    DOM.skipAnimationBtn.addEventListener('click', () => {\n        isSkipping = true;\n        if (currentAnimation && currentAnimation.isActive()) currentAnimation.progress(1);\n        if (textAnimation && textAnimation.isActive()) textAnimation.progress(1);\n    });\n\n    $('#roll-background-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const rolls = [roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6()];\n        await animateRoll(6, rolls, '投掷 经历... (2d6 x 3)');\n        \n        const sums = { origin: rolls[0] + rolls[1], past: rolls[2] + rolls[3], encounter: rolls[4] + rolls[5] };\n        \n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `出身: ${rolls[0]} + ${rolls[1]} = ${sums.origin}\\n(${backgroundData.origin[character.race][sums.origin].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `来历: ${rolls[2]} + ${rolls[3]} = ${sums.past}\\n(${backgroundData.past[sums.past].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(4, 6), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `邂逅: ${rolls[4]} + ${rolls[5]} = ${sums.encounter}\\n(${backgroundData.encounter[sums.encounter]})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        character.background.origin = backgroundData.origin[character.race][sums.origin];\n        character.background.past = backgroundData.past[sums.past];\n        character.background.encounter = backgroundData.encounter[sums.encounter];\n        DOM.bgOrigin.textContent = character.background.origin.name;\n        DOM.bgPast.textContent = character.background.past.name;\n        DOM.bgEncounter.textContent = character.background.encounter;\n        DOM.backgroundDisplay.style.display = 'block';\n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        updateUI(true);\n    });\n\n    $('#roll-attributes-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const attrRolls = raceData[character.race].attr_rolls;\n        const allCalculatedRolls = [];\n\n        // Prepare race-based attributes\n        for (const attr in attrRolls) {\n            const formula = attrRolls[attr];\n            const modifier = parseInt(formula.split('d3')[1] || '0');\n            const { d6, d3 } = roll1D3();\n            const finalValue = Math.max(0, d3 + modifier);\n            character.attributes[attr] = finalValue;\n            allCalculatedRolls.push({ attr, formula, d6, d3, modifier, finalValue });\n        }\n        \n        // Prepare \"Potential\" attribute\n        const potentialValue = Math.floor(Math.random() * 3) + 1;\n        const d6ForPotential = (potentialValue * 2) - 1; // Map 1,2,3 to d6 faces 1,3,5 for animation\n        character.attributes['潜力'] = potentialValue;\n        allCalculatedRolls.push({\n            attr: '潜力',\n            formula: '1-3', // Just a descriptor\n            d6: d6ForPotential,\n            finalValue: potentialValue\n        });\n        \n        // Animate all rolls sequentially\n        for (const roll of allCalculatedRolls) {\n            await animateRoll(1, [roll.d6], `投掷 ${roll.attr}...`);\n            if (isSkipping) break;\n\n            gsap.to(dicePool[0], { className: 'dice-icon highlight', duration: 0.3 });\n            \n            let resultText;\n            if (roll.attr === '潜力') {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.finalValue}`;\n            } else {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.d3} ${roll.modifier >= 0 ? '+' : ''} ${roll.modifier} = ${roll.finalValue}`;\n            }\n            await animateText(DOM.diceResultText, resultText);\n            \n            await updateUI();\n            \n            if (isSkipping) break;\n            \n            await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        await updateUI();\n    });\n\n    DOM.raceSelect.addEventListener('change', () => {\n        DOM.backgroundDisplay.style.display = 'none';\n        character.background = { origin: null, past: null, encounter: null };\n        Object.keys(character.attributes).forEach(k => character.attributes[k] = 0);\n        updateUI(true);\n    });\n\n    $('#submit-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        await updateUI(true);\n        \n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '未设定';\n        \n        const finalCharacterObject={ NAME:finalName, GENDER:character.gender||'未设定', AGE:formattedAge, RACE:character.race, ORIGIN: character.background.origin ? character.background.origin.name : '未知', PAST: character.background.past ? character.background.past.name : '未知', ENCOUNTER: character.background.encounter || '未知', SKILLS: uniqueSkills, OC_DETAILS:character.oc_details||'无', ...character.attributes, MONEY:character.money };\n        \n        const slashCommand=`/send <START>\\nAdmin:\\n这是一个TRPG开局，请为 User 生成一段详尽的背景故事。\\n\\n# 故事核心要求\\n请严格根据以下【角色完整设定】，撰写一段从角色童年到现在的成长故事。故事需要清晰地阐述是什么关键事件或心路历程，最终让他/她确立了要成为一名冒险者的志向。请在故事中自然地融入角色的种族、出身背景、技能和性格特点。\\n\\n# 角色完整设定\\n---\\n## 基础信息\\n- **姓名:** ${finalName}\\n- **性别:** ${character.gender||'未设定'}\\n- **年龄:** ${formattedAge}\\n- **种族:** ${character.race}\\n\\n## 经历\\n- **出身:** ${character.background.origin ? character.background.origin.name : '未知'}\\n- **来历:** ${character.background.past ? character.background.past.name : '未知'}\\n- **邂逅:** ${character.background.encounter || '未知'}\\n\\n## 背景与技能\\n- **初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n- **初始技能:** ${uniqueSkills.join(', ')||'无'}\\n\\n## 补充设定 (OC)\\n- **额外补充:** ${character.oc_details||'无'}\\n\\n## 能力值\\n- **力量:** ${character.attributes['力量']}\\n- **敏捷:** ${character.attributes['敏捷']}\\n- **感知:** ${character.attributes['感知']}\\n- **知识:** ${character.attributes['知识']}\\n- **魅力:** ${character.attributes['魅力']}\\n- **信仰力:** ${character.attributes['信仰力']}\\n- **魔力:** ${character.attributes['魔力']}\\n\\n## 初始资产\\n- **资金:** ${character.money} 银币\\n\\|\\n/trigger`; \n        \n        try {\n            if (typeof insertOrAssignVariables === 'function') {\n                await insertOrAssignVariables(finalCharacterObject);\n            } else {\n                console.log(\"SillyTavern Function 'insertOrAssignVariables' not found. Variables:\", finalCharacterObject);\n            }\n            if (typeof triggerSlash === 'function') {\n                await triggerSlash(slashCommand, 'Send');\n            } else { \n                console.log(\"SillyTavern Function 'triggerSlash' not found. Command will be copied to clipboard.\");\n                navigator.clipboard.writeText(slashCommand).then(() => {\n                    alert('角色指令已复制到剪贴板！');\n                });\n            }\n        } catch (error) {\n            console.error('与SillyTavern交互失败:', error);\n            alert('与SillyTavern交互失败，请查看浏览器控制台。');\n        }\n\n        e.target.innerHTML = \"契约成立！\";\n    });\n    \n    initDicePool();\n    Object.keys(raceData).forEach(key => DOM.raceSelect.add(new Option(key, key)));\n    Object.keys(character.attributes).forEach(key => {\n        const pointControl = document.createElement('div');\n        pointControl.className = 'point-control';\n        pointControl.innerHTML = `<span class=\"label\">${key}</span><input type=\"text\" id=\"attr-${key.replace(/\\s/g, '')}\" readonly value=\"0\">`; // ID santized just in case\n        DOM.attributesContainer.appendChild(pointControl);\n    });\n    // A small fix for renderAttributes to handle sanitized IDs\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key.replace(/\\s/g, '')}`).value = value; }); }\n    updateUI(true);\n});\n</script>\n\n</body>\n</html>\n```"
  },
  {
    "role": "user",
    "content": "```\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>哥布林杀手TRPG - 冒险者契约</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/gsap.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/TextPlugin.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.min.js\" defer></script>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Noto+Serif+SC:wght@400;700&family=Vollkorn:wght@400;700&family=Courier+Prime&display=swap\" rel=\"stylesheet\">\n\n    <style>\n        :root {\n            --leather-bg: #5a3a2a;\n            --dark-leather-bg: #3b2a1a;\n            --parchment-bg: #f5f5dc;\n            --parchment-bg-gradient: linear-gradient(165deg, #f7e9d7, #e6d5c3);\n            --text-color: #3d3d3d;\n            --heading-color: #4a3c2c;\n            --border-color: #7a5a4a;\n            --font-main: 'Vollkorn', 'Noto Serif SC', serif;\n            --font-display: 'Cinzel', 'Noto Serif SC', serif;\n            --font-code: 'Courier Prime', 'Courier New', monospace;\n            --dice-size: 5rem; \n        }\n\n        html { height: 100%; }\n        body {\n            background-color: #3a2e20;\n            font-family: var(--font-main);\n            color: var(--text-color);\n            margin: 0; padding: 20px;\n            box-sizing: border-box;\n            display: flex;\n            align-items: center; justify-content: center;\n            min-height: 100%;\n        }\n        *, *:before, *:after { box-sizing: inherit; }\n\n        .creator-wrapper {\n            width: 100%; max-width: 900px;\n            margin: 0;\n            background: var(--parchment-bg-gradient);\n            border: 12px solid #8b7355;\n            border-radius: 8px;\n            box-shadow: 0 0 40px rgba(139, 115, 85, 0.3), inset 0 0 30px rgba(255, 255, 255, 0.4);\n            position: relative;\n            overflow: hidden;\n            padding: 25px;\n            display: flex; flex-direction: column;\n            max-height: 95vh;\n        }\n\n        .border-flow, .inner-border { position: absolute; pointer-events: none; }\n        .border-flow { top: 0; left: 0; right: 0; bottom: 0; background: linear-gradient(90deg, rgba(139,115,85,0.1) 1px, transparent 1px), linear-gradient(0deg, rgba(139,115,85,0.1) 1px, transparent 1px); background-size: 20px 20px; animation: borderFlow 15s linear infinite; }\n        .inner-border { top: 5px; left: 5px; right: 5px; bottom: 5px; border: 3px solid rgba(139,115,85,0.3); border-radius: 5px; }\n        @keyframes borderFlow { from { background-position: 0 0; } to { background-position: 20px 20px; } }\n\n        .creator-header {\n            text-align: center;\n            padding: 10px;\n            margin-bottom: 25px;\n            border-bottom: 2px solid rgba(139, 115, 85, 0.3);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 15px;\n        }\n        .creator-header h1 {\n            font-family: var(--font-display);\n            font-size: clamp(24px, 5vw, 32px);\n            margin: 0;\n            font-weight: 700;\n            letter-spacing: 3px;\n            color: var(--heading-color);\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.1);\n        }\n        \n        .title-char {\n            display: inline-block;\n            opacity: 0;\n            transform: translateY(30px);\n        }\n\n        .wax-seal {\n            width: 45px;\n            height: 45px;\n            display: inline-block;\n            background-color: #c0392b;\n            border-radius: 50%;\n            position: relative;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.4), inset 0 -2px 3px rgba(0,0,0,0.3);\n            opacity: 0;\n            transform: scale(0.5);\n            font-family: 'Cinzel', serif;\n            color: #e7a49c;\n            text-align: center;\n            font-size: 24px;\n            line-height: 45px;\n            font-weight: 700;\n        }\n        .wax-seal::before {\n            content: 'GS';\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.3);\n        }\n\n        .creator-scroll-content { overflow-y: auto; padding: 10px 20px 10px 10px; }\n        .creator-scroll-content::-webkit-scrollbar { width: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-track { background: rgba(139, 115, 85, 0.1); border-radius: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-thumb { background-color: #a89072; border-radius: 10px; border: 2px solid #f7e9d7; }\n        \n        .gs-creator-step { margin-bottom: 40px; overflow: hidden; }\n        .gs-creator-step h3 { font-family: var(--font-display); font-size: 1.5em; font-weight: 700; border-bottom: 1.5px solid var(--border-color); padding-bottom: 8px; margin-bottom: 20px; color: var(--heading-color); text-align: left; }\n        \n        .layout-grid { display: grid; grid-template-columns: 1fr; gap: 25px; align-items: flex-start; }\n        @media (min-width: 768px) {\n            .layout-grid { grid-template-columns: 1fr 280px; }\n        }\n\n        .form-container { text-align: left; }\n        .gs-form-group { margin-bottom: 16px; }\n        .gs-form-group label { display: block; margin-bottom: 6px; font-weight: bold; color: var(--heading-color); }\n        .form-input, .form-select, .form-textarea { width: 100%; padding: 10px; background-color: rgba(255, 255, 255, 0.5); border: 1px solid #a58e72; border-radius: 4px; color: #3d3d3d; font-family: var(--font-main); font-size: 1em; transition: all 0.2s ease-in-out; box-shadow: inset 1px 1px 2px rgba(0,0,0,0.1); }\n        .form-input:focus, .form-select:focus, .form-textarea:focus { outline: none; border-color: #8b7355; background-color: #fff; box-shadow: 0 0 5px rgba(139, 115, 85, 0.5); }\n        .form-textarea { resize: vertical; min-height: 100px; }\n\n        .grid-cols-2 {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 16px;\n        }\n        @media (min-width: 480px) {\n            .grid-cols-2 {\n                grid-template-columns: repeat(2, 1fr);\n            }\n        }\n\n        #attributes-container .point-control { display: flex; align-items: center; justify-content: space-between; margin-bottom: 8px; padding: 6px 8px; background: rgba(0,0,0,0.03); border-left: 3px solid rgba(139,115,85,0.2); border-radius: 4px; }\n        #attributes-container .label { font-weight: bold; color: var(--heading-color); }\n        #attributes-container input[readonly] { width: 40px; text-align: center; font-weight: bold; font-size: 1.2em; font-family: var(--font-display); color: #a02c2c; border: none; background-color: transparent; box-shadow: none; padding: 0; }\n        \n        .attributes-grid {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 0 16px;\n        }\n        @media (min-width: 480px) {\n            .attributes-grid {\n                grid-template-columns: 1fr 1fr;\n            }\n        }\n        \n        .skills-display p { background-color: rgba(0,0,0,0.05); border-left: 3px solid var(--border-color); padding: 10px 15px; margin-top: 10px; font-size: 0.95em; border-radius: 0 4px 4px 0; }\n        .skills-display strong { color: #8b5b4b; font-family: var(--font-display); }\n        .skills-display ul { list-style: none; padding-left: 0; margin-top: 8px; font-size: 0.9em; }\n        .skills-display li { margin-bottom: 4px; }\n\n        #character-summary { background-color: #e9e4d9; font-family: var(--font-code); line-height: 1.6; height: 250px; color: #2c2a2a; }\n        \n        .gs-button { width: 100%; background-color: #8b7355; color: var(--parchment-bg); border: 2px solid var(--dark-leather-bg); border-radius: 5px; padding: 12px 20px; font-family: var(--font-display); font-size: 1.2em; font-weight: 700; cursor: pointer; margin-top: 10px; transition: all 0.3s ease; box-shadow: 0 3px 5px rgba(0,0,0,0.3); }\n        .gs-button:hover { background-color: #a0886c; transform: translateY(-2px); box-shadow: 0 5px 8px rgba(0,0,0,0.3); }\n        .gs-button:disabled { background-color: #9e9e9e; border-color: #757575; cursor: not-allowed; transform: none; box-shadow: none; opacity: 0.6; }\n        .action-button { background-color: #6d5b4b; font-size: 1em; padding: 10px 15px; margin-top: 0; margin-bottom: 10px; width: auto; }\n        \n        .background-display { margin-top: 15px; padding: 15px; border: 1px dashed var(--border-color); border-radius: 5px; background: rgba(0,0,0,0.02); }\n        .background-display p { margin: 0 0 8px; }\n        .background-display span { font-weight: bold; color: var(--heading-color); }\n        \n        #radar-chart-container { \n            max-width: 100%;\n        }\n        @media (min-width: 768px) {\n            #radar-chart-container {\n                position: sticky;\n                top: 0;\n                padding-top: 45px;\n            }\n        }\n\n        pre.mermaid { \n            font-family: var(--font-main); \n            background: rgba(0,0,0,0.02); \n            border: 1px solid rgba(139,115,85,0.1); \n            padding: 10px; \n            border-radius: 5px; \n            overflow: auto;\n            transition: opacity 0.3s ease-in-out;\n        }\n        pre.mermaid.loading { opacity: 0.5; pointer-events: none; }\n\n        pre.mermaid > svg {\n            max-width: 100%;\n            height: auto;\n        }\n\n        #dice-overlay {\n            position: fixed; top: 0; left: 0; width: 100%; height: 100%;\n            background: rgba(0,0,0,0.8); backdrop-filter: blur(5px);\n            display: none; align-items: center; justify-content: center; flex-direction: column;\n            z-index: 100;\n            color: #fff; text-shadow: 0 0 10px #000;\n        }\n\n        .dice-container {\n            display: flex; flex-wrap: wrap; justify-content: center;\n            gap: 2rem; margin-bottom: 2rem;\n            max-width: 600px;\n        }\n        \n        .dice-icon {\n            width: var(--dice-size); height: var(--dice-size);\n            perspective: 800px;\n            transform-style: preserve-3d;\n            display: none;\n        }\n        .dice-icon.highlight {\n            transform: scale(1.15);\n            filter: drop-shadow(0 0 15px #FFEB3B);\n            transition: transform 0.3s ease, filter 0.3s ease;\n        }\n\n        .dice-cube {\n            width: 100%; height: 100%;\n            position: relative;\n            transform-style: preserve-3d;\n            transform: translateZ(calc(var(--dice-size) / -2));\n        }\n        \n        .dice-face {\n            position: absolute;\n            width: var(--dice-size); height: var(--dice-size);\n            background-color: rgba(255, 255, 255, 0.98);\n            border: 1.5px solid #857e72;\n            border-radius: 12%;\n        }\n\n        .pips-container {\n            width: 100%; height: 100%;\n            position: relative; \n        }\n        .pip {\n            width: 22%; height: 22%; \n            background-color: #3d352e;\n            border-radius: 50%;\n            box-shadow: inset 0 1px 3px rgba(0,0,0,0.5);\n            position: absolute; \n        }\n        \n        #dice-result-text { \n            font-family: var(--font-display); \n            font-size: 2.2em;\n            color: #FFEB3B; \n            text-shadow: 0 0 12px #FFEB3B; \n            min-height: 2em;\n            line-height: 1.2;\n            text-align: center; \n        }\n        \n        #skip-animation-btn {\n            position: absolute;\n            bottom: 30px;\n            font-size: 1em;\n            padding: 8px 20px;\n            width: auto;\n            background-color: rgba(0,0,0,0.3);\n            border-color: rgba(255,255,255,0.5);\n            color: rgba(255,255,255,0.8);\n        }\n        #skip-animation-btn:hover {\n            background-color: rgba(0,0,0,0.5);\n            color: #fff;\n        }\n\n        .typed-cursor {\n            opacity: 1;\n            animation: typed-blink 0.7s infinite;\n        }\n        @keyframes typed-blink{\n            0% { opacity: 1; }\n            50% { opacity: 0; }\n            100% { opacity: 1; }\n        }\n        \n        .validation-message {\n            text-align: center;\n            color: #b71c1c;\n            font-size: 0.9em;\n            font-weight: bold;\n            margin-top: -5px;\n            margin-bottom: 10px;\n            height: 1.2em;\n            opacity: 0;\n            will-change: transform, opacity;\n        }\n\n        #credits-screen {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            pointer-events: none;\n            opacity: 0;\n        }\n\n        #credits-screen p {\n            font-family: var(--font-display);\n            font-size: 2em;\n            color: #f5f5dc;\n            text-shadow: 0 0 8px rgba(245, 245, 220, 0.7);\n        }\n    </style>\n</head>\n<body>\n\n<div class=\"creator-wrapper\">\n    <div class=\"border-flow\"></div>\n    <div class=\"inner-border\"></div>\n    <header class=\"creator-header\">\n        <h1 id=\"main-title\">冒险者契约登记</h1>\n        <div id=\"wax-seal\" class=\"wax-seal\"></div>\n    </header>\n\n    <div class=\"creator-scroll-content\">\n        <div class=\"gs-creator-container\">\n            <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第一步：身份确认</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-name-input\">姓名</label><input id=\"char-name-input\" type=\"text\" placeholder=\"可留空，默认为 {{user}}\" class=\"form-input\"></div>\n                    <div class=\"grid-cols-2 gsap-content-item\">\n                        <div class=\"gs-form-group\"><label for=\"char-gender-input\">性别</label><input id=\"char-gender-input\" type=\"text\" placeholder=\"例如: 男性/女性/双性/无性/……\" class=\"form-input\"></div>\n                        <div class=\"gs-form-group\"><label for=\"char-age-input\">年龄</label><input id=\"char-age-input\" type=\"number\" placeholder=\"可参照种族说明\" class=\"form-input\"></div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-race-select\">种族</label><select id=\"char-race-select\" class=\"form-select\"></select></div>\n                    <div class=\"gs-form-group gsap-content-item\">\n                        <label>经历 (出身/来历/邂逅)</label>\n                        <button id=\"roll-background-btn\" class=\"gs-button action-button\">🎲 投骰决定经历</button>\n                        <div id=\"background-display\" class=\"background-display\" style=\"display: none;\">\n                            <p>出身: <span id=\"bg-origin\"></span></p>\n                            <p>来历: <span id=\"bg-past\"></span></p>\n                            <p>邂逅: <span id=\"bg-encounter\"></span></p>\n                        </div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"oc-details-input\">身体特征与补充</label><textarea id=\"oc-details-input\" placeholder=\"发色、瞳色、体型、性格、背景故事构思...\" class=\"form-textarea\"></textarea></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第二步：能力值与技能</h3>\n                <div class=\"layout-grid\">\n                    <div class=\"form-container gsap-content-item\">\n                        <button id=\"roll-attributes-btn\" class=\"gs-button action-button\">🎲 投骰决定能力值</button>\n                        <div id=\"attributes-container\" class=\"attributes-grid\"></div>\n                        <div id=\"skills-and-desc-container\" class=\"skills-display\"></div>\n                    </div>\n                    <div id=\"radar-chart-container\" class=\"gsap-content-item\"><pre class=\"mermaid\" id=\"radar-chart\"></pre></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第三步：完成登记</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"character-summary\">角色卡预览</label><textarea id=\"character-summary\" rows=\"12\" readonly class=\"form-textarea\"></textarea></div>\n                    <button id=\"submit-btn\" class=\"gs-button gsap-content-item\" disabled>确认登记，开始冒险</button>\n                    <div id=\"validation-message\" class=\"validation-message\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div id=\"credits-screen\">\n    <p>作者 𝙀𝙡𝙖𝙞𝙣𝙖𝙙𝙚𝙨</p>\n</div>\n\n<div id=\"dice-overlay\">\n    <div class=\"dice-container\" id=\"dice-container\"></div>\n    <div id=\"dice-result-text\"></div>\n    <button id=\"skip-animation-btn\" class=\"gs-button\">跳过动画</button>\n</div>\n\n<div id=\"dice-templates\" style=\"display:none;\">\n    <div class=\"dice-cube\" data-id_template=\"dice-cube\">\n        <div class=\"dice-face face-front\" data-face=\"1\"><div class=\"pips-container\"><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-back\" data-face=\"6\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-right\" data-face=\"3\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-left\" data-face=\"4\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-top\" data-face=\"2\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-bottom\" data-face=\"5\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n    </div>\n</div>\n\n<script>\n// --- MODIFIED DATA ---\nconst raceData = {\n    '凡人': { attr_rolls: { '力量': '1d3+1', '敏捷': '1d3', '感知': '1d3', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3+2', '魔力': '1d3' }, skills: ['过载行动(初级)', '武器:投掷武器(初级)', '长距离移动(初级)']},\n    '矿人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3', '感知': '1d3+2', '知识': '1d3-1', '魅力': '1d3+1', '信仰力': '1d3+1', '魔力': '1d3-1' }, skills: ['治愈适性(初级)', '夜视(初级)', '锻造(初级)']},\n    '森人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+1', '感知': '1d3+1', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3-1', '魔力': '1d3+1' }, skills: ['武器:弩弓(初级)', '夜视(初级)', '精灵宠儿(初级)']},\n    '蜥蜴人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3+1', '感知': '1d3', '知识': '1d3', '魅力': '1d3+1', '信仰力': '1d3', '魔力': '1d3' }, skills: ['免疫强化(初级)', '夜视(初级)', '龙族血统(初级)']},\n    '圃人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+2', '感知': '1d3+1', '知识': '1d3', '魅力': '1d3-1', '信仰力': '1d3', '魔力': '1d3+2' }, skills: ['隐匿(初级)', '先发制人(初级)', '烹饪(初级)']}\n};\nconst backgroundData = {\n    origin: { \n        '凡人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '学者', class: '魔术师', level: 1, skills: ['文献调查(初级)'] }, 6: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 7: { name: '农民', skills: ['生产业:农业(初级)', '强健(初级)'] }, 8: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '骑士', class: '战士', level: 1, skills: ['骑乘(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n        '矿人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 6: { name: '酒馆老板', class: '战士', level: 1, skills: ['观察(初级)'] }, 7: { name: '铁匠', skills: ['工匠:锻造(初级)', '手工(初级)'] }, 8: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '碎盾者', class: '战士', level: 1, skills: ['强击攻击·斩(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n    },\n    past: { 2: { name: '奴隶', skills: ['劳动(初级)'] }, 3: { name: '牢狱', skills: ['犯罪知识(初级)'] }, 4: { name: '战场', skills: ['沉着冷静(初级)'] }, 5: { name: '神殿', skills: ['神学(初级)'] }, 6: { name: '孤儿', skills: ['忍耐(初级)'] }, 7: { name: '平顺', skills: ['幸运(初级)'] }, 8: { name: '贫困', skills: ['生存术(初级)'] }, 9: { name: '学校', skills: ['博识(初级)'] }, 10: { name: '深闺', skills: ['无偏见(初级)'] }, 11: { name: '奢华', skills: ['鉴定(初级)'] }, 12: { name: '宫廷', skills: ['礼仪(初级)'] }},\n    encounter: { 2: '宿敌', 3: '上司', 4: '后辈', 5: '交易对象', 6: '下属', 7: '家人', 8: '挚友', 9: '前辈', 10: '未婚夫/妻', 11: '劲敌', 12: '师父' }\n};\nbackgroundData.origin['森人'] = backgroundData.origin['凡人']; backgroundData.origin['蜥蜴人'] = backgroundData.origin['凡人']; backgroundData.origin['圃人'] = backgroundData.origin['凡人'];\nconst character = {\n    name: '', gender: '', age: '', oc_details: '', race: '凡人',\n    background: { origin: null, past: null, encounter: null },\n    attributes: { '力量': 0, '敏捷': 0, '感知': 0, '知识': 0, '魅力': 0, '信仰力': 0, '魔力': 0, '潜力': 0 },\n    skills: [], classes: {}, money: 0, _lastAttributesForChart: '',\n};\n// --- END MODIFIED DATA ---\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    gsap.registerPlugin(TextPlugin);\n    mermaid.initialize({ startOnLoad: true, theme: 'base', themeVariables: {\n        '--mermaid-font-family': \"'Vollkorn', 'Noto Serif SC', serif\",\n        primaryColor: '#f7e9d7', primaryTextColor: '#3d3d3d', lineColor: '#8b7355', textColor: '#4a3c2c',\n    }});\n    \n    const $ = (s) => document.querySelector(s);\n    const roll1D6 = () => Math.floor(Math.random() * 6) + 1;\n    const roll1D3 = () => {\n        const d6 = roll1D6();\n        if (d6 <= 2) return { d6, d3: 1 };\n        if (d6 <= 4) return { d6, d3: 2 };\n        return { d6, d3: 3 };\n    };\n    const rollDiceString = (diceString) => { const p=diceString.split('*');const d=p[0];const m=parseInt(p[1])||1;if(!d.includes('d'))return 0;const[n,s]=d.split('d').map(Number);let t=0;for(let i=0;i<n;i++){t+=Math.floor(Math.random()*s)+1;}return t*m; };\n    const formatAge = (ageValue) => { if (!ageValue && ageValue !== 0) return ageValue; const num = Number(ageValue); if (isNaN(num)) return ageValue; if (Math.abs(num) >= 1_000_000) return num.toExponential(2); return ageValue; };\n    const debounce = (func, delay) => { let timeout; return function(...args) { clearTimeout(timeout); timeout = setTimeout(() => func.apply(this, args), delay); }; };\n    const diceUnicode = ['\\u2680', '\\u2681', '\\u2682', '\\u2683', '\\u2684', '\\u2685'];\n\n    const DOM = {\n        nameInput: $('#char-name-input'), genderInput: $('#char-gender-input'), ageInput: $('#char-age-input'),\n        ocDetailsInput: $('#oc-details-input'), raceSelect: $('#char-race-select'), attributesContainer: $('#attributes-container'),\n        skillsContainer: $('#skills-and-desc-container'), radarChart: $('#radar-chart'), summarySheet: $('#character-summary'),\n        diceOverlay: $('#dice-overlay'), diceContainer: $('#dice-container'), diceResultText: $('#dice-result-text'),\n        backgroundDisplay: $('#background-display'), bgOrigin: $('#bg-origin'), bgPast: $('#bg-past'), bgEncounter: $('#bg-encounter'),\n        skipAnimationBtn: $('#skip-animation-btn'),\n        submitBtn: $('#submit-btn'),\n        validationMessage: $('#validation-message'),\n    };\n    \n    const dicePool = []; const MAX_DICE = 6;\n    let currentAnimation = null; let textAnimation = null; let isSkipping = false;\n    let currentValidationMessage = '';\n    \n    function validateAndToggleButton() {\n        let newMessage = '';\n        if (!character.age || String(character.age).trim() === '') {\n            newMessage = '请填写您的冒险者年龄。';\n        } else if (!character.gender || !character.gender.trim()) {\n            newMessage = '请设定冒险者的性别。';\n        } else if (!character.background.origin) {\n            newMessage = '请投骰决定您的冒险者经历。';\n        } else if (Object.values(character.attributes).every(val => val === 0)) {\n            newMessage = '请投骰决定您的能力值。';\n        }\n\n        if (newMessage === currentValidationMessage) return;\n        currentValidationMessage = newMessage;\n\n        if (newMessage) {\n            DOM.submitBtn.disabled = true;\n            DOM.validationMessage.textContent = newMessage;\n            gsap.fromTo(DOM.validationMessage, { autoAlpha: 0, scale: 0.8 }, { autoAlpha: 1, scale: 1, duration: 0.4, ease: 'elastic.out(1, 0.75)' });\n        } else {\n            DOM.submitBtn.disabled = false;\n            gsap.to(DOM.validationMessage, { autoAlpha: 0, duration: 0.3 });\n        }\n    }\n    function updateCharacterDataFromDOM() { character.name = DOM.nameInput.value; character.gender = DOM.genderInput.value; character.age = DOM.ageInput.value; character.oc_details = DOM.ocDetailsInput.value; character.race = DOM.raceSelect.value; }\n    function renderSkills() { const uniqueSkills = [...new Set(character.skills)]; DOM.skillsContainer.innerHTML = `<p><strong>天赋与习得技能:</strong></p><ul>${uniqueSkills.map(s => `<li>- ${s}</li>`).join('')}</ul>`; }\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key}`).value = value; }); }\n    function renderSummary() {\n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '?';\n        const originText = `出身:${character.background.origin ? character.background.origin.name : '?'}`;\n        const pastText = `来历:${character.background.past ? character.background.past.name : '?'}`;\n        const encounterText = `邂逅:${character.background.encounter || '?'}`;\n        let summary = `### 《哥布林杀手TRPG》冒险者登记卡\\n` + `**姓名:** ${finalName} | **种族:** ${character.race} | **性别:** ${character.gender || '?'} | **年龄:** ${formattedAge}\\n` + `**经历:** ${originText} / ${pastText} / ${encounterText}\\n` + `**初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n` + `**初始技能:** ${uniqueSkills.join(', ') || '无'}\\n`; if (character.oc_details) { summary += `**身体特征与补充:** ${character.oc_details}\\n`; } summary += `---\\n**能力值:**\\n`; summary += Object.entries(character.attributes).map(([key, value]) => `- ${key}: ${value}`).join('\\n'); summary += `\\n**持有资金:** ${character.money} 银币`;\n        DOM.summarySheet.value = summary.replace(/### /g, '').replace(/\\*\\*/g, '').replace(/---/g, '\\n────────────────────\\n').replace(/- /g, '  ');\n        DOM.summarySheet.setAttribute('data-raw', summary);\n    }\n    async function renderRadarChartIfNeeded() { const currentAttributesString = JSON.stringify(character.attributes); if (currentAttributesString === character._lastAttributesForChart) return; DOM.radarChart.classList.add('loading'); const radarSyntax = `radar-beta\\ntitle 能力值分布\\naxis a[\"力量 ${character.attributes['力量']}\"]\\naxis b[\"敏捷 ${character.attributes['敏捷']}\"]\\naxis c[\"感知 ${character.attributes['感知']}\"]\\naxis d[\"知识 ${character.attributes['知识']}\"]\\naxis e[\"魅力 ${character.attributes['魅力']}\"]\\naxis f[\"信仰 ${character.attributes['信仰力']}\"]\\naxis g[\"魔力 ${character.attributes['魔力']}\"]\\naxis h[\"潜力 ${character.attributes['潜力']}\"]\\ncurve current[\"能力\"]{${character.attributes['力量']},${character.attributes['敏捷']},${character.attributes['感知']},${character.attributes['知识']},${character.attributes['魅力']},${character.attributes['信仰力']},${character.attributes['魔力']},${character.attributes['潜力']}}\\nmax 10\\nmin 0`; DOM.radarChart.innerHTML = radarSyntax; DOM.radarChart.removeAttribute('data-processed'); try { await mermaid.run({ nodes: [DOM.radarChart] }); character._lastAttributesForChart = currentAttributesString; } catch(e) { console.error(\"Mermaid rendering error:\", e); } finally { DOM.radarChart.classList.remove('loading'); } }\n    async function updateUI(forceFullUpdate = false) { updateCharacterDataFromDOM(); if(forceFullUpdate) { character._lastAttributesForChart = ''; character.skills = []; character.classes = {}; character.money = 100; if(raceData[character.race].skills) character.skills.push(...raceData[character.race].skills); if (character.background.origin) { if (character.background.origin.skills) character.skills.push(...character.background.origin.skills); if (character.background.origin.class) character.classes[character.background.origin.class] = character.background.origin.level; if(character.background.origin.money) character.money += rollDiceString(character.background.origin.money); } if (character.background.past && character.background.past.skills) { character.skills.push(...character.background.past.skills); } } renderAttributes(); renderSkills(); renderSummary(); await renderRadarChartIfNeeded(); validateAndToggleButton(); }\n\n    const masterTl = gsap.timeline({ delay: 0.2 });\n    const title = $('#main-title');\n    title.innerHTML = title.textContent.split('').map(char => `<span class=\"title-char\">${char}</span>`).join('');\n    gsap.set(\".gsap-header-item, .gsap-content-item\", { autoAlpha: 0, y: 20 });\n    masterTl.to(\".title-char\", { autoAlpha: 1, y: 0, duration: 0.7, ease: \"power3.out\", stagger: 0.1 }).to(\"#wax-seal\", { autoAlpha: 1, scale: 1, duration: 0.6, ease: \"elastic.out(1, 0.7)\" }, \"-=0.5\");\n    document.querySelectorAll('.gs-creator-step').forEach((step, index) => { const stepTl = gsap.timeline(); stepTl.to(step.querySelector('.gsap-header-item'), { autoAlpha: 1, y: 0, duration: 0.6, ease: 'power2.out' }).to(step.querySelectorAll('.gsap-content-item'), { autoAlpha: 1, y: 0, duration: 0.5, ease: 'power2.out', stagger: 0.1 }, '-=0.4'); masterTl.add(stepTl, `-=${index === 0 ? 0.2 : 0.7}`); });\n    const pipPositions = { 1: [ { left: '50%', top: '50%' } ], 2: [ { left: '25%', top: '25%' }, { left: '75%', top: '75%' } ], 3: [ { left: '25%', top: '25%' }, { left: '50%', top: '50%' }, { left: '75%', top: '75%' } ], 4: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 5: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '50%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 6: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '50%' }, { left: '75%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ]};\n    function setupCube(cubeEl) { const size = 'calc(var(--dice-size) / 2)'; gsap.set(cubeEl.querySelector('.face-front'),  { transform: `rotateY(0deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-back'),   { transform: `rotateY(180deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-right'),  { transform: `rotateY(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-left'),   { transform: `rotateY(-90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-top'),   { transform: `rotateX(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-bottom'), { transform: `rotateX(-90deg) translateZ(${size})` }); const faces = cubeEl.querySelectorAll('.dice-face'); faces.forEach(face => { const faceNum = face.getAttribute('data-face'); const pips = face.querySelectorAll('.pip'); const positions = pipPositions[faceNum]; if (!pips.length || !positions) return; pips.forEach((pip, index) => { const pos = positions[index]; gsap.set(pip, { left: pos.left, top: pos.top, xPercent: -50, yPercent: -50 }); }); }); }\n    function getRotationForFace(faceValue) { switch (faceValue) { case 1: return { x: 0, y: 0 }; case 6: return { x: 0, y: 180 }; case 3: return { x: 0, y: -90 }; case 4: return { x: 0, y: 90 }; case 2: return { x: -90, y: 0 }; case 5: return { x: 90,  y: 0 }; default: return { x: 0, y: 0 }; } }\n    async function animateText(element, text) { if(isSkipping) {element.innerHTML = text.replace(/\\n/g, '<br>'); return;} return new Promise(resolve => { if (textAnimation && textAnimation.isActive()) textAnimation.kill(); element.innerHTML = ''; textAnimation = gsap.to(element, { duration: text.length * 0.05, text: { value: text.replace(/\\n/g, '<br>'), newClass: \"typed-cursor\" }, ease: \"none\", onComplete: () => { gsap.delayedCall(0.7, () => { element.querySelector('.typed-cursor')?.remove(); resolve(); }); } }); }); }\n    function initDicePool() { const diceTemplate = document.querySelector('[data-id_template=\"dice-cube\"]'); if (!diceTemplate) return; for (let i = 0; i < MAX_DICE; i++) { const dieIconElement = document.createElement('div'); dieIconElement.className = 'dice-icon'; const newCube = diceTemplate.cloneNode(true); dieIconElement.appendChild(newCube); DOM.diceContainer.appendChild(dieIconElement); setupCube(newCube); dicePool.push(dieIconElement); } }\n    async function animateRoll(numDice, preCalculatedRolls, textToShowDuringRoll = \"投掷中...\") { return new Promise(resolve => { if (currentAnimation && currentAnimation.isActive()) currentAnimation.kill(); dicePool.forEach(die => die.style.display = 'none'); const activeDice = dicePool.slice(0, numDice); animateText(DOM.diceResultText, textToShowDuringRoll); activeDice.forEach(die => { die.style.display = 'flex'; die.className = 'dice-icon'; }); const masterTl = gsap.timeline({ onComplete: () => { if(isSkipping) DOM.diceResultText.innerHTML = ''; resolve(preCalculatedRolls); }}); currentAnimation = masterTl; activeDice.forEach((dieElement, i) => { const dieCube = dieElement.querySelector('.dice-cube'); const visualRoll = preCalculatedRolls[i]; const targetRotation = getRotationForFace(visualRoll); const dieTimeline = gsap.timeline(); dieTimeline.to(dieCube, { rotationX: `+=${gsap.utils.random(720, 1080)}`, rotationY: `+=${gsap.utils.random(720, 1080)}`, duration: 1.8, ease: \"power2.in\" }).to(dieCube, { rotationX: targetRotation.x, rotationY: targetRotation.y, duration: 0.7, ease: \"power4.out\" }); masterTl.add(dieTimeline, 0); }); }); }\n    \n    const debouncedUpdate = debounce(updateUI, 400);\n    [DOM.nameInput, DOM.genderInput, DOM.ageInput, DOM.ocDetailsInput].forEach(el => el.addEventListener('input', debouncedUpdate));\n    \n    DOM.skipAnimationBtn.addEventListener('click', () => {\n        isSkipping = true;\n        if (currentAnimation && currentAnimation.isActive()) currentAnimation.progress(1);\n        if (textAnimation && textAnimation.isActive()) textAnimation.progress(1);\n    });\n\n    $('#roll-background-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const rolls = [roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6()];\n        await animateRoll(6, rolls, '投掷 经历... (2d6 x 3)');\n        \n        const sums = { origin: rolls[0] + rolls[1], past: rolls[2] + rolls[3], encounter: rolls[4] + rolls[5] };\n        \n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `出身: ${rolls[0]} + ${rolls[1]} = ${sums.origin}\\n(${backgroundData.origin[character.race][sums.origin].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `来历: ${rolls[2]} + ${rolls[3]} = ${sums.past}\\n(${backgroundData.past[sums.past].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(4, 6), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `邂逅: ${rolls[4]} + ${rolls[5]} = ${sums.encounter}\\n(${backgroundData.encounter[sums.encounter]})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        character.background.origin = backgroundData.origin[character.race][sums.origin];\n        character.background.past = backgroundData.past[sums.past];\n        character.background.encounter = backgroundData.encounter[sums.encounter];\n        DOM.bgOrigin.textContent = character.background.origin.name;\n        DOM.bgPast.textContent = character.background.past.name;\n        DOM.bgEncounter.textContent = character.background.encounter;\n        DOM.backgroundDisplay.style.display = 'block';\n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        updateUI(true);\n    });\n\n    $('#roll-attributes-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const attrRolls = raceData[character.race].attr_rolls;\n        const allCalculatedRolls = [];\n\n        // Prepare race-based attributes\n        for (const attr in attrRolls) {\n            const formula = attrRolls[attr];\n            const modifier = parseInt(formula.split('d3')[1] || '0');\n            const { d6, d3 } = roll1D3();\n            const finalValue = Math.max(0, d3 + modifier);\n            character.attributes[attr] = finalValue;\n            allCalculatedRolls.push({ attr, formula, d6, d3, modifier, finalValue });\n        }\n        \n        // Prepare \"Potential\" attribute\n        const potentialValue = Math.floor(Math.random() * 3) + 1;\n        const d6ForPotential = (potentialValue * 2) - 1; // Map 1,2,3 to d6 faces 1,3,5 for animation\n        character.attributes['潜力'] = potentialValue;\n        allCalculatedRolls.push({\n            attr: '潜力',\n            formula: '1-3', // Just a descriptor\n            d6: d6ForPotential,\n            finalValue: potentialValue\n        });\n        \n        // Animate all rolls sequentially\n        for (const roll of allCalculatedRolls) {\n            await animateRoll(1, [roll.d6], `投掷 ${roll.attr}...`);\n            if (isSkipping) break;\n\n            gsap.to(dicePool[0], { className: 'dice-icon highlight', duration: 0.3 });\n            \n            let resultText;\n            if (roll.attr === '潜力') {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.finalValue}`;\n            } else {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.d3} ${roll.modifier >= 0 ? '+' : ''} ${roll.modifier} = ${roll.finalValue}`;\n            }\n            await animateText(DOM.diceResultText, resultText);\n            \n            await updateUI();\n            \n            if (isSkipping) break;\n            \n            await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        await updateUI();\n    });\n\n    DOM.raceSelect.addEventListener('change', () => {\n        DOM.backgroundDisplay.style.display = 'none';\n        character.background = { origin: null, past: null, encounter: null };\n        Object.keys(character.attributes).forEach(k => character.attributes[k] = 0);\n        updateUI(true);\n    });\n\n    $('#submit-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        await updateUI(true);\n        \n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '未设定';\n        \n        const finalCharacterObject={ NAME:finalName, GENDER:character.gender||'未设定', AGE:formattedAge, RACE:character.race, ORIGIN: character.background.origin ? character.background.origin.name : '未知', PAST: character.background.past ? character.background.past.name : '未知', ENCOUNTER: character.background.encounter || '未知', SKILLS: uniqueSkills, OC_DETAILS:character.oc_details||'无', ...character.attributes, MONEY:character.money };\n        \n        const slashCommand=`/send <START>\\nAdmin:\\n这是一个TRPG开局，请为 User 生成一段详尽的背景故事。\\n\\n# 故事核心要求\\n请严格根据以下【角色完整设定】，撰写一段从角色童年到现在的成长故事。故事需要清晰地阐述是什么关键事件或心路历程，最终让他/她确立了要成为一名冒险者的志向。请在故事中自然地融入角色的种族、出身背景、技能和性格特点。\\n\\n# 角色完整设定\\n---\\n## 基础信息\\n- **姓名:** ${finalName}\\n- **性别:** ${character.gender||'未设定'}\\n- **年龄:** ${formattedAge}\\n- **种族:** ${character.race}\\n\\n## 经历\\n- **出身:** ${character.background.origin ? character.background.origin.name : '未知'}\\n- **来历:** ${character.background.past ? character.background.past.name : '未知'}\\n- **邂逅:** ${character.background.encounter || '未知'}\\n\\n## 背景与技能\\n- **初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n- **初始技能:** ${uniqueSkills.join(', ')||'无'}\\n\\n## 补充设定 (OC)\\n- **额外补充:** ${character.oc_details||'无'}\\n\\n## 能力值\\n- **力量:** ${character.attributes['力量']}\\n- **敏捷:** ${character.attributes['敏捷']}\\n- **感知:** ${character.attributes['感知']}\\n- **知识:** ${character.attributes['知识']}\\n- **魅力:** ${character.attributes['魅力']}\\n- **信仰力:** ${character.attributes['信仰力']}\\n- **魔力:** ${character.attributes['魔力']}\\n\\n## 初始资产\\n- **资金:** ${character.money} 银币\\n\\|\\n/trigger`; \n        \n        try {\n            if (typeof insertOrAssignVariables === 'function') {\n                await insertOrAssignVariables(finalCharacterObject);\n            } else {\n                console.log(\"SillyTavern Function 'insertOrAssignVariables' not found. Variables:\", finalCharacterObject);\n            }\n            if (typeof triggerSlash === 'function') {\n                await triggerSlash(slashCommand, 'Send');\n            } else { \n                console.log(\"SillyTavern Function 'triggerSlash' not found. Command will be copied to clipboard.\");\n                navigator.clipboard.writeText(slashCommand).then(() => {\n                    alert('角色指令已复制到剪贴板！');\n                });\n            }\n        } catch (error) {\n            console.error('与SillyTavern交互失败:', error);\n            alert('与SillyTavern交互失败，请查看浏览器控制台。');\n        }\n\n        e.target.innerHTML = \"契约成立！\";\n    });\n    \n    initDicePool();\n    Object.keys(raceData).forEach(key => DOM.raceSelect.add(new Option(key, key)));\n    Object.keys(character.attributes).forEach(key => {\n        const pointControl = document.createElement('div');\n        pointControl.className = 'point-control';\n        pointControl.innerHTML = `<span class=\"label\">${key}</span><input type=\"text\" id=\"attr-${key.replace(/\\s/g, '')}\" readonly value=\"0\">`; // ID santized just in case\n        DOM.attributesContainer.appendChild(pointControl);\n    });\n    // A small fix for renderAttributes to handle sanitized IDs\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key.replace(/\\s/g, '')}`).value = value; }); }\n    updateUI(true);\n});\n</script>\n\n</body>\n</html>\n```"
  },
  {
    "role": "user",
    "content": "```\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>哥布林杀手TRPG - 冒险者契约</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/gsap.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/TextPlugin.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.min.js\" defer></script>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Noto+Serif+SC:wght@400;700&family=Vollkorn:wght@400;700&family=Courier+Prime&display=swap\" rel=\"stylesheet\">\n\n    <style>\n        :root {\n            --leather-bg: #5a3a2a;\n            --dark-leather-bg: #3b2a1a;\n            --parchment-bg: #f5f5dc;\n            --parchment-bg-gradient: linear-gradient(165deg, #f7e9d7, #e6d5c3);\n            --text-color: #3d3d3d;\n            --heading-color: #4a3c2c;\n            --border-color: #7a5a4a;\n            --font-main: 'Vollkorn', 'Noto Serif SC', serif;\n            --font-display: 'Cinzel', 'Noto Serif SC', serif;\n            --font-code: 'Courier Prime', 'Courier New', monospace;\n            --dice-size: 5rem; \n        }\n\n        html { height: 100%; }\n        body {\n            background-color: #3a2e20;\n            font-family: var(--font-main);\n            color: var(--text-color);\n            margin: 0; padding: 20px;\n            box-sizing: border-box;\n            display: flex;\n            align-items: center; justify-content: center;\n            min-height: 100%;\n        }\n        *, *:before, *:after { box-sizing: inherit; }\n\n        .creator-wrapper {\n            width: 100%; max-width: 900px;\n            margin: 0;\n            background: var(--parchment-bg-gradient);\n            border: 12px solid #8b7355;\n            border-radius: 8px;\n            box-shadow: 0 0 40px rgba(139, 115, 85, 0.3), inset 0 0 30px rgba(255, 255, 255, 0.4);\n            position: relative;\n            overflow: hidden;\n            padding: 25px;\n            display: flex; flex-direction: column;\n            max-height: 95vh;\n        }\n\n        .border-flow, .inner-border { position: absolute; pointer-events: none; }\n        .border-flow { top: 0; left: 0; right: 0; bottom: 0; background: linear-gradient(90deg, rgba(139,115,85,0.1) 1px, transparent 1px), linear-gradient(0deg, rgba(139,115,85,0.1) 1px, transparent 1px); background-size: 20px 20px; animation: borderFlow 15s linear infinite; }\n        .inner-border { top: 5px; left: 5px; right: 5px; bottom: 5px; border: 3px solid rgba(139,115,85,0.3); border-radius: 5px; }\n        @keyframes borderFlow { from { background-position: 0 0; } to { background-position: 20px 20px; } }\n\n        .creator-header {\n            text-align: center;\n            padding: 10px;\n            margin-bottom: 25px;\n            border-bottom: 2px solid rgba(139, 115, 85, 0.3);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 15px;\n        }\n        .creator-header h1 {\n            font-family: var(--font-display);\n            font-size: clamp(24px, 5vw, 32px);\n            margin: 0;\n            font-weight: 700;\n            letter-spacing: 3px;\n            color: var(--heading-color);\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.1);\n        }\n        \n        .title-char {\n            display: inline-block;\n            opacity: 0;\n            transform: translateY(30px);\n        }\n\n        .wax-seal {\n            width: 45px;\n            height: 45px;\n            display: inline-block;\n            background-color: #c0392b;\n            border-radius: 50%;\n            position: relative;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.4), inset 0 -2px 3px rgba(0,0,0,0.3);\n            opacity: 0;\n            transform: scale(0.5);\n            font-family: 'Cinzel', serif;\n            color: #e7a49c;\n            text-align: center;\n            font-size: 24px;\n            line-height: 45px;\n            font-weight: 700;\n        }\n        .wax-seal::before {\n            content: 'GS';\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.3);\n        }\n\n        .creator-scroll-content { overflow-y: auto; padding: 10px 20px 10px 10px; }\n        .creator-scroll-content::-webkit-scrollbar { width: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-track { background: rgba(139, 115, 85, 0.1); border-radius: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-thumb { background-color: #a89072; border-radius: 10px; border: 2px solid #f7e9d7; }\n        \n        .gs-creator-step { margin-bottom: 40px; overflow: hidden; }\n        .gs-creator-step h3 { font-family: var(--font-display); font-size: 1.5em; font-weight: 700; border-bottom: 1.5px solid var(--border-color); padding-bottom: 8px; margin-bottom: 20px; color: var(--heading-color); text-align: left; }\n        \n        .layout-grid { display: grid; grid-template-columns: 1fr; gap: 25px; align-items: flex-start; }\n        @media (min-width: 768px) {\n            .layout-grid { grid-template-columns: 1fr 280px; }\n        }\n\n        .form-container { text-align: left; }\n        .gs-form-group { margin-bottom: 16px; }\n        .gs-form-group label { display: block; margin-bottom: 6px; font-weight: bold; color: var(--heading-color); }\n        .form-input, .form-select, .form-textarea { width: 100%; padding: 10px; background-color: rgba(255, 255, 255, 0.5); border: 1px solid #a58e72; border-radius: 4px; color: #3d3d3d; font-family: var(--font-main); font-size: 1em; transition: all 0.2s ease-in-out; box-shadow: inset 1px 1px 2px rgba(0,0,0,0.1); }\n        .form-input:focus, .form-select:focus, .form-textarea:focus { outline: none; border-color: #8b7355; background-color: #fff; box-shadow: 0 0 5px rgba(139, 115, 85, 0.5); }\n        .form-textarea { resize: vertical; min-height: 100px; }\n\n        .grid-cols-2 {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 16px;\n        }\n        @media (min-width: 480px) {\n            .grid-cols-2 {\n                grid-template-columns: repeat(2, 1fr);\n            }\n        }\n\n        #attributes-container .point-control { display: flex; align-items: center; justify-content: space-between; margin-bottom: 8px; padding: 6px 8px; background: rgba(0,0,0,0.03); border-left: 3px solid rgba(139,115,85,0.2); border-radius: 4px; }\n        #attributes-container .label { font-weight: bold; color: var(--heading-color); }\n        #attributes-container input[readonly] { width: 40px; text-align: center; font-weight: bold; font-size: 1.2em; font-family: var(--font-display); color: #a02c2c; border: none; background-color: transparent; box-shadow: none; padding: 0; }\n        \n        .attributes-grid {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 0 16px;\n        }\n        @media (min-width: 480px) {\n            .attributes-grid {\n                grid-template-columns: 1fr 1fr;\n            }\n        }\n        \n        .skills-display p { background-color: rgba(0,0,0,0.05); border-left: 3px solid var(--border-color); padding: 10px 15px; margin-top: 10px; font-size: 0.95em; border-radius: 0 4px 4px 0; }\n        .skills-display strong { color: #8b5b4b; font-family: var(--font-display); }\n        .skills-display ul { list-style: none; padding-left: 0; margin-top: 8px; font-size: 0.9em; }\n        .skills-display li { margin-bottom: 4px; }\n\n        #character-summary { background-color: #e9e4d9; font-family: var(--font-code); line-height: 1.6; height: 250px; color: #2c2a2a; }\n        \n        .gs-button { width: 100%; background-color: #8b7355; color: var(--parchment-bg); border: 2px solid var(--dark-leather-bg); border-radius: 5px; padding: 12px 20px; font-family: var(--font-display); font-size: 1.2em; font-weight: 700; cursor: pointer; margin-top: 10px; transition: all 0.3s ease; box-shadow: 0 3px 5px rgba(0,0,0,0.3); }\n        .gs-button:hover { background-color: #a0886c; transform: translateY(-2px); box-shadow: 0 5px 8px rgba(0,0,0,0.3); }\n        .gs-button:disabled { background-color: #9e9e9e; border-color: #757575; cursor: not-allowed; transform: none; box-shadow: none; opacity: 0.6; }\n        .action-button { background-color: #6d5b4b; font-size: 1em; padding: 10px 15px; margin-top: 0; margin-bottom: 10px; width: auto; }\n        \n        .background-display { margin-top: 15px; padding: 15px; border: 1px dashed var(--border-color); border-radius: 5px; background: rgba(0,0,0,0.02); }\n        .background-display p { margin: 0 0 8px; }\n        .background-display span { font-weight: bold; color: var(--heading-color); }\n        \n        #radar-chart-container { \n            max-width: 100%;\n        }\n        @media (min-width: 768px) {\n            #radar-chart-container {\n                position: sticky;\n                top: 0;\n                padding-top: 45px;\n            }\n        }\n\n        pre.mermaid { \n            font-family: var(--font-main); \n            background: rgba(0,0,0,0.02); \n            border: 1px solid rgba(139,115,85,0.1); \n            padding: 10px; \n            border-radius: 5px; \n            overflow: auto;\n            transition: opacity 0.3s ease-in-out;\n        }\n        pre.mermaid.loading { opacity: 0.5; pointer-events: none; }\n\n        pre.mermaid > svg {\n            max-width: 100%;\n            height: auto;\n        }\n\n        #dice-overlay {\n            position: fixed; top: 0; left: 0; width: 100%; height: 100%;\n            background: rgba(0,0,0,0.8); backdrop-filter: blur(5px);\n            display: none; align-items: center; justify-content: center; flex-direction: column;\n            z-index: 100;\n            color: #fff; text-shadow: 0 0 10px #000;\n        }\n\n        .dice-container {\n            display: flex; flex-wrap: wrap; justify-content: center;\n            gap: 2rem; margin-bottom: 2rem;\n            max-width: 600px;\n        }\n        \n        .dice-icon {\n            width: var(--dice-size); height: var(--dice-size);\n            perspective: 800px;\n            transform-style: preserve-3d;\n            display: none;\n        }\n        .dice-icon.highlight {\n            transform: scale(1.15);\n            filter: drop-shadow(0 0 15px #FFEB3B);\n            transition: transform 0.3s ease, filter 0.3s ease;\n        }\n\n        .dice-cube {\n            width: 100%; height: 100%;\n            position: relative;\n            transform-style: preserve-3d;\n            transform: translateZ(calc(var(--dice-size) / -2));\n        }\n        \n        .dice-face {\n            position: absolute;\n            width: var(--dice-size); height: var(--dice-size);\n            background-color: rgba(255, 255, 255, 0.98);\n            border: 1.5px solid #857e72;\n            border-radius: 12%;\n        }\n\n        .pips-container {\n            width: 100%; height: 100%;\n            position: relative; \n        }\n        .pip {\n            width: 22%; height: 22%; \n            background-color: #3d352e;\n            border-radius: 50%;\n            box-shadow: inset 0 1px 3px rgba(0,0,0,0.5);\n            position: absolute; \n        }\n        \n        #dice-result-text { \n            font-family: var(--font-display); \n            font-size: 2.2em;\n            color: #FFEB3B; \n            text-shadow: 0 0 12px #FFEB3B; \n            min-height: 2em;\n            line-height: 1.2;\n            text-align: center; \n        }\n        \n        #skip-animation-btn {\n            position: absolute;\n            bottom: 30px;\n            font-size: 1em;\n            padding: 8px 20px;\n            width: auto;\n            background-color: rgba(0,0,0,0.3);\n            border-color: rgba(255,255,255,0.5);\n            color: rgba(255,255,255,0.8);\n        }\n        #skip-animation-btn:hover {\n            background-color: rgba(0,0,0,0.5);\n            color: #fff;\n        }\n\n        .typed-cursor {\n            opacity: 1;\n            animation: typed-blink 0.7s infinite;\n        }\n        @keyframes typed-blink{\n            0% { opacity: 1; }\n            50% { opacity: 0; }\n            100% { opacity: 1; }\n        }\n        \n        .validation-message {\n            text-align: center;\n            color: #b71c1c;\n            font-size: 0.9em;\n            font-weight: bold;\n            margin-top: -5px;\n            margin-bottom: 10px;\n            height: 1.2em;\n            opacity: 0;\n            will-change: transform, opacity;\n        }\n\n        #credits-screen {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            pointer-events: none;\n            opacity: 0;\n        }\n\n        #credits-screen p {\n            font-family: var(--font-display);\n            font-size: 2em;\n            color: #f5f5dc;\n            text-shadow: 0 0 8px rgba(245, 245, 220, 0.7);\n        }\n    </style>\n</head>\n<body>\n\n<div class=\"creator-wrapper\">\n    <div class=\"border-flow\"></div>\n    <div class=\"inner-border\"></div>\n    <header class=\"creator-header\">\n        <h1 id=\"main-title\">冒险者契约登记</h1>\n        <div id=\"wax-seal\" class=\"wax-seal\"></div>\n    </header>\n\n    <div class=\"creator-scroll-content\">\n        <div class=\"gs-creator-container\">\n            <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第一步：身份确认</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-name-input\">姓名</label><input id=\"char-name-input\" type=\"text\" placeholder=\"可留空，默认为 {{user}}\" class=\"form-input\"></div>\n                    <div class=\"grid-cols-2 gsap-content-item\">\n                        <div class=\"gs-form-group\"><label for=\"char-gender-input\">性别</label><input id=\"char-gender-input\" type=\"text\" placeholder=\"例如: 男性/女性/双性/无性/……\" class=\"form-input\"></div>\n                        <div class=\"gs-form-group\"><label for=\"char-age-input\">年龄</label><input id=\"char-age-input\" type=\"number\" placeholder=\"可参照种族说明\" class=\"form-input\"></div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-race-select\">种族</label><select id=\"char-race-select\" class=\"form-select\"></select></div>\n                    <div class=\"gs-form-group gsap-content-item\">\n                        <label>经历 (出身/来历/邂逅)</label>\n                        <button id=\"roll-background-btn\" class=\"gs-button action-button\">🎲 投骰决定经历</button>\n                        <div id=\"background-display\" class=\"background-display\" style=\"display: none;\">\n                            <p>出身: <span id=\"bg-origin\"></span></p>\n                            <p>来历: <span id=\"bg-past\"></span></p>\n                            <p>邂逅: <span id=\"bg-encounter\"></span></p>\n                        </div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"oc-details-input\">身体特征与补充</label><textarea id=\"oc-details-input\" placeholder=\"发色、瞳色、体型、性格、背景故事构思...\" class=\"form-textarea\"></textarea></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第二步：能力值与技能</h3>\n                <div class=\"layout-grid\">\n                    <div class=\"form-container gsap-content-item\">\n                        <button id=\"roll-attributes-btn\" class=\"gs-button action-button\">🎲 投骰决定能力值</button>\n                        <div id=\"attributes-container\" class=\"attributes-grid\"></div>\n                        <div id=\"skills-and-desc-container\" class=\"skills-display\"></div>\n                    </div>\n                    <div id=\"radar-chart-container\" class=\"gsap-content-item\"><pre class=\"mermaid\" id=\"radar-chart\"></pre></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第三步：完成登记</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"character-summary\">角色卡预览</label><textarea id=\"character-summary\" rows=\"12\" readonly class=\"form-textarea\"></textarea></div>\n                    <button id=\"submit-btn\" class=\"gs-button gsap-content-item\" disabled>确认登记，开始冒险</button>\n                    <div id=\"validation-message\" class=\"validation-message\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div id=\"credits-screen\">\n    <p>作者 𝙀𝙡𝙖𝙞𝙣𝙖𝙙𝙚𝙨</p>\n</div>\n\n<div id=\"dice-overlay\">\n    <div class=\"dice-container\" id=\"dice-container\"></div>\n    <div id=\"dice-result-text\"></div>\n    <button id=\"skip-animation-btn\" class=\"gs-button\">跳过动画</button>\n</div>\n\n<div id=\"dice-templates\" style=\"display:none;\">\n    <div class=\"dice-cube\" data-id_template=\"dice-cube\">\n        <div class=\"dice-face face-front\" data-face=\"1\"><div class=\"pips-container\"><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-back\" data-face=\"6\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-right\" data-face=\"3\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-left\" data-face=\"4\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-top\" data-face=\"2\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-bottom\" data-face=\"5\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n    </div>\n</div>\n\n<script>\n// --- MODIFIED DATA ---\nconst raceData = {\n    '凡人': { attr_rolls: { '力量': '1d3+1', '敏捷': '1d3', '感知': '1d3', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3+2', '魔力': '1d3' }, skills: ['过载行动(初级)', '武器:投掷武器(初级)', '长距离移动(初级)']},\n    '矿人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3', '感知': '1d3+2', '知识': '1d3-1', '魅力': '1d3+1', '信仰力': '1d3+1', '魔力': '1d3-1' }, skills: ['治愈适性(初级)', '夜视(初级)', '锻造(初级)']},\n    '森人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+1', '感知': '1d3+1', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3-1', '魔力': '1d3+1' }, skills: ['武器:弩弓(初级)', '夜视(初级)', '精灵宠儿(初级)']},\n    '蜥蜴人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3+1', '感知': '1d3', '知识': '1d3', '魅力': '1d3+1', '信仰力': '1d3', '魔力': '1d3' }, skills: ['免疫强化(初级)', '夜视(初级)', '龙族血统(初级)']},\n    '圃人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+2', '感知': '1d3+1', '知识': '1d3', '魅力': '1d3-1', '信仰力': '1d3', '魔力': '1d3+2' }, skills: ['隐匿(初级)', '先发制人(初级)', '烹饪(初级)']}\n};\nconst backgroundData = {\n    origin: { \n        '凡人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '学者', class: '魔术师', level: 1, skills: ['文献调查(初级)'] }, 6: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 7: { name: '农民', skills: ['生产业:农业(初级)', '强健(初级)'] }, 8: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '骑士', class: '战士', level: 1, skills: ['骑乘(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n        '矿人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 6: { name: '酒馆老板', class: '战士', level: 1, skills: ['观察(初级)'] }, 7: { name: '铁匠', skills: ['工匠:锻造(初级)', '手工(初级)'] }, 8: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '碎盾者', class: '战士', level: 1, skills: ['强击攻击·斩(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n    },\n    past: { 2: { name: '奴隶', skills: ['劳动(初级)'] }, 3: { name: '牢狱', skills: ['犯罪知识(初级)'] }, 4: { name: '战场', skills: ['沉着冷静(初级)'] }, 5: { name: '神殿', skills: ['神学(初级)'] }, 6: { name: '孤儿', skills: ['忍耐(初级)'] }, 7: { name: '平顺', skills: ['幸运(初级)'] }, 8: { name: '贫困', skills: ['生存术(初级)'] }, 9: { name: '学校', skills: ['博识(初级)'] }, 10: { name: '深闺', skills: ['无偏见(初级)'] }, 11: { name: '奢华', skills: ['鉴定(初级)'] }, 12: { name: '宫廷', skills: ['礼仪(初级)'] }},\n    encounter: { 2: '宿敌', 3: '上司', 4: '后辈', 5: '交易对象', 6: '下属', 7: '家人', 8: '挚友', 9: '前辈', 10: '未婚夫/妻', 11: '劲敌', 12: '师父' }\n};\nbackgroundData.origin['森人'] = backgroundData.origin['凡人']; backgroundData.origin['蜥蜴人'] = backgroundData.origin['凡人']; backgroundData.origin['圃人'] = backgroundData.origin['凡人'];\nconst character = {\n    name: '', gender: '', age: '', oc_details: '', race: '凡人',\n    background: { origin: null, past: null, encounter: null },\n    attributes: { '力量': 0, '敏捷': 0, '感知': 0, '知识': 0, '魅力': 0, '信仰力': 0, '魔力': 0, '潜力': 0 },\n    skills: [], classes: {}, money: 0, _lastAttributesForChart: '',\n};\n// --- END MODIFIED DATA ---\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    gsap.registerPlugin(TextPlugin);\n    mermaid.initialize({ startOnLoad: true, theme: 'base', themeVariables: {\n        '--mermaid-font-family': \"'Vollkorn', 'Noto Serif SC', serif\",\n        primaryColor: '#f7e9d7', primaryTextColor: '#3d3d3d', lineColor: '#8b7355', textColor: '#4a3c2c',\n    }});\n    \n    const $ = (s) => document.querySelector(s);\n    const roll1D6 = () => Math.floor(Math.random() * 6) + 1;\n    const roll1D3 = () => {\n        const d6 = roll1D6();\n        if (d6 <= 2) return { d6, d3: 1 };\n        if (d6 <= 4) return { d6, d3: 2 };\n        return { d6, d3: 3 };\n    };\n    const rollDiceString = (diceString) => { const p=diceString.split('*');const d=p[0];const m=parseInt(p[1])||1;if(!d.includes('d'))return 0;const[n,s]=d.split('d').map(Number);let t=0;for(let i=0;i<n;i++){t+=Math.floor(Math.random()*s)+1;}return t*m; };\n    const formatAge = (ageValue) => { if (!ageValue && ageValue !== 0) return ageValue; const num = Number(ageValue); if (isNaN(num)) return ageValue; if (Math.abs(num) >= 1_000_000) return num.toExponential(2); return ageValue; };\n    const debounce = (func, delay) => { let timeout; return function(...args) { clearTimeout(timeout); timeout = setTimeout(() => func.apply(this, args), delay); }; };\n    const diceUnicode = ['\\u2680', '\\u2681', '\\u2682', '\\u2683', '\\u2684', '\\u2685'];\n\n    const DOM = {\n        nameInput: $('#char-name-input'), genderInput: $('#char-gender-input'), ageInput: $('#char-age-input'),\n        ocDetailsInput: $('#oc-details-input'), raceSelect: $('#char-race-select'), attributesContainer: $('#attributes-container'),\n        skillsContainer: $('#skills-and-desc-container'), radarChart: $('#radar-chart'), summarySheet: $('#character-summary'),\n        diceOverlay: $('#dice-overlay'), diceContainer: $('#dice-container'), diceResultText: $('#dice-result-text'),\n        backgroundDisplay: $('#background-display'), bgOrigin: $('#bg-origin'), bgPast: $('#bg-past'), bgEncounter: $('#bg-encounter'),\n        skipAnimationBtn: $('#skip-animation-btn'),\n        submitBtn: $('#submit-btn'),\n        validationMessage: $('#validation-message'),\n    };\n    \n    const dicePool = []; const MAX_DICE = 6;\n    let currentAnimation = null; let textAnimation = null; let isSkipping = false;\n    let currentValidationMessage = '';\n    \n    function validateAndToggleButton() {\n        let newMessage = '';\n        if (!character.age || String(character.age).trim() === '') {\n            newMessage = '请填写您的冒险者年龄。';\n        } else if (!character.gender || !character.gender.trim()) {\n            newMessage = '请设定冒险者的性别。';\n        } else if (!character.background.origin) {\n            newMessage = '请投骰决定您的冒险者经历。';\n        } else if (Object.values(character.attributes).every(val => val === 0)) {\n            newMessage = '请投骰决定您的能力值。';\n        }\n\n        if (newMessage === currentValidationMessage) return;\n        currentValidationMessage = newMessage;\n\n        if (newMessage) {\n            DOM.submitBtn.disabled = true;\n            DOM.validationMessage.textContent = newMessage;\n            gsap.fromTo(DOM.validationMessage, { autoAlpha: 0, scale: 0.8 }, { autoAlpha: 1, scale: 1, duration: 0.4, ease: 'elastic.out(1, 0.75)' });\n        } else {\n            DOM.submitBtn.disabled = false;\n            gsap.to(DOM.validationMessage, { autoAlpha: 0, duration: 0.3 });\n        }\n    }\n    function updateCharacterDataFromDOM() { character.name = DOM.nameInput.value; character.gender = DOM.genderInput.value; character.age = DOM.ageInput.value; character.oc_details = DOM.ocDetailsInput.value; character.race = DOM.raceSelect.value; }\n    function renderSkills() { const uniqueSkills = [...new Set(character.skills)]; DOM.skillsContainer.innerHTML = `<p><strong>天赋与习得技能:</strong></p><ul>${uniqueSkills.map(s => `<li>- ${s}</li>`).join('')}</ul>`; }\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key}`).value = value; }); }\n    function renderSummary() {\n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '?';\n        const originText = `出身:${character.background.origin ? character.background.origin.name : '?'}`;\n        const pastText = `来历:${character.background.past ? character.background.past.name : '?'}`;\n        const encounterText = `邂逅:${character.background.encounter || '?'}`;\n        let summary = `### 《哥布林杀手TRPG》冒险者登记卡\\n` + `**姓名:** ${finalName} | **种族:** ${character.race} | **性别:** ${character.gender || '?'} | **年龄:** ${formattedAge}\\n` + `**经历:** ${originText} / ${pastText} / ${encounterText}\\n` + `**初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n` + `**初始技能:** ${uniqueSkills.join(', ') || '无'}\\n`; if (character.oc_details) { summary += `**身体特征与补充:** ${character.oc_details}\\n`; } summary += `---\\n**能力值:**\\n`; summary += Object.entries(character.attributes).map(([key, value]) => `- ${key}: ${value}`).join('\\n'); summary += `\\n**持有资金:** ${character.money} 银币`;\n        DOM.summarySheet.value = summary.replace(/### /g, '').replace(/\\*\\*/g, '').replace(/---/g, '\\n────────────────────\\n').replace(/- /g, '  ');\n        DOM.summarySheet.setAttribute('data-raw', summary);\n    }\n    async function renderRadarChartIfNeeded() { const currentAttributesString = JSON.stringify(character.attributes); if (currentAttributesString === character._lastAttributesForChart) return; DOM.radarChart.classList.add('loading'); const radarSyntax = `radar-beta\\ntitle 能力值分布\\naxis a[\"力量 ${character.attributes['力量']}\"]\\naxis b[\"敏捷 ${character.attributes['敏捷']}\"]\\naxis c[\"感知 ${character.attributes['感知']}\"]\\naxis d[\"知识 ${character.attributes['知识']}\"]\\naxis e[\"魅力 ${character.attributes['魅力']}\"]\\naxis f[\"信仰 ${character.attributes['信仰力']}\"]\\naxis g[\"魔力 ${character.attributes['魔力']}\"]\\naxis h[\"潜力 ${character.attributes['潜力']}\"]\\ncurve current[\"能力\"]{${character.attributes['力量']},${character.attributes['敏捷']},${character.attributes['感知']},${character.attributes['知识']},${character.attributes['魅力']},${character.attributes['信仰力']},${character.attributes['魔力']},${character.attributes['潜力']}}\\nmax 10\\nmin 0`; DOM.radarChart.innerHTML = radarSyntax; DOM.radarChart.removeAttribute('data-processed'); try { await mermaid.run({ nodes: [DOM.radarChart] }); character._lastAttributesForChart = currentAttributesString; } catch(e) { console.error(\"Mermaid rendering error:\", e); } finally { DOM.radarChart.classList.remove('loading'); } }\n    async function updateUI(forceFullUpdate = false) { updateCharacterDataFromDOM(); if(forceFullUpdate) { character._lastAttributesForChart = ''; character.skills = []; character.classes = {}; character.money = 100; if(raceData[character.race].skills) character.skills.push(...raceData[character.race].skills); if (character.background.origin) { if (character.background.origin.skills) character.skills.push(...character.background.origin.skills); if (character.background.origin.class) character.classes[character.background.origin.class] = character.background.origin.level; if(character.background.origin.money) character.money += rollDiceString(character.background.origin.money); } if (character.background.past && character.background.past.skills) { character.skills.push(...character.background.past.skills); } } renderAttributes(); renderSkills(); renderSummary(); await renderRadarChartIfNeeded(); validateAndToggleButton(); }\n\n    const masterTl = gsap.timeline({ delay: 0.2 });\n    const title = $('#main-title');\n    title.innerHTML = title.textContent.split('').map(char => `<span class=\"title-char\">${char}</span>`).join('');\n    gsap.set(\".gsap-header-item, .gsap-content-item\", { autoAlpha: 0, y: 20 });\n    masterTl.to(\".title-char\", { autoAlpha: 1, y: 0, duration: 0.7, ease: \"power3.out\", stagger: 0.1 }).to(\"#wax-seal\", { autoAlpha: 1, scale: 1, duration: 0.6, ease: \"elastic.out(1, 0.7)\" }, \"-=0.5\");\n    document.querySelectorAll('.gs-creator-step').forEach((step, index) => { const stepTl = gsap.timeline(); stepTl.to(step.querySelector('.gsap-header-item'), { autoAlpha: 1, y: 0, duration: 0.6, ease: 'power2.out' }).to(step.querySelectorAll('.gsap-content-item'), { autoAlpha: 1, y: 0, duration: 0.5, ease: 'power2.out', stagger: 0.1 }, '-=0.4'); masterTl.add(stepTl, `-=${index === 0 ? 0.2 : 0.7}`); });\n    const pipPositions = { 1: [ { left: '50%', top: '50%' } ], 2: [ { left: '25%', top: '25%' }, { left: '75%', top: '75%' } ], 3: [ { left: '25%', top: '25%' }, { left: '50%', top: '50%' }, { left: '75%', top: '75%' } ], 4: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 5: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '50%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 6: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '50%' }, { left: '75%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ]};\n    function setupCube(cubeEl) { const size = 'calc(var(--dice-size) / 2)'; gsap.set(cubeEl.querySelector('.face-front'),  { transform: `rotateY(0deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-back'),   { transform: `rotateY(180deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-right'),  { transform: `rotateY(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-left'),   { transform: `rotateY(-90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-top'),   { transform: `rotateX(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-bottom'), { transform: `rotateX(-90deg) translateZ(${size})` }); const faces = cubeEl.querySelectorAll('.dice-face'); faces.forEach(face => { const faceNum = face.getAttribute('data-face'); const pips = face.querySelectorAll('.pip'); const positions = pipPositions[faceNum]; if (!pips.length || !positions) return; pips.forEach((pip, index) => { const pos = positions[index]; gsap.set(pip, { left: pos.left, top: pos.top, xPercent: -50, yPercent: -50 }); }); }); }\n    function getRotationForFace(faceValue) { switch (faceValue) { case 1: return { x: 0, y: 0 }; case 6: return { x: 0, y: 180 }; case 3: return { x: 0, y: -90 }; case 4: return { x: 0, y: 90 }; case 2: return { x: -90, y: 0 }; case 5: return { x: 90,  y: 0 }; default: return { x: 0, y: 0 }; } }\n    async function animateText(element, text) { if(isSkipping) {element.innerHTML = text.replace(/\\n/g, '<br>'); return;} return new Promise(resolve => { if (textAnimation && textAnimation.isActive()) textAnimation.kill(); element.innerHTML = ''; textAnimation = gsap.to(element, { duration: text.length * 0.05, text: { value: text.replace(/\\n/g, '<br>'), newClass: \"typed-cursor\" }, ease: \"none\", onComplete: () => { gsap.delayedCall(0.7, () => { element.querySelector('.typed-cursor')?.remove(); resolve(); }); } }); }); }\n    function initDicePool() { const diceTemplate = document.querySelector('[data-id_template=\"dice-cube\"]'); if (!diceTemplate) return; for (let i = 0; i < MAX_DICE; i++) { const dieIconElement = document.createElement('div'); dieIconElement.className = 'dice-icon'; const newCube = diceTemplate.cloneNode(true); dieIconElement.appendChild(newCube); DOM.diceContainer.appendChild(dieIconElement); setupCube(newCube); dicePool.push(dieIconElement); } }\n    async function animateRoll(numDice, preCalculatedRolls, textToShowDuringRoll = \"投掷中...\") { return new Promise(resolve => { if (currentAnimation && currentAnimation.isActive()) currentAnimation.kill(); dicePool.forEach(die => die.style.display = 'none'); const activeDice = dicePool.slice(0, numDice); animateText(DOM.diceResultText, textToShowDuringRoll); activeDice.forEach(die => { die.style.display = 'flex'; die.className = 'dice-icon'; }); const masterTl = gsap.timeline({ onComplete: () => { if(isSkipping) DOM.diceResultText.innerHTML = ''; resolve(preCalculatedRolls); }}); currentAnimation = masterTl; activeDice.forEach((dieElement, i) => { const dieCube = dieElement.querySelector('.dice-cube'); const visualRoll = preCalculatedRolls[i]; const targetRotation = getRotationForFace(visualRoll); const dieTimeline = gsap.timeline(); dieTimeline.to(dieCube, { rotationX: `+=${gsap.utils.random(720, 1080)}`, rotationY: `+=${gsap.utils.random(720, 1080)}`, duration: 1.8, ease: \"power2.in\" }).to(dieCube, { rotationX: targetRotation.x, rotationY: targetRotation.y, duration: 0.7, ease: \"power4.out\" }); masterTl.add(dieTimeline, 0); }); }); }\n    \n    const debouncedUpdate = debounce(updateUI, 400);\n    [DOM.nameInput, DOM.genderInput, DOM.ageInput, DOM.ocDetailsInput].forEach(el => el.addEventListener('input', debouncedUpdate));\n    \n    DOM.skipAnimationBtn.addEventListener('click', () => {\n        isSkipping = true;\n        if (currentAnimation && currentAnimation.isActive()) currentAnimation.progress(1);\n        if (textAnimation && textAnimation.isActive()) textAnimation.progress(1);\n    });\n\n    $('#roll-background-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const rolls = [roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6()];\n        await animateRoll(6, rolls, '投掷 经历... (2d6 x 3)');\n        \n        const sums = { origin: rolls[0] + rolls[1], past: rolls[2] + rolls[3], encounter: rolls[4] + rolls[5] };\n        \n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `出身: ${rolls[0]} + ${rolls[1]} = ${sums.origin}\\n(${backgroundData.origin[character.race][sums.origin].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `来历: ${rolls[2]} + ${rolls[3]} = ${sums.past}\\n(${backgroundData.past[sums.past].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(4, 6), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `邂逅: ${rolls[4]} + ${rolls[5]} = ${sums.encounter}\\n(${backgroundData.encounter[sums.encounter]})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        character.background.origin = backgroundData.origin[character.race][sums.origin];\n        character.background.past = backgroundData.past[sums.past];\n        character.background.encounter = backgroundData.encounter[sums.encounter];\n        DOM.bgOrigin.textContent = character.background.origin.name;\n        DOM.bgPast.textContent = character.background.past.name;\n        DOM.bgEncounter.textContent = character.background.encounter;\n        DOM.backgroundDisplay.style.display = 'block';\n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        updateUI(true);\n    });\n\n    $('#roll-attributes-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const attrRolls = raceData[character.race].attr_rolls;\n        const allCalculatedRolls = [];\n\n        // Prepare race-based attributes\n        for (const attr in attrRolls) {\n            const formula = attrRolls[attr];\n            const modifier = parseInt(formula.split('d3')[1] || '0');\n            const { d6, d3 } = roll1D3();\n            const finalValue = Math.max(0, d3 + modifier);\n            character.attributes[attr] = finalValue;\n            allCalculatedRolls.push({ attr, formula, d6, d3, modifier, finalValue });\n        }\n        \n        // Prepare \"Potential\" attribute\n        const potentialValue = Math.floor(Math.random() * 3) + 1;\n        const d6ForPotential = (potentialValue * 2) - 1; // Map 1,2,3 to d6 faces 1,3,5 for animation\n        character.attributes['潜力'] = potentialValue;\n        allCalculatedRolls.push({\n            attr: '潜力',\n            formula: '1-3', // Just a descriptor\n            d6: d6ForPotential,\n            finalValue: potentialValue\n        });\n        \n        // Animate all rolls sequentially\n        for (const roll of allCalculatedRolls) {\n            await animateRoll(1, [roll.d6], `投掷 ${roll.attr}...`);\n            if (isSkipping) break;\n\n            gsap.to(dicePool[0], { className: 'dice-icon highlight', duration: 0.3 });\n            \n            let resultText;\n            if (roll.attr === '潜力') {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.finalValue}`;\n            } else {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.d3} ${roll.modifier >= 0 ? '+' : ''} ${roll.modifier} = ${roll.finalValue}`;\n            }\n            await animateText(DOM.diceResultText, resultText);\n            \n            await updateUI();\n            \n            if (isSkipping) break;\n            \n            await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        await updateUI();\n    });\n\n    DOM.raceSelect.addEventListener('change', () => {\n        DOM.backgroundDisplay.style.display = 'none';\n        character.background = { origin: null, past: null, encounter: null };\n        Object.keys(character.attributes).forEach(k => character.attributes[k] = 0);\n        updateUI(true);\n    });\n\n    $('#submit-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        await updateUI(true);\n        \n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '未设定';\n        \n        const finalCharacterObject={ NAME:finalName, GENDER:character.gender||'未设定', AGE:formattedAge, RACE:character.race, ORIGIN: character.background.origin ? character.background.origin.name : '未知', PAST: character.background.past ? character.background.past.name : '未知', ENCOUNTER: character.background.encounter || '未知', SKILLS: uniqueSkills, OC_DETAILS:character.oc_details||'无', ...character.attributes, MONEY:character.money };\n        \n        const slashCommand=`/send <START>\\nAdmin:\\n这是一个TRPG开局，请为 User 生成一段详尽的背景故事。\\n\\n# 故事核心要求\\n请严格根据以下【角色完整设定】，撰写一段从角色童年到现在的成长故事。故事需要清晰地阐述是什么关键事件或心路历程，最终让他/她确立了要成为一名冒险者的志向。请在故事中自然地融入角色的种族、出身背景、技能和性格特点。\\n\\n# 角色完整设定\\n---\\n## 基础信息\\n- **姓名:** ${finalName}\\n- **性别:** ${character.gender||'未设定'}\\n- **年龄:** ${formattedAge}\\n- **种族:** ${character.race}\\n\\n## 经历\\n- **出身:** ${character.background.origin ? character.background.origin.name : '未知'}\\n- **来历:** ${character.background.past ? character.background.past.name : '未知'}\\n- **邂逅:** ${character.background.encounter || '未知'}\\n\\n## 背景与技能\\n- **初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n- **初始技能:** ${uniqueSkills.join(', ')||'无'}\\n\\n## 补充设定 (OC)\\n- **额外补充:** ${character.oc_details||'无'}\\n\\n## 能力值\\n- **力量:** ${character.attributes['力量']}\\n- **敏捷:** ${character.attributes['敏捷']}\\n- **感知:** ${character.attributes['感知']}\\n- **知识:** ${character.attributes['知识']}\\n- **魅力:** ${character.attributes['魅力']}\\n- **信仰力:** ${character.attributes['信仰力']}\\n- **魔力:** ${character.attributes['魔力']}\\n\\n## 初始资产\\n- **资金:** ${character.money} 银币\\n\\|\\n/trigger`; \n        \n        try {\n            if (typeof insertOrAssignVariables === 'function') {\n                await insertOrAssignVariables(finalCharacterObject);\n            } else {\n                console.log(\"SillyTavern Function 'insertOrAssignVariables' not found. Variables:\", finalCharacterObject);\n            }\n            if (typeof triggerSlash === 'function') {\n                await triggerSlash(slashCommand, 'Send');\n            } else { \n                console.log(\"SillyTavern Function 'triggerSlash' not found. Command will be copied to clipboard.\");\n                navigator.clipboard.writeText(slashCommand).then(() => {\n                    alert('角色指令已复制到剪贴板！');\n                });\n            }\n        } catch (error) {\n            console.error('与SillyTavern交互失败:', error);\n            alert('与SillyTavern交互失败，请查看浏览器控制台。');\n        }\n\n        e.target.innerHTML = \"契约成立！\";\n    });\n    \n    initDicePool();\n    Object.keys(raceData).forEach(key => DOM.raceSelect.add(new Option(key, key)));\n    Object.keys(character.attributes).forEach(key => {\n        const pointControl = document.createElement('div');\n        pointControl.className = 'point-control';\n        pointControl.innerHTML = `<span class=\"label\">${key}</span><input type=\"text\" id=\"attr-${key.replace(/\\s/g, '')}\" readonly value=\"0\">`; // ID santized just in case\n        DOM.attributesContainer.appendChild(pointControl);\n    });\n    // A small fix for renderAttributes to handle sanitized IDs\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key.replace(/\\s/g, '')}`).value = value; }); }\n    updateUI(true);\n});\n</script>\n\n</body>\n</html>\n```"
  },
  {
    "role": "user",
    "content": "```\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>哥布林杀手TRPG - 冒险者契约</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/gsap.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/TextPlugin.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.min.js\" defer></script>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Noto+Serif+SC:wght@400;700&family=Vollkorn:wght@400;700&family=Courier+Prime&display=swap\" rel=\"stylesheet\">\n\n    <style>\n        :root {\n            --leather-bg: #5a3a2a;\n            --dark-leather-bg: #3b2a1a;\n            --parchment-bg: #f5f5dc;\n            --parchment-bg-gradient: linear-gradient(165deg, #f7e9d7, #e6d5c3);\n            --text-color: #3d3d3d;\n            --heading-color: #4a3c2c;\n            --border-color: #7a5a4a;\n            --font-main: 'Vollkorn', 'Noto Serif SC', serif;\n            --font-display: 'Cinzel', 'Noto Serif SC', serif;\n            --font-code: 'Courier Prime', 'Courier New', monospace;\n            --dice-size: 5rem; \n        }\n\n        html { height: 100%; }\n        body {\n            background-color: #3a2e20;\n            font-family: var(--font-main);\n            color: var(--text-color);\n            margin: 0; padding: 20px;\n            box-sizing: border-box;\n            display: flex;\n            align-items: center; justify-content: center;\n            min-height: 100%;\n        }\n        *, *:before, *:after { box-sizing: inherit; }\n\n        .creator-wrapper {\n            width: 100%; max-width: 900px;\n            margin: 0;\n            background: var(--parchment-bg-gradient);\n            border: 12px solid #8b7355;\n            border-radius: 8px;\n            box-shadow: 0 0 40px rgba(139, 115, 85, 0.3), inset 0 0 30px rgba(255, 255, 255, 0.4);\n            position: relative;\n            overflow: hidden;\n            padding: 25px;\n            display: flex; flex-direction: column;\n            max-height: 95vh;\n        }\n\n        .border-flow, .inner-border { position: absolute; pointer-events: none; }\n        .border-flow { top: 0; left: 0; right: 0; bottom: 0; background: linear-gradient(90deg, rgba(139,115,85,0.1) 1px, transparent 1px), linear-gradient(0deg, rgba(139,115,85,0.1) 1px, transparent 1px); background-size: 20px 20px; animation: borderFlow 15s linear infinite; }\n        .inner-border { top: 5px; left: 5px; right: 5px; bottom: 5px; border: 3px solid rgba(139,115,85,0.3); border-radius: 5px; }\n        @keyframes borderFlow { from { background-position: 0 0; } to { background-position: 20px 20px; } }\n\n        .creator-header {\n            text-align: center;\n            padding: 10px;\n            margin-bottom: 25px;\n            border-bottom: 2px solid rgba(139, 115, 85, 0.3);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 15px;\n        }\n        .creator-header h1 {\n            font-family: var(--font-display);\n            font-size: clamp(24px, 5vw, 32px);\n            margin: 0;\n            font-weight: 700;\n            letter-spacing: 3px;\n            color: var(--heading-color);\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.1);\n        }\n        \n        .title-char {\n            display: inline-block;\n            opacity: 0;\n            transform: translateY(30px);\n        }\n\n        .wax-seal {\n            width: 45px;\n            height: 45px;\n            display: inline-block;\n            background-color: #c0392b;\n            border-radius: 50%;\n            position: relative;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.4), inset 0 -2px 3px rgba(0,0,0,0.3);\n            opacity: 0;\n            transform: scale(0.5);\n            font-family: 'Cinzel', serif;\n            color: #e7a49c;\n            text-align: center;\n            font-size: 24px;\n            line-height: 45px;\n            font-weight: 700;\n        }\n        .wax-seal::before {\n            content: 'GS';\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.3);\n        }\n\n        .creator-scroll-content { overflow-y: auto; padding: 10px 20px 10px 10px; }\n        .creator-scroll-content::-webkit-scrollbar { width: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-track { background: rgba(139, 115, 85, 0.1); border-radius: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-thumb { background-color: #a89072; border-radius: 10px; border: 2px solid #f7e9d7; }\n        \n        .gs-creator-step { margin-bottom: 40px; overflow: hidden; }\n        .gs-creator-step h3 { font-family: var(--font-display); font-size: 1.5em; font-weight: 700; border-bottom: 1.5px solid var(--border-color); padding-bottom: 8px; margin-bottom: 20px; color: var(--heading-color); text-align: left; }\n        \n        .layout-grid { display: grid; grid-template-columns: 1fr; gap: 25px; align-items: flex-start; }\n        @media (min-width: 768px) {\n            .layout-grid { grid-template-columns: 1fr 280px; }\n        }\n\n        .form-container { text-align: left; }\n        .gs-form-group { margin-bottom: 16px; }\n        .gs-form-group label { display: block; margin-bottom: 6px; font-weight: bold; color: var(--heading-color); }\n        .form-input, .form-select, .form-textarea { width: 100%; padding: 10px; background-color: rgba(255, 255, 255, 0.5); border: 1px solid #a58e72; border-radius: 4px; color: #3d3d3d; font-family: var(--font-main); font-size: 1em; transition: all 0.2s ease-in-out; box-shadow: inset 1px 1px 2px rgba(0,0,0,0.1); }\n        .form-input:focus, .form-select:focus, .form-textarea:focus { outline: none; border-color: #8b7355; background-color: #fff; box-shadow: 0 0 5px rgba(139, 115, 85, 0.5); }\n        .form-textarea { resize: vertical; min-height: 100px; }\n\n        .grid-cols-2 {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 16px;\n        }\n        @media (min-width: 480px) {\n            .grid-cols-2 {\n                grid-template-columns: repeat(2, 1fr);\n            }\n        }\n\n        #attributes-container .point-control { display: flex; align-items: center; justify-content: space-between; margin-bottom: 8px; padding: 6px 8px; background: rgba(0,0,0,0.03); border-left: 3px solid rgba(139,115,85,0.2); border-radius: 4px; }\n        #attributes-container .label { font-weight: bold; color: var(--heading-color); }\n        #attributes-container input[readonly] { width: 40px; text-align: center; font-weight: bold; font-size: 1.2em; font-family: var(--font-display); color: #a02c2c; border: none; background-color: transparent; box-shadow: none; padding: 0; }\n        \n        .attributes-grid {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 0 16px;\n        }\n        @media (min-width: 480px) {\n            .attributes-grid {\n                grid-template-columns: 1fr 1fr;\n            }\n        }\n        \n        .skills-display p { background-color: rgba(0,0,0,0.05); border-left: 3px solid var(--border-color); padding: 10px 15px; margin-top: 10px; font-size: 0.95em; border-radius: 0 4px 4px 0; }\n        .skills-display strong { color: #8b5b4b; font-family: var(--font-display); }\n        .skills-display ul { list-style: none; padding-left: 0; margin-top: 8px; font-size: 0.9em; }\n        .skills-display li { margin-bottom: 4px; }\n\n        #character-summary { background-color: #e9e4d9; font-family: var(--font-code); line-height: 1.6; height: 250px; color: #2c2a2a; }\n        \n        .gs-button { width: 100%; background-color: #8b7355; color: var(--parchment-bg); border: 2px solid var(--dark-leather-bg); border-radius: 5px; padding: 12px 20px; font-family: var(--font-display); font-size: 1.2em; font-weight: 700; cursor: pointer; margin-top: 10px; transition: all 0.3s ease; box-shadow: 0 3px 5px rgba(0,0,0,0.3); }\n        .gs-button:hover { background-color: #a0886c; transform: translateY(-2px); box-shadow: 0 5px 8px rgba(0,0,0,0.3); }\n        .gs-button:disabled { background-color: #9e9e9e; border-color: #757575; cursor: not-allowed; transform: none; box-shadow: none; opacity: 0.6; }\n        .action-button { background-color: #6d5b4b; font-size: 1em; padding: 10px 15px; margin-top: 0; margin-bottom: 10px; width: auto; }\n        \n        .background-display { margin-top: 15px; padding: 15px; border: 1px dashed var(--border-color); border-radius: 5px; background: rgba(0,0,0,0.02); }\n        .background-display p { margin: 0 0 8px; }\n        .background-display span { font-weight: bold; color: var(--heading-color); }\n        \n        #radar-chart-container { \n            max-width: 100%;\n        }\n        @media (min-width: 768px) {\n            #radar-chart-container {\n                position: sticky;\n                top: 0;\n                padding-top: 45px;\n            }\n        }\n\n        pre.mermaid { \n            font-family: var(--font-main); \n            background: rgba(0,0,0,0.02); \n            border: 1px solid rgba(139,115,85,0.1); \n            padding: 10px; \n            border-radius: 5px; \n            overflow: auto;\n            transition: opacity 0.3s ease-in-out;\n        }\n        pre.mermaid.loading { opacity: 0.5; pointer-events: none; }\n\n        pre.mermaid > svg {\n            max-width: 100%;\n            height: auto;\n        }\n\n        #dice-overlay {\n            position: fixed; top: 0; left: 0; width: 100%; height: 100%;\n            background: rgba(0,0,0,0.8); backdrop-filter: blur(5px);\n            display: none; align-items: center; justify-content: center; flex-direction: column;\n            z-index: 100;\n            color: #fff; text-shadow: 0 0 10px #000;\n        }\n\n        .dice-container {\n            display: flex; flex-wrap: wrap; justify-content: center;\n            gap: 2rem; margin-bottom: 2rem;\n            max-width: 600px;\n        }\n        \n        .dice-icon {\n            width: var(--dice-size); height: var(--dice-size);\n            perspective: 800px;\n            transform-style: preserve-3d;\n            display: none;\n        }\n        .dice-icon.highlight {\n            transform: scale(1.15);\n            filter: drop-shadow(0 0 15px #FFEB3B);\n            transition: transform 0.3s ease, filter 0.3s ease;\n        }\n\n        .dice-cube {\n            width: 100%; height: 100%;\n            position: relative;\n            transform-style: preserve-3d;\n            transform: translateZ(calc(var(--dice-size) / -2));\n        }\n        \n        .dice-face {\n            position: absolute;\n            width: var(--dice-size); height: var(--dice-size);\n            background-color: rgba(255, 255, 255, 0.98);\n            border: 1.5px solid #857e72;\n            border-radius: 12%;\n        }\n\n        .pips-container {\n            width: 100%; height: 100%;\n            position: relative; \n        }\n        .pip {\n            width: 22%; height: 22%; \n            background-color: #3d352e;\n            border-radius: 50%;\n            box-shadow: inset 0 1px 3px rgba(0,0,0,0.5);\n            position: absolute; \n        }\n        \n        #dice-result-text { \n            font-family: var(--font-display); \n            font-size: 2.2em;\n            color: #FFEB3B; \n            text-shadow: 0 0 12px #FFEB3B; \n            min-height: 2em;\n            line-height: 1.2;\n            text-align: center; \n        }\n        \n        #skip-animation-btn {\n            position: absolute;\n            bottom: 30px;\n            font-size: 1em;\n            padding: 8px 20px;\n            width: auto;\n            background-color: rgba(0,0,0,0.3);\n            border-color: rgba(255,255,255,0.5);\n            color: rgba(255,255,255,0.8);\n        }\n        #skip-animation-btn:hover {\n            background-color: rgba(0,0,0,0.5);\n            color: #fff;\n        }\n\n        .typed-cursor {\n            opacity: 1;\n            animation: typed-blink 0.7s infinite;\n        }\n        @keyframes typed-blink{\n            0% { opacity: 1; }\n            50% { opacity: 0; }\n            100% { opacity: 1; }\n        }\n        \n        .validation-message {\n            text-align: center;\n            color: #b71c1c;\n            font-size: 0.9em;\n            font-weight: bold;\n            margin-top: -5px;\n            margin-bottom: 10px;\n            height: 1.2em;\n            opacity: 0;\n            will-change: transform, opacity;\n        }\n\n        #credits-screen {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            pointer-events: none;\n            opacity: 0;\n        }\n\n        #credits-screen p {\n            font-family: var(--font-display);\n            font-size: 2em;\n            color: #f5f5dc;\n            text-shadow: 0 0 8px rgba(245, 245, 220, 0.7);\n        }\n    </style>\n</head>\n<body>\n\n<div class=\"creator-wrapper\">\n    <div class=\"border-flow\"></div>\n    <div class=\"inner-border\"></div>\n    <header class=\"creator-header\">\n        <h1 id=\"main-title\">冒险者契约登记</h1>\n        <div id=\"wax-seal\" class=\"wax-seal\"></div>\n    </header>\n\n    <div class=\"creator-scroll-content\">\n        <div class=\"gs-creator-container\">\n            <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第一步：身份确认</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-name-input\">姓名</label><input id=\"char-name-input\" type=\"text\" placeholder=\"可留空，默认为 {{user}}\" class=\"form-input\"></div>\n                    <div class=\"grid-cols-2 gsap-content-item\">\n                        <div class=\"gs-form-group\"><label for=\"char-gender-input\">性别</label><input id=\"char-gender-input\" type=\"text\" placeholder=\"例如: 男性/女性/双性/无性/……\" class=\"form-input\"></div>\n                        <div class=\"gs-form-group\"><label for=\"char-age-input\">年龄</label><input id=\"char-age-input\" type=\"number\" placeholder=\"可参照种族说明\" class=\"form-input\"></div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-race-select\">种族</label><select id=\"char-race-select\" class=\"form-select\"></select></div>\n                    <div class=\"gs-form-group gsap-content-item\">\n                        <label>经历 (出身/来历/邂逅)</label>\n                        <button id=\"roll-background-btn\" class=\"gs-button action-button\">🎲 投骰决定经历</button>\n                        <div id=\"background-display\" class=\"background-display\" style=\"display: none;\">\n                            <p>出身: <span id=\"bg-origin\"></span></p>\n                            <p>来历: <span id=\"bg-past\"></span></p>\n                            <p>邂逅: <span id=\"bg-encounter\"></span></p>\n                        </div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"oc-details-input\">身体特征与补充</label><textarea id=\"oc-details-input\" placeholder=\"发色、瞳色、体型、性格、背景故事构思...\" class=\"form-textarea\"></textarea></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第二步：能力值与技能</h3>\n                <div class=\"layout-grid\">\n                    <div class=\"form-container gsap-content-item\">\n                        <button id=\"roll-attributes-btn\" class=\"gs-button action-button\">🎲 投骰决定能力值</button>\n                        <div id=\"attributes-container\" class=\"attributes-grid\"></div>\n                        <div id=\"skills-and-desc-container\" class=\"skills-display\"></div>\n                    </div>\n                    <div id=\"radar-chart-container\" class=\"gsap-content-item\"><pre class=\"mermaid\" id=\"radar-chart\"></pre></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第三步：完成登记</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"character-summary\">角色卡预览</label><textarea id=\"character-summary\" rows=\"12\" readonly class=\"form-textarea\"></textarea></div>\n                    <button id=\"submit-btn\" class=\"gs-button gsap-content-item\" disabled>确认登记，开始冒险</button>\n                    <div id=\"validation-message\" class=\"validation-message\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div id=\"credits-screen\">\n    <p>作者 𝙀𝙡𝙖𝙞𝙣𝙖𝙙𝙚𝙨</p>\n</div>\n\n<div id=\"dice-overlay\">\n    <div class=\"dice-container\" id=\"dice-container\"></div>\n    <div id=\"dice-result-text\"></div>\n    <button id=\"skip-animation-btn\" class=\"gs-button\">跳过动画</button>\n</div>\n\n<div id=\"dice-templates\" style=\"display:none;\">\n    <div class=\"dice-cube\" data-id_template=\"dice-cube\">\n        <div class=\"dice-face face-front\" data-face=\"1\"><div class=\"pips-container\"><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-back\" data-face=\"6\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-right\" data-face=\"3\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-left\" data-face=\"4\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-top\" data-face=\"2\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-bottom\" data-face=\"5\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n    </div>\n</div>\n\n<script>\n// --- MODIFIED DATA ---\nconst raceData = {\n    '凡人': { attr_rolls: { '力量': '1d3+1', '敏捷': '1d3', '感知': '1d3', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3+2', '魔力': '1d3' }, skills: ['过载行动(初级)', '武器:投掷武器(初级)', '长距离移动(初级)']},\n    '矿人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3', '感知': '1d3+2', '知识': '1d3-1', '魅力': '1d3+1', '信仰力': '1d3+1', '魔力': '1d3-1' }, skills: ['治愈适性(初级)', '夜视(初级)', '锻造(初级)']},\n    '森人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+1', '感知': '1d3+1', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3-1', '魔力': '1d3+1' }, skills: ['武器:弩弓(初级)', '夜视(初级)', '精灵宠儿(初级)']},\n    '蜥蜴人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3+1', '感知': '1d3', '知识': '1d3', '魅力': '1d3+1', '信仰力': '1d3', '魔力': '1d3' }, skills: ['免疫强化(初级)', '夜视(初级)', '龙族血统(初级)']},\n    '圃人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+2', '感知': '1d3+1', '知识': '1d3', '魅力': '1d3-1', '信仰力': '1d3', '魔力': '1d3+2' }, skills: ['隐匿(初级)', '先发制人(初级)', '烹饪(初级)']}\n};\nconst backgroundData = {\n    origin: { \n        '凡人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '学者', class: '魔术师', level: 1, skills: ['文献调查(初级)'] }, 6: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 7: { name: '农民', skills: ['生产业:农业(初级)', '强健(初级)'] }, 8: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '骑士', class: '战士', level: 1, skills: ['骑乘(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n        '矿人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 6: { name: '酒馆老板', class: '战士', level: 1, skills: ['观察(初级)'] }, 7: { name: '铁匠', skills: ['工匠:锻造(初级)', '手工(初级)'] }, 8: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '碎盾者', class: '战士', level: 1, skills: ['强击攻击·斩(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n    },\n    past: { 2: { name: '奴隶', skills: ['劳动(初级)'] }, 3: { name: '牢狱', skills: ['犯罪知识(初级)'] }, 4: { name: '战场', skills: ['沉着冷静(初级)'] }, 5: { name: '神殿', skills: ['神学(初级)'] }, 6: { name: '孤儿', skills: ['忍耐(初级)'] }, 7: { name: '平顺', skills: ['幸运(初级)'] }, 8: { name: '贫困', skills: ['生存术(初级)'] }, 9: { name: '学校', skills: ['博识(初级)'] }, 10: { name: '深闺', skills: ['无偏见(初级)'] }, 11: { name: '奢华', skills: ['鉴定(初级)'] }, 12: { name: '宫廷', skills: ['礼仪(初级)'] }},\n    encounter: { 2: '宿敌', 3: '上司', 4: '后辈', 5: '交易对象', 6: '下属', 7: '家人', 8: '挚友', 9: '前辈', 10: '未婚夫/妻', 11: '劲敌', 12: '师父' }\n};\nbackgroundData.origin['森人'] = backgroundData.origin['凡人']; backgroundData.origin['蜥蜴人'] = backgroundData.origin['凡人']; backgroundData.origin['圃人'] = backgroundData.origin['凡人'];\nconst character = {\n    name: '', gender: '', age: '', oc_details: '', race: '凡人',\n    background: { origin: null, past: null, encounter: null },\n    attributes: { '力量': 0, '敏捷': 0, '感知': 0, '知识': 0, '魅力': 0, '信仰力': 0, '魔力': 0, '潜力': 0 },\n    skills: [], classes: {}, money: 0, _lastAttributesForChart: '',\n};\n// --- END MODIFIED DATA ---\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    gsap.registerPlugin(TextPlugin);\n    mermaid.initialize({ startOnLoad: true, theme: 'base', themeVariables: {\n        '--mermaid-font-family': \"'Vollkorn', 'Noto Serif SC', serif\",\n        primaryColor: '#f7e9d7', primaryTextColor: '#3d3d3d', lineColor: '#8b7355', textColor: '#4a3c2c',\n    }});\n    \n    const $ = (s) => document.querySelector(s);\n    const roll1D6 = () => Math.floor(Math.random() * 6) + 1;\n    const roll1D3 = () => {\n        const d6 = roll1D6();\n        if (d6 <= 2) return { d6, d3: 1 };\n        if (d6 <= 4) return { d6, d3: 2 };\n        return { d6, d3: 3 };\n    };\n    const rollDiceString = (diceString) => { const p=diceString.split('*');const d=p[0];const m=parseInt(p[1])||1;if(!d.includes('d'))return 0;const[n,s]=d.split('d').map(Number);let t=0;for(let i=0;i<n;i++){t+=Math.floor(Math.random()*s)+1;}return t*m; };\n    const formatAge = (ageValue) => { if (!ageValue && ageValue !== 0) return ageValue; const num = Number(ageValue); if (isNaN(num)) return ageValue; if (Math.abs(num) >= 1_000_000) return num.toExponential(2); return ageValue; };\n    const debounce = (func, delay) => { let timeout; return function(...args) { clearTimeout(timeout); timeout = setTimeout(() => func.apply(this, args), delay); }; };\n    const diceUnicode = ['\\u2680', '\\u2681', '\\u2682', '\\u2683', '\\u2684', '\\u2685'];\n\n    const DOM = {\n        nameInput: $('#char-name-input'), genderInput: $('#char-gender-input'), ageInput: $('#char-age-input'),\n        ocDetailsInput: $('#oc-details-input'), raceSelect: $('#char-race-select'), attributesContainer: $('#attributes-container'),\n        skillsContainer: $('#skills-and-desc-container'), radarChart: $('#radar-chart'), summarySheet: $('#character-summary'),\n        diceOverlay: $('#dice-overlay'), diceContainer: $('#dice-container'), diceResultText: $('#dice-result-text'),\n        backgroundDisplay: $('#background-display'), bgOrigin: $('#bg-origin'), bgPast: $('#bg-past'), bgEncounter: $('#bg-encounter'),\n        skipAnimationBtn: $('#skip-animation-btn'),\n        submitBtn: $('#submit-btn'),\n        validationMessage: $('#validation-message'),\n    };\n    \n    const dicePool = []; const MAX_DICE = 6;\n    let currentAnimation = null; let textAnimation = null; let isSkipping = false;\n    let currentValidationMessage = '';\n    \n    function validateAndToggleButton() {\n        let newMessage = '';\n        if (!character.age || String(character.age).trim() === '') {\n            newMessage = '请填写您的冒险者年龄。';\n        } else if (!character.gender || !character.gender.trim()) {\n            newMessage = '请设定冒险者的性别。';\n        } else if (!character.background.origin) {\n            newMessage = '请投骰决定您的冒险者经历。';\n        } else if (Object.values(character.attributes).every(val => val === 0)) {\n            newMessage = '请投骰决定您的能力值。';\n        }\n\n        if (newMessage === currentValidationMessage) return;\n        currentValidationMessage = newMessage;\n\n        if (newMessage) {\n            DOM.submitBtn.disabled = true;\n            DOM.validationMessage.textContent = newMessage;\n            gsap.fromTo(DOM.validationMessage, { autoAlpha: 0, scale: 0.8 }, { autoAlpha: 1, scale: 1, duration: 0.4, ease: 'elastic.out(1, 0.75)' });\n        } else {\n            DOM.submitBtn.disabled = false;\n            gsap.to(DOM.validationMessage, { autoAlpha: 0, duration: 0.3 });\n        }\n    }\n    function updateCharacterDataFromDOM() { character.name = DOM.nameInput.value; character.gender = DOM.genderInput.value; character.age = DOM.ageInput.value; character.oc_details = DOM.ocDetailsInput.value; character.race = DOM.raceSelect.value; }\n    function renderSkills() { const uniqueSkills = [...new Set(character.skills)]; DOM.skillsContainer.innerHTML = `<p><strong>天赋与习得技能:</strong></p><ul>${uniqueSkills.map(s => `<li>- ${s}</li>`).join('')}</ul>`; }\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key}`).value = value; }); }\n    function renderSummary() {\n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '?';\n        const originText = `出身:${character.background.origin ? character.background.origin.name : '?'}`;\n        const pastText = `来历:${character.background.past ? character.background.past.name : '?'}`;\n        const encounterText = `邂逅:${character.background.encounter || '?'}`;\n        let summary = `### 《哥布林杀手TRPG》冒险者登记卡\\n` + `**姓名:** ${finalName} | **种族:** ${character.race} | **性别:** ${character.gender || '?'} | **年龄:** ${formattedAge}\\n` + `**经历:** ${originText} / ${pastText} / ${encounterText}\\n` + `**初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n` + `**初始技能:** ${uniqueSkills.join(', ') || '无'}\\n`; if (character.oc_details) { summary += `**身体特征与补充:** ${character.oc_details}\\n`; } summary += `---\\n**能力值:**\\n`; summary += Object.entries(character.attributes).map(([key, value]) => `- ${key}: ${value}`).join('\\n'); summary += `\\n**持有资金:** ${character.money} 银币`;\n        DOM.summarySheet.value = summary.replace(/### /g, '').replace(/\\*\\*/g, '').replace(/---/g, '\\n────────────────────\\n').replace(/- /g, '  ');\n        DOM.summarySheet.setAttribute('data-raw', summary);\n    }\n    async function renderRadarChartIfNeeded() { const currentAttributesString = JSON.stringify(character.attributes); if (currentAttributesString === character._lastAttributesForChart) return; DOM.radarChart.classList.add('loading'); const radarSyntax = `radar-beta\\ntitle 能力值分布\\naxis a[\"力量 ${character.attributes['力量']}\"]\\naxis b[\"敏捷 ${character.attributes['敏捷']}\"]\\naxis c[\"感知 ${character.attributes['感知']}\"]\\naxis d[\"知识 ${character.attributes['知识']}\"]\\naxis e[\"魅力 ${character.attributes['魅力']}\"]\\naxis f[\"信仰 ${character.attributes['信仰力']}\"]\\naxis g[\"魔力 ${character.attributes['魔力']}\"]\\naxis h[\"潜力 ${character.attributes['潜力']}\"]\\ncurve current[\"能力\"]{${character.attributes['力量']},${character.attributes['敏捷']},${character.attributes['感知']},${character.attributes['知识']},${character.attributes['魅力']},${character.attributes['信仰力']},${character.attributes['魔力']},${character.attributes['潜力']}}\\nmax 10\\nmin 0`; DOM.radarChart.innerHTML = radarSyntax; DOM.radarChart.removeAttribute('data-processed'); try { await mermaid.run({ nodes: [DOM.radarChart] }); character._lastAttributesForChart = currentAttributesString; } catch(e) { console.error(\"Mermaid rendering error:\", e); } finally { DOM.radarChart.classList.remove('loading'); } }\n    async function updateUI(forceFullUpdate = false) { updateCharacterDataFromDOM(); if(forceFullUpdate) { character._lastAttributesForChart = ''; character.skills = []; character.classes = {}; character.money = 100; if(raceData[character.race].skills) character.skills.push(...raceData[character.race].skills); if (character.background.origin) { if (character.background.origin.skills) character.skills.push(...character.background.origin.skills); if (character.background.origin.class) character.classes[character.background.origin.class] = character.background.origin.level; if(character.background.origin.money) character.money += rollDiceString(character.background.origin.money); } if (character.background.past && character.background.past.skills) { character.skills.push(...character.background.past.skills); } } renderAttributes(); renderSkills(); renderSummary(); await renderRadarChartIfNeeded(); validateAndToggleButton(); }\n\n    const masterTl = gsap.timeline({ delay: 0.2 });\n    const title = $('#main-title');\n    title.innerHTML = title.textContent.split('').map(char => `<span class=\"title-char\">${char}</span>`).join('');\n    gsap.set(\".gsap-header-item, .gsap-content-item\", { autoAlpha: 0, y: 20 });\n    masterTl.to(\".title-char\", { autoAlpha: 1, y: 0, duration: 0.7, ease: \"power3.out\", stagger: 0.1 }).to(\"#wax-seal\", { autoAlpha: 1, scale: 1, duration: 0.6, ease: \"elastic.out(1, 0.7)\" }, \"-=0.5\");\n    document.querySelectorAll('.gs-creator-step').forEach((step, index) => { const stepTl = gsap.timeline(); stepTl.to(step.querySelector('.gsap-header-item'), { autoAlpha: 1, y: 0, duration: 0.6, ease: 'power2.out' }).to(step.querySelectorAll('.gsap-content-item'), { autoAlpha: 1, y: 0, duration: 0.5, ease: 'power2.out', stagger: 0.1 }, '-=0.4'); masterTl.add(stepTl, `-=${index === 0 ? 0.2 : 0.7}`); });\n    const pipPositions = { 1: [ { left: '50%', top: '50%' } ], 2: [ { left: '25%', top: '25%' }, { left: '75%', top: '75%' } ], 3: [ { left: '25%', top: '25%' }, { left: '50%', top: '50%' }, { left: '75%', top: '75%' } ], 4: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 5: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '50%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 6: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '50%' }, { left: '75%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ]};\n    function setupCube(cubeEl) { const size = 'calc(var(--dice-size) / 2)'; gsap.set(cubeEl.querySelector('.face-front'),  { transform: `rotateY(0deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-back'),   { transform: `rotateY(180deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-right'),  { transform: `rotateY(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-left'),   { transform: `rotateY(-90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-top'),   { transform: `rotateX(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-bottom'), { transform: `rotateX(-90deg) translateZ(${size})` }); const faces = cubeEl.querySelectorAll('.dice-face'); faces.forEach(face => { const faceNum = face.getAttribute('data-face'); const pips = face.querySelectorAll('.pip'); const positions = pipPositions[faceNum]; if (!pips.length || !positions) return; pips.forEach((pip, index) => { const pos = positions[index]; gsap.set(pip, { left: pos.left, top: pos.top, xPercent: -50, yPercent: -50 }); }); }); }\n    function getRotationForFace(faceValue) { switch (faceValue) { case 1: return { x: 0, y: 0 }; case 6: return { x: 0, y: 180 }; case 3: return { x: 0, y: -90 }; case 4: return { x: 0, y: 90 }; case 2: return { x: -90, y: 0 }; case 5: return { x: 90,  y: 0 }; default: return { x: 0, y: 0 }; } }\n    async function animateText(element, text) { if(isSkipping) {element.innerHTML = text.replace(/\\n/g, '<br>'); return;} return new Promise(resolve => { if (textAnimation && textAnimation.isActive()) textAnimation.kill(); element.innerHTML = ''; textAnimation = gsap.to(element, { duration: text.length * 0.05, text: { value: text.replace(/\\n/g, '<br>'), newClass: \"typed-cursor\" }, ease: \"none\", onComplete: () => { gsap.delayedCall(0.7, () => { element.querySelector('.typed-cursor')?.remove(); resolve(); }); } }); }); }\n    function initDicePool() { const diceTemplate = document.querySelector('[data-id_template=\"dice-cube\"]'); if (!diceTemplate) return; for (let i = 0; i < MAX_DICE; i++) { const dieIconElement = document.createElement('div'); dieIconElement.className = 'dice-icon'; const newCube = diceTemplate.cloneNode(true); dieIconElement.appendChild(newCube); DOM.diceContainer.appendChild(dieIconElement); setupCube(newCube); dicePool.push(dieIconElement); } }\n    async function animateRoll(numDice, preCalculatedRolls, textToShowDuringRoll = \"投掷中...\") { return new Promise(resolve => { if (currentAnimation && currentAnimation.isActive()) currentAnimation.kill(); dicePool.forEach(die => die.style.display = 'none'); const activeDice = dicePool.slice(0, numDice); animateText(DOM.diceResultText, textToShowDuringRoll); activeDice.forEach(die => { die.style.display = 'flex'; die.className = 'dice-icon'; }); const masterTl = gsap.timeline({ onComplete: () => { if(isSkipping) DOM.diceResultText.innerHTML = ''; resolve(preCalculatedRolls); }}); currentAnimation = masterTl; activeDice.forEach((dieElement, i) => { const dieCube = dieElement.querySelector('.dice-cube'); const visualRoll = preCalculatedRolls[i]; const targetRotation = getRotationForFace(visualRoll); const dieTimeline = gsap.timeline(); dieTimeline.to(dieCube, { rotationX: `+=${gsap.utils.random(720, 1080)}`, rotationY: `+=${gsap.utils.random(720, 1080)}`, duration: 1.8, ease: \"power2.in\" }).to(dieCube, { rotationX: targetRotation.x, rotationY: targetRotation.y, duration: 0.7, ease: \"power4.out\" }); masterTl.add(dieTimeline, 0); }); }); }\n    \n    const debouncedUpdate = debounce(updateUI, 400);\n    [DOM.nameInput, DOM.genderInput, DOM.ageInput, DOM.ocDetailsInput].forEach(el => el.addEventListener('input', debouncedUpdate));\n    \n    DOM.skipAnimationBtn.addEventListener('click', () => {\n        isSkipping = true;\n        if (currentAnimation && currentAnimation.isActive()) currentAnimation.progress(1);\n        if (textAnimation && textAnimation.isActive()) textAnimation.progress(1);\n    });\n\n    $('#roll-background-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const rolls = [roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6()];\n        await animateRoll(6, rolls, '投掷 经历... (2d6 x 3)');\n        \n        const sums = { origin: rolls[0] + rolls[1], past: rolls[2] + rolls[3], encounter: rolls[4] + rolls[5] };\n        \n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `出身: ${rolls[0]} + ${rolls[1]} = ${sums.origin}\\n(${backgroundData.origin[character.race][sums.origin].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `来历: ${rolls[2]} + ${rolls[3]} = ${sums.past}\\n(${backgroundData.past[sums.past].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(4, 6), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `邂逅: ${rolls[4]} + ${rolls[5]} = ${sums.encounter}\\n(${backgroundData.encounter[sums.encounter]})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        character.background.origin = backgroundData.origin[character.race][sums.origin];\n        character.background.past = backgroundData.past[sums.past];\n        character.background.encounter = backgroundData.encounter[sums.encounter];\n        DOM.bgOrigin.textContent = character.background.origin.name;\n        DOM.bgPast.textContent = character.background.past.name;\n        DOM.bgEncounter.textContent = character.background.encounter;\n        DOM.backgroundDisplay.style.display = 'block';\n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        updateUI(true);\n    });\n\n    $('#roll-attributes-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const attrRolls = raceData[character.race].attr_rolls;\n        const allCalculatedRolls = [];\n\n        // Prepare race-based attributes\n        for (const attr in attrRolls) {\n            const formula = attrRolls[attr];\n            const modifier = parseInt(formula.split('d3')[1] || '0');\n            const { d6, d3 } = roll1D3();\n            const finalValue = Math.max(0, d3 + modifier);\n            character.attributes[attr] = finalValue;\n            allCalculatedRolls.push({ attr, formula, d6, d3, modifier, finalValue });\n        }\n        \n        // Prepare \"Potential\" attribute\n        const potentialValue = Math.floor(Math.random() * 3) + 1;\n        const d6ForPotential = (potentialValue * 2) - 1; // Map 1,2,3 to d6 faces 1,3,5 for animation\n        character.attributes['潜力'] = potentialValue;\n        allCalculatedRolls.push({\n            attr: '潜力',\n            formula: '1-3', // Just a descriptor\n            d6: d6ForPotential,\n            finalValue: potentialValue\n        });\n        \n        // Animate all rolls sequentially\n        for (const roll of allCalculatedRolls) {\n            await animateRoll(1, [roll.d6], `投掷 ${roll.attr}...`);\n            if (isSkipping) break;\n\n            gsap.to(dicePool[0], { className: 'dice-icon highlight', duration: 0.3 });\n            \n            let resultText;\n            if (roll.attr === '潜力') {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.finalValue}`;\n            } else {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.d3} ${roll.modifier >= 0 ? '+' : ''} ${roll.modifier} = ${roll.finalValue}`;\n            }\n            await animateText(DOM.diceResultText, resultText);\n            \n            await updateUI();\n            \n            if (isSkipping) break;\n            \n            await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        await updateUI();\n    });\n\n    DOM.raceSelect.addEventListener('change', () => {\n        DOM.backgroundDisplay.style.display = 'none';\n        character.background = { origin: null, past: null, encounter: null };\n        Object.keys(character.attributes).forEach(k => character.attributes[k] = 0);\n        updateUI(true);\n    });\n\n    $('#submit-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        await updateUI(true);\n        \n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '未设定';\n        \n        const finalCharacterObject={ NAME:finalName, GENDER:character.gender||'未设定', AGE:formattedAge, RACE:character.race, ORIGIN: character.background.origin ? character.background.origin.name : '未知', PAST: character.background.past ? character.background.past.name : '未知', ENCOUNTER: character.background.encounter || '未知', SKILLS: uniqueSkills, OC_DETAILS:character.oc_details||'无', ...character.attributes, MONEY:character.money };\n        \n        const slashCommand=`/send <START>\\nAdmin:\\n这是一个TRPG开局，请为 User 生成一段详尽的背景故事。\\n\\n# 故事核心要求\\n请严格根据以下【角色完整设定】，撰写一段从角色童年到现在的成长故事。故事需要清晰地阐述是什么关键事件或心路历程，最终让他/她确立了要成为一名冒险者的志向。请在故事中自然地融入角色的种族、出身背景、技能和性格特点。\\n\\n# 角色完整设定\\n---\\n## 基础信息\\n- **姓名:** ${finalName}\\n- **性别:** ${character.gender||'未设定'}\\n- **年龄:** ${formattedAge}\\n- **种族:** ${character.race}\\n\\n## 经历\\n- **出身:** ${character.background.origin ? character.background.origin.name : '未知'}\\n- **来历:** ${character.background.past ? character.background.past.name : '未知'}\\n- **邂逅:** ${character.background.encounter || '未知'}\\n\\n## 背景与技能\\n- **初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n- **初始技能:** ${uniqueSkills.join(', ')||'无'}\\n\\n## 补充设定 (OC)\\n- **额外补充:** ${character.oc_details||'无'}\\n\\n## 能力值\\n- **力量:** ${character.attributes['力量']}\\n- **敏捷:** ${character.attributes['敏捷']}\\n- **感知:** ${character.attributes['感知']}\\n- **知识:** ${character.attributes['知识']}\\n- **魅力:** ${character.attributes['魅力']}\\n- **信仰力:** ${character.attributes['信仰力']}\\n- **魔力:** ${character.attributes['魔力']}\\n\\n## 初始资产\\n- **资金:** ${character.money} 银币\\n\\|\\n/trigger`; \n        \n        try {\n            if (typeof insertOrAssignVariables === 'function') {\n                await insertOrAssignVariables(finalCharacterObject);\n            } else {\n                console.log(\"SillyTavern Function 'insertOrAssignVariables' not found. Variables:\", finalCharacterObject);\n            }\n            if (typeof triggerSlash === 'function') {\n                await triggerSlash(slashCommand, 'Send');\n            } else { \n                console.log(\"SillyTavern Function 'triggerSlash' not found. Command will be copied to clipboard.\");\n                navigator.clipboard.writeText(slashCommand).then(() => {\n                    alert('角色指令已复制到剪贴板！');\n                });\n            }\n        } catch (error) {\n            console.error('与SillyTavern交互失败:', error);\n            alert('与SillyTavern交互失败，请查看浏览器控制台。');\n        }\n\n        e.target.innerHTML = \"契约成立！\";\n    });\n    \n    initDicePool();\n    Object.keys(raceData).forEach(key => DOM.raceSelect.add(new Option(key, key)));\n    Object.keys(character.attributes).forEach(key => {\n        const pointControl = document.createElement('div');\n        pointControl.className = 'point-control';\n        pointControl.innerHTML = `<span class=\"label\">${key}</span><input type=\"text\" id=\"attr-${key.replace(/\\s/g, '')}\" readonly value=\"0\">`; // ID santized just in case\n        DOM.attributesContainer.appendChild(pointControl);\n    });\n    // A small fix for renderAttributes to handle sanitized IDs\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key.replace(/\\s/g, '')}`).value = value; }); }\n    updateUI(true);\n});\n</script>\n\n</body>\n</html>\n```"
  },
  {
    "role": "user",
    "content": "```\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>哥布林杀手TRPG - 冒险者契约</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/gsap.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/TextPlugin.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.min.js\" defer></script>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Noto+Serif+SC:wght@400;700&family=Vollkorn:wght@400;700&family=Courier+Prime&display=swap\" rel=\"stylesheet\">\n\n    <style>\n        :root {\n            --leather-bg: #5a3a2a;\n            --dark-leather-bg: #3b2a1a;\n            --parchment-bg: #f5f5dc;\n            --parchment-bg-gradient: linear-gradient(165deg, #f7e9d7, #e6d5c3);\n            --text-color: #3d3d3d;\n            --heading-color: #4a3c2c;\n            --border-color: #7a5a4a;\n            --font-main: 'Vollkorn', 'Noto Serif SC', serif;\n            --font-display: 'Cinzel', 'Noto Serif SC', serif;\n            --font-code: 'Courier Prime', 'Courier New', monospace;\n            --dice-size: 5rem; \n        }\n\n        html { height: 100%; }\n        body {\n            background-color: #3a2e20;\n            font-family: var(--font-main);\n            color: var(--text-color);\n            margin: 0; padding: 20px;\n            box-sizing: border-box;\n            display: flex;\n            align-items: center; justify-content: center;\n            min-height: 100%;\n        }\n        *, *:before, *:after { box-sizing: inherit; }\n\n        .creator-wrapper {\n            width: 100%; max-width: 900px;\n            margin: 0;\n            background: var(--parchment-bg-gradient);\n            border: 12px solid #8b7355;\n            border-radius: 8px;\n            box-shadow: 0 0 40px rgba(139, 115, 85, 0.3), inset 0 0 30px rgba(255, 255, 255, 0.4);\n            position: relative;\n            overflow: hidden;\n            padding: 25px;\n            display: flex; flex-direction: column;\n            max-height: 95vh;\n        }\n\n        .border-flow, .inner-border { position: absolute; pointer-events: none; }\n        .border-flow { top: 0; left: 0; right: 0; bottom: 0; background: linear-gradient(90deg, rgba(139,115,85,0.1) 1px, transparent 1px), linear-gradient(0deg, rgba(139,115,85,0.1) 1px, transparent 1px); background-size: 20px 20px; animation: borderFlow 15s linear infinite; }\n        .inner-border { top: 5px; left: 5px; right: 5px; bottom: 5px; border: 3px solid rgba(139,115,85,0.3); border-radius: 5px; }\n        @keyframes borderFlow { from { background-position: 0 0; } to { background-position: 20px 20px; } }\n\n        .creator-header {\n            text-align: center;\n            padding: 10px;\n            margin-bottom: 25px;\n            border-bottom: 2px solid rgba(139, 115, 85, 0.3);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 15px;\n        }\n        .creator-header h1 {\n            font-family: var(--font-display);\n            font-size: clamp(24px, 5vw, 32px);\n            margin: 0;\n            font-weight: 700;\n            letter-spacing: 3px;\n            color: var(--heading-color);\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.1);\n        }\n        \n        .title-char {\n            display: inline-block;\n            opacity: 0;\n            transform: translateY(30px);\n        }\n\n        .wax-seal {\n            width: 45px;\n            height: 45px;\n            display: inline-block;\n            background-color: #c0392b;\n            border-radius: 50%;\n            position: relative;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.4), inset 0 -2px 3px rgba(0,0,0,0.3);\n            opacity: 0;\n            transform: scale(0.5);\n            font-family: 'Cinzel', serif;\n            color: #e7a49c;\n            text-align: center;\n            font-size: 24px;\n            line-height: 45px;\n            font-weight: 700;\n        }\n        .wax-seal::before {\n            content: 'GS';\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.3);\n        }\n\n        .creator-scroll-content { overflow-y: auto; padding: 10px 20px 10px 10px; }\n        .creator-scroll-content::-webkit-scrollbar { width: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-track { background: rgba(139, 115, 85, 0.1); border-radius: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-thumb { background-color: #a89072; border-radius: 10px; border: 2px solid #f7e9d7; }\n        \n        .gs-creator-step { margin-bottom: 40px; overflow: hidden; }\n        .gs-creator-step h3 { font-family: var(--font-display); font-size: 1.5em; font-weight: 700; border-bottom: 1.5px solid var(--border-color); padding-bottom: 8px; margin-bottom: 20px; color: var(--heading-color); text-align: left; }\n        \n        .layout-grid { display: grid; grid-template-columns: 1fr; gap: 25px; align-items: flex-start; }\n        @media (min-width: 768px) {\n            .layout-grid { grid-template-columns: 1fr 280px; }\n        }\n\n        .form-container { text-align: left; }\n        .gs-form-group { margin-bottom: 16px; }\n        .gs-form-group label { display: block; margin-bottom: 6px; font-weight: bold; color: var(--heading-color); }\n        .form-input, .form-select, .form-textarea { width: 100%; padding: 10px; background-color: rgba(255, 255, 255, 0.5); border: 1px solid #a58e72; border-radius: 4px; color: #3d3d3d; font-family: var(--font-main); font-size: 1em; transition: all 0.2s ease-in-out; box-shadow: inset 1px 1px 2px rgba(0,0,0,0.1); }\n        .form-input:focus, .form-select:focus, .form-textarea:focus { outline: none; border-color: #8b7355; background-color: #fff; box-shadow: 0 0 5px rgba(139, 115, 85, 0.5); }\n        .form-textarea { resize: vertical; min-height: 100px; }\n\n        .grid-cols-2 {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 16px;\n        }\n        @media (min-width: 480px) {\n            .grid-cols-2 {\n                grid-template-columns: repeat(2, 1fr);\n            }\n        }\n\n        #attributes-container .point-control { display: flex; align-items: center; justify-content: space-between; margin-bottom: 8px; padding: 6px 8px; background: rgba(0,0,0,0.03); border-left: 3px solid rgba(139,115,85,0.2); border-radius: 4px; }\n        #attributes-container .label { font-weight: bold; color: var(--heading-color); }\n        #attributes-container input[readonly] { width: 40px; text-align: center; font-weight: bold; font-size: 1.2em; font-family: var(--font-display); color: #a02c2c; border: none; background-color: transparent; box-shadow: none; padding: 0; }\n        \n        .attributes-grid {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 0 16px;\n        }\n        @media (min-width: 480px) {\n            .attributes-grid {\n                grid-template-columns: 1fr 1fr;\n            }\n        }\n        \n        .skills-display p { background-color: rgba(0,0,0,0.05); border-left: 3px solid var(--border-color); padding: 10px 15px; margin-top: 10px; font-size: 0.95em; border-radius: 0 4px 4px 0; }\n        .skills-display strong { color: #8b5b4b; font-family: var(--font-display); }\n        .skills-display ul { list-style: none; padding-left: 0; margin-top: 8px; font-size: 0.9em; }\n        .skills-display li { margin-bottom: 4px; }\n\n        #character-summary { background-color: #e9e4d9; font-family: var(--font-code); line-height: 1.6; height: 250px; color: #2c2a2a; }\n        \n        .gs-button { width: 100%; background-color: #8b7355; color: var(--parchment-bg); border: 2px solid var(--dark-leather-bg); border-radius: 5px; padding: 12px 20px; font-family: var(--font-display); font-size: 1.2em; font-weight: 700; cursor: pointer; margin-top: 10px; transition: all 0.3s ease; box-shadow: 0 3px 5px rgba(0,0,0,0.3); }\n        .gs-button:hover { background-color: #a0886c; transform: translateY(-2px); box-shadow: 0 5px 8px rgba(0,0,0,0.3); }\n        .gs-button:disabled { background-color: #9e9e9e; border-color: #757575; cursor: not-allowed; transform: none; box-shadow: none; opacity: 0.6; }\n        .action-button { background-color: #6d5b4b; font-size: 1em; padding: 10px 15px; margin-top: 0; margin-bottom: 10px; width: auto; }\n        \n        .background-display { margin-top: 15px; padding: 15px; border: 1px dashed var(--border-color); border-radius: 5px; background: rgba(0,0,0,0.02); }\n        .background-display p { margin: 0 0 8px; }\n        .background-display span { font-weight: bold; color: var(--heading-color); }\n        \n        #radar-chart-container { \n            max-width: 100%;\n        }\n        @media (min-width: 768px) {\n            #radar-chart-container {\n                position: sticky;\n                top: 0;\n                padding-top: 45px;\n            }\n        }\n\n        pre.mermaid { \n            font-family: var(--font-main); \n            background: rgba(0,0,0,0.02); \n            border: 1px solid rgba(139,115,85,0.1); \n            padding: 10px; \n            border-radius: 5px; \n            overflow: auto;\n            transition: opacity 0.3s ease-in-out;\n        }\n        pre.mermaid.loading { opacity: 0.5; pointer-events: none; }\n\n        pre.mermaid > svg {\n            max-width: 100%;\n            height: auto;\n        }\n\n        #dice-overlay {\n            position: fixed; top: 0; left: 0; width: 100%; height: 100%;\n            background: rgba(0,0,0,0.8); backdrop-filter: blur(5px);\n            display: none; align-items: center; justify-content: center; flex-direction: column;\n            z-index: 100;\n            color: #fff; text-shadow: 0 0 10px #000;\n        }\n\n        .dice-container {\n            display: flex; flex-wrap: wrap; justify-content: center;\n            gap: 2rem; margin-bottom: 2rem;\n            max-width: 600px;\n        }\n        \n        .dice-icon {\n            width: var(--dice-size); height: var(--dice-size);\n            perspective: 800px;\n            transform-style: preserve-3d;\n            display: none;\n        }\n        .dice-icon.highlight {\n            transform: scale(1.15);\n            filter: drop-shadow(0 0 15px #FFEB3B);\n            transition: transform 0.3s ease, filter 0.3s ease;\n        }\n\n        .dice-cube {\n            width: 100%; height: 100%;\n            position: relative;\n            transform-style: preserve-3d;\n            transform: translateZ(calc(var(--dice-size) / -2));\n        }\n        \n        .dice-face {\n            position: absolute;\n            width: var(--dice-size); height: var(--dice-size);\n            background-color: rgba(255, 255, 255, 0.98);\n            border: 1.5px solid #857e72;\n            border-radius: 12%;\n        }\n\n        .pips-container {\n            width: 100%; height: 100%;\n            position: relative; \n        }\n        .pip {\n            width: 22%; height: 22%; \n            background-color: #3d352e;\n            border-radius: 50%;\n            box-shadow: inset 0 1px 3px rgba(0,0,0,0.5);\n            position: absolute; \n        }\n        \n        #dice-result-text { \n            font-family: var(--font-display); \n            font-size: 2.2em;\n            color: #FFEB3B; \n            text-shadow: 0 0 12px #FFEB3B; \n            min-height: 2em;\n            line-height: 1.2;\n            text-align: center; \n        }\n        \n        #skip-animation-btn {\n            position: absolute;\n            bottom: 30px;\n            font-size: 1em;\n            padding: 8px 20px;\n            width: auto;\n            background-color: rgba(0,0,0,0.3);\n            border-color: rgba(255,255,255,0.5);\n            color: rgba(255,255,255,0.8);\n        }\n        #skip-animation-btn:hover {\n            background-color: rgba(0,0,0,0.5);\n            color: #fff;\n        }\n\n        .typed-cursor {\n            opacity: 1;\n            animation: typed-blink 0.7s infinite;\n        }\n        @keyframes typed-blink{\n            0% { opacity: 1; }\n            50% { opacity: 0; }\n            100% { opacity: 1; }\n        }\n        \n        .validation-message {\n            text-align: center;\n            color: #b71c1c;\n            font-size: 0.9em;\n            font-weight: bold;\n            margin-top: -5px;\n            margin-bottom: 10px;\n            height: 1.2em;\n            opacity: 0;\n            will-change: transform, opacity;\n        }\n\n        #credits-screen {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            pointer-events: none;\n            opacity: 0;\n        }\n\n        #credits-screen p {\n            font-family: var(--font-display);\n            font-size: 2em;\n            color: #f5f5dc;\n            text-shadow: 0 0 8px rgba(245, 245, 220, 0.7);\n        }\n    </style>\n</head>\n<body>\n\n<div class=\"creator-wrapper\">\n    <div class=\"border-flow\"></div>\n    <div class=\"inner-border\"></div>\n    <header class=\"creator-header\">\n        <h1 id=\"main-title\">冒险者契约登记</h1>\n        <div id=\"wax-seal\" class=\"wax-seal\"></div>\n    </header>\n\n    <div class=\"creator-scroll-content\">\n        <div class=\"gs-creator-container\">\n            <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第一步：身份确认</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-name-input\">姓名</label><input id=\"char-name-input\" type=\"text\" placeholder=\"可留空，默认为 {{user}}\" class=\"form-input\"></div>\n                    <div class=\"grid-cols-2 gsap-content-item\">\n                        <div class=\"gs-form-group\"><label for=\"char-gender-input\">性别</label><input id=\"char-gender-input\" type=\"text\" placeholder=\"例如: 男性/女性/双性/无性/……\" class=\"form-input\"></div>\n                        <div class=\"gs-form-group\"><label for=\"char-age-input\">年龄</label><input id=\"char-age-input\" type=\"number\" placeholder=\"可参照种族说明\" class=\"form-input\"></div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-race-select\">种族</label><select id=\"char-race-select\" class=\"form-select\"></select></div>\n                    <div class=\"gs-form-group gsap-content-item\">\n                        <label>经历 (出身/来历/邂逅)</label>\n                        <button id=\"roll-background-btn\" class=\"gs-button action-button\">🎲 投骰决定经历</button>\n                        <div id=\"background-display\" class=\"background-display\" style=\"display: none;\">\n                            <p>出身: <span id=\"bg-origin\"></span></p>\n                            <p>来历: <span id=\"bg-past\"></span></p>\n                            <p>邂逅: <span id=\"bg-encounter\"></span></p>\n                        </div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"oc-details-input\">身体特征与补充</label><textarea id=\"oc-details-input\" placeholder=\"发色、瞳色、体型、性格、背景故事构思...\" class=\"form-textarea\"></textarea></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第二步：能力值与技能</h3>\n                <div class=\"layout-grid\">\n                    <div class=\"form-container gsap-content-item\">\n                        <button id=\"roll-attributes-btn\" class=\"gs-button action-button\">🎲 投骰决定能力值</button>\n                        <div id=\"attributes-container\" class=\"attributes-grid\"></div>\n                        <div id=\"skills-and-desc-container\" class=\"skills-display\"></div>\n                    </div>\n                    <div id=\"radar-chart-container\" class=\"gsap-content-item\"><pre class=\"mermaid\" id=\"radar-chart\"></pre></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第三步：完成登记</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"character-summary\">角色卡预览</label><textarea id=\"character-summary\" rows=\"12\" readonly class=\"form-textarea\"></textarea></div>\n                    <button id=\"submit-btn\" class=\"gs-button gsap-content-item\" disabled>确认登记，开始冒险</button>\n                    <div id=\"validation-message\" class=\"validation-message\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div id=\"credits-screen\">\n    <p>作者 𝙀𝙡𝙖𝙞𝙣𝙖𝙙𝙚𝙨</p>\n</div>\n\n<div id=\"dice-overlay\">\n    <div class=\"dice-container\" id=\"dice-container\"></div>\n    <div id=\"dice-result-text\"></div>\n    <button id=\"skip-animation-btn\" class=\"gs-button\">跳过动画</button>\n</div>\n\n<div id=\"dice-templates\" style=\"display:none;\">\n    <div class=\"dice-cube\" data-id_template=\"dice-cube\">\n        <div class=\"dice-face face-front\" data-face=\"1\"><div class=\"pips-container\"><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-back\" data-face=\"6\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-right\" data-face=\"3\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-left\" data-face=\"4\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-top\" data-face=\"2\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-bottom\" data-face=\"5\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n    </div>\n</div>\n\n<script>\n// --- MODIFIED DATA ---\nconst raceData = {\n    '凡人': { attr_rolls: { '力量': '1d3+1', '敏捷': '1d3', '感知': '1d3', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3+2', '魔力': '1d3' }, skills: ['过载行动(初级)', '武器:投掷武器(初级)', '长距离移动(初级)']},\n    '矿人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3', '感知': '1d3+2', '知识': '1d3-1', '魅力': '1d3+1', '信仰力': '1d3+1', '魔力': '1d3-1' }, skills: ['治愈适性(初级)', '夜视(初级)', '锻造(初级)']},\n    '森人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+1', '感知': '1d3+1', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3-1', '魔力': '1d3+1' }, skills: ['武器:弩弓(初级)', '夜视(初级)', '精灵宠儿(初级)']},\n    '蜥蜴人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3+1', '感知': '1d3', '知识': '1d3', '魅力': '1d3+1', '信仰力': '1d3', '魔力': '1d3' }, skills: ['免疫强化(初级)', '夜视(初级)', '龙族血统(初级)']},\n    '圃人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+2', '感知': '1d3+1', '知识': '1d3', '魅力': '1d3-1', '信仰力': '1d3', '魔力': '1d3+2' }, skills: ['隐匿(初级)', '先发制人(初级)', '烹饪(初级)']}\n};\nconst backgroundData = {\n    origin: { \n        '凡人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '学者', class: '魔术师', level: 1, skills: ['文献调查(初级)'] }, 6: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 7: { name: '农民', skills: ['生产业:农业(初级)', '强健(初级)'] }, 8: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '骑士', class: '战士', level: 1, skills: ['骑乘(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n        '矿人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 6: { name: '酒馆老板', class: '战士', level: 1, skills: ['观察(初级)'] }, 7: { name: '铁匠', skills: ['工匠:锻造(初级)', '手工(初级)'] }, 8: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '碎盾者', class: '战士', level: 1, skills: ['强击攻击·斩(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n    },\n    past: { 2: { name: '奴隶', skills: ['劳动(初级)'] }, 3: { name: '牢狱', skills: ['犯罪知识(初级)'] }, 4: { name: '战场', skills: ['沉着冷静(初级)'] }, 5: { name: '神殿', skills: ['神学(初级)'] }, 6: { name: '孤儿', skills: ['忍耐(初级)'] }, 7: { name: '平顺', skills: ['幸运(初级)'] }, 8: { name: '贫困', skills: ['生存术(初级)'] }, 9: { name: '学校', skills: ['博识(初级)'] }, 10: { name: '深闺', skills: ['无偏见(初级)'] }, 11: { name: '奢华', skills: ['鉴定(初级)'] }, 12: { name: '宫廷', skills: ['礼仪(初级)'] }},\n    encounter: { 2: '宿敌', 3: '上司', 4: '后辈', 5: '交易对象', 6: '下属', 7: '家人', 8: '挚友', 9: '前辈', 10: '未婚夫/妻', 11: '劲敌', 12: '师父' }\n};\nbackgroundData.origin['森人'] = backgroundData.origin['凡人']; backgroundData.origin['蜥蜴人'] = backgroundData.origin['凡人']; backgroundData.origin['圃人'] = backgroundData.origin['凡人'];\nconst character = {\n    name: '', gender: '', age: '', oc_details: '', race: '凡人',\n    background: { origin: null, past: null, encounter: null },\n    attributes: { '力量': 0, '敏捷': 0, '感知': 0, '知识': 0, '魅力': 0, '信仰力': 0, '魔力': 0, '潜力': 0 },\n    skills: [], classes: {}, money: 0, _lastAttributesForChart: '',\n};\n// --- END MODIFIED DATA ---\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    gsap.registerPlugin(TextPlugin);\n    mermaid.initialize({ startOnLoad: true, theme: 'base', themeVariables: {\n        '--mermaid-font-family': \"'Vollkorn', 'Noto Serif SC', serif\",\n        primaryColor: '#f7e9d7', primaryTextColor: '#3d3d3d', lineColor: '#8b7355', textColor: '#4a3c2c',\n    }});\n    \n    const $ = (s) => document.querySelector(s);\n    const roll1D6 = () => Math.floor(Math.random() * 6) + 1;\n    const roll1D3 = () => {\n        const d6 = roll1D6();\n        if (d6 <= 2) return { d6, d3: 1 };\n        if (d6 <= 4) return { d6, d3: 2 };\n        return { d6, d3: 3 };\n    };\n    const rollDiceString = (diceString) => { const p=diceString.split('*');const d=p[0];const m=parseInt(p[1])||1;if(!d.includes('d'))return 0;const[n,s]=d.split('d').map(Number);let t=0;for(let i=0;i<n;i++){t+=Math.floor(Math.random()*s)+1;}return t*m; };\n    const formatAge = (ageValue) => { if (!ageValue && ageValue !== 0) return ageValue; const num = Number(ageValue); if (isNaN(num)) return ageValue; if (Math.abs(num) >= 1_000_000) return num.toExponential(2); return ageValue; };\n    const debounce = (func, delay) => { let timeout; return function(...args) { clearTimeout(timeout); timeout = setTimeout(() => func.apply(this, args), delay); }; };\n    const diceUnicode = ['\\u2680', '\\u2681', '\\u2682', '\\u2683', '\\u2684', '\\u2685'];\n\n    const DOM = {\n        nameInput: $('#char-name-input'), genderInput: $('#char-gender-input'), ageInput: $('#char-age-input'),\n        ocDetailsInput: $('#oc-details-input'), raceSelect: $('#char-race-select'), attributesContainer: $('#attributes-container'),\n        skillsContainer: $('#skills-and-desc-container'), radarChart: $('#radar-chart'), summarySheet: $('#character-summary'),\n        diceOverlay: $('#dice-overlay'), diceContainer: $('#dice-container'), diceResultText: $('#dice-result-text'),\n        backgroundDisplay: $('#background-display'), bgOrigin: $('#bg-origin'), bgPast: $('#bg-past'), bgEncounter: $('#bg-encounter'),\n        skipAnimationBtn: $('#skip-animation-btn'),\n        submitBtn: $('#submit-btn'),\n        validationMessage: $('#validation-message'),\n    };\n    \n    const dicePool = []; const MAX_DICE = 6;\n    let currentAnimation = null; let textAnimation = null; let isSkipping = false;\n    let currentValidationMessage = '';\n    \n    function validateAndToggleButton() {\n        let newMessage = '';\n        if (!character.age || String(character.age).trim() === '') {\n            newMessage = '请填写您的冒险者年龄。';\n        } else if (!character.gender || !character.gender.trim()) {\n            newMessage = '请设定冒险者的性别。';\n        } else if (!character.background.origin) {\n            newMessage = '请投骰决定您的冒险者经历。';\n        } else if (Object.values(character.attributes).every(val => val === 0)) {\n            newMessage = '请投骰决定您的能力值。';\n        }\n\n        if (newMessage === currentValidationMessage) return;\n        currentValidationMessage = newMessage;\n\n        if (newMessage) {\n            DOM.submitBtn.disabled = true;\n            DOM.validationMessage.textContent = newMessage;\n            gsap.fromTo(DOM.validationMessage, { autoAlpha: 0, scale: 0.8 }, { autoAlpha: 1, scale: 1, duration: 0.4, ease: 'elastic.out(1, 0.75)' });\n        } else {\n            DOM.submitBtn.disabled = false;\n            gsap.to(DOM.validationMessage, { autoAlpha: 0, duration: 0.3 });\n        }\n    }\n    function updateCharacterDataFromDOM() { character.name = DOM.nameInput.value; character.gender = DOM.genderInput.value; character.age = DOM.ageInput.value; character.oc_details = DOM.ocDetailsInput.value; character.race = DOM.raceSelect.value; }\n    function renderSkills() { const uniqueSkills = [...new Set(character.skills)]; DOM.skillsContainer.innerHTML = `<p><strong>天赋与习得技能:</strong></p><ul>${uniqueSkills.map(s => `<li>- ${s}</li>`).join('')}</ul>`; }\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key}`).value = value; }); }\n    function renderSummary() {\n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '?';\n        const originText = `出身:${character.background.origin ? character.background.origin.name : '?'}`;\n        const pastText = `来历:${character.background.past ? character.background.past.name : '?'}`;\n        const encounterText = `邂逅:${character.background.encounter || '?'}`;\n        let summary = `### 《哥布林杀手TRPG》冒险者登记卡\\n` + `**姓名:** ${finalName} | **种族:** ${character.race} | **性别:** ${character.gender || '?'} | **年龄:** ${formattedAge}\\n` + `**经历:** ${originText} / ${pastText} / ${encounterText}\\n` + `**初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n` + `**初始技能:** ${uniqueSkills.join(', ') || '无'}\\n`; if (character.oc_details) { summary += `**身体特征与补充:** ${character.oc_details}\\n`; } summary += `---\\n**能力值:**\\n`; summary += Object.entries(character.attributes).map(([key, value]) => `- ${key}: ${value}`).join('\\n'); summary += `\\n**持有资金:** ${character.money} 银币`;\n        DOM.summarySheet.value = summary.replace(/### /g, '').replace(/\\*\\*/g, '').replace(/---/g, '\\n────────────────────\\n').replace(/- /g, '  ');\n        DOM.summarySheet.setAttribute('data-raw', summary);\n    }\n    async function renderRadarChartIfNeeded() { const currentAttributesString = JSON.stringify(character.attributes); if (currentAttributesString === character._lastAttributesForChart) return; DOM.radarChart.classList.add('loading'); const radarSyntax = `radar-beta\\ntitle 能力值分布\\naxis a[\"力量 ${character.attributes['力量']}\"]\\naxis b[\"敏捷 ${character.attributes['敏捷']}\"]\\naxis c[\"感知 ${character.attributes['感知']}\"]\\naxis d[\"知识 ${character.attributes['知识']}\"]\\naxis e[\"魅力 ${character.attributes['魅力']}\"]\\naxis f[\"信仰 ${character.attributes['信仰力']}\"]\\naxis g[\"魔力 ${character.attributes['魔力']}\"]\\naxis h[\"潜力 ${character.attributes['潜力']}\"]\\ncurve current[\"能力\"]{${character.attributes['力量']},${character.attributes['敏捷']},${character.attributes['感知']},${character.attributes['知识']},${character.attributes['魅力']},${character.attributes['信仰力']},${character.attributes['魔力']},${character.attributes['潜力']}}\\nmax 10\\nmin 0`; DOM.radarChart.innerHTML = radarSyntax; DOM.radarChart.removeAttribute('data-processed'); try { await mermaid.run({ nodes: [DOM.radarChart] }); character._lastAttributesForChart = currentAttributesString; } catch(e) { console.error(\"Mermaid rendering error:\", e); } finally { DOM.radarChart.classList.remove('loading'); } }\n    async function updateUI(forceFullUpdate = false) { updateCharacterDataFromDOM(); if(forceFullUpdate) { character._lastAttributesForChart = ''; character.skills = []; character.classes = {}; character.money = 100; if(raceData[character.race].skills) character.skills.push(...raceData[character.race].skills); if (character.background.origin) { if (character.background.origin.skills) character.skills.push(...character.background.origin.skills); if (character.background.origin.class) character.classes[character.background.origin.class] = character.background.origin.level; if(character.background.origin.money) character.money += rollDiceString(character.background.origin.money); } if (character.background.past && character.background.past.skills) { character.skills.push(...character.background.past.skills); } } renderAttributes(); renderSkills(); renderSummary(); await renderRadarChartIfNeeded(); validateAndToggleButton(); }\n\n    const masterTl = gsap.timeline({ delay: 0.2 });\n    const title = $('#main-title');\n    title.innerHTML = title.textContent.split('').map(char => `<span class=\"title-char\">${char}</span>`).join('');\n    gsap.set(\".gsap-header-item, .gsap-content-item\", { autoAlpha: 0, y: 20 });\n    masterTl.to(\".title-char\", { autoAlpha: 1, y: 0, duration: 0.7, ease: \"power3.out\", stagger: 0.1 }).to(\"#wax-seal\", { autoAlpha: 1, scale: 1, duration: 0.6, ease: \"elastic.out(1, 0.7)\" }, \"-=0.5\");\n    document.querySelectorAll('.gs-creator-step').forEach((step, index) => { const stepTl = gsap.timeline(); stepTl.to(step.querySelector('.gsap-header-item'), { autoAlpha: 1, y: 0, duration: 0.6, ease: 'power2.out' }).to(step.querySelectorAll('.gsap-content-item'), { autoAlpha: 1, y: 0, duration: 0.5, ease: 'power2.out', stagger: 0.1 }, '-=0.4'); masterTl.add(stepTl, `-=${index === 0 ? 0.2 : 0.7}`); });\n    const pipPositions = { 1: [ { left: '50%', top: '50%' } ], 2: [ { left: '25%', top: '25%' }, { left: '75%', top: '75%' } ], 3: [ { left: '25%', top: '25%' }, { left: '50%', top: '50%' }, { left: '75%', top: '75%' } ], 4: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 5: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '50%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 6: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '50%' }, { left: '75%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ]};\n    function setupCube(cubeEl) { const size = 'calc(var(--dice-size) / 2)'; gsap.set(cubeEl.querySelector('.face-front'),  { transform: `rotateY(0deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-back'),   { transform: `rotateY(180deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-right'),  { transform: `rotateY(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-left'),   { transform: `rotateY(-90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-top'),   { transform: `rotateX(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-bottom'), { transform: `rotateX(-90deg) translateZ(${size})` }); const faces = cubeEl.querySelectorAll('.dice-face'); faces.forEach(face => { const faceNum = face.getAttribute('data-face'); const pips = face.querySelectorAll('.pip'); const positions = pipPositions[faceNum]; if (!pips.length || !positions) return; pips.forEach((pip, index) => { const pos = positions[index]; gsap.set(pip, { left: pos.left, top: pos.top, xPercent: -50, yPercent: -50 }); }); }); }\n    function getRotationForFace(faceValue) { switch (faceValue) { case 1: return { x: 0, y: 0 }; case 6: return { x: 0, y: 180 }; case 3: return { x: 0, y: -90 }; case 4: return { x: 0, y: 90 }; case 2: return { x: -90, y: 0 }; case 5: return { x: 90,  y: 0 }; default: return { x: 0, y: 0 }; } }\n    async function animateText(element, text) { if(isSkipping) {element.innerHTML = text.replace(/\\n/g, '<br>'); return;} return new Promise(resolve => { if (textAnimation && textAnimation.isActive()) textAnimation.kill(); element.innerHTML = ''; textAnimation = gsap.to(element, { duration: text.length * 0.05, text: { value: text.replace(/\\n/g, '<br>'), newClass: \"typed-cursor\" }, ease: \"none\", onComplete: () => { gsap.delayedCall(0.7, () => { element.querySelector('.typed-cursor')?.remove(); resolve(); }); } }); }); }\n    function initDicePool() { const diceTemplate = document.querySelector('[data-id_template=\"dice-cube\"]'); if (!diceTemplate) return; for (let i = 0; i < MAX_DICE; i++) { const dieIconElement = document.createElement('div'); dieIconElement.className = 'dice-icon'; const newCube = diceTemplate.cloneNode(true); dieIconElement.appendChild(newCube); DOM.diceContainer.appendChild(dieIconElement); setupCube(newCube); dicePool.push(dieIconElement); } }\n    async function animateRoll(numDice, preCalculatedRolls, textToShowDuringRoll = \"投掷中...\") { return new Promise(resolve => { if (currentAnimation && currentAnimation.isActive()) currentAnimation.kill(); dicePool.forEach(die => die.style.display = 'none'); const activeDice = dicePool.slice(0, numDice); animateText(DOM.diceResultText, textToShowDuringRoll); activeDice.forEach(die => { die.style.display = 'flex'; die.className = 'dice-icon'; }); const masterTl = gsap.timeline({ onComplete: () => { if(isSkipping) DOM.diceResultText.innerHTML = ''; resolve(preCalculatedRolls); }}); currentAnimation = masterTl; activeDice.forEach((dieElement, i) => { const dieCube = dieElement.querySelector('.dice-cube'); const visualRoll = preCalculatedRolls[i]; const targetRotation = getRotationForFace(visualRoll); const dieTimeline = gsap.timeline(); dieTimeline.to(dieCube, { rotationX: `+=${gsap.utils.random(720, 1080)}`, rotationY: `+=${gsap.utils.random(720, 1080)}`, duration: 1.8, ease: \"power2.in\" }).to(dieCube, { rotationX: targetRotation.x, rotationY: targetRotation.y, duration: 0.7, ease: \"power4.out\" }); masterTl.add(dieTimeline, 0); }); }); }\n    \n    const debouncedUpdate = debounce(updateUI, 400);\n    [DOM.nameInput, DOM.genderInput, DOM.ageInput, DOM.ocDetailsInput].forEach(el => el.addEventListener('input', debouncedUpdate));\n    \n    DOM.skipAnimationBtn.addEventListener('click', () => {\n        isSkipping = true;\n        if (currentAnimation && currentAnimation.isActive()) currentAnimation.progress(1);\n        if (textAnimation && textAnimation.isActive()) textAnimation.progress(1);\n    });\n\n    $('#roll-background-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const rolls = [roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6()];\n        await animateRoll(6, rolls, '投掷 经历... (2d6 x 3)');\n        \n        const sums = { origin: rolls[0] + rolls[1], past: rolls[2] + rolls[3], encounter: rolls[4] + rolls[5] };\n        \n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `出身: ${rolls[0]} + ${rolls[1]} = ${sums.origin}\\n(${backgroundData.origin[character.race][sums.origin].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `来历: ${rolls[2]} + ${rolls[3]} = ${sums.past}\\n(${backgroundData.past[sums.past].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(4, 6), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `邂逅: ${rolls[4]} + ${rolls[5]} = ${sums.encounter}\\n(${backgroundData.encounter[sums.encounter]})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        character.background.origin = backgroundData.origin[character.race][sums.origin];\n        character.background.past = backgroundData.past[sums.past];\n        character.background.encounter = backgroundData.encounter[sums.encounter];\n        DOM.bgOrigin.textContent = character.background.origin.name;\n        DOM.bgPast.textContent = character.background.past.name;\n        DOM.bgEncounter.textContent = character.background.encounter;\n        DOM.backgroundDisplay.style.display = 'block';\n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        updateUI(true);\n    });\n\n    $('#roll-attributes-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const attrRolls = raceData[character.race].attr_rolls;\n        const allCalculatedRolls = [];\n\n        // Prepare race-based attributes\n        for (const attr in attrRolls) {\n            const formula = attrRolls[attr];\n            const modifier = parseInt(formula.split('d3')[1] || '0');\n            const { d6, d3 } = roll1D3();\n            const finalValue = Math.max(0, d3 + modifier);\n            character.attributes[attr] = finalValue;\n            allCalculatedRolls.push({ attr, formula, d6, d3, modifier, finalValue });\n        }\n        \n        // Prepare \"Potential\" attribute\n        const potentialValue = Math.floor(Math.random() * 3) + 1;\n        const d6ForPotential = (potentialValue * 2) - 1; // Map 1,2,3 to d6 faces 1,3,5 for animation\n        character.attributes['潜力'] = potentialValue;\n        allCalculatedRolls.push({\n            attr: '潜力',\n            formula: '1-3', // Just a descriptor\n            d6: d6ForPotential,\n            finalValue: potentialValue\n        });\n        \n        // Animate all rolls sequentially\n        for (const roll of allCalculatedRolls) {\n            await animateRoll(1, [roll.d6], `投掷 ${roll.attr}...`);\n            if (isSkipping) break;\n\n            gsap.to(dicePool[0], { className: 'dice-icon highlight', duration: 0.3 });\n            \n            let resultText;\n            if (roll.attr === '潜力') {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.finalValue}`;\n            } else {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.d3} ${roll.modifier >= 0 ? '+' : ''} ${roll.modifier} = ${roll.finalValue}`;\n            }\n            await animateText(DOM.diceResultText, resultText);\n            \n            await updateUI();\n            \n            if (isSkipping) break;\n            \n            await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        await updateUI();\n    });\n\n    DOM.raceSelect.addEventListener('change', () => {\n        DOM.backgroundDisplay.style.display = 'none';\n        character.background = { origin: null, past: null, encounter: null };\n        Object.keys(character.attributes).forEach(k => character.attributes[k] = 0);\n        updateUI(true);\n    });\n\n    $('#submit-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        await updateUI(true);\n        \n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '未设定';\n        \n        const finalCharacterObject={ NAME:finalName, GENDER:character.gender||'未设定', AGE:formattedAge, RACE:character.race, ORIGIN: character.background.origin ? character.background.origin.name : '未知', PAST: character.background.past ? character.background.past.name : '未知', ENCOUNTER: character.background.encounter || '未知', SKILLS: uniqueSkills, OC_DETAILS:character.oc_details||'无', ...character.attributes, MONEY:character.money };\n        \n        const slashCommand=`/send <START>\\nAdmin:\\n这是一个TRPG开局，请为 User 生成一段详尽的背景故事。\\n\\n# 故事核心要求\\n请严格根据以下【角色完整设定】，撰写一段从角色童年到现在的成长故事。故事需要清晰地阐述是什么关键事件或心路历程，最终让他/她确立了要成为一名冒险者的志向。请在故事中自然地融入角色的种族、出身背景、技能和性格特点。\\n\\n# 角色完整设定\\n---\\n## 基础信息\\n- **姓名:** ${finalName}\\n- **性别:** ${character.gender||'未设定'}\\n- **年龄:** ${formattedAge}\\n- **种族:** ${character.race}\\n\\n## 经历\\n- **出身:** ${character.background.origin ? character.background.origin.name : '未知'}\\n- **来历:** ${character.background.past ? character.background.past.name : '未知'}\\n- **邂逅:** ${character.background.encounter || '未知'}\\n\\n## 背景与技能\\n- **初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n- **初始技能:** ${uniqueSkills.join(', ')||'无'}\\n\\n## 补充设定 (OC)\\n- **额外补充:** ${character.oc_details||'无'}\\n\\n## 能力值\\n- **力量:** ${character.attributes['力量']}\\n- **敏捷:** ${character.attributes['敏捷']}\\n- **感知:** ${character.attributes['感知']}\\n- **知识:** ${character.attributes['知识']}\\n- **魅力:** ${character.attributes['魅力']}\\n- **信仰力:** ${character.attributes['信仰力']}\\n- **魔力:** ${character.attributes['魔力']}\\n\\n## 初始资产\\n- **资金:** ${character.money} 银币\\n\\|\\n/trigger`; \n        \n        try {\n            if (typeof insertOrAssignVariables === 'function') {\n                await insertOrAssignVariables(finalCharacterObject);\n            } else {\n                console.log(\"SillyTavern Function 'insertOrAssignVariables' not found. Variables:\", finalCharacterObject);\n            }\n            if (typeof triggerSlash === 'function') {\n                await triggerSlash(slashCommand, 'Send');\n            } else { \n                console.log(\"SillyTavern Function 'triggerSlash' not found. Command will be copied to clipboard.\");\n                navigator.clipboard.writeText(slashCommand).then(() => {\n                    alert('角色指令已复制到剪贴板！');\n                });\n            }\n        } catch (error) {\n            console.error('与SillyTavern交互失败:', error);\n            alert('与SillyTavern交互失败，请查看浏览器控制台。');\n        }\n\n        e.target.innerHTML = \"契约成立！\";\n    });\n    \n    initDicePool();\n    Object.keys(raceData).forEach(key => DOM.raceSelect.add(new Option(key, key)));\n    Object.keys(character.attributes).forEach(key => {\n        const pointControl = document.createElement('div');\n        pointControl.className = 'point-control';\n        pointControl.innerHTML = `<span class=\"label\">${key}</span><input type=\"text\" id=\"attr-${key.replace(/\\s/g, '')}\" readonly value=\"0\">`; // ID santized just in case\n        DOM.attributesContainer.appendChild(pointControl);\n    });\n    // A small fix for renderAttributes to handle sanitized IDs\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key.replace(/\\s/g, '')}`).value = value; }); }\n    updateUI(true);\n});\n</script>\n\n</body>\n</html>\n```"
  },
  {
    "role": "user",
    "content": "```\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>哥布林杀手TRPG - 冒险者契约</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/gsap.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/TextPlugin.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.min.js\" defer></script>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Noto+Serif+SC:wght@400;700&family=Vollkorn:wght@400;700&family=Courier+Prime&display=swap\" rel=\"stylesheet\">\n\n    <style>\n        :root {\n            --leather-bg: #5a3a2a;\n            --dark-leather-bg: #3b2a1a;\n            --parchment-bg: #f5f5dc;\n            --parchment-bg-gradient: linear-gradient(165deg, #f7e9d7, #e6d5c3);\n            --text-color: #3d3d3d;\n            --heading-color: #4a3c2c;\n            --border-color: #7a5a4a;\n            --font-main: 'Vollkorn', 'Noto Serif SC', serif;\n            --font-display: 'Cinzel', 'Noto Serif SC', serif;\n            --font-code: 'Courier Prime', 'Courier New', monospace;\n            --dice-size: 5rem; \n        }\n\n        html { height: 100%; }\n        body {\n            background-color: #3a2e20;\n            font-family: var(--font-main);\n            color: var(--text-color);\n            margin: 0; padding: 20px;\n            box-sizing: border-box;\n            display: flex;\n            align-items: center; justify-content: center;\n            min-height: 100%;\n        }\n        *, *:before, *:after { box-sizing: inherit; }\n\n        .creator-wrapper {\n            width: 100%; max-width: 900px;\n            margin: 0;\n            background: var(--parchment-bg-gradient);\n            border: 12px solid #8b7355;\n            border-radius: 8px;\n            box-shadow: 0 0 40px rgba(139, 115, 85, 0.3), inset 0 0 30px rgba(255, 255, 255, 0.4);\n            position: relative;\n            overflow: hidden;\n            padding: 25px;\n            display: flex; flex-direction: column;\n            max-height: 95vh;\n        }\n\n        .border-flow, .inner-border { position: absolute; pointer-events: none; }\n        .border-flow { top: 0; left: 0; right: 0; bottom: 0; background: linear-gradient(90deg, rgba(139,115,85,0.1) 1px, transparent 1px), linear-gradient(0deg, rgba(139,115,85,0.1) 1px, transparent 1px); background-size: 20px 20px; animation: borderFlow 15s linear infinite; }\n        .inner-border { top: 5px; left: 5px; right: 5px; bottom: 5px; border: 3px solid rgba(139,115,85,0.3); border-radius: 5px; }\n        @keyframes borderFlow { from { background-position: 0 0; } to { background-position: 20px 20px; } }\n\n        .creator-header {\n            text-align: center;\n            padding: 10px;\n            margin-bottom: 25px;\n            border-bottom: 2px solid rgba(139, 115, 85, 0.3);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 15px;\n        }\n        .creator-header h1 {\n            font-family: var(--font-display);\n            font-size: clamp(24px, 5vw, 32px);\n            margin: 0;\n            font-weight: 700;\n            letter-spacing: 3px;\n            color: var(--heading-color);\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.1);\n        }\n        \n        .title-char {\n            display: inline-block;\n            opacity: 0;\n            transform: translateY(30px);\n        }\n\n        .wax-seal {\n            width: 45px;\n            height: 45px;\n            display: inline-block;\n            background-color: #c0392b;\n            border-radius: 50%;\n            position: relative;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.4), inset 0 -2px 3px rgba(0,0,0,0.3);\n            opacity: 0;\n            transform: scale(0.5);\n            font-family: 'Cinzel', serif;\n            color: #e7a49c;\n            text-align: center;\n            font-size: 24px;\n            line-height: 45px;\n            font-weight: 700;\n        }\n        .wax-seal::before {\n            content: 'GS';\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.3);\n        }\n\n        .creator-scroll-content { overflow-y: auto; padding: 10px 20px 10px 10px; }\n        .creator-scroll-content::-webkit-scrollbar { width: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-track { background: rgba(139, 115, 85, 0.1); border-radius: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-thumb { background-color: #a89072; border-radius: 10px; border: 2px solid #f7e9d7; }\n        \n        .gs-creator-step { margin-bottom: 40px; overflow: hidden; }\n        .gs-creator-step h3 { font-family: var(--font-display); font-size: 1.5em; font-weight: 700; border-bottom: 1.5px solid var(--border-color); padding-bottom: 8px; margin-bottom: 20px; color: var(--heading-color); text-align: left; }\n        \n        .layout-grid { display: grid; grid-template-columns: 1fr; gap: 25px; align-items: flex-start; }\n        @media (min-width: 768px) {\n            .layout-grid { grid-template-columns: 1fr 280px; }\n        }\n\n        .form-container { text-align: left; }\n        .gs-form-group { margin-bottom: 16px; }\n        .gs-form-group label { display: block; margin-bottom: 6px; font-weight: bold; color: var(--heading-color); }\n        .form-input, .form-select, .form-textarea { width: 100%; padding: 10px; background-color: rgba(255, 255, 255, 0.5); border: 1px solid #a58e72; border-radius: 4px; color: #3d3d3d; font-family: var(--font-main); font-size: 1em; transition: all 0.2s ease-in-out; box-shadow: inset 1px 1px 2px rgba(0,0,0,0.1); }\n        .form-input:focus, .form-select:focus, .form-textarea:focus { outline: none; border-color: #8b7355; background-color: #fff; box-shadow: 0 0 5px rgba(139, 115, 85, 0.5); }\n        .form-textarea { resize: vertical; min-height: 100px; }\n\n        .grid-cols-2 {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 16px;\n        }\n        @media (min-width: 480px) {\n            .grid-cols-2 {\n                grid-template-columns: repeat(2, 1fr);\n            }\n        }\n\n        #attributes-container .point-control { display: flex; align-items: center; justify-content: space-between; margin-bottom: 8px; padding: 6px 8px; background: rgba(0,0,0,0.03); border-left: 3px solid rgba(139,115,85,0.2); border-radius: 4px; }\n        #attributes-container .label { font-weight: bold; color: var(--heading-color); }\n        #attributes-container input[readonly] { width: 40px; text-align: center; font-weight: bold; font-size: 1.2em; font-family: var(--font-display); color: #a02c2c; border: none; background-color: transparent; box-shadow: none; padding: 0; }\n        \n        .attributes-grid {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 0 16px;\n        }\n        @media (min-width: 480px) {\n            .attributes-grid {\n                grid-template-columns: 1fr 1fr;\n            }\n        }\n        \n        .skills-display p { background-color: rgba(0,0,0,0.05); border-left: 3px solid var(--border-color); padding: 10px 15px; margin-top: 10px; font-size: 0.95em; border-radius: 0 4px 4px 0; }\n        .skills-display strong { color: #8b5b4b; font-family: var(--font-display); }\n        .skills-display ul { list-style: none; padding-left: 0; margin-top: 8px; font-size: 0.9em; }\n        .skills-display li { margin-bottom: 4px; }\n\n        #character-summary { background-color: #e9e4d9; font-family: var(--font-code); line-height: 1.6; height: 250px; color: #2c2a2a; }\n        \n        .gs-button { width: 100%; background-color: #8b7355; color: var(--parchment-bg); border: 2px solid var(--dark-leather-bg); border-radius: 5px; padding: 12px 20px; font-family: var(--font-display); font-size: 1.2em; font-weight: 700; cursor: pointer; margin-top: 10px; transition: all 0.3s ease; box-shadow: 0 3px 5px rgba(0,0,0,0.3); }\n        .gs-button:hover { background-color: #a0886c; transform: translateY(-2px); box-shadow: 0 5px 8px rgba(0,0,0,0.3); }\n        .gs-button:disabled { background-color: #9e9e9e; border-color: #757575; cursor: not-allowed; transform: none; box-shadow: none; opacity: 0.6; }\n        .action-button { background-color: #6d5b4b; font-size: 1em; padding: 10px 15px; margin-top: 0; margin-bottom: 10px; width: auto; }\n        \n        .background-display { margin-top: 15px; padding: 15px; border: 1px dashed var(--border-color); border-radius: 5px; background: rgba(0,0,0,0.02); }\n        .background-display p { margin: 0 0 8px; }\n        .background-display span { font-weight: bold; color: var(--heading-color); }\n        \n        #radar-chart-container { \n            max-width: 100%;\n        }\n        @media (min-width: 768px) {\n            #radar-chart-container {\n                position: sticky;\n                top: 0;\n                padding-top: 45px;\n            }\n        }\n\n        pre.mermaid { \n            font-family: var(--font-main); \n            background: rgba(0,0,0,0.02); \n            border: 1px solid rgba(139,115,85,0.1); \n            padding: 10px; \n            border-radius: 5px; \n            overflow: auto;\n            transition: opacity 0.3s ease-in-out;\n        }\n        pre.mermaid.loading { opacity: 0.5; pointer-events: none; }\n\n        pre.mermaid > svg {\n            max-width: 100%;\n            height: auto;\n        }\n\n        #dice-overlay {\n            position: fixed; top: 0; left: 0; width: 100%; height: 100%;\n            background: rgba(0,0,0,0.8); backdrop-filter: blur(5px);\n            display: none; align-items: center; justify-content: center; flex-direction: column;\n            z-index: 100;\n            color: #fff; text-shadow: 0 0 10px #000;\n        }\n\n        .dice-container {\n            display: flex; flex-wrap: wrap; justify-content: center;\n            gap: 2rem; margin-bottom: 2rem;\n            max-width: 600px;\n        }\n        \n        .dice-icon {\n            width: var(--dice-size); height: var(--dice-size);\n            perspective: 800px;\n            transform-style: preserve-3d;\n            display: none;\n        }\n        .dice-icon.highlight {\n            transform: scale(1.15);\n            filter: drop-shadow(0 0 15px #FFEB3B);\n            transition: transform 0.3s ease, filter 0.3s ease;\n        }\n\n        .dice-cube {\n            width: 100%; height: 100%;\n            position: relative;\n            transform-style: preserve-3d;\n            transform: translateZ(calc(var(--dice-size) / -2));\n        }\n        \n        .dice-face {\n            position: absolute;\n            width: var(--dice-size); height: var(--dice-size);\n            background-color: rgba(255, 255, 255, 0.98);\n            border: 1.5px solid #857e72;\n            border-radius: 12%;\n        }\n\n        .pips-container {\n            width: 100%; height: 100%;\n            position: relative; \n        }\n        .pip {\n            width: 22%; height: 22%; \n            background-color: #3d352e;\n            border-radius: 50%;\n            box-shadow: inset 0 1px 3px rgba(0,0,0,0.5);\n            position: absolute; \n        }\n        \n        #dice-result-text { \n            font-family: var(--font-display); \n            font-size: 2.2em;\n            color: #FFEB3B; \n            text-shadow: 0 0 12px #FFEB3B; \n            min-height: 2em;\n            line-height: 1.2;\n            text-align: center; \n        }\n        \n        #skip-animation-btn {\n            position: absolute;\n            bottom: 30px;\n            font-size: 1em;\n            padding: 8px 20px;\n            width: auto;\n            background-color: rgba(0,0,0,0.3);\n            border-color: rgba(255,255,255,0.5);\n            color: rgba(255,255,255,0.8);\n        }\n        #skip-animation-btn:hover {\n            background-color: rgba(0,0,0,0.5);\n            color: #fff;\n        }\n\n        .typed-cursor {\n            opacity: 1;\n            animation: typed-blink 0.7s infinite;\n        }\n        @keyframes typed-blink{\n            0% { opacity: 1; }\n            50% { opacity: 0; }\n            100% { opacity: 1; }\n        }\n        \n        .validation-message {\n            text-align: center;\n            color: #b71c1c;\n            font-size: 0.9em;\n            font-weight: bold;\n            margin-top: -5px;\n            margin-bottom: 10px;\n            height: 1.2em;\n            opacity: 0;\n            will-change: transform, opacity;\n        }\n\n        #credits-screen {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            pointer-events: none;\n            opacity: 0;\n        }\n\n        #credits-screen p {\n            font-family: var(--font-display);\n            font-size: 2em;\n            color: #f5f5dc;\n            text-shadow: 0 0 8px rgba(245, 245, 220, 0.7);\n        }\n    </style>\n</head>\n<body>\n\n<div class=\"creator-wrapper\">\n    <div class=\"border-flow\"></div>\n    <div class=\"inner-border\"></div>\n    <header class=\"creator-header\">\n        <h1 id=\"main-title\">冒险者契约登记</h1>\n        <div id=\"wax-seal\" class=\"wax-seal\"></div>\n    </header>\n\n    <div class=\"creator-scroll-content\">\n        <div class=\"gs-creator-container\">\n            <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第一步：身份确认</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-name-input\">姓名</label><input id=\"char-name-input\" type=\"text\" placeholder=\"可留空，默认为 {{user}}\" class=\"form-input\"></div>\n                    <div class=\"grid-cols-2 gsap-content-item\">\n                        <div class=\"gs-form-group\"><label for=\"char-gender-input\">性别</label><input id=\"char-gender-input\" type=\"text\" placeholder=\"例如: 男性/女性/双性/无性/……\" class=\"form-input\"></div>\n                        <div class=\"gs-form-group\"><label for=\"char-age-input\">年龄</label><input id=\"char-age-input\" type=\"number\" placeholder=\"可参照种族说明\" class=\"form-input\"></div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-race-select\">种族</label><select id=\"char-race-select\" class=\"form-select\"></select></div>\n                    <div class=\"gs-form-group gsap-content-item\">\n                        <label>经历 (出身/来历/邂逅)</label>\n                        <button id=\"roll-background-btn\" class=\"gs-button action-button\">🎲 投骰决定经历</button>\n                        <div id=\"background-display\" class=\"background-display\" style=\"display: none;\">\n                            <p>出身: <span id=\"bg-origin\"></span></p>\n                            <p>来历: <span id=\"bg-past\"></span></p>\n                            <p>邂逅: <span id=\"bg-encounter\"></span></p>\n                        </div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"oc-details-input\">身体特征与补充</label><textarea id=\"oc-details-input\" placeholder=\"发色、瞳色、体型、性格、背景故事构思...\" class=\"form-textarea\"></textarea></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第二步：能力值与技能</h3>\n                <div class=\"layout-grid\">\n                    <div class=\"form-container gsap-content-item\">\n                        <button id=\"roll-attributes-btn\" class=\"gs-button action-button\">🎲 投骰决定能力值</button>\n                        <div id=\"attributes-container\" class=\"attributes-grid\"></div>\n                        <div id=\"skills-and-desc-container\" class=\"skills-display\"></div>\n                    </div>\n                    <div id=\"radar-chart-container\" class=\"gsap-content-item\"><pre class=\"mermaid\" id=\"radar-chart\"></pre></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第三步：完成登记</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"character-summary\">角色卡预览</label><textarea id=\"character-summary\" rows=\"12\" readonly class=\"form-textarea\"></textarea></div>\n                    <button id=\"submit-btn\" class=\"gs-button gsap-content-item\" disabled>确认登记，开始冒险</button>\n                    <div id=\"validation-message\" class=\"validation-message\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div id=\"credits-screen\">\n    <p>作者 𝙀𝙡𝙖𝙞𝙣𝙖𝙙𝙚𝙨</p>\n</div>\n\n<div id=\"dice-overlay\">\n    <div class=\"dice-container\" id=\"dice-container\"></div>\n    <div id=\"dice-result-text\"></div>\n    <button id=\"skip-animation-btn\" class=\"gs-button\">跳过动画</button>\n</div>\n\n<div id=\"dice-templates\" style=\"display:none;\">\n    <div class=\"dice-cube\" data-id_template=\"dice-cube\">\n        <div class=\"dice-face face-front\" data-face=\"1\"><div class=\"pips-container\"><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-back\" data-face=\"6\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-right\" data-face=\"3\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-left\" data-face=\"4\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-top\" data-face=\"2\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-bottom\" data-face=\"5\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n    </div>\n</div>\n\n<script>\n// --- MODIFIED DATA ---\nconst raceData = {\n    '凡人': { attr_rolls: { '力量': '1d3+1', '敏捷': '1d3', '感知': '1d3', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3+2', '魔力': '1d3' }, skills: ['过载行动(初级)', '武器:投掷武器(初级)', '长距离移动(初级)']},\n    '矿人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3', '感知': '1d3+2', '知识': '1d3-1', '魅力': '1d3+1', '信仰力': '1d3+1', '魔力': '1d3-1' }, skills: ['治愈适性(初级)', '夜视(初级)', '锻造(初级)']},\n    '森人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+1', '感知': '1d3+1', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3-1', '魔力': '1d3+1' }, skills: ['武器:弩弓(初级)', '夜视(初级)', '精灵宠儿(初级)']},\n    '蜥蜴人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3+1', '感知': '1d3', '知识': '1d3', '魅力': '1d3+1', '信仰力': '1d3', '魔力': '1d3' }, skills: ['免疫强化(初级)', '夜视(初级)', '龙族血统(初级)']},\n    '圃人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+2', '感知': '1d3+1', '知识': '1d3', '魅力': '1d3-1', '信仰力': '1d3', '魔力': '1d3+2' }, skills: ['隐匿(初级)', '先发制人(初级)', '烹饪(初级)']}\n};\nconst backgroundData = {\n    origin: { \n        '凡人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '学者', class: '魔术师', level: 1, skills: ['文献调查(初级)'] }, 6: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 7: { name: '农民', skills: ['生产业:农业(初级)', '强健(初级)'] }, 8: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '骑士', class: '战士', level: 1, skills: ['骑乘(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n        '矿人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 6: { name: '酒馆老板', class: '战士', level: 1, skills: ['观察(初级)'] }, 7: { name: '铁匠', skills: ['工匠:锻造(初级)', '手工(初级)'] }, 8: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '碎盾者', class: '战士', level: 1, skills: ['强击攻击·斩(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n    },\n    past: { 2: { name: '奴隶', skills: ['劳动(初级)'] }, 3: { name: '牢狱', skills: ['犯罪知识(初级)'] }, 4: { name: '战场', skills: ['沉着冷静(初级)'] }, 5: { name: '神殿', skills: ['神学(初级)'] }, 6: { name: '孤儿', skills: ['忍耐(初级)'] }, 7: { name: '平顺', skills: ['幸运(初级)'] }, 8: { name: '贫困', skills: ['生存术(初级)'] }, 9: { name: '学校', skills: ['博识(初级)'] }, 10: { name: '深闺', skills: ['无偏见(初级)'] }, 11: { name: '奢华', skills: ['鉴定(初级)'] }, 12: { name: '宫廷', skills: ['礼仪(初级)'] }},\n    encounter: { 2: '宿敌', 3: '上司', 4: '后辈', 5: '交易对象', 6: '下属', 7: '家人', 8: '挚友', 9: '前辈', 10: '未婚夫/妻', 11: '劲敌', 12: '师父' }\n};\nbackgroundData.origin['森人'] = backgroundData.origin['凡人']; backgroundData.origin['蜥蜴人'] = backgroundData.origin['凡人']; backgroundData.origin['圃人'] = backgroundData.origin['凡人'];\nconst character = {\n    name: '', gender: '', age: '', oc_details: '', race: '凡人',\n    background: { origin: null, past: null, encounter: null },\n    attributes: { '力量': 0, '敏捷': 0, '感知': 0, '知识': 0, '魅力': 0, '信仰力': 0, '魔力': 0, '潜力': 0 },\n    skills: [], classes: {}, money: 0, _lastAttributesForChart: '',\n};\n// --- END MODIFIED DATA ---\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    gsap.registerPlugin(TextPlugin);\n    mermaid.initialize({ startOnLoad: true, theme: 'base', themeVariables: {\n        '--mermaid-font-family': \"'Vollkorn', 'Noto Serif SC', serif\",\n        primaryColor: '#f7e9d7', primaryTextColor: '#3d3d3d', lineColor: '#8b7355', textColor: '#4a3c2c',\n    }});\n    \n    const $ = (s) => document.querySelector(s);\n    const roll1D6 = () => Math.floor(Math.random() * 6) + 1;\n    const roll1D3 = () => {\n        const d6 = roll1D6();\n        if (d6 <= 2) return { d6, d3: 1 };\n        if (d6 <= 4) return { d6, d3: 2 };\n        return { d6, d3: 3 };\n    };\n    const rollDiceString = (diceString) => { const p=diceString.split('*');const d=p[0];const m=parseInt(p[1])||1;if(!d.includes('d'))return 0;const[n,s]=d.split('d').map(Number);let t=0;for(let i=0;i<n;i++){t+=Math.floor(Math.random()*s)+1;}return t*m; };\n    const formatAge = (ageValue) => { if (!ageValue && ageValue !== 0) return ageValue; const num = Number(ageValue); if (isNaN(num)) return ageValue; if (Math.abs(num) >= 1_000_000) return num.toExponential(2); return ageValue; };\n    const debounce = (func, delay) => { let timeout; return function(...args) { clearTimeout(timeout); timeout = setTimeout(() => func.apply(this, args), delay); }; };\n    const diceUnicode = ['\\u2680', '\\u2681', '\\u2682', '\\u2683', '\\u2684', '\\u2685'];\n\n    const DOM = {\n        nameInput: $('#char-name-input'), genderInput: $('#char-gender-input'), ageInput: $('#char-age-input'),\n        ocDetailsInput: $('#oc-details-input'), raceSelect: $('#char-race-select'), attributesContainer: $('#attributes-container'),\n        skillsContainer: $('#skills-and-desc-container'), radarChart: $('#radar-chart'), summarySheet: $('#character-summary'),\n        diceOverlay: $('#dice-overlay'), diceContainer: $('#dice-container'), diceResultText: $('#dice-result-text'),\n        backgroundDisplay: $('#background-display'), bgOrigin: $('#bg-origin'), bgPast: $('#bg-past'), bgEncounter: $('#bg-encounter'),\n        skipAnimationBtn: $('#skip-animation-btn'),\n        submitBtn: $('#submit-btn'),\n        validationMessage: $('#validation-message'),\n    };\n    \n    const dicePool = []; const MAX_DICE = 6;\n    let currentAnimation = null; let textAnimation = null; let isSkipping = false;\n    let currentValidationMessage = '';\n    \n    function validateAndToggleButton() {\n        let newMessage = '';\n        if (!character.age || String(character.age).trim() === '') {\n            newMessage = '请填写您的冒险者年龄。';\n        } else if (!character.gender || !character.gender.trim()) {\n            newMessage = '请设定冒险者的性别。';\n        } else if (!character.background.origin) {\n            newMessage = '请投骰决定您的冒险者经历。';\n        } else if (Object.values(character.attributes).every(val => val === 0)) {\n            newMessage = '请投骰决定您的能力值。';\n        }\n\n        if (newMessage === currentValidationMessage) return;\n        currentValidationMessage = newMessage;\n\n        if (newMessage) {\n            DOM.submitBtn.disabled = true;\n            DOM.validationMessage.textContent = newMessage;\n            gsap.fromTo(DOM.validationMessage, { autoAlpha: 0, scale: 0.8 }, { autoAlpha: 1, scale: 1, duration: 0.4, ease: 'elastic.out(1, 0.75)' });\n        } else {\n            DOM.submitBtn.disabled = false;\n            gsap.to(DOM.validationMessage, { autoAlpha: 0, duration: 0.3 });\n        }\n    }\n    function updateCharacterDataFromDOM() { character.name = DOM.nameInput.value; character.gender = DOM.genderInput.value; character.age = DOM.ageInput.value; character.oc_details = DOM.ocDetailsInput.value; character.race = DOM.raceSelect.value; }\n    function renderSkills() { const uniqueSkills = [...new Set(character.skills)]; DOM.skillsContainer.innerHTML = `<p><strong>天赋与习得技能:</strong></p><ul>${uniqueSkills.map(s => `<li>- ${s}</li>`).join('')}</ul>`; }\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key}`).value = value; }); }\n    function renderSummary() {\n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '?';\n        const originText = `出身:${character.background.origin ? character.background.origin.name : '?'}`;\n        const pastText = `来历:${character.background.past ? character.background.past.name : '?'}`;\n        const encounterText = `邂逅:${character.background.encounter || '?'}`;\n        let summary = `### 《哥布林杀手TRPG》冒险者登记卡\\n` + `**姓名:** ${finalName} | **种族:** ${character.race} | **性别:** ${character.gender || '?'} | **年龄:** ${formattedAge}\\n` + `**经历:** ${originText} / ${pastText} / ${encounterText}\\n` + `**初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n` + `**初始技能:** ${uniqueSkills.join(', ') || '无'}\\n`; if (character.oc_details) { summary += `**身体特征与补充:** ${character.oc_details}\\n`; } summary += `---\\n**能力值:**\\n`; summary += Object.entries(character.attributes).map(([key, value]) => `- ${key}: ${value}`).join('\\n'); summary += `\\n**持有资金:** ${character.money} 银币`;\n        DOM.summarySheet.value = summary.replace(/### /g, '').replace(/\\*\\*/g, '').replace(/---/g, '\\n────────────────────\\n').replace(/- /g, '  ');\n        DOM.summarySheet.setAttribute('data-raw', summary);\n    }\n    async function renderRadarChartIfNeeded() { const currentAttributesString = JSON.stringify(character.attributes); if (currentAttributesString === character._lastAttributesForChart) return; DOM.radarChart.classList.add('loading'); const radarSyntax = `radar-beta\\ntitle 能力值分布\\naxis a[\"力量 ${character.attributes['力量']}\"]\\naxis b[\"敏捷 ${character.attributes['敏捷']}\"]\\naxis c[\"感知 ${character.attributes['感知']}\"]\\naxis d[\"知识 ${character.attributes['知识']}\"]\\naxis e[\"魅力 ${character.attributes['魅力']}\"]\\naxis f[\"信仰 ${character.attributes['信仰力']}\"]\\naxis g[\"魔力 ${character.attributes['魔力']}\"]\\naxis h[\"潜力 ${character.attributes['潜力']}\"]\\ncurve current[\"能力\"]{${character.attributes['力量']},${character.attributes['敏捷']},${character.attributes['感知']},${character.attributes['知识']},${character.attributes['魅力']},${character.attributes['信仰力']},${character.attributes['魔力']},${character.attributes['潜力']}}\\nmax 10\\nmin 0`; DOM.radarChart.innerHTML = radarSyntax; DOM.radarChart.removeAttribute('data-processed'); try { await mermaid.run({ nodes: [DOM.radarChart] }); character._lastAttributesForChart = currentAttributesString; } catch(e) { console.error(\"Mermaid rendering error:\", e); } finally { DOM.radarChart.classList.remove('loading'); } }\n    async function updateUI(forceFullUpdate = false) { updateCharacterDataFromDOM(); if(forceFullUpdate) { character._lastAttributesForChart = ''; character.skills = []; character.classes = {}; character.money = 100; if(raceData[character.race].skills) character.skills.push(...raceData[character.race].skills); if (character.background.origin) { if (character.background.origin.skills) character.skills.push(...character.background.origin.skills); if (character.background.origin.class) character.classes[character.background.origin.class] = character.background.origin.level; if(character.background.origin.money) character.money += rollDiceString(character.background.origin.money); } if (character.background.past && character.background.past.skills) { character.skills.push(...character.background.past.skills); } } renderAttributes(); renderSkills(); renderSummary(); await renderRadarChartIfNeeded(); validateAndToggleButton(); }\n\n    const masterTl = gsap.timeline({ delay: 0.2 });\n    const title = $('#main-title');\n    title.innerHTML = title.textContent.split('').map(char => `<span class=\"title-char\">${char}</span>`).join('');\n    gsap.set(\".gsap-header-item, .gsap-content-item\", { autoAlpha: 0, y: 20 });\n    masterTl.to(\".title-char\", { autoAlpha: 1, y: 0, duration: 0.7, ease: \"power3.out\", stagger: 0.1 }).to(\"#wax-seal\", { autoAlpha: 1, scale: 1, duration: 0.6, ease: \"elastic.out(1, 0.7)\" }, \"-=0.5\");\n    document.querySelectorAll('.gs-creator-step').forEach((step, index) => { const stepTl = gsap.timeline(); stepTl.to(step.querySelector('.gsap-header-item'), { autoAlpha: 1, y: 0, duration: 0.6, ease: 'power2.out' }).to(step.querySelectorAll('.gsap-content-item'), { autoAlpha: 1, y: 0, duration: 0.5, ease: 'power2.out', stagger: 0.1 }, '-=0.4'); masterTl.add(stepTl, `-=${index === 0 ? 0.2 : 0.7}`); });\n    const pipPositions = { 1: [ { left: '50%', top: '50%' } ], 2: [ { left: '25%', top: '25%' }, { left: '75%', top: '75%' } ], 3: [ { left: '25%', top: '25%' }, { left: '50%', top: '50%' }, { left: '75%', top: '75%' } ], 4: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 5: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '50%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 6: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '50%' }, { left: '75%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ]};\n    function setupCube(cubeEl) { const size = 'calc(var(--dice-size) / 2)'; gsap.set(cubeEl.querySelector('.face-front'),  { transform: `rotateY(0deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-back'),   { transform: `rotateY(180deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-right'),  { transform: `rotateY(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-left'),   { transform: `rotateY(-90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-top'),   { transform: `rotateX(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-bottom'), { transform: `rotateX(-90deg) translateZ(${size})` }); const faces = cubeEl.querySelectorAll('.dice-face'); faces.forEach(face => { const faceNum = face.getAttribute('data-face'); const pips = face.querySelectorAll('.pip'); const positions = pipPositions[faceNum]; if (!pips.length || !positions) return; pips.forEach((pip, index) => { const pos = positions[index]; gsap.set(pip, { left: pos.left, top: pos.top, xPercent: -50, yPercent: -50 }); }); }); }\n    function getRotationForFace(faceValue) { switch (faceValue) { case 1: return { x: 0, y: 0 }; case 6: return { x: 0, y: 180 }; case 3: return { x: 0, y: -90 }; case 4: return { x: 0, y: 90 }; case 2: return { x: -90, y: 0 }; case 5: return { x: 90,  y: 0 }; default: return { x: 0, y: 0 }; } }\n    async function animateText(element, text) { if(isSkipping) {element.innerHTML = text.replace(/\\n/g, '<br>'); return;} return new Promise(resolve => { if (textAnimation && textAnimation.isActive()) textAnimation.kill(); element.innerHTML = ''; textAnimation = gsap.to(element, { duration: text.length * 0.05, text: { value: text.replace(/\\n/g, '<br>'), newClass: \"typed-cursor\" }, ease: \"none\", onComplete: () => { gsap.delayedCall(0.7, () => { element.querySelector('.typed-cursor')?.remove(); resolve(); }); } }); }); }\n    function initDicePool() { const diceTemplate = document.querySelector('[data-id_template=\"dice-cube\"]'); if (!diceTemplate) return; for (let i = 0; i < MAX_DICE; i++) { const dieIconElement = document.createElement('div'); dieIconElement.className = 'dice-icon'; const newCube = diceTemplate.cloneNode(true); dieIconElement.appendChild(newCube); DOM.diceContainer.appendChild(dieIconElement); setupCube(newCube); dicePool.push(dieIconElement); } }\n    async function animateRoll(numDice, preCalculatedRolls, textToShowDuringRoll = \"投掷中...\") { return new Promise(resolve => { if (currentAnimation && currentAnimation.isActive()) currentAnimation.kill(); dicePool.forEach(die => die.style.display = 'none'); const activeDice = dicePool.slice(0, numDice); animateText(DOM.diceResultText, textToShowDuringRoll); activeDice.forEach(die => { die.style.display = 'flex'; die.className = 'dice-icon'; }); const masterTl = gsap.timeline({ onComplete: () => { if(isSkipping) DOM.diceResultText.innerHTML = ''; resolve(preCalculatedRolls); }}); currentAnimation = masterTl; activeDice.forEach((dieElement, i) => { const dieCube = dieElement.querySelector('.dice-cube'); const visualRoll = preCalculatedRolls[i]; const targetRotation = getRotationForFace(visualRoll); const dieTimeline = gsap.timeline(); dieTimeline.to(dieCube, { rotationX: `+=${gsap.utils.random(720, 1080)}`, rotationY: `+=${gsap.utils.random(720, 1080)}`, duration: 1.8, ease: \"power2.in\" }).to(dieCube, { rotationX: targetRotation.x, rotationY: targetRotation.y, duration: 0.7, ease: \"power4.out\" }); masterTl.add(dieTimeline, 0); }); }); }\n    \n    const debouncedUpdate = debounce(updateUI, 400);\n    [DOM.nameInput, DOM.genderInput, DOM.ageInput, DOM.ocDetailsInput].forEach(el => el.addEventListener('input', debouncedUpdate));\n    \n    DOM.skipAnimationBtn.addEventListener('click', () => {\n        isSkipping = true;\n        if (currentAnimation && currentAnimation.isActive()) currentAnimation.progress(1);\n        if (textAnimation && textAnimation.isActive()) textAnimation.progress(1);\n    });\n\n    $('#roll-background-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const rolls = [roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6()];\n        await animateRoll(6, rolls, '投掷 经历... (2d6 x 3)');\n        \n        const sums = { origin: rolls[0] + rolls[1], past: rolls[2] + rolls[3], encounter: rolls[4] + rolls[5] };\n        \n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `出身: ${rolls[0]} + ${rolls[1]} = ${sums.origin}\\n(${backgroundData.origin[character.race][sums.origin].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `来历: ${rolls[2]} + ${rolls[3]} = ${sums.past}\\n(${backgroundData.past[sums.past].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(4, 6), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `邂逅: ${rolls[4]} + ${rolls[5]} = ${sums.encounter}\\n(${backgroundData.encounter[sums.encounter]})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        character.background.origin = backgroundData.origin[character.race][sums.origin];\n        character.background.past = backgroundData.past[sums.past];\n        character.background.encounter = backgroundData.encounter[sums.encounter];\n        DOM.bgOrigin.textContent = character.background.origin.name;\n        DOM.bgPast.textContent = character.background.past.name;\n        DOM.bgEncounter.textContent = character.background.encounter;\n        DOM.backgroundDisplay.style.display = 'block';\n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        updateUI(true);\n    });\n\n    $('#roll-attributes-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const attrRolls = raceData[character.race].attr_rolls;\n        const allCalculatedRolls = [];\n\n        // Prepare race-based attributes\n        for (const attr in attrRolls) {\n            const formula = attrRolls[attr];\n            const modifier = parseInt(formula.split('d3')[1] || '0');\n            const { d6, d3 } = roll1D3();\n            const finalValue = Math.max(0, d3 + modifier);\n            character.attributes[attr] = finalValue;\n            allCalculatedRolls.push({ attr, formula, d6, d3, modifier, finalValue });\n        }\n        \n        // Prepare \"Potential\" attribute\n        const potentialValue = Math.floor(Math.random() * 3) + 1;\n        const d6ForPotential = (potentialValue * 2) - 1; // Map 1,2,3 to d6 faces 1,3,5 for animation\n        character.attributes['潜力'] = potentialValue;\n        allCalculatedRolls.push({\n            attr: '潜力',\n            formula: '1-3', // Just a descriptor\n            d6: d6ForPotential,\n            finalValue: potentialValue\n        });\n        \n        // Animate all rolls sequentially\n        for (const roll of allCalculatedRolls) {\n            await animateRoll(1, [roll.d6], `投掷 ${roll.attr}...`);\n            if (isSkipping) break;\n\n            gsap.to(dicePool[0], { className: 'dice-icon highlight', duration: 0.3 });\n            \n            let resultText;\n            if (roll.attr === '潜力') {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.finalValue}`;\n            } else {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.d3} ${roll.modifier >= 0 ? '+' : ''} ${roll.modifier} = ${roll.finalValue}`;\n            }\n            await animateText(DOM.diceResultText, resultText);\n            \n            await updateUI();\n            \n            if (isSkipping) break;\n            \n            await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        await updateUI();\n    });\n\n    DOM.raceSelect.addEventListener('change', () => {\n        DOM.backgroundDisplay.style.display = 'none';\n        character.background = { origin: null, past: null, encounter: null };\n        Object.keys(character.attributes).forEach(k => character.attributes[k] = 0);\n        updateUI(true);\n    });\n\n    $('#submit-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        await updateUI(true);\n        \n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '未设定';\n        \n        const finalCharacterObject={ NAME:finalName, GENDER:character.gender||'未设定', AGE:formattedAge, RACE:character.race, ORIGIN: character.background.origin ? character.background.origin.name : '未知', PAST: character.background.past ? character.background.past.name : '未知', ENCOUNTER: character.background.encounter || '未知', SKILLS: uniqueSkills, OC_DETAILS:character.oc_details||'无', ...character.attributes, MONEY:character.money };\n        \n        const slashCommand=`/send <START>\\nAdmin:\\n这是一个TRPG开局，请为 User 生成一段详尽的背景故事。\\n\\n# 故事核心要求\\n请严格根据以下【角色完整设定】，撰写一段从角色童年到现在的成长故事。故事需要清晰地阐述是什么关键事件或心路历程，最终让他/她确立了要成为一名冒险者的志向。请在故事中自然地融入角色的种族、出身背景、技能和性格特点。\\n\\n# 角色完整设定\\n---\\n## 基础信息\\n- **姓名:** ${finalName}\\n- **性别:** ${character.gender||'未设定'}\\n- **年龄:** ${formattedAge}\\n- **种族:** ${character.race}\\n\\n## 经历\\n- **出身:** ${character.background.origin ? character.background.origin.name : '未知'}\\n- **来历:** ${character.background.past ? character.background.past.name : '未知'}\\n- **邂逅:** ${character.background.encounter || '未知'}\\n\\n## 背景与技能\\n- **初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n- **初始技能:** ${uniqueSkills.join(', ')||'无'}\\n\\n## 补充设定 (OC)\\n- **额外补充:** ${character.oc_details||'无'}\\n\\n## 能力值\\n- **力量:** ${character.attributes['力量']}\\n- **敏捷:** ${character.attributes['敏捷']}\\n- **感知:** ${character.attributes['感知']}\\n- **知识:** ${character.attributes['知识']}\\n- **魅力:** ${character.attributes['魅力']}\\n- **信仰力:** ${character.attributes['信仰力']}\\n- **魔力:** ${character.attributes['魔力']}\\n\\n## 初始资产\\n- **资金:** ${character.money} 银币\\n\\|\\n/trigger`; \n        \n        try {\n            if (typeof insertOrAssignVariables === 'function') {\n                await insertOrAssignVariables(finalCharacterObject);\n            } else {\n                console.log(\"SillyTavern Function 'insertOrAssignVariables' not found. Variables:\", finalCharacterObject);\n            }\n            if (typeof triggerSlash === 'function') {\n                await triggerSlash(slashCommand, 'Send');\n            } else { \n                console.log(\"SillyTavern Function 'triggerSlash' not found. Command will be copied to clipboard.\");\n                navigator.clipboard.writeText(slashCommand).then(() => {\n                    alert('角色指令已复制到剪贴板！');\n                });\n            }\n        } catch (error) {\n            console.error('与SillyTavern交互失败:', error);\n            alert('与SillyTavern交互失败，请查看浏览器控制台。');\n        }\n\n        e.target.innerHTML = \"契约成立！\";\n    });\n    \n    initDicePool();\n    Object.keys(raceData).forEach(key => DOM.raceSelect.add(new Option(key, key)));\n    Object.keys(character.attributes).forEach(key => {\n        const pointControl = document.createElement('div');\n        pointControl.className = 'point-control';\n        pointControl.innerHTML = `<span class=\"label\">${key}</span><input type=\"text\" id=\"attr-${key.replace(/\\s/g, '')}\" readonly value=\"0\">`; // ID santized just in case\n        DOM.attributesContainer.appendChild(pointControl);\n    });\n    // A small fix for renderAttributes to handle sanitized IDs\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key.replace(/\\s/g, '')}`).value = value; }); }\n    updateUI(true);\n});\n</script>\n\n</body>\n</html>\n```"
  },
  {
    "role": "user",
    "content": "```\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>哥布林杀手TRPG - 冒险者契约</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/gsap.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/TextPlugin.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.min.js\" defer></script>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Noto+Serif+SC:wght@400;700&family=Vollkorn:wght@400;700&family=Courier+Prime&display=swap\" rel=\"stylesheet\">\n\n    <style>\n        :root {\n            --leather-bg: #5a3a2a;\n            --dark-leather-bg: #3b2a1a;\n            --parchment-bg: #f5f5dc;\n            --parchment-bg-gradient: linear-gradient(165deg, #f7e9d7, #e6d5c3);\n            --text-color: #3d3d3d;\n            --heading-color: #4a3c2c;\n            --border-color: #7a5a4a;\n            --font-main: 'Vollkorn', 'Noto Serif SC', serif;\n            --font-display: 'Cinzel', 'Noto Serif SC', serif;\n            --font-code: 'Courier Prime', 'Courier New', monospace;\n            --dice-size: 5rem; \n        }\n\n        html { height: 100%; }\n        body {\n            background-color: #3a2e20;\n            font-family: var(--font-main);\n            color: var(--text-color);\n            margin: 0; padding: 20px;\n            box-sizing: border-box;\n            display: flex;\n            align-items: center; justify-content: center;\n            min-height: 100%;\n        }\n        *, *:before, *:after { box-sizing: inherit; }\n\n        .creator-wrapper {\n            width: 100%; max-width: 900px;\n            margin: 0;\n            background: var(--parchment-bg-gradient);\n            border: 12px solid #8b7355;\n            border-radius: 8px;\n            box-shadow: 0 0 40px rgba(139, 115, 85, 0.3), inset 0 0 30px rgba(255, 255, 255, 0.4);\n            position: relative;\n            overflow: hidden;\n            padding: 25px;\n            display: flex; flex-direction: column;\n            max-height: 95vh;\n        }\n\n        .border-flow, .inner-border { position: absolute; pointer-events: none; }\n        .border-flow { top: 0; left: 0; right: 0; bottom: 0; background: linear-gradient(90deg, rgba(139,115,85,0.1) 1px, transparent 1px), linear-gradient(0deg, rgba(139,115,85,0.1) 1px, transparent 1px); background-size: 20px 20px; animation: borderFlow 15s linear infinite; }\n        .inner-border { top: 5px; left: 5px; right: 5px; bottom: 5px; border: 3px solid rgba(139,115,85,0.3); border-radius: 5px; }\n        @keyframes borderFlow { from { background-position: 0 0; } to { background-position: 20px 20px; } }\n\n        .creator-header {\n            text-align: center;\n            padding: 10px;\n            margin-bottom: 25px;\n            border-bottom: 2px solid rgba(139, 115, 85, 0.3);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 15px;\n        }\n        .creator-header h1 {\n            font-family: var(--font-display);\n            font-size: clamp(24px, 5vw, 32px);\n            margin: 0;\n            font-weight: 700;\n            letter-spacing: 3px;\n            color: var(--heading-color);\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.1);\n        }\n        \n        .title-char {\n            display: inline-block;\n            opacity: 0;\n            transform: translateY(30px);\n        }\n\n        .wax-seal {\n            width: 45px;\n            height: 45px;\n            display: inline-block;\n            background-color: #c0392b;\n            border-radius: 50%;\n            position: relative;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.4), inset 0 -2px 3px rgba(0,0,0,0.3);\n            opacity: 0;\n            transform: scale(0.5);\n            font-family: 'Cinzel', serif;\n            color: #e7a49c;\n            text-align: center;\n            font-size: 24px;\n            line-height: 45px;\n            font-weight: 700;\n        }\n        .wax-seal::before {\n            content: 'GS';\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.3);\n        }\n\n        .creator-scroll-content { overflow-y: auto; padding: 10px 20px 10px 10px; }\n        .creator-scroll-content::-webkit-scrollbar { width: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-track { background: rgba(139, 115, 85, 0.1); border-radius: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-thumb { background-color: #a89072; border-radius: 10px; border: 2px solid #f7e9d7; }\n        \n        .gs-creator-step { margin-bottom: 40px; overflow: hidden; }\n        .gs-creator-step h3 { font-family: var(--font-display); font-size: 1.5em; font-weight: 700; border-bottom: 1.5px solid var(--border-color); padding-bottom: 8px; margin-bottom: 20px; color: var(--heading-color); text-align: left; }\n        \n        .layout-grid { display: grid; grid-template-columns: 1fr; gap: 25px; align-items: flex-start; }\n        @media (min-width: 768px) {\n            .layout-grid { grid-template-columns: 1fr 280px; }\n        }\n\n        .form-container { text-align: left; }\n        .gs-form-group { margin-bottom: 16px; }\n        .gs-form-group label { display: block; margin-bottom: 6px; font-weight: bold; color: var(--heading-color); }\n        .form-input, .form-select, .form-textarea { width: 100%; padding: 10px; background-color: rgba(255, 255, 255, 0.5); border: 1px solid #a58e72; border-radius: 4px; color: #3d3d3d; font-family: var(--font-main); font-size: 1em; transition: all 0.2s ease-in-out; box-shadow: inset 1px 1px 2px rgba(0,0,0,0.1); }\n        .form-input:focus, .form-select:focus, .form-textarea:focus { outline: none; border-color: #8b7355; background-color: #fff; box-shadow: 0 0 5px rgba(139, 115, 85, 0.5); }\n        .form-textarea { resize: vertical; min-height: 100px; }\n\n        .grid-cols-2 {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 16px;\n        }\n        @media (min-width: 480px) {\n            .grid-cols-2 {\n                grid-template-columns: repeat(2, 1fr);\n            }\n        }\n\n        #attributes-container .point-control { display: flex; align-items: center; justify-content: space-between; margin-bottom: 8px; padding: 6px 8px; background: rgba(0,0,0,0.03); border-left: 3px solid rgba(139,115,85,0.2); border-radius: 4px; }\n        #attributes-container .label { font-weight: bold; color: var(--heading-color); }\n        #attributes-container input[readonly] { width: 40px; text-align: center; font-weight: bold; font-size: 1.2em; font-family: var(--font-display); color: #a02c2c; border: none; background-color: transparent; box-shadow: none; padding: 0; }\n        \n        .attributes-grid {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 0 16px;\n        }\n        @media (min-width: 480px) {\n            .attributes-grid {\n                grid-template-columns: 1fr 1fr;\n            }\n        }\n        \n        .skills-display p { background-color: rgba(0,0,0,0.05); border-left: 3px solid var(--border-color); padding: 10px 15px; margin-top: 10px; font-size: 0.95em; border-radius: 0 4px 4px 0; }\n        .skills-display strong { color: #8b5b4b; font-family: var(--font-display); }\n        .skills-display ul { list-style: none; padding-left: 0; margin-top: 8px; font-size: 0.9em; }\n        .skills-display li { margin-bottom: 4px; }\n\n        #character-summary { background-color: #e9e4d9; font-family: var(--font-code); line-height: 1.6; height: 250px; color: #2c2a2a; }\n        \n        .gs-button { width: 100%; background-color: #8b7355; color: var(--parchment-bg); border: 2px solid var(--dark-leather-bg); border-radius: 5px; padding: 12px 20px; font-family: var(--font-display); font-size: 1.2em; font-weight: 700; cursor: pointer; margin-top: 10px; transition: all 0.3s ease; box-shadow: 0 3px 5px rgba(0,0,0,0.3); }\n        .gs-button:hover { background-color: #a0886c; transform: translateY(-2px); box-shadow: 0 5px 8px rgba(0,0,0,0.3); }\n        .gs-button:disabled { background-color: #9e9e9e; border-color: #757575; cursor: not-allowed; transform: none; box-shadow: none; opacity: 0.6; }\n        .action-button { background-color: #6d5b4b; font-size: 1em; padding: 10px 15px; margin-top: 0; margin-bottom: 10px; width: auto; }\n        \n        .background-display { margin-top: 15px; padding: 15px; border: 1px dashed var(--border-color); border-radius: 5px; background: rgba(0,0,0,0.02); }\n        .background-display p { margin: 0 0 8px; }\n        .background-display span { font-weight: bold; color: var(--heading-color); }\n        \n        #radar-chart-container { \n            max-width: 100%;\n        }\n        @media (min-width: 768px) {\n            #radar-chart-container {\n                position: sticky;\n                top: 0;\n                padding-top: 45px;\n            }\n        }\n\n        pre.mermaid { \n            font-family: var(--font-main); \n            background: rgba(0,0,0,0.02); \n            border: 1px solid rgba(139,115,85,0.1); \n            padding: 10px; \n            border-radius: 5px; \n            overflow: auto;\n            transition: opacity 0.3s ease-in-out;\n        }\n        pre.mermaid.loading { opacity: 0.5; pointer-events: none; }\n\n        pre.mermaid > svg {\n            max-width: 100%;\n            height: auto;\n        }\n\n        #dice-overlay {\n            position: fixed; top: 0; left: 0; width: 100%; height: 100%;\n            background: rgba(0,0,0,0.8); backdrop-filter: blur(5px);\n            display: none; align-items: center; justify-content: center; flex-direction: column;\n            z-index: 100;\n            color: #fff; text-shadow: 0 0 10px #000;\n        }\n\n        .dice-container {\n            display: flex; flex-wrap: wrap; justify-content: center;\n            gap: 2rem; margin-bottom: 2rem;\n            max-width: 600px;\n        }\n        \n        .dice-icon {\n            width: var(--dice-size); height: var(--dice-size);\n            perspective: 800px;\n            transform-style: preserve-3d;\n            display: none;\n        }\n        .dice-icon.highlight {\n            transform: scale(1.15);\n            filter: drop-shadow(0 0 15px #FFEB3B);\n            transition: transform 0.3s ease, filter 0.3s ease;\n        }\n\n        .dice-cube {\n            width: 100%; height: 100%;\n            position: relative;\n            transform-style: preserve-3d;\n            transform: translateZ(calc(var(--dice-size) / -2));\n        }\n        \n        .dice-face {\n            position: absolute;\n            width: var(--dice-size); height: var(--dice-size);\n            background-color: rgba(255, 255, 255, 0.98);\n            border: 1.5px solid #857e72;\n            border-radius: 12%;\n        }\n\n        .pips-container {\n            width: 100%; height: 100%;\n            position: relative; \n        }\n        .pip {\n            width: 22%; height: 22%; \n            background-color: #3d352e;\n            border-radius: 50%;\n            box-shadow: inset 0 1px 3px rgba(0,0,0,0.5);\n            position: absolute; \n        }\n        \n        #dice-result-text { \n            font-family: var(--font-display); \n            font-size: 2.2em;\n            color: #FFEB3B; \n            text-shadow: 0 0 12px #FFEB3B; \n            min-height: 2em;\n            line-height: 1.2;\n            text-align: center; \n        }\n        \n        #skip-animation-btn {\n            position: absolute;\n            bottom: 30px;\n            font-size: 1em;\n            padding: 8px 20px;\n            width: auto;\n            background-color: rgba(0,0,0,0.3);\n            border-color: rgba(255,255,255,0.5);\n            color: rgba(255,255,255,0.8);\n        }\n        #skip-animation-btn:hover {\n            background-color: rgba(0,0,0,0.5);\n            color: #fff;\n        }\n\n        .typed-cursor {\n            opacity: 1;\n            animation: typed-blink 0.7s infinite;\n        }\n        @keyframes typed-blink{\n            0% { opacity: 1; }\n            50% { opacity: 0; }\n            100% { opacity: 1; }\n        }\n        \n        .validation-message {\n            text-align: center;\n            color: #b71c1c;\n            font-size: 0.9em;\n            font-weight: bold;\n            margin-top: -5px;\n            margin-bottom: 10px;\n            height: 1.2em;\n            opacity: 0;\n            will-change: transform, opacity;\n        }\n\n        #credits-screen {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            pointer-events: none;\n            opacity: 0;\n        }\n\n        #credits-screen p {\n            font-family: var(--font-display);\n            font-size: 2em;\n            color: #f5f5dc;\n            text-shadow: 0 0 8px rgba(245, 245, 220, 0.7);\n        }\n    </style>\n</head>\n<body>\n\n<div class=\"creator-wrapper\">\n    <div class=\"border-flow\"></div>\n    <div class=\"inner-border\"></div>\n    <header class=\"creator-header\">\n        <h1 id=\"main-title\">冒险者契约登记</h1>\n        <div id=\"wax-seal\" class=\"wax-seal\"></div>\n    </header>\n\n    <div class=\"creator-scroll-content\">\n        <div class=\"gs-creator-container\">\n            <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第一步：身份确认</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-name-input\">姓名</label><input id=\"char-name-input\" type=\"text\" placeholder=\"可留空，默认为 {{user}}\" class=\"form-input\"></div>\n                    <div class=\"grid-cols-2 gsap-content-item\">\n                        <div class=\"gs-form-group\"><label for=\"char-gender-input\">性别</label><input id=\"char-gender-input\" type=\"text\" placeholder=\"例如: 男性/女性/双性/无性/……\" class=\"form-input\"></div>\n                        <div class=\"gs-form-group\"><label for=\"char-age-input\">年龄</label><input id=\"char-age-input\" type=\"number\" placeholder=\"可参照种族说明\" class=\"form-input\"></div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-race-select\">种族</label><select id=\"char-race-select\" class=\"form-select\"></select></div>\n                    <div class=\"gs-form-group gsap-content-item\">\n                        <label>经历 (出身/来历/邂逅)</label>\n                        <button id=\"roll-background-btn\" class=\"gs-button action-button\">🎲 投骰决定经历</button>\n                        <div id=\"background-display\" class=\"background-display\" style=\"display: none;\">\n                            <p>出身: <span id=\"bg-origin\"></span></p>\n                            <p>来历: <span id=\"bg-past\"></span></p>\n                            <p>邂逅: <span id=\"bg-encounter\"></span></p>\n                        </div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"oc-details-input\">身体特征与补充</label><textarea id=\"oc-details-input\" placeholder=\"发色、瞳色、体型、性格、背景故事构思...\" class=\"form-textarea\"></textarea></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第二步：能力值与技能</h3>\n                <div class=\"layout-grid\">\n                    <div class=\"form-container gsap-content-item\">\n                        <button id=\"roll-attributes-btn\" class=\"gs-button action-button\">🎲 投骰决定能力值</button>\n                        <div id=\"attributes-container\" class=\"attributes-grid\"></div>\n                        <div id=\"skills-and-desc-container\" class=\"skills-display\"></div>\n                    </div>\n                    <div id=\"radar-chart-container\" class=\"gsap-content-item\"><pre class=\"mermaid\" id=\"radar-chart\"></pre></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第三步：完成登记</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"character-summary\">角色卡预览</label><textarea id=\"character-summary\" rows=\"12\" readonly class=\"form-textarea\"></textarea></div>\n                    <button id=\"submit-btn\" class=\"gs-button gsap-content-item\" disabled>确认登记，开始冒险</button>\n                    <div id=\"validation-message\" class=\"validation-message\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div id=\"credits-screen\">\n    <p>作者 𝙀𝙡𝙖𝙞𝙣𝙖𝙙𝙚𝙨</p>\n</div>\n\n<div id=\"dice-overlay\">\n    <div class=\"dice-container\" id=\"dice-container\"></div>\n    <div id=\"dice-result-text\"></div>\n    <button id=\"skip-animation-btn\" class=\"gs-button\">跳过动画</button>\n</div>\n\n<div id=\"dice-templates\" style=\"display:none;\">\n    <div class=\"dice-cube\" data-id_template=\"dice-cube\">\n        <div class=\"dice-face face-front\" data-face=\"1\"><div class=\"pips-container\"><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-back\" data-face=\"6\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-right\" data-face=\"3\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-left\" data-face=\"4\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-top\" data-face=\"2\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-bottom\" data-face=\"5\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n    </div>\n</div>\n\n<script>\n// --- MODIFIED DATA ---\nconst raceData = {\n    '凡人': { attr_rolls: { '力量': '1d3+1', '敏捷': '1d3', '感知': '1d3', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3+2', '魔力': '1d3' }, skills: ['过载行动(初级)', '武器:投掷武器(初级)', '长距离移动(初级)']},\n    '矿人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3', '感知': '1d3+2', '知识': '1d3-1', '魅力': '1d3+1', '信仰力': '1d3+1', '魔力': '1d3-1' }, skills: ['治愈适性(初级)', '夜视(初级)', '锻造(初级)']},\n    '森人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+1', '感知': '1d3+1', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3-1', '魔力': '1d3+1' }, skills: ['武器:弩弓(初级)', '夜视(初级)', '精灵宠儿(初级)']},\n    '蜥蜴人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3+1', '感知': '1d3', '知识': '1d3', '魅力': '1d3+1', '信仰力': '1d3', '魔力': '1d3' }, skills: ['免疫强化(初级)', '夜视(初级)', '龙族血统(初级)']},\n    '圃人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+2', '感知': '1d3+1', '知识': '1d3', '魅力': '1d3-1', '信仰力': '1d3', '魔力': '1d3+2' }, skills: ['隐匿(初级)', '先发制人(初级)', '烹饪(初级)']}\n};\nconst backgroundData = {\n    origin: { \n        '凡人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '学者', class: '魔术师', level: 1, skills: ['文献调查(初级)'] }, 6: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 7: { name: '农民', skills: ['生产业:农业(初级)', '强健(初级)'] }, 8: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '骑士', class: '战士', level: 1, skills: ['骑乘(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n        '矿人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 6: { name: '酒馆老板', class: '战士', level: 1, skills: ['观察(初级)'] }, 7: { name: '铁匠', skills: ['工匠:锻造(初级)', '手工(初级)'] }, 8: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '碎盾者', class: '战士', level: 1, skills: ['强击攻击·斩(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n    },\n    past: { 2: { name: '奴隶', skills: ['劳动(初级)'] }, 3: { name: '牢狱', skills: ['犯罪知识(初级)'] }, 4: { name: '战场', skills: ['沉着冷静(初级)'] }, 5: { name: '神殿', skills: ['神学(初级)'] }, 6: { name: '孤儿', skills: ['忍耐(初级)'] }, 7: { name: '平顺', skills: ['幸运(初级)'] }, 8: { name: '贫困', skills: ['生存术(初级)'] }, 9: { name: '学校', skills: ['博识(初级)'] }, 10: { name: '深闺', skills: ['无偏见(初级)'] }, 11: { name: '奢华', skills: ['鉴定(初级)'] }, 12: { name: '宫廷', skills: ['礼仪(初级)'] }},\n    encounter: { 2: '宿敌', 3: '上司', 4: '后辈', 5: '交易对象', 6: '下属', 7: '家人', 8: '挚友', 9: '前辈', 10: '未婚夫/妻', 11: '劲敌', 12: '师父' }\n};\nbackgroundData.origin['森人'] = backgroundData.origin['凡人']; backgroundData.origin['蜥蜴人'] = backgroundData.origin['凡人']; backgroundData.origin['圃人'] = backgroundData.origin['凡人'];\nconst character = {\n    name: '', gender: '', age: '', oc_details: '', race: '凡人',\n    background: { origin: null, past: null, encounter: null },\n    attributes: { '力量': 0, '敏捷': 0, '感知': 0, '知识': 0, '魅力': 0, '信仰力': 0, '魔力': 0, '潜力': 0 },\n    skills: [], classes: {}, money: 0, _lastAttributesForChart: '',\n};\n// --- END MODIFIED DATA ---\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    gsap.registerPlugin(TextPlugin);\n    mermaid.initialize({ startOnLoad: true, theme: 'base', themeVariables: {\n        '--mermaid-font-family': \"'Vollkorn', 'Noto Serif SC', serif\",\n        primaryColor: '#f7e9d7', primaryTextColor: '#3d3d3d', lineColor: '#8b7355', textColor: '#4a3c2c',\n    }});\n    \n    const $ = (s) => document.querySelector(s);\n    const roll1D6 = () => Math.floor(Math.random() * 6) + 1;\n    const roll1D3 = () => {\n        const d6 = roll1D6();\n        if (d6 <= 2) return { d6, d3: 1 };\n        if (d6 <= 4) return { d6, d3: 2 };\n        return { d6, d3: 3 };\n    };\n    const rollDiceString = (diceString) => { const p=diceString.split('*');const d=p[0];const m=parseInt(p[1])||1;if(!d.includes('d'))return 0;const[n,s]=d.split('d').map(Number);let t=0;for(let i=0;i<n;i++){t+=Math.floor(Math.random()*s)+1;}return t*m; };\n    const formatAge = (ageValue) => { if (!ageValue && ageValue !== 0) return ageValue; const num = Number(ageValue); if (isNaN(num)) return ageValue; if (Math.abs(num) >= 1_000_000) return num.toExponential(2); return ageValue; };\n    const debounce = (func, delay) => { let timeout; return function(...args) { clearTimeout(timeout); timeout = setTimeout(() => func.apply(this, args), delay); }; };\n    const diceUnicode = ['\\u2680', '\\u2681', '\\u2682', '\\u2683', '\\u2684', '\\u2685'];\n\n    const DOM = {\n        nameInput: $('#char-name-input'), genderInput: $('#char-gender-input'), ageInput: $('#char-age-input'),\n        ocDetailsInput: $('#oc-details-input'), raceSelect: $('#char-race-select'), attributesContainer: $('#attributes-container'),\n        skillsContainer: $('#skills-and-desc-container'), radarChart: $('#radar-chart'), summarySheet: $('#character-summary'),\n        diceOverlay: $('#dice-overlay'), diceContainer: $('#dice-container'), diceResultText: $('#dice-result-text'),\n        backgroundDisplay: $('#background-display'), bgOrigin: $('#bg-origin'), bgPast: $('#bg-past'), bgEncounter: $('#bg-encounter'),\n        skipAnimationBtn: $('#skip-animation-btn'),\n        submitBtn: $('#submit-btn'),\n        validationMessage: $('#validation-message'),\n    };\n    \n    const dicePool = []; const MAX_DICE = 6;\n    let currentAnimation = null; let textAnimation = null; let isSkipping = false;\n    let currentValidationMessage = '';\n    \n    function validateAndToggleButton() {\n        let newMessage = '';\n        if (!character.age || String(character.age).trim() === '') {\n            newMessage = '请填写您的冒险者年龄。';\n        } else if (!character.gender || !character.gender.trim()) {\n            newMessage = '请设定冒险者的性别。';\n        } else if (!character.background.origin) {\n            newMessage = '请投骰决定您的冒险者经历。';\n        } else if (Object.values(character.attributes).every(val => val === 0)) {\n            newMessage = '请投骰决定您的能力值。';\n        }\n\n        if (newMessage === currentValidationMessage) return;\n        currentValidationMessage = newMessage;\n\n        if (newMessage) {\n            DOM.submitBtn.disabled = true;\n            DOM.validationMessage.textContent = newMessage;\n            gsap.fromTo(DOM.validationMessage, { autoAlpha: 0, scale: 0.8 }, { autoAlpha: 1, scale: 1, duration: 0.4, ease: 'elastic.out(1, 0.75)' });\n        } else {\n            DOM.submitBtn.disabled = false;\n            gsap.to(DOM.validationMessage, { autoAlpha: 0, duration: 0.3 });\n        }\n    }\n    function updateCharacterDataFromDOM() { character.name = DOM.nameInput.value; character.gender = DOM.genderInput.value; character.age = DOM.ageInput.value; character.oc_details = DOM.ocDetailsInput.value; character.race = DOM.raceSelect.value; }\n    function renderSkills() { const uniqueSkills = [...new Set(character.skills)]; DOM.skillsContainer.innerHTML = `<p><strong>天赋与习得技能:</strong></p><ul>${uniqueSkills.map(s => `<li>- ${s}</li>`).join('')}</ul>`; }\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key}`).value = value; }); }\n    function renderSummary() {\n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '?';\n        const originText = `出身:${character.background.origin ? character.background.origin.name : '?'}`;\n        const pastText = `来历:${character.background.past ? character.background.past.name : '?'}`;\n        const encounterText = `邂逅:${character.background.encounter || '?'}`;\n        let summary = `### 《哥布林杀手TRPG》冒险者登记卡\\n` + `**姓名:** ${finalName} | **种族:** ${character.race} | **性别:** ${character.gender || '?'} | **年龄:** ${formattedAge}\\n` + `**经历:** ${originText} / ${pastText} / ${encounterText}\\n` + `**初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n` + `**初始技能:** ${uniqueSkills.join(', ') || '无'}\\n`; if (character.oc_details) { summary += `**身体特征与补充:** ${character.oc_details}\\n`; } summary += `---\\n**能力值:**\\n`; summary += Object.entries(character.attributes).map(([key, value]) => `- ${key}: ${value}`).join('\\n'); summary += `\\n**持有资金:** ${character.money} 银币`;\n        DOM.summarySheet.value = summary.replace(/### /g, '').replace(/\\*\\*/g, '').replace(/---/g, '\\n────────────────────\\n').replace(/- /g, '  ');\n        DOM.summarySheet.setAttribute('data-raw', summary);\n    }\n    async function renderRadarChartIfNeeded() { const currentAttributesString = JSON.stringify(character.attributes); if (currentAttributesString === character._lastAttributesForChart) return; DOM.radarChart.classList.add('loading'); const radarSyntax = `radar-beta\\ntitle 能力值分布\\naxis a[\"力量 ${character.attributes['力量']}\"]\\naxis b[\"敏捷 ${character.attributes['敏捷']}\"]\\naxis c[\"感知 ${character.attributes['感知']}\"]\\naxis d[\"知识 ${character.attributes['知识']}\"]\\naxis e[\"魅力 ${character.attributes['魅力']}\"]\\naxis f[\"信仰 ${character.attributes['信仰力']}\"]\\naxis g[\"魔力 ${character.attributes['魔力']}\"]\\naxis h[\"潜力 ${character.attributes['潜力']}\"]\\ncurve current[\"能力\"]{${character.attributes['力量']},${character.attributes['敏捷']},${character.attributes['感知']},${character.attributes['知识']},${character.attributes['魅力']},${character.attributes['信仰力']},${character.attributes['魔力']},${character.attributes['潜力']}}\\nmax 10\\nmin 0`; DOM.radarChart.innerHTML = radarSyntax; DOM.radarChart.removeAttribute('data-processed'); try { await mermaid.run({ nodes: [DOM.radarChart] }); character._lastAttributesForChart = currentAttributesString; } catch(e) { console.error(\"Mermaid rendering error:\", e); } finally { DOM.radarChart.classList.remove('loading'); } }\n    async function updateUI(forceFullUpdate = false) { updateCharacterDataFromDOM(); if(forceFullUpdate) { character._lastAttributesForChart = ''; character.skills = []; character.classes = {}; character.money = 100; if(raceData[character.race].skills) character.skills.push(...raceData[character.race].skills); if (character.background.origin) { if (character.background.origin.skills) character.skills.push(...character.background.origin.skills); if (character.background.origin.class) character.classes[character.background.origin.class] = character.background.origin.level; if(character.background.origin.money) character.money += rollDiceString(character.background.origin.money); } if (character.background.past && character.background.past.skills) { character.skills.push(...character.background.past.skills); } } renderAttributes(); renderSkills(); renderSummary(); await renderRadarChartIfNeeded(); validateAndToggleButton(); }\n\n    const masterTl = gsap.timeline({ delay: 0.2 });\n    const title = $('#main-title');\n    title.innerHTML = title.textContent.split('').map(char => `<span class=\"title-char\">${char}</span>`).join('');\n    gsap.set(\".gsap-header-item, .gsap-content-item\", { autoAlpha: 0, y: 20 });\n    masterTl.to(\".title-char\", { autoAlpha: 1, y: 0, duration: 0.7, ease: \"power3.out\", stagger: 0.1 }).to(\"#wax-seal\", { autoAlpha: 1, scale: 1, duration: 0.6, ease: \"elastic.out(1, 0.7)\" }, \"-=0.5\");\n    document.querySelectorAll('.gs-creator-step').forEach((step, index) => { const stepTl = gsap.timeline(); stepTl.to(step.querySelector('.gsap-header-item'), { autoAlpha: 1, y: 0, duration: 0.6, ease: 'power2.out' }).to(step.querySelectorAll('.gsap-content-item'), { autoAlpha: 1, y: 0, duration: 0.5, ease: 'power2.out', stagger: 0.1 }, '-=0.4'); masterTl.add(stepTl, `-=${index === 0 ? 0.2 : 0.7}`); });\n    const pipPositions = { 1: [ { left: '50%', top: '50%' } ], 2: [ { left: '25%', top: '25%' }, { left: '75%', top: '75%' } ], 3: [ { left: '25%', top: '25%' }, { left: '50%', top: '50%' }, { left: '75%', top: '75%' } ], 4: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 5: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '50%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 6: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '50%' }, { left: '75%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ]};\n    function setupCube(cubeEl) { const size = 'calc(var(--dice-size) / 2)'; gsap.set(cubeEl.querySelector('.face-front'),  { transform: `rotateY(0deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-back'),   { transform: `rotateY(180deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-right'),  { transform: `rotateY(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-left'),   { transform: `rotateY(-90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-top'),   { transform: `rotateX(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-bottom'), { transform: `rotateX(-90deg) translateZ(${size})` }); const faces = cubeEl.querySelectorAll('.dice-face'); faces.forEach(face => { const faceNum = face.getAttribute('data-face'); const pips = face.querySelectorAll('.pip'); const positions = pipPositions[faceNum]; if (!pips.length || !positions) return; pips.forEach((pip, index) => { const pos = positions[index]; gsap.set(pip, { left: pos.left, top: pos.top, xPercent: -50, yPercent: -50 }); }); }); }\n    function getRotationForFace(faceValue) { switch (faceValue) { case 1: return { x: 0, y: 0 }; case 6: return { x: 0, y: 180 }; case 3: return { x: 0, y: -90 }; case 4: return { x: 0, y: 90 }; case 2: return { x: -90, y: 0 }; case 5: return { x: 90,  y: 0 }; default: return { x: 0, y: 0 }; } }\n    async function animateText(element, text) { if(isSkipping) {element.innerHTML = text.replace(/\\n/g, '<br>'); return;} return new Promise(resolve => { if (textAnimation && textAnimation.isActive()) textAnimation.kill(); element.innerHTML = ''; textAnimation = gsap.to(element, { duration: text.length * 0.05, text: { value: text.replace(/\\n/g, '<br>'), newClass: \"typed-cursor\" }, ease: \"none\", onComplete: () => { gsap.delayedCall(0.7, () => { element.querySelector('.typed-cursor')?.remove(); resolve(); }); } }); }); }\n    function initDicePool() { const diceTemplate = document.querySelector('[data-id_template=\"dice-cube\"]'); if (!diceTemplate) return; for (let i = 0; i < MAX_DICE; i++) { const dieIconElement = document.createElement('div'); dieIconElement.className = 'dice-icon'; const newCube = diceTemplate.cloneNode(true); dieIconElement.appendChild(newCube); DOM.diceContainer.appendChild(dieIconElement); setupCube(newCube); dicePool.push(dieIconElement); } }\n    async function animateRoll(numDice, preCalculatedRolls, textToShowDuringRoll = \"投掷中...\") { return new Promise(resolve => { if (currentAnimation && currentAnimation.isActive()) currentAnimation.kill(); dicePool.forEach(die => die.style.display = 'none'); const activeDice = dicePool.slice(0, numDice); animateText(DOM.diceResultText, textToShowDuringRoll); activeDice.forEach(die => { die.style.display = 'flex'; die.className = 'dice-icon'; }); const masterTl = gsap.timeline({ onComplete: () => { if(isSkipping) DOM.diceResultText.innerHTML = ''; resolve(preCalculatedRolls); }}); currentAnimation = masterTl; activeDice.forEach((dieElement, i) => { const dieCube = dieElement.querySelector('.dice-cube'); const visualRoll = preCalculatedRolls[i]; const targetRotation = getRotationForFace(visualRoll); const dieTimeline = gsap.timeline(); dieTimeline.to(dieCube, { rotationX: `+=${gsap.utils.random(720, 1080)}`, rotationY: `+=${gsap.utils.random(720, 1080)}`, duration: 1.8, ease: \"power2.in\" }).to(dieCube, { rotationX: targetRotation.x, rotationY: targetRotation.y, duration: 0.7, ease: \"power4.out\" }); masterTl.add(dieTimeline, 0); }); }); }\n    \n    const debouncedUpdate = debounce(updateUI, 400);\n    [DOM.nameInput, DOM.genderInput, DOM.ageInput, DOM.ocDetailsInput].forEach(el => el.addEventListener('input', debouncedUpdate));\n    \n    DOM.skipAnimationBtn.addEventListener('click', () => {\n        isSkipping = true;\n        if (currentAnimation && currentAnimation.isActive()) currentAnimation.progress(1);\n        if (textAnimation && textAnimation.isActive()) textAnimation.progress(1);\n    });\n\n    $('#roll-background-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const rolls = [roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6()];\n        await animateRoll(6, rolls, '投掷 经历... (2d6 x 3)');\n        \n        const sums = { origin: rolls[0] + rolls[1], past: rolls[2] + rolls[3], encounter: rolls[4] + rolls[5] };\n        \n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `出身: ${rolls[0]} + ${rolls[1]} = ${sums.origin}\\n(${backgroundData.origin[character.race][sums.origin].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `来历: ${rolls[2]} + ${rolls[3]} = ${sums.past}\\n(${backgroundData.past[sums.past].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(4, 6), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `邂逅: ${rolls[4]} + ${rolls[5]} = ${sums.encounter}\\n(${backgroundData.encounter[sums.encounter]})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        character.background.origin = backgroundData.origin[character.race][sums.origin];\n        character.background.past = backgroundData.past[sums.past];\n        character.background.encounter = backgroundData.encounter[sums.encounter];\n        DOM.bgOrigin.textContent = character.background.origin.name;\n        DOM.bgPast.textContent = character.background.past.name;\n        DOM.bgEncounter.textContent = character.background.encounter;\n        DOM.backgroundDisplay.style.display = 'block';\n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        updateUI(true);\n    });\n\n    $('#roll-attributes-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const attrRolls = raceData[character.race].attr_rolls;\n        const allCalculatedRolls = [];\n\n        // Prepare race-based attributes\n        for (const attr in attrRolls) {\n            const formula = attrRolls[attr];\n            const modifier = parseInt(formula.split('d3')[1] || '0');\n            const { d6, d3 } = roll1D3();\n            const finalValue = Math.max(0, d3 + modifier);\n            character.attributes[attr] = finalValue;\n            allCalculatedRolls.push({ attr, formula, d6, d3, modifier, finalValue });\n        }\n        \n        // Prepare \"Potential\" attribute\n        const potentialValue = Math.floor(Math.random() * 3) + 1;\n        const d6ForPotential = (potentialValue * 2) - 1; // Map 1,2,3 to d6 faces 1,3,5 for animation\n        character.attributes['潜力'] = potentialValue;\n        allCalculatedRolls.push({\n            attr: '潜力',\n            formula: '1-3', // Just a descriptor\n            d6: d6ForPotential,\n            finalValue: potentialValue\n        });\n        \n        // Animate all rolls sequentially\n        for (const roll of allCalculatedRolls) {\n            await animateRoll(1, [roll.d6], `投掷 ${roll.attr}...`);\n            if (isSkipping) break;\n\n            gsap.to(dicePool[0], { className: 'dice-icon highlight', duration: 0.3 });\n            \n            let resultText;\n            if (roll.attr === '潜力') {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.finalValue}`;\n            } else {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.d3} ${roll.modifier >= 0 ? '+' : ''} ${roll.modifier} = ${roll.finalValue}`;\n            }\n            await animateText(DOM.diceResultText, resultText);\n            \n            await updateUI();\n            \n            if (isSkipping) break;\n            \n            await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        await updateUI();\n    });\n\n    DOM.raceSelect.addEventListener('change', () => {\n        DOM.backgroundDisplay.style.display = 'none';\n        character.background = { origin: null, past: null, encounter: null };\n        Object.keys(character.attributes).forEach(k => character.attributes[k] = 0);\n        updateUI(true);\n    });\n\n    $('#submit-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        await updateUI(true);\n        \n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '未设定';\n        \n        const finalCharacterObject={ NAME:finalName, GENDER:character.gender||'未设定', AGE:formattedAge, RACE:character.race, ORIGIN: character.background.origin ? character.background.origin.name : '未知', PAST: character.background.past ? character.background.past.name : '未知', ENCOUNTER: character.background.encounter || '未知', SKILLS: uniqueSkills, OC_DETAILS:character.oc_details||'无', ...character.attributes, MONEY:character.money };\n        \n        const slashCommand=`/send <START>\\nAdmin:\\n这是一个TRPG开局，请为 User 生成一段详尽的背景故事。\\n\\n# 故事核心要求\\n请严格根据以下【角色完整设定】，撰写一段从角色童年到现在的成长故事。故事需要清晰地阐述是什么关键事件或心路历程，最终让他/她确立了要成为一名冒险者的志向。请在故事中自然地融入角色的种族、出身背景、技能和性格特点。\\n\\n# 角色完整设定\\n---\\n## 基础信息\\n- **姓名:** ${finalName}\\n- **性别:** ${character.gender||'未设定'}\\n- **年龄:** ${formattedAge}\\n- **种族:** ${character.race}\\n\\n## 经历\\n- **出身:** ${character.background.origin ? character.background.origin.name : '未知'}\\n- **来历:** ${character.background.past ? character.background.past.name : '未知'}\\n- **邂逅:** ${character.background.encounter || '未知'}\\n\\n## 背景与技能\\n- **初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n- **初始技能:** ${uniqueSkills.join(', ')||'无'}\\n\\n## 补充设定 (OC)\\n- **额外补充:** ${character.oc_details||'无'}\\n\\n## 能力值\\n- **力量:** ${character.attributes['力量']}\\n- **敏捷:** ${character.attributes['敏捷']}\\n- **感知:** ${character.attributes['感知']}\\n- **知识:** ${character.attributes['知识']}\\n- **魅力:** ${character.attributes['魅力']}\\n- **信仰力:** ${character.attributes['信仰力']}\\n- **魔力:** ${character.attributes['魔力']}\\n\\n## 初始资产\\n- **资金:** ${character.money} 银币\\n\\|\\n/trigger`; \n        \n        try {\n            if (typeof insertOrAssignVariables === 'function') {\n                await insertOrAssignVariables(finalCharacterObject);\n            } else {\n                console.log(\"SillyTavern Function 'insertOrAssignVariables' not found. Variables:\", finalCharacterObject);\n            }\n            if (typeof triggerSlash === 'function') {\n                await triggerSlash(slashCommand, 'Send');\n            } else { \n                console.log(\"SillyTavern Function 'triggerSlash' not found. Command will be copied to clipboard.\");\n                navigator.clipboard.writeText(slashCommand).then(() => {\n                    alert('角色指令已复制到剪贴板！');\n                });\n            }\n        } catch (error) {\n            console.error('与SillyTavern交互失败:', error);\n            alert('与SillyTavern交互失败，请查看浏览器控制台。');\n        }\n\n        e.target.innerHTML = \"契约成立！\";\n    });\n    \n    initDicePool();\n    Object.keys(raceData).forEach(key => DOM.raceSelect.add(new Option(key, key)));\n    Object.keys(character.attributes).forEach(key => {\n        const pointControl = document.createElement('div');\n        pointControl.className = 'point-control';\n        pointControl.innerHTML = `<span class=\"label\">${key}</span><input type=\"text\" id=\"attr-${key.replace(/\\s/g, '')}\" readonly value=\"0\">`; // ID santized just in case\n        DOM.attributesContainer.appendChild(pointControl);\n    });\n    // A small fix for renderAttributes to handle sanitized IDs\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key.replace(/\\s/g, '')}`).value = value; }); }\n    updateUI(true);\n});\n</script>\n\n</body>\n</html>\n```"
  },
  {
    "role": "user",
    "content": "```\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>哥布林杀手TRPG - 冒险者契约</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/gsap.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/TextPlugin.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.min.js\" defer></script>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Noto+Serif+SC:wght@400;700&family=Vollkorn:wght@400;700&family=Courier+Prime&display=swap\" rel=\"stylesheet\">\n\n    <style>\n        :root {\n            --leather-bg: #5a3a2a;\n            --dark-leather-bg: #3b2a1a;\n            --parchment-bg: #f5f5dc;\n            --parchment-bg-gradient: linear-gradient(165deg, #f7e9d7, #e6d5c3);\n            --text-color: #3d3d3d;\n            --heading-color: #4a3c2c;\n            --border-color: #7a5a4a;\n            --font-main: 'Vollkorn', 'Noto Serif SC', serif;\n            --font-display: 'Cinzel', 'Noto Serif SC', serif;\n            --font-code: 'Courier Prime', 'Courier New', monospace;\n            --dice-size: 5rem; \n        }\n\n        html { height: 100%; }\n        body {\n            background-color: #3a2e20;\n            font-family: var(--font-main);\n            color: var(--text-color);\n            margin: 0; padding: 20px;\n            box-sizing: border-box;\n            display: flex;\n            align-items: center; justify-content: center;\n            min-height: 100%;\n        }\n        *, *:before, *:after { box-sizing: inherit; }\n\n        .creator-wrapper {\n            width: 100%; max-width: 900px;\n            margin: 0;\n            background: var(--parchment-bg-gradient);\n            border: 12px solid #8b7355;\n            border-radius: 8px;\n            box-shadow: 0 0 40px rgba(139, 115, 85, 0.3), inset 0 0 30px rgba(255, 255, 255, 0.4);\n            position: relative;\n            overflow: hidden;\n            padding: 25px;\n            display: flex; flex-direction: column;\n            max-height: 95vh;\n        }\n\n        .border-flow, .inner-border { position: absolute; pointer-events: none; }\n        .border-flow { top: 0; left: 0; right: 0; bottom: 0; background: linear-gradient(90deg, rgba(139,115,85,0.1) 1px, transparent 1px), linear-gradient(0deg, rgba(139,115,85,0.1) 1px, transparent 1px); background-size: 20px 20px; animation: borderFlow 15s linear infinite; }\n        .inner-border { top: 5px; left: 5px; right: 5px; bottom: 5px; border: 3px solid rgba(139,115,85,0.3); border-radius: 5px; }\n        @keyframes borderFlow { from { background-position: 0 0; } to { background-position: 20px 20px; } }\n\n        .creator-header {\n            text-align: center;\n            padding: 10px;\n            margin-bottom: 25px;\n            border-bottom: 2px solid rgba(139, 115, 85, 0.3);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 15px;\n        }\n        .creator-header h1 {\n            font-family: var(--font-display);\n            font-size: clamp(24px, 5vw, 32px);\n            margin: 0;\n            font-weight: 700;\n            letter-spacing: 3px;\n            color: var(--heading-color);\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.1);\n        }\n        \n        .title-char {\n            display: inline-block;\n            opacity: 0;\n            transform: translateY(30px);\n        }\n\n        .wax-seal {\n            width: 45px;\n            height: 45px;\n            display: inline-block;\n            background-color: #c0392b;\n            border-radius: 50%;\n            position: relative;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.4), inset 0 -2px 3px rgba(0,0,0,0.3);\n            opacity: 0;\n            transform: scale(0.5);\n            font-family: 'Cinzel', serif;\n            color: #e7a49c;\n            text-align: center;\n            font-size: 24px;\n            line-height: 45px;\n            font-weight: 700;\n        }\n        .wax-seal::before {\n            content: 'GS';\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.3);\n        }\n\n        .creator-scroll-content { overflow-y: auto; padding: 10px 20px 10px 10px; }\n        .creator-scroll-content::-webkit-scrollbar { width: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-track { background: rgba(139, 115, 85, 0.1); border-radius: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-thumb { background-color: #a89072; border-radius: 10px; border: 2px solid #f7e9d7; }\n        \n        .gs-creator-step { margin-bottom: 40px; overflow: hidden; }\n        .gs-creator-step h3 { font-family: var(--font-display); font-size: 1.5em; font-weight: 700; border-bottom: 1.5px solid var(--border-color); padding-bottom: 8px; margin-bottom: 20px; color: var(--heading-color); text-align: left; }\n        \n        .layout-grid { display: grid; grid-template-columns: 1fr; gap: 25px; align-items: flex-start; }\n        @media (min-width: 768px) {\n            .layout-grid { grid-template-columns: 1fr 280px; }\n        }\n\n        .form-container { text-align: left; }\n        .gs-form-group { margin-bottom: 16px; }\n        .gs-form-group label { display: block; margin-bottom: 6px; font-weight: bold; color: var(--heading-color); }\n        .form-input, .form-select, .form-textarea { width: 100%; padding: 10px; background-color: rgba(255, 255, 255, 0.5); border: 1px solid #a58e72; border-radius: 4px; color: #3d3d3d; font-family: var(--font-main); font-size: 1em; transition: all 0.2s ease-in-out; box-shadow: inset 1px 1px 2px rgba(0,0,0,0.1); }\n        .form-input:focus, .form-select:focus, .form-textarea:focus { outline: none; border-color: #8b7355; background-color: #fff; box-shadow: 0 0 5px rgba(139, 115, 85, 0.5); }\n        .form-textarea { resize: vertical; min-height: 100px; }\n\n        .grid-cols-2 {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 16px;\n        }\n        @media (min-width: 480px) {\n            .grid-cols-2 {\n                grid-template-columns: repeat(2, 1fr);\n            }\n        }\n\n        #attributes-container .point-control { display: flex; align-items: center; justify-content: space-between; margin-bottom: 8px; padding: 6px 8px; background: rgba(0,0,0,0.03); border-left: 3px solid rgba(139,115,85,0.2); border-radius: 4px; }\n        #attributes-container .label { font-weight: bold; color: var(--heading-color); }\n        #attributes-container input[readonly] { width: 40px; text-align: center; font-weight: bold; font-size: 1.2em; font-family: var(--font-display); color: #a02c2c; border: none; background-color: transparent; box-shadow: none; padding: 0; }\n        \n        .attributes-grid {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 0 16px;\n        }\n        @media (min-width: 480px) {\n            .attributes-grid {\n                grid-template-columns: 1fr 1fr;\n            }\n        }\n        \n        .skills-display p { background-color: rgba(0,0,0,0.05); border-left: 3px solid var(--border-color); padding: 10px 15px; margin-top: 10px; font-size: 0.95em; border-radius: 0 4px 4px 0; }\n        .skills-display strong { color: #8b5b4b; font-family: var(--font-display); }\n        .skills-display ul { list-style: none; padding-left: 0; margin-top: 8px; font-size: 0.9em; }\n        .skills-display li { margin-bottom: 4px; }\n\n        #character-summary { background-color: #e9e4d9; font-family: var(--font-code); line-height: 1.6; height: 250px; color: #2c2a2a; }\n        \n        .gs-button { width: 100%; background-color: #8b7355; color: var(--parchment-bg); border: 2px solid var(--dark-leather-bg); border-radius: 5px; padding: 12px 20px; font-family: var(--font-display); font-size: 1.2em; font-weight: 700; cursor: pointer; margin-top: 10px; transition: all 0.3s ease; box-shadow: 0 3px 5px rgba(0,0,0,0.3); }\n        .gs-button:hover { background-color: #a0886c; transform: translateY(-2px); box-shadow: 0 5px 8px rgba(0,0,0,0.3); }\n        .gs-button:disabled { background-color: #9e9e9e; border-color: #757575; cursor: not-allowed; transform: none; box-shadow: none; opacity: 0.6; }\n        .action-button { background-color: #6d5b4b; font-size: 1em; padding: 10px 15px; margin-top: 0; margin-bottom: 10px; width: auto; }\n        \n        .background-display { margin-top: 15px; padding: 15px; border: 1px dashed var(--border-color); border-radius: 5px; background: rgba(0,0,0,0.02); }\n        .background-display p { margin: 0 0 8px; }\n        .background-display span { font-weight: bold; color: var(--heading-color); }\n        \n        #radar-chart-container { \n            max-width: 100%;\n        }\n        @media (min-width: 768px) {\n            #radar-chart-container {\n                position: sticky;\n                top: 0;\n                padding-top: 45px;\n            }\n        }\n\n        pre.mermaid { \n            font-family: var(--font-main); \n            background: rgba(0,0,0,0.02); \n            border: 1px solid rgba(139,115,85,0.1); \n            padding: 10px; \n            border-radius: 5px; \n            overflow: auto;\n            transition: opacity 0.3s ease-in-out;\n        }\n        pre.mermaid.loading { opacity: 0.5; pointer-events: none; }\n\n        pre.mermaid > svg {\n            max-width: 100%;\n            height: auto;\n        }\n\n        #dice-overlay {\n            position: fixed; top: 0; left: 0; width: 100%; height: 100%;\n            background: rgba(0,0,0,0.8); backdrop-filter: blur(5px);\n            display: none; align-items: center; justify-content: center; flex-direction: column;\n            z-index: 100;\n            color: #fff; text-shadow: 0 0 10px #000;\n        }\n\n        .dice-container {\n            display: flex; flex-wrap: wrap; justify-content: center;\n            gap: 2rem; margin-bottom: 2rem;\n            max-width: 600px;\n        }\n        \n        .dice-icon {\n            width: var(--dice-size); height: var(--dice-size);\n            perspective: 800px;\n            transform-style: preserve-3d;\n            display: none;\n        }\n        .dice-icon.highlight {\n            transform: scale(1.15);\n            filter: drop-shadow(0 0 15px #FFEB3B);\n            transition: transform 0.3s ease, filter 0.3s ease;\n        }\n\n        .dice-cube {\n            width: 100%; height: 100%;\n            position: relative;\n            transform-style: preserve-3d;\n            transform: translateZ(calc(var(--dice-size) / -2));\n        }\n        \n        .dice-face {\n            position: absolute;\n            width: var(--dice-size); height: var(--dice-size);\n            background-color: rgba(255, 255, 255, 0.98);\n            border: 1.5px solid #857e72;\n            border-radius: 12%;\n        }\n\n        .pips-container {\n            width: 100%; height: 100%;\n            position: relative; \n        }\n        .pip {\n            width: 22%; height: 22%; \n            background-color: #3d352e;\n            border-radius: 50%;\n            box-shadow: inset 0 1px 3px rgba(0,0,0,0.5);\n            position: absolute; \n        }\n        \n        #dice-result-text { \n            font-family: var(--font-display); \n            font-size: 2.2em;\n            color: #FFEB3B; \n            text-shadow: 0 0 12px #FFEB3B; \n            min-height: 2em;\n            line-height: 1.2;\n            text-align: center; \n        }\n        \n        #skip-animation-btn {\n            position: absolute;\n            bottom: 30px;\n            font-size: 1em;\n            padding: 8px 20px;\n            width: auto;\n            background-color: rgba(0,0,0,0.3);\n            border-color: rgba(255,255,255,0.5);\n            color: rgba(255,255,255,0.8);\n        }\n        #skip-animation-btn:hover {\n            background-color: rgba(0,0,0,0.5);\n            color: #fff;\n        }\n\n        .typed-cursor {\n            opacity: 1;\n            animation: typed-blink 0.7s infinite;\n        }\n        @keyframes typed-blink{\n            0% { opacity: 1; }\n            50% { opacity: 0; }\n            100% { opacity: 1; }\n        }\n        \n        .validation-message {\n            text-align: center;\n            color: #b71c1c;\n            font-size: 0.9em;\n            font-weight: bold;\n            margin-top: -5px;\n            margin-bottom: 10px;\n            height: 1.2em;\n            opacity: 0;\n            will-change: transform, opacity;\n        }\n\n        #credits-screen {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            pointer-events: none;\n            opacity: 0;\n        }\n\n        #credits-screen p {\n            font-family: var(--font-display);\n            font-size: 2em;\n            color: #f5f5dc;\n            text-shadow: 0 0 8px rgba(245, 245, 220, 0.7);\n        }\n    </style>\n</head>\n<body>\n\n<div class=\"creator-wrapper\">\n    <div class=\"border-flow\"></div>\n    <div class=\"inner-border\"></div>\n    <header class=\"creator-header\">\n        <h1 id=\"main-title\">冒险者契约登记</h1>\n        <div id=\"wax-seal\" class=\"wax-seal\"></div>\n    </header>\n\n    <div class=\"creator-scroll-content\">\n        <div class=\"gs-creator-container\">\n            <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第一步：身份确认</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-name-input\">姓名</label><input id=\"char-name-input\" type=\"text\" placeholder=\"可留空，默认为 {{user}}\" class=\"form-input\"></div>\n                    <div class=\"grid-cols-2 gsap-content-item\">\n                        <div class=\"gs-form-group\"><label for=\"char-gender-input\">性别</label><input id=\"char-gender-input\" type=\"text\" placeholder=\"例如: 男性/女性/双性/无性/……\" class=\"form-input\"></div>\n                        <div class=\"gs-form-group\"><label for=\"char-age-input\">年龄</label><input id=\"char-age-input\" type=\"number\" placeholder=\"可参照种族说明\" class=\"form-input\"></div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-race-select\">种族</label><select id=\"char-race-select\" class=\"form-select\"></select></div>\n                    <div class=\"gs-form-group gsap-content-item\">\n                        <label>经历 (出身/来历/邂逅)</label>\n                        <button id=\"roll-background-btn\" class=\"gs-button action-button\">🎲 投骰决定经历</button>\n                        <div id=\"background-display\" class=\"background-display\" style=\"display: none;\">\n                            <p>出身: <span id=\"bg-origin\"></span></p>\n                            <p>来历: <span id=\"bg-past\"></span></p>\n                            <p>邂逅: <span id=\"bg-encounter\"></span></p>\n                        </div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"oc-details-input\">身体特征与补充</label><textarea id=\"oc-details-input\" placeholder=\"发色、瞳色、体型、性格、背景故事构思...\" class=\"form-textarea\"></textarea></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第二步：能力值与技能</h3>\n                <div class=\"layout-grid\">\n                    <div class=\"form-container gsap-content-item\">\n                        <button id=\"roll-attributes-btn\" class=\"gs-button action-button\">🎲 投骰决定能力值</button>\n                        <div id=\"attributes-container\" class=\"attributes-grid\"></div>\n                        <div id=\"skills-and-desc-container\" class=\"skills-display\"></div>\n                    </div>\n                    <div id=\"radar-chart-container\" class=\"gsap-content-item\"><pre class=\"mermaid\" id=\"radar-chart\"></pre></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第三步：完成登记</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"character-summary\">角色卡预览</label><textarea id=\"character-summary\" rows=\"12\" readonly class=\"form-textarea\"></textarea></div>\n                    <button id=\"submit-btn\" class=\"gs-button gsap-content-item\" disabled>确认登记，开始冒险</button>\n                    <div id=\"validation-message\" class=\"validation-message\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div id=\"credits-screen\">\n    <p>作者 𝙀𝙡𝙖𝙞𝙣𝙖𝙙𝙚𝙨</p>\n</div>\n\n<div id=\"dice-overlay\">\n    <div class=\"dice-container\" id=\"dice-container\"></div>\n    <div id=\"dice-result-text\"></div>\n    <button id=\"skip-animation-btn\" class=\"gs-button\">跳过动画</button>\n</div>\n\n<div id=\"dice-templates\" style=\"display:none;\">\n    <div class=\"dice-cube\" data-id_template=\"dice-cube\">\n        <div class=\"dice-face face-front\" data-face=\"1\"><div class=\"pips-container\"><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-back\" data-face=\"6\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-right\" data-face=\"3\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-left\" data-face=\"4\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-top\" data-face=\"2\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-bottom\" data-face=\"5\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n    </div>\n</div>\n\n<script>\n// --- MODIFIED DATA ---\nconst raceData = {\n    '凡人': { attr_rolls: { '力量': '1d3+1', '敏捷': '1d3', '感知': '1d3', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3+2', '魔力': '1d3' }, skills: ['过载行动(初级)', '武器:投掷武器(初级)', '长距离移动(初级)']},\n    '矿人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3', '感知': '1d3+2', '知识': '1d3-1', '魅力': '1d3+1', '信仰力': '1d3+1', '魔力': '1d3-1' }, skills: ['治愈适性(初级)', '夜视(初级)', '锻造(初级)']},\n    '森人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+1', '感知': '1d3+1', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3-1', '魔力': '1d3+1' }, skills: ['武器:弩弓(初级)', '夜视(初级)', '精灵宠儿(初级)']},\n    '蜥蜴人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3+1', '感知': '1d3', '知识': '1d3', '魅力': '1d3+1', '信仰力': '1d3', '魔力': '1d3' }, skills: ['免疫强化(初级)', '夜视(初级)', '龙族血统(初级)']},\n    '圃人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+2', '感知': '1d3+1', '知识': '1d3', '魅力': '1d3-1', '信仰力': '1d3', '魔力': '1d3+2' }, skills: ['隐匿(初级)', '先发制人(初级)', '烹饪(初级)']}\n};\nconst backgroundData = {\n    origin: { \n        '凡人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '学者', class: '魔术师', level: 1, skills: ['文献调查(初级)'] }, 6: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 7: { name: '农民', skills: ['生产业:农业(初级)', '强健(初级)'] }, 8: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '骑士', class: '战士', level: 1, skills: ['骑乘(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n        '矿人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 6: { name: '酒馆老板', class: '战士', level: 1, skills: ['观察(初级)'] }, 7: { name: '铁匠', skills: ['工匠:锻造(初级)', '手工(初级)'] }, 8: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '碎盾者', class: '战士', level: 1, skills: ['强击攻击·斩(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n    },\n    past: { 2: { name: '奴隶', skills: ['劳动(初级)'] }, 3: { name: '牢狱', skills: ['犯罪知识(初级)'] }, 4: { name: '战场', skills: ['沉着冷静(初级)'] }, 5: { name: '神殿', skills: ['神学(初级)'] }, 6: { name: '孤儿', skills: ['忍耐(初级)'] }, 7: { name: '平顺', skills: ['幸运(初级)'] }, 8: { name: '贫困', skills: ['生存术(初级)'] }, 9: { name: '学校', skills: ['博识(初级)'] }, 10: { name: '深闺', skills: ['无偏见(初级)'] }, 11: { name: '奢华', skills: ['鉴定(初级)'] }, 12: { name: '宫廷', skills: ['礼仪(初级)'] }},\n    encounter: { 2: '宿敌', 3: '上司', 4: '后辈', 5: '交易对象', 6: '下属', 7: '家人', 8: '挚友', 9: '前辈', 10: '未婚夫/妻', 11: '劲敌', 12: '师父' }\n};\nbackgroundData.origin['森人'] = backgroundData.origin['凡人']; backgroundData.origin['蜥蜴人'] = backgroundData.origin['凡人']; backgroundData.origin['圃人'] = backgroundData.origin['凡人'];\nconst character = {\n    name: '', gender: '', age: '', oc_details: '', race: '凡人',\n    background: { origin: null, past: null, encounter: null },\n    attributes: { '力量': 0, '敏捷': 0, '感知': 0, '知识': 0, '魅力': 0, '信仰力': 0, '魔力': 0, '潜力': 0 },\n    skills: [], classes: {}, money: 0, _lastAttributesForChart: '',\n};\n// --- END MODIFIED DATA ---\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    gsap.registerPlugin(TextPlugin);\n    mermaid.initialize({ startOnLoad: true, theme: 'base', themeVariables: {\n        '--mermaid-font-family': \"'Vollkorn', 'Noto Serif SC', serif\",\n        primaryColor: '#f7e9d7', primaryTextColor: '#3d3d3d', lineColor: '#8b7355', textColor: '#4a3c2c',\n    }});\n    \n    const $ = (s) => document.querySelector(s);\n    const roll1D6 = () => Math.floor(Math.random() * 6) + 1;\n    const roll1D3 = () => {\n        const d6 = roll1D6();\n        if (d6 <= 2) return { d6, d3: 1 };\n        if (d6 <= 4) return { d6, d3: 2 };\n        return { d6, d3: 3 };\n    };\n    const rollDiceString = (diceString) => { const p=diceString.split('*');const d=p[0];const m=parseInt(p[1])||1;if(!d.includes('d'))return 0;const[n,s]=d.split('d').map(Number);let t=0;for(let i=0;i<n;i++){t+=Math.floor(Math.random()*s)+1;}return t*m; };\n    const formatAge = (ageValue) => { if (!ageValue && ageValue !== 0) return ageValue; const num = Number(ageValue); if (isNaN(num)) return ageValue; if (Math.abs(num) >= 1_000_000) return num.toExponential(2); return ageValue; };\n    const debounce = (func, delay) => { let timeout; return function(...args) { clearTimeout(timeout); timeout = setTimeout(() => func.apply(this, args), delay); }; };\n    const diceUnicode = ['\\u2680', '\\u2681', '\\u2682', '\\u2683', '\\u2684', '\\u2685'];\n\n    const DOM = {\n        nameInput: $('#char-name-input'), genderInput: $('#char-gender-input'), ageInput: $('#char-age-input'),\n        ocDetailsInput: $('#oc-details-input'), raceSelect: $('#char-race-select'), attributesContainer: $('#attributes-container'),\n        skillsContainer: $('#skills-and-desc-container'), radarChart: $('#radar-chart'), summarySheet: $('#character-summary'),\n        diceOverlay: $('#dice-overlay'), diceContainer: $('#dice-container'), diceResultText: $('#dice-result-text'),\n        backgroundDisplay: $('#background-display'), bgOrigin: $('#bg-origin'), bgPast: $('#bg-past'), bgEncounter: $('#bg-encounter'),\n        skipAnimationBtn: $('#skip-animation-btn'),\n        submitBtn: $('#submit-btn'),\n        validationMessage: $('#validation-message'),\n    };\n    \n    const dicePool = []; const MAX_DICE = 6;\n    let currentAnimation = null; let textAnimation = null; let isSkipping = false;\n    let currentValidationMessage = '';\n    \n    function validateAndToggleButton() {\n        let newMessage = '';\n        if (!character.age || String(character.age).trim() === '') {\n            newMessage = '请填写您的冒险者年龄。';\n        } else if (!character.gender || !character.gender.trim()) {\n            newMessage = '请设定冒险者的性别。';\n        } else if (!character.background.origin) {\n            newMessage = '请投骰决定您的冒险者经历。';\n        } else if (Object.values(character.attributes).every(val => val === 0)) {\n            newMessage = '请投骰决定您的能力值。';\n        }\n\n        if (newMessage === currentValidationMessage) return;\n        currentValidationMessage = newMessage;\n\n        if (newMessage) {\n            DOM.submitBtn.disabled = true;\n            DOM.validationMessage.textContent = newMessage;\n            gsap.fromTo(DOM.validationMessage, { autoAlpha: 0, scale: 0.8 }, { autoAlpha: 1, scale: 1, duration: 0.4, ease: 'elastic.out(1, 0.75)' });\n        } else {\n            DOM.submitBtn.disabled = false;\n            gsap.to(DOM.validationMessage, { autoAlpha: 0, duration: 0.3 });\n        }\n    }\n    function updateCharacterDataFromDOM() { character.name = DOM.nameInput.value; character.gender = DOM.genderInput.value; character.age = DOM.ageInput.value; character.oc_details = DOM.ocDetailsInput.value; character.race = DOM.raceSelect.value; }\n    function renderSkills() { const uniqueSkills = [...new Set(character.skills)]; DOM.skillsContainer.innerHTML = `<p><strong>天赋与习得技能:</strong></p><ul>${uniqueSkills.map(s => `<li>- ${s}</li>`).join('')}</ul>`; }\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key}`).value = value; }); }\n    function renderSummary() {\n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '?';\n        const originText = `出身:${character.background.origin ? character.background.origin.name : '?'}`;\n        const pastText = `来历:${character.background.past ? character.background.past.name : '?'}`;\n        const encounterText = `邂逅:${character.background.encounter || '?'}`;\n        let summary = `### 《哥布林杀手TRPG》冒险者登记卡\\n` + `**姓名:** ${finalName} | **种族:** ${character.race} | **性别:** ${character.gender || '?'} | **年龄:** ${formattedAge}\\n` + `**经历:** ${originText} / ${pastText} / ${encounterText}\\n` + `**初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n` + `**初始技能:** ${uniqueSkills.join(', ') || '无'}\\n`; if (character.oc_details) { summary += `**身体特征与补充:** ${character.oc_details}\\n`; } summary += `---\\n**能力值:**\\n`; summary += Object.entries(character.attributes).map(([key, value]) => `- ${key}: ${value}`).join('\\n'); summary += `\\n**持有资金:** ${character.money} 银币`;\n        DOM.summarySheet.value = summary.replace(/### /g, '').replace(/\\*\\*/g, '').replace(/---/g, '\\n────────────────────\\n').replace(/- /g, '  ');\n        DOM.summarySheet.setAttribute('data-raw', summary);\n    }\n    async function renderRadarChartIfNeeded() { const currentAttributesString = JSON.stringify(character.attributes); if (currentAttributesString === character._lastAttributesForChart) return; DOM.radarChart.classList.add('loading'); const radarSyntax = `radar-beta\\ntitle 能力值分布\\naxis a[\"力量 ${character.attributes['力量']}\"]\\naxis b[\"敏捷 ${character.attributes['敏捷']}\"]\\naxis c[\"感知 ${character.attributes['感知']}\"]\\naxis d[\"知识 ${character.attributes['知识']}\"]\\naxis e[\"魅力 ${character.attributes['魅力']}\"]\\naxis f[\"信仰 ${character.attributes['信仰力']}\"]\\naxis g[\"魔力 ${character.attributes['魔力']}\"]\\naxis h[\"潜力 ${character.attributes['潜力']}\"]\\ncurve current[\"能力\"]{${character.attributes['力量']},${character.attributes['敏捷']},${character.attributes['感知']},${character.attributes['知识']},${character.attributes['魅力']},${character.attributes['信仰力']},${character.attributes['魔力']},${character.attributes['潜力']}}\\nmax 10\\nmin 0`; DOM.radarChart.innerHTML = radarSyntax; DOM.radarChart.removeAttribute('data-processed'); try { await mermaid.run({ nodes: [DOM.radarChart] }); character._lastAttributesForChart = currentAttributesString; } catch(e) { console.error(\"Mermaid rendering error:\", e); } finally { DOM.radarChart.classList.remove('loading'); } }\n    async function updateUI(forceFullUpdate = false) { updateCharacterDataFromDOM(); if(forceFullUpdate) { character._lastAttributesForChart = ''; character.skills = []; character.classes = {}; character.money = 100; if(raceData[character.race].skills) character.skills.push(...raceData[character.race].skills); if (character.background.origin) { if (character.background.origin.skills) character.skills.push(...character.background.origin.skills); if (character.background.origin.class) character.classes[character.background.origin.class] = character.background.origin.level; if(character.background.origin.money) character.money += rollDiceString(character.background.origin.money); } if (character.background.past && character.background.past.skills) { character.skills.push(...character.background.past.skills); } } renderAttributes(); renderSkills(); renderSummary(); await renderRadarChartIfNeeded(); validateAndToggleButton(); }\n\n    const masterTl = gsap.timeline({ delay: 0.2 });\n    const title = $('#main-title');\n    title.innerHTML = title.textContent.split('').map(char => `<span class=\"title-char\">${char}</span>`).join('');\n    gsap.set(\".gsap-header-item, .gsap-content-item\", { autoAlpha: 0, y: 20 });\n    masterTl.to(\".title-char\", { autoAlpha: 1, y: 0, duration: 0.7, ease: \"power3.out\", stagger: 0.1 }).to(\"#wax-seal\", { autoAlpha: 1, scale: 1, duration: 0.6, ease: \"elastic.out(1, 0.7)\" }, \"-=0.5\");\n    document.querySelectorAll('.gs-creator-step').forEach((step, index) => { const stepTl = gsap.timeline(); stepTl.to(step.querySelector('.gsap-header-item'), { autoAlpha: 1, y: 0, duration: 0.6, ease: 'power2.out' }).to(step.querySelectorAll('.gsap-content-item'), { autoAlpha: 1, y: 0, duration: 0.5, ease: 'power2.out', stagger: 0.1 }, '-=0.4'); masterTl.add(stepTl, `-=${index === 0 ? 0.2 : 0.7}`); });\n    const pipPositions = { 1: [ { left: '50%', top: '50%' } ], 2: [ { left: '25%', top: '25%' }, { left: '75%', top: '75%' } ], 3: [ { left: '25%', top: '25%' }, { left: '50%', top: '50%' }, { left: '75%', top: '75%' } ], 4: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 5: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '50%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 6: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '50%' }, { left: '75%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ]};\n    function setupCube(cubeEl) { const size = 'calc(var(--dice-size) / 2)'; gsap.set(cubeEl.querySelector('.face-front'),  { transform: `rotateY(0deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-back'),   { transform: `rotateY(180deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-right'),  { transform: `rotateY(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-left'),   { transform: `rotateY(-90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-top'),   { transform: `rotateX(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-bottom'), { transform: `rotateX(-90deg) translateZ(${size})` }); const faces = cubeEl.querySelectorAll('.dice-face'); faces.forEach(face => { const faceNum = face.getAttribute('data-face'); const pips = face.querySelectorAll('.pip'); const positions = pipPositions[faceNum]; if (!pips.length || !positions) return; pips.forEach((pip, index) => { const pos = positions[index]; gsap.set(pip, { left: pos.left, top: pos.top, xPercent: -50, yPercent: -50 }); }); }); }\n    function getRotationForFace(faceValue) { switch (faceValue) { case 1: return { x: 0, y: 0 }; case 6: return { x: 0, y: 180 }; case 3: return { x: 0, y: -90 }; case 4: return { x: 0, y: 90 }; case 2: return { x: -90, y: 0 }; case 5: return { x: 90,  y: 0 }; default: return { x: 0, y: 0 }; } }\n    async function animateText(element, text) { if(isSkipping) {element.innerHTML = text.replace(/\\n/g, '<br>'); return;} return new Promise(resolve => { if (textAnimation && textAnimation.isActive()) textAnimation.kill(); element.innerHTML = ''; textAnimation = gsap.to(element, { duration: text.length * 0.05, text: { value: text.replace(/\\n/g, '<br>'), newClass: \"typed-cursor\" }, ease: \"none\", onComplete: () => { gsap.delayedCall(0.7, () => { element.querySelector('.typed-cursor')?.remove(); resolve(); }); } }); }); }\n    function initDicePool() { const diceTemplate = document.querySelector('[data-id_template=\"dice-cube\"]'); if (!diceTemplate) return; for (let i = 0; i < MAX_DICE; i++) { const dieIconElement = document.createElement('div'); dieIconElement.className = 'dice-icon'; const newCube = diceTemplate.cloneNode(true); dieIconElement.appendChild(newCube); DOM.diceContainer.appendChild(dieIconElement); setupCube(newCube); dicePool.push(dieIconElement); } }\n    async function animateRoll(numDice, preCalculatedRolls, textToShowDuringRoll = \"投掷中...\") { return new Promise(resolve => { if (currentAnimation && currentAnimation.isActive()) currentAnimation.kill(); dicePool.forEach(die => die.style.display = 'none'); const activeDice = dicePool.slice(0, numDice); animateText(DOM.diceResultText, textToShowDuringRoll); activeDice.forEach(die => { die.style.display = 'flex'; die.className = 'dice-icon'; }); const masterTl = gsap.timeline({ onComplete: () => { if(isSkipping) DOM.diceResultText.innerHTML = ''; resolve(preCalculatedRolls); }}); currentAnimation = masterTl; activeDice.forEach((dieElement, i) => { const dieCube = dieElement.querySelector('.dice-cube'); const visualRoll = preCalculatedRolls[i]; const targetRotation = getRotationForFace(visualRoll); const dieTimeline = gsap.timeline(); dieTimeline.to(dieCube, { rotationX: `+=${gsap.utils.random(720, 1080)}`, rotationY: `+=${gsap.utils.random(720, 1080)}`, duration: 1.8, ease: \"power2.in\" }).to(dieCube, { rotationX: targetRotation.x, rotationY: targetRotation.y, duration: 0.7, ease: \"power4.out\" }); masterTl.add(dieTimeline, 0); }); }); }\n    \n    const debouncedUpdate = debounce(updateUI, 400);\n    [DOM.nameInput, DOM.genderInput, DOM.ageInput, DOM.ocDetailsInput].forEach(el => el.addEventListener('input', debouncedUpdate));\n    \n    DOM.skipAnimationBtn.addEventListener('click', () => {\n        isSkipping = true;\n        if (currentAnimation && currentAnimation.isActive()) currentAnimation.progress(1);\n        if (textAnimation && textAnimation.isActive()) textAnimation.progress(1);\n    });\n\n    $('#roll-background-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const rolls = [roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6()];\n        await animateRoll(6, rolls, '投掷 经历... (2d6 x 3)');\n        \n        const sums = { origin: rolls[0] + rolls[1], past: rolls[2] + rolls[3], encounter: rolls[4] + rolls[5] };\n        \n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `出身: ${rolls[0]} + ${rolls[1]} = ${sums.origin}\\n(${backgroundData.origin[character.race][sums.origin].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `来历: ${rolls[2]} + ${rolls[3]} = ${sums.past}\\n(${backgroundData.past[sums.past].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(4, 6), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `邂逅: ${rolls[4]} + ${rolls[5]} = ${sums.encounter}\\n(${backgroundData.encounter[sums.encounter]})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        character.background.origin = backgroundData.origin[character.race][sums.origin];\n        character.background.past = backgroundData.past[sums.past];\n        character.background.encounter = backgroundData.encounter[sums.encounter];\n        DOM.bgOrigin.textContent = character.background.origin.name;\n        DOM.bgPast.textContent = character.background.past.name;\n        DOM.bgEncounter.textContent = character.background.encounter;\n        DOM.backgroundDisplay.style.display = 'block';\n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        updateUI(true);\n    });\n\n    $('#roll-attributes-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const attrRolls = raceData[character.race].attr_rolls;\n        const allCalculatedRolls = [];\n\n        // Prepare race-based attributes\n        for (const attr in attrRolls) {\n            const formula = attrRolls[attr];\n            const modifier = parseInt(formula.split('d3')[1] || '0');\n            const { d6, d3 } = roll1D3();\n            const finalValue = Math.max(0, d3 + modifier);\n            character.attributes[attr] = finalValue;\n            allCalculatedRolls.push({ attr, formula, d6, d3, modifier, finalValue });\n        }\n        \n        // Prepare \"Potential\" attribute\n        const potentialValue = Math.floor(Math.random() * 3) + 1;\n        const d6ForPotential = (potentialValue * 2) - 1; // Map 1,2,3 to d6 faces 1,3,5 for animation\n        character.attributes['潜力'] = potentialValue;\n        allCalculatedRolls.push({\n            attr: '潜力',\n            formula: '1-3', // Just a descriptor\n            d6: d6ForPotential,\n            finalValue: potentialValue\n        });\n        \n        // Animate all rolls sequentially\n        for (const roll of allCalculatedRolls) {\n            await animateRoll(1, [roll.d6], `投掷 ${roll.attr}...`);\n            if (isSkipping) break;\n\n            gsap.to(dicePool[0], { className: 'dice-icon highlight', duration: 0.3 });\n            \n            let resultText;\n            if (roll.attr === '潜力') {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.finalValue}`;\n            } else {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.d3} ${roll.modifier >= 0 ? '+' : ''} ${roll.modifier} = ${roll.finalValue}`;\n            }\n            await animateText(DOM.diceResultText, resultText);\n            \n            await updateUI();\n            \n            if (isSkipping) break;\n            \n            await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        await updateUI();\n    });\n\n    DOM.raceSelect.addEventListener('change', () => {\n        DOM.backgroundDisplay.style.display = 'none';\n        character.background = { origin: null, past: null, encounter: null };\n        Object.keys(character.attributes).forEach(k => character.attributes[k] = 0);\n        updateUI(true);\n    });\n\n    $('#submit-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        await updateUI(true);\n        \n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '未设定';\n        \n        const finalCharacterObject={ NAME:finalName, GENDER:character.gender||'未设定', AGE:formattedAge, RACE:character.race, ORIGIN: character.background.origin ? character.background.origin.name : '未知', PAST: character.background.past ? character.background.past.name : '未知', ENCOUNTER: character.background.encounter || '未知', SKILLS: uniqueSkills, OC_DETAILS:character.oc_details||'无', ...character.attributes, MONEY:character.money };\n        \n        const slashCommand=`/send <START>\\nAdmin:\\n这是一个TRPG开局，请为 User 生成一段详尽的背景故事。\\n\\n# 故事核心要求\\n请严格根据以下【角色完整设定】，撰写一段从角色童年到现在的成长故事。故事需要清晰地阐述是什么关键事件或心路历程，最终让他/她确立了要成为一名冒险者的志向。请在故事中自然地融入角色的种族、出身背景、技能和性格特点。\\n\\n# 角色完整设定\\n---\\n## 基础信息\\n- **姓名:** ${finalName}\\n- **性别:** ${character.gender||'未设定'}\\n- **年龄:** ${formattedAge}\\n- **种族:** ${character.race}\\n\\n## 经历\\n- **出身:** ${character.background.origin ? character.background.origin.name : '未知'}\\n- **来历:** ${character.background.past ? character.background.past.name : '未知'}\\n- **邂逅:** ${character.background.encounter || '未知'}\\n\\n## 背景与技能\\n- **初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n- **初始技能:** ${uniqueSkills.join(', ')||'无'}\\n\\n## 补充设定 (OC)\\n- **额外补充:** ${character.oc_details||'无'}\\n\\n## 能力值\\n- **力量:** ${character.attributes['力量']}\\n- **敏捷:** ${character.attributes['敏捷']}\\n- **感知:** ${character.attributes['感知']}\\n- **知识:** ${character.attributes['知识']}\\n- **魅力:** ${character.attributes['魅力']}\\n- **信仰力:** ${character.attributes['信仰力']}\\n- **魔力:** ${character.attributes['魔力']}\\n\\n## 初始资产\\n- **资金:** ${character.money} 银币\\n\\|\\n/trigger`; \n        \n        try {\n            if (typeof insertOrAssignVariables === 'function') {\n                await insertOrAssignVariables(finalCharacterObject);\n            } else {\n                console.log(\"SillyTavern Function 'insertOrAssignVariables' not found. Variables:\", finalCharacterObject);\n            }\n            if (typeof triggerSlash === 'function') {\n                await triggerSlash(slashCommand, 'Send');\n            } else { \n                console.log(\"SillyTavern Function 'triggerSlash' not found. Command will be copied to clipboard.\");\n                navigator.clipboard.writeText(slashCommand).then(() => {\n                    alert('角色指令已复制到剪贴板！');\n                });\n            }\n        } catch (error) {\n            console.error('与SillyTavern交互失败:', error);\n            alert('与SillyTavern交互失败，请查看浏览器控制台。');\n        }\n\n        e.target.innerHTML = \"契约成立！\";\n    });\n    \n    initDicePool();\n    Object.keys(raceData).forEach(key => DOM.raceSelect.add(new Option(key, key)));\n    Object.keys(character.attributes).forEach(key => {\n        const pointControl = document.createElement('div');\n        pointControl.className = 'point-control';\n        pointControl.innerHTML = `<span class=\"label\">${key}</span><input type=\"text\" id=\"attr-${key.replace(/\\s/g, '')}\" readonly value=\"0\">`; // ID santized just in case\n        DOM.attributesContainer.appendChild(pointControl);\n    });\n    // A small fix for renderAttributes to handle sanitized IDs\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key.replace(/\\s/g, '')}`).value = value; }); }\n    updateUI(true);\n});\n</script>\n\n</body>\n</html>\n```"
  },
  {
    "role": "user",
    "content": "```\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>哥布林杀手TRPG - 冒险者契约</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/gsap.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/TextPlugin.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.min.js\" defer></script>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Noto+Serif+SC:wght@400;700&family=Vollkorn:wght@400;700&family=Courier+Prime&display=swap\" rel=\"stylesheet\">\n\n    <style>\n        :root {\n            --leather-bg: #5a3a2a;\n            --dark-leather-bg: #3b2a1a;\n            --parchment-bg: #f5f5dc;\n            --parchment-bg-gradient: linear-gradient(165deg, #f7e9d7, #e6d5c3);\n            --text-color: #3d3d3d;\n            --heading-color: #4a3c2c;\n            --border-color: #7a5a4a;\n            --font-main: 'Vollkorn', 'Noto Serif SC', serif;\n            --font-display: 'Cinzel', 'Noto Serif SC', serif;\n            --font-code: 'Courier Prime', 'Courier New', monospace;\n            --dice-size: 5rem; \n        }\n\n        html { height: 100%; }\n        body {\n            background-color: #3a2e20;\n            font-family: var(--font-main);\n            color: var(--text-color);\n            margin: 0; padding: 20px;\n            box-sizing: border-box;\n            display: flex;\n            align-items: center; justify-content: center;\n            min-height: 100%;\n        }\n        *, *:before, *:after { box-sizing: inherit; }\n\n        .creator-wrapper {\n            width: 100%; max-width: 900px;\n            margin: 0;\n            background: var(--parchment-bg-gradient);\n            border: 12px solid #8b7355;\n            border-radius: 8px;\n            box-shadow: 0 0 40px rgba(139, 115, 85, 0.3), inset 0 0 30px rgba(255, 255, 255, 0.4);\n            position: relative;\n            overflow: hidden;\n            padding: 25px;\n            display: flex; flex-direction: column;\n            max-height: 95vh;\n        }\n\n        .border-flow, .inner-border { position: absolute; pointer-events: none; }\n        .border-flow { top: 0; left: 0; right: 0; bottom: 0; background: linear-gradient(90deg, rgba(139,115,85,0.1) 1px, transparent 1px), linear-gradient(0deg, rgba(139,115,85,0.1) 1px, transparent 1px); background-size: 20px 20px; animation: borderFlow 15s linear infinite; }\n        .inner-border { top: 5px; left: 5px; right: 5px; bottom: 5px; border: 3px solid rgba(139,115,85,0.3); border-radius: 5px; }\n        @keyframes borderFlow { from { background-position: 0 0; } to { background-position: 20px 20px; } }\n\n        .creator-header {\n            text-align: center;\n            padding: 10px;\n            margin-bottom: 25px;\n            border-bottom: 2px solid rgba(139, 115, 85, 0.3);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 15px;\n        }\n        .creator-header h1 {\n            font-family: var(--font-display);\n            font-size: clamp(24px, 5vw, 32px);\n            margin: 0;\n            font-weight: 700;\n            letter-spacing: 3px;\n            color: var(--heading-color);\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.1);\n        }\n        \n        .title-char {\n            display: inline-block;\n            opacity: 0;\n            transform: translateY(30px);\n        }\n\n        .wax-seal {\n            width: 45px;\n            height: 45px;\n            display: inline-block;\n            background-color: #c0392b;\n            border-radius: 50%;\n            position: relative;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.4), inset 0 -2px 3px rgba(0,0,0,0.3);\n            opacity: 0;\n            transform: scale(0.5);\n            font-family: 'Cinzel', serif;\n            color: #e7a49c;\n            text-align: center;\n            font-size: 24px;\n            line-height: 45px;\n            font-weight: 700;\n        }\n        .wax-seal::before {\n            content: 'GS';\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.3);\n        }\n\n        .creator-scroll-content { overflow-y: auto; padding: 10px 20px 10px 10px; }\n        .creator-scroll-content::-webkit-scrollbar { width: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-track { background: rgba(139, 115, 85, 0.1); border-radius: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-thumb { background-color: #a89072; border-radius: 10px; border: 2px solid #f7e9d7; }\n        \n        .gs-creator-step { margin-bottom: 40px; overflow: hidden; }\n        .gs-creator-step h3 { font-family: var(--font-display); font-size: 1.5em; font-weight: 700; border-bottom: 1.5px solid var(--border-color); padding-bottom: 8px; margin-bottom: 20px; color: var(--heading-color); text-align: left; }\n        \n        .layout-grid { display: grid; grid-template-columns: 1fr; gap: 25px; align-items: flex-start; }\n        @media (min-width: 768px) {\n            .layout-grid { grid-template-columns: 1fr 280px; }\n        }\n\n        .form-container { text-align: left; }\n        .gs-form-group { margin-bottom: 16px; }\n        .gs-form-group label { display: block; margin-bottom: 6px; font-weight: bold; color: var(--heading-color); }\n        .form-input, .form-select, .form-textarea { width: 100%; padding: 10px; background-color: rgba(255, 255, 255, 0.5); border: 1px solid #a58e72; border-radius: 4px; color: #3d3d3d; font-family: var(--font-main); font-size: 1em; transition: all 0.2s ease-in-out; box-shadow: inset 1px 1px 2px rgba(0,0,0,0.1); }\n        .form-input:focus, .form-select:focus, .form-textarea:focus { outline: none; border-color: #8b7355; background-color: #fff; box-shadow: 0 0 5px rgba(139, 115, 85, 0.5); }\n        .form-textarea { resize: vertical; min-height: 100px; }\n\n        .grid-cols-2 {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 16px;\n        }\n        @media (min-width: 480px) {\n            .grid-cols-2 {\n                grid-template-columns: repeat(2, 1fr);\n            }\n        }\n\n        #attributes-container .point-control { display: flex; align-items: center; justify-content: space-between; margin-bottom: 8px; padding: 6px 8px; background: rgba(0,0,0,0.03); border-left: 3px solid rgba(139,115,85,0.2); border-radius: 4px; }\n        #attributes-container .label { font-weight: bold; color: var(--heading-color); }\n        #attributes-container input[readonly] { width: 40px; text-align: center; font-weight: bold; font-size: 1.2em; font-family: var(--font-display); color: #a02c2c; border: none; background-color: transparent; box-shadow: none; padding: 0; }\n        \n        .attributes-grid {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 0 16px;\n        }\n        @media (min-width: 480px) {\n            .attributes-grid {\n                grid-template-columns: 1fr 1fr;\n            }\n        }\n        \n        .skills-display p { background-color: rgba(0,0,0,0.05); border-left: 3px solid var(--border-color); padding: 10px 15px; margin-top: 10px; font-size: 0.95em; border-radius: 0 4px 4px 0; }\n        .skills-display strong { color: #8b5b4b; font-family: var(--font-display); }\n        .skills-display ul { list-style: none; padding-left: 0; margin-top: 8px; font-size: 0.9em; }\n        .skills-display li { margin-bottom: 4px; }\n\n        #character-summary { background-color: #e9e4d9; font-family: var(--font-code); line-height: 1.6; height: 250px; color: #2c2a2a; }\n        \n        .gs-button { width: 100%; background-color: #8b7355; color: var(--parchment-bg); border: 2px solid var(--dark-leather-bg); border-radius: 5px; padding: 12px 20px; font-family: var(--font-display); font-size: 1.2em; font-weight: 700; cursor: pointer; margin-top: 10px; transition: all 0.3s ease; box-shadow: 0 3px 5px rgba(0,0,0,0.3); }\n        .gs-button:hover { background-color: #a0886c; transform: translateY(-2px); box-shadow: 0 5px 8px rgba(0,0,0,0.3); }\n        .gs-button:disabled { background-color: #9e9e9e; border-color: #757575; cursor: not-allowed; transform: none; box-shadow: none; opacity: 0.6; }\n        .action-button { background-color: #6d5b4b; font-size: 1em; padding: 10px 15px; margin-top: 0; margin-bottom: 10px; width: auto; }\n        \n        .background-display { margin-top: 15px; padding: 15px; border: 1px dashed var(--border-color); border-radius: 5px; background: rgba(0,0,0,0.02); }\n        .background-display p { margin: 0 0 8px; }\n        .background-display span { font-weight: bold; color: var(--heading-color); }\n        \n        #radar-chart-container { \n            max-width: 100%;\n        }\n        @media (min-width: 768px) {\n            #radar-chart-container {\n                position: sticky;\n                top: 0;\n                padding-top: 45px;\n            }\n        }\n\n        pre.mermaid { \n            font-family: var(--font-main); \n            background: rgba(0,0,0,0.02); \n            border: 1px solid rgba(139,115,85,0.1); \n            padding: 10px; \n            border-radius: 5px; \n            overflow: auto;\n            transition: opacity 0.3s ease-in-out;\n        }\n        pre.mermaid.loading { opacity: 0.5; pointer-events: none; }\n\n        pre.mermaid > svg {\n            max-width: 100%;\n            height: auto;\n        }\n\n        #dice-overlay {\n            position: fixed; top: 0; left: 0; width: 100%; height: 100%;\n            background: rgba(0,0,0,0.8); backdrop-filter: blur(5px);\n            display: none; align-items: center; justify-content: center; flex-direction: column;\n            z-index: 100;\n            color: #fff; text-shadow: 0 0 10px #000;\n        }\n\n        .dice-container {\n            display: flex; flex-wrap: wrap; justify-content: center;\n            gap: 2rem; margin-bottom: 2rem;\n            max-width: 600px;\n        }\n        \n        .dice-icon {\n            width: var(--dice-size); height: var(--dice-size);\n            perspective: 800px;\n            transform-style: preserve-3d;\n            display: none;\n        }\n        .dice-icon.highlight {\n            transform: scale(1.15);\n            filter: drop-shadow(0 0 15px #FFEB3B);\n            transition: transform 0.3s ease, filter 0.3s ease;\n        }\n\n        .dice-cube {\n            width: 100%; height: 100%;\n            position: relative;\n            transform-style: preserve-3d;\n            transform: translateZ(calc(var(--dice-size) / -2));\n        }\n        \n        .dice-face {\n            position: absolute;\n            width: var(--dice-size); height: var(--dice-size);\n            background-color: rgba(255, 255, 255, 0.98);\n            border: 1.5px solid #857e72;\n            border-radius: 12%;\n        }\n\n        .pips-container {\n            width: 100%; height: 100%;\n            position: relative; \n        }\n        .pip {\n            width: 22%; height: 22%; \n            background-color: #3d352e;\n            border-radius: 50%;\n            box-shadow: inset 0 1px 3px rgba(0,0,0,0.5);\n            position: absolute; \n        }\n        \n        #dice-result-text { \n            font-family: var(--font-display); \n            font-size: 2.2em;\n            color: #FFEB3B; \n            text-shadow: 0 0 12px #FFEB3B; \n            min-height: 2em;\n            line-height: 1.2;\n            text-align: center; \n        }\n        \n        #skip-animation-btn {\n            position: absolute;\n            bottom: 30px;\n            font-size: 1em;\n            padding: 8px 20px;\n            width: auto;\n            background-color: rgba(0,0,0,0.3);\n            border-color: rgba(255,255,255,0.5);\n            color: rgba(255,255,255,0.8);\n        }\n        #skip-animation-btn:hover {\n            background-color: rgba(0,0,0,0.5);\n            color: #fff;\n        }\n\n        .typed-cursor {\n            opacity: 1;\n            animation: typed-blink 0.7s infinite;\n        }\n        @keyframes typed-blink{\n            0% { opacity: 1; }\n            50% { opacity: 0; }\n            100% { opacity: 1; }\n        }\n        \n        .validation-message {\n            text-align: center;\n            color: #b71c1c;\n            font-size: 0.9em;\n            font-weight: bold;\n            margin-top: -5px;\n            margin-bottom: 10px;\n            height: 1.2em;\n            opacity: 0;\n            will-change: transform, opacity;\n        }\n\n        #credits-screen {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            pointer-events: none;\n            opacity: 0;\n        }\n\n        #credits-screen p {\n            font-family: var(--font-display);\n            font-size: 2em;\n            color: #f5f5dc;\n            text-shadow: 0 0 8px rgba(245, 245, 220, 0.7);\n        }\n    </style>\n</head>\n<body>\n\n<div class=\"creator-wrapper\">\n    <div class=\"border-flow\"></div>\n    <div class=\"inner-border\"></div>\n    <header class=\"creator-header\">\n        <h1 id=\"main-title\">冒险者契约登记</h1>\n        <div id=\"wax-seal\" class=\"wax-seal\"></div>\n    </header>\n\n    <div class=\"creator-scroll-content\">\n        <div class=\"gs-creator-container\">\n            <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第一步：身份确认</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-name-input\">姓名</label><input id=\"char-name-input\" type=\"text\" placeholder=\"可留空，默认为 {{user}}\" class=\"form-input\"></div>\n                    <div class=\"grid-cols-2 gsap-content-item\">\n                        <div class=\"gs-form-group\"><label for=\"char-gender-input\">性别</label><input id=\"char-gender-input\" type=\"text\" placeholder=\"例如: 男性/女性/双性/无性/……\" class=\"form-input\"></div>\n                        <div class=\"gs-form-group\"><label for=\"char-age-input\">年龄</label><input id=\"char-age-input\" type=\"number\" placeholder=\"可参照种族说明\" class=\"form-input\"></div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-race-select\">种族</label><select id=\"char-race-select\" class=\"form-select\"></select></div>\n                    <div class=\"gs-form-group gsap-content-item\">\n                        <label>经历 (出身/来历/邂逅)</label>\n                        <button id=\"roll-background-btn\" class=\"gs-button action-button\">🎲 投骰决定经历</button>\n                        <div id=\"background-display\" class=\"background-display\" style=\"display: none;\">\n                            <p>出身: <span id=\"bg-origin\"></span></p>\n                            <p>来历: <span id=\"bg-past\"></span></p>\n                            <p>邂逅: <span id=\"bg-encounter\"></span></p>\n                        </div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"oc-details-input\">身体特征与补充</label><textarea id=\"oc-details-input\" placeholder=\"发色、瞳色、体型、性格、背景故事构思...\" class=\"form-textarea\"></textarea></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第二步：能力值与技能</h3>\n                <div class=\"layout-grid\">\n                    <div class=\"form-container gsap-content-item\">\n                        <button id=\"roll-attributes-btn\" class=\"gs-button action-button\">🎲 投骰决定能力值</button>\n                        <div id=\"attributes-container\" class=\"attributes-grid\"></div>\n                        <div id=\"skills-and-desc-container\" class=\"skills-display\"></div>\n                    </div>\n                    <div id=\"radar-chart-container\" class=\"gsap-content-item\"><pre class=\"mermaid\" id=\"radar-chart\"></pre></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第三步：完成登记</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"character-summary\">角色卡预览</label><textarea id=\"character-summary\" rows=\"12\" readonly class=\"form-textarea\"></textarea></div>\n                    <button id=\"submit-btn\" class=\"gs-button gsap-content-item\" disabled>确认登记，开始冒险</button>\n                    <div id=\"validation-message\" class=\"validation-message\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div id=\"credits-screen\">\n    <p>作者 𝙀𝙡𝙖𝙞𝙣𝙖𝙙𝙚𝙨</p>\n</div>\n\n<div id=\"dice-overlay\">\n    <div class=\"dice-container\" id=\"dice-container\"></div>\n    <div id=\"dice-result-text\"></div>\n    <button id=\"skip-animation-btn\" class=\"gs-button\">跳过动画</button>\n</div>\n\n<div id=\"dice-templates\" style=\"display:none;\">\n    <div class=\"dice-cube\" data-id_template=\"dice-cube\">\n        <div class=\"dice-face face-front\" data-face=\"1\"><div class=\"pips-container\"><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-back\" data-face=\"6\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-right\" data-face=\"3\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-left\" data-face=\"4\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-top\" data-face=\"2\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-bottom\" data-face=\"5\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n    </div>\n</div>\n\n<script>\n// --- MODIFIED DATA ---\nconst raceData = {\n    '凡人': { attr_rolls: { '力量': '1d3+1', '敏捷': '1d3', '感知': '1d3', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3+2', '魔力': '1d3' }, skills: ['过载行动(初级)', '武器:投掷武器(初级)', '长距离移动(初级)']},\n    '矿人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3', '感知': '1d3+2', '知识': '1d3-1', '魅力': '1d3+1', '信仰力': '1d3+1', '魔力': '1d3-1' }, skills: ['治愈适性(初级)', '夜视(初级)', '锻造(初级)']},\n    '森人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+1', '感知': '1d3+1', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3-1', '魔力': '1d3+1' }, skills: ['武器:弩弓(初级)', '夜视(初级)', '精灵宠儿(初级)']},\n    '蜥蜴人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3+1', '感知': '1d3', '知识': '1d3', '魅力': '1d3+1', '信仰力': '1d3', '魔力': '1d3' }, skills: ['免疫强化(初级)', '夜视(初级)', '龙族血统(初级)']},\n    '圃人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+2', '感知': '1d3+1', '知识': '1d3', '魅力': '1d3-1', '信仰力': '1d3', '魔力': '1d3+2' }, skills: ['隐匿(初级)', '先发制人(初级)', '烹饪(初级)']}\n};\nconst backgroundData = {\n    origin: { \n        '凡人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '学者', class: '魔术师', level: 1, skills: ['文献调查(初级)'] }, 6: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 7: { name: '农民', skills: ['生产业:农业(初级)', '强健(初级)'] }, 8: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '骑士', class: '战士', level: 1, skills: ['骑乘(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n        '矿人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 6: { name: '酒馆老板', class: '战士', level: 1, skills: ['观察(初级)'] }, 7: { name: '铁匠', skills: ['工匠:锻造(初级)', '手工(初级)'] }, 8: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '碎盾者', class: '战士', level: 1, skills: ['强击攻击·斩(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n    },\n    past: { 2: { name: '奴隶', skills: ['劳动(初级)'] }, 3: { name: '牢狱', skills: ['犯罪知识(初级)'] }, 4: { name: '战场', skills: ['沉着冷静(初级)'] }, 5: { name: '神殿', skills: ['神学(初级)'] }, 6: { name: '孤儿', skills: ['忍耐(初级)'] }, 7: { name: '平顺', skills: ['幸运(初级)'] }, 8: { name: '贫困', skills: ['生存术(初级)'] }, 9: { name: '学校', skills: ['博识(初级)'] }, 10: { name: '深闺', skills: ['无偏见(初级)'] }, 11: { name: '奢华', skills: ['鉴定(初级)'] }, 12: { name: '宫廷', skills: ['礼仪(初级)'] }},\n    encounter: { 2: '宿敌', 3: '上司', 4: '后辈', 5: '交易对象', 6: '下属', 7: '家人', 8: '挚友', 9: '前辈', 10: '未婚夫/妻', 11: '劲敌', 12: '师父' }\n};\nbackgroundData.origin['森人'] = backgroundData.origin['凡人']; backgroundData.origin['蜥蜴人'] = backgroundData.origin['凡人']; backgroundData.origin['圃人'] = backgroundData.origin['凡人'];\nconst character = {\n    name: '', gender: '', age: '', oc_details: '', race: '凡人',\n    background: { origin: null, past: null, encounter: null },\n    attributes: { '力量': 0, '敏捷': 0, '感知': 0, '知识': 0, '魅力': 0, '信仰力': 0, '魔力': 0, '潜力': 0 },\n    skills: [], classes: {}, money: 0, _lastAttributesForChart: '',\n};\n// --- END MODIFIED DATA ---\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    gsap.registerPlugin(TextPlugin);\n    mermaid.initialize({ startOnLoad: true, theme: 'base', themeVariables: {\n        '--mermaid-font-family': \"'Vollkorn', 'Noto Serif SC', serif\",\n        primaryColor: '#f7e9d7', primaryTextColor: '#3d3d3d', lineColor: '#8b7355', textColor: '#4a3c2c',\n    }});\n    \n    const $ = (s) => document.querySelector(s);\n    const roll1D6 = () => Math.floor(Math.random() * 6) + 1;\n    const roll1D3 = () => {\n        const d6 = roll1D6();\n        if (d6 <= 2) return { d6, d3: 1 };\n        if (d6 <= 4) return { d6, d3: 2 };\n        return { d6, d3: 3 };\n    };\n    const rollDiceString = (diceString) => { const p=diceString.split('*');const d=p[0];const m=parseInt(p[1])||1;if(!d.includes('d'))return 0;const[n,s]=d.split('d').map(Number);let t=0;for(let i=0;i<n;i++){t+=Math.floor(Math.random()*s)+1;}return t*m; };\n    const formatAge = (ageValue) => { if (!ageValue && ageValue !== 0) return ageValue; const num = Number(ageValue); if (isNaN(num)) return ageValue; if (Math.abs(num) >= 1_000_000) return num.toExponential(2); return ageValue; };\n    const debounce = (func, delay) => { let timeout; return function(...args) { clearTimeout(timeout); timeout = setTimeout(() => func.apply(this, args), delay); }; };\n    const diceUnicode = ['\\u2680', '\\u2681', '\\u2682', '\\u2683', '\\u2684', '\\u2685'];\n\n    const DOM = {\n        nameInput: $('#char-name-input'), genderInput: $('#char-gender-input'), ageInput: $('#char-age-input'),\n        ocDetailsInput: $('#oc-details-input'), raceSelect: $('#char-race-select'), attributesContainer: $('#attributes-container'),\n        skillsContainer: $('#skills-and-desc-container'), radarChart: $('#radar-chart'), summarySheet: $('#character-summary'),\n        diceOverlay: $('#dice-overlay'), diceContainer: $('#dice-container'), diceResultText: $('#dice-result-text'),\n        backgroundDisplay: $('#background-display'), bgOrigin: $('#bg-origin'), bgPast: $('#bg-past'), bgEncounter: $('#bg-encounter'),\n        skipAnimationBtn: $('#skip-animation-btn'),\n        submitBtn: $('#submit-btn'),\n        validationMessage: $('#validation-message'),\n    };\n    \n    const dicePool = []; const MAX_DICE = 6;\n    let currentAnimation = null; let textAnimation = null; let isSkipping = false;\n    let currentValidationMessage = '';\n    \n    function validateAndToggleButton() {\n        let newMessage = '';\n        if (!character.age || String(character.age).trim() === '') {\n            newMessage = '请填写您的冒险者年龄。';\n        } else if (!character.gender || !character.gender.trim()) {\n            newMessage = '请设定冒险者的性别。';\n        } else if (!character.background.origin) {\n            newMessage = '请投骰决定您的冒险者经历。';\n        } else if (Object.values(character.attributes).every(val => val === 0)) {\n            newMessage = '请投骰决定您的能力值。';\n        }\n\n        if (newMessage === currentValidationMessage) return;\n        currentValidationMessage = newMessage;\n\n        if (newMessage) {\n            DOM.submitBtn.disabled = true;\n            DOM.validationMessage.textContent = newMessage;\n            gsap.fromTo(DOM.validationMessage, { autoAlpha: 0, scale: 0.8 }, { autoAlpha: 1, scale: 1, duration: 0.4, ease: 'elastic.out(1, 0.75)' });\n        } else {\n            DOM.submitBtn.disabled = false;\n            gsap.to(DOM.validationMessage, { autoAlpha: 0, duration: 0.3 });\n        }\n    }\n    function updateCharacterDataFromDOM() { character.name = DOM.nameInput.value; character.gender = DOM.genderInput.value; character.age = DOM.ageInput.value; character.oc_details = DOM.ocDetailsInput.value; character.race = DOM.raceSelect.value; }\n    function renderSkills() { const uniqueSkills = [...new Set(character.skills)]; DOM.skillsContainer.innerHTML = `<p><strong>天赋与习得技能:</strong></p><ul>${uniqueSkills.map(s => `<li>- ${s}</li>`).join('')}</ul>`; }\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key}`).value = value; }); }\n    function renderSummary() {\n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '?';\n        const originText = `出身:${character.background.origin ? character.background.origin.name : '?'}`;\n        const pastText = `来历:${character.background.past ? character.background.past.name : '?'}`;\n        const encounterText = `邂逅:${character.background.encounter || '?'}`;\n        let summary = `### 《哥布林杀手TRPG》冒险者登记卡\\n` + `**姓名:** ${finalName} | **种族:** ${character.race} | **性别:** ${character.gender || '?'} | **年龄:** ${formattedAge}\\n` + `**经历:** ${originText} / ${pastText} / ${encounterText}\\n` + `**初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n` + `**初始技能:** ${uniqueSkills.join(', ') || '无'}\\n`; if (character.oc_details) { summary += `**身体特征与补充:** ${character.oc_details}\\n`; } summary += `---\\n**能力值:**\\n`; summary += Object.entries(character.attributes).map(([key, value]) => `- ${key}: ${value}`).join('\\n'); summary += `\\n**持有资金:** ${character.money} 银币`;\n        DOM.summarySheet.value = summary.replace(/### /g, '').replace(/\\*\\*/g, '').replace(/---/g, '\\n────────────────────\\n').replace(/- /g, '  ');\n        DOM.summarySheet.setAttribute('data-raw', summary);\n    }\n    async function renderRadarChartIfNeeded() { const currentAttributesString = JSON.stringify(character.attributes); if (currentAttributesString === character._lastAttributesForChart) return; DOM.radarChart.classList.add('loading'); const radarSyntax = `radar-beta\\ntitle 能力值分布\\naxis a[\"力量 ${character.attributes['力量']}\"]\\naxis b[\"敏捷 ${character.attributes['敏捷']}\"]\\naxis c[\"感知 ${character.attributes['感知']}\"]\\naxis d[\"知识 ${character.attributes['知识']}\"]\\naxis e[\"魅力 ${character.attributes['魅力']}\"]\\naxis f[\"信仰 ${character.attributes['信仰力']}\"]\\naxis g[\"魔力 ${character.attributes['魔力']}\"]\\naxis h[\"潜力 ${character.attributes['潜力']}\"]\\ncurve current[\"能力\"]{${character.attributes['力量']},${character.attributes['敏捷']},${character.attributes['感知']},${character.attributes['知识']},${character.attributes['魅力']},${character.attributes['信仰力']},${character.attributes['魔力']},${character.attributes['潜力']}}\\nmax 10\\nmin 0`; DOM.radarChart.innerHTML = radarSyntax; DOM.radarChart.removeAttribute('data-processed'); try { await mermaid.run({ nodes: [DOM.radarChart] }); character._lastAttributesForChart = currentAttributesString; } catch(e) { console.error(\"Mermaid rendering error:\", e); } finally { DOM.radarChart.classList.remove('loading'); } }\n    async function updateUI(forceFullUpdate = false) { updateCharacterDataFromDOM(); if(forceFullUpdate) { character._lastAttributesForChart = ''; character.skills = []; character.classes = {}; character.money = 100; if(raceData[character.race].skills) character.skills.push(...raceData[character.race].skills); if (character.background.origin) { if (character.background.origin.skills) character.skills.push(...character.background.origin.skills); if (character.background.origin.class) character.classes[character.background.origin.class] = character.background.origin.level; if(character.background.origin.money) character.money += rollDiceString(character.background.origin.money); } if (character.background.past && character.background.past.skills) { character.skills.push(...character.background.past.skills); } } renderAttributes(); renderSkills(); renderSummary(); await renderRadarChartIfNeeded(); validateAndToggleButton(); }\n\n    const masterTl = gsap.timeline({ delay: 0.2 });\n    const title = $('#main-title');\n    title.innerHTML = title.textContent.split('').map(char => `<span class=\"title-char\">${char}</span>`).join('');\n    gsap.set(\".gsap-header-item, .gsap-content-item\", { autoAlpha: 0, y: 20 });\n    masterTl.to(\".title-char\", { autoAlpha: 1, y: 0, duration: 0.7, ease: \"power3.out\", stagger: 0.1 }).to(\"#wax-seal\", { autoAlpha: 1, scale: 1, duration: 0.6, ease: \"elastic.out(1, 0.7)\" }, \"-=0.5\");\n    document.querySelectorAll('.gs-creator-step').forEach((step, index) => { const stepTl = gsap.timeline(); stepTl.to(step.querySelector('.gsap-header-item'), { autoAlpha: 1, y: 0, duration: 0.6, ease: 'power2.out' }).to(step.querySelectorAll('.gsap-content-item'), { autoAlpha: 1, y: 0, duration: 0.5, ease: 'power2.out', stagger: 0.1 }, '-=0.4'); masterTl.add(stepTl, `-=${index === 0 ? 0.2 : 0.7}`); });\n    const pipPositions = { 1: [ { left: '50%', top: '50%' } ], 2: [ { left: '25%', top: '25%' }, { left: '75%', top: '75%' } ], 3: [ { left: '25%', top: '25%' }, { left: '50%', top: '50%' }, { left: '75%', top: '75%' } ], 4: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 5: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '50%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 6: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '50%' }, { left: '75%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ]};\n    function setupCube(cubeEl) { const size = 'calc(var(--dice-size) / 2)'; gsap.set(cubeEl.querySelector('.face-front'),  { transform: `rotateY(0deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-back'),   { transform: `rotateY(180deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-right'),  { transform: `rotateY(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-left'),   { transform: `rotateY(-90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-top'),   { transform: `rotateX(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-bottom'), { transform: `rotateX(-90deg) translateZ(${size})` }); const faces = cubeEl.querySelectorAll('.dice-face'); faces.forEach(face => { const faceNum = face.getAttribute('data-face'); const pips = face.querySelectorAll('.pip'); const positions = pipPositions[faceNum]; if (!pips.length || !positions) return; pips.forEach((pip, index) => { const pos = positions[index]; gsap.set(pip, { left: pos.left, top: pos.top, xPercent: -50, yPercent: -50 }); }); }); }\n    function getRotationForFace(faceValue) { switch (faceValue) { case 1: return { x: 0, y: 0 }; case 6: return { x: 0, y: 180 }; case 3: return { x: 0, y: -90 }; case 4: return { x: 0, y: 90 }; case 2: return { x: -90, y: 0 }; case 5: return { x: 90,  y: 0 }; default: return { x: 0, y: 0 }; } }\n    async function animateText(element, text) { if(isSkipping) {element.innerHTML = text.replace(/\\n/g, '<br>'); return;} return new Promise(resolve => { if (textAnimation && textAnimation.isActive()) textAnimation.kill(); element.innerHTML = ''; textAnimation = gsap.to(element, { duration: text.length * 0.05, text: { value: text.replace(/\\n/g, '<br>'), newClass: \"typed-cursor\" }, ease: \"none\", onComplete: () => { gsap.delayedCall(0.7, () => { element.querySelector('.typed-cursor')?.remove(); resolve(); }); } }); }); }\n    function initDicePool() { const diceTemplate = document.querySelector('[data-id_template=\"dice-cube\"]'); if (!diceTemplate) return; for (let i = 0; i < MAX_DICE; i++) { const dieIconElement = document.createElement('div'); dieIconElement.className = 'dice-icon'; const newCube = diceTemplate.cloneNode(true); dieIconElement.appendChild(newCube); DOM.diceContainer.appendChild(dieIconElement); setupCube(newCube); dicePool.push(dieIconElement); } }\n    async function animateRoll(numDice, preCalculatedRolls, textToShowDuringRoll = \"投掷中...\") { return new Promise(resolve => { if (currentAnimation && currentAnimation.isActive()) currentAnimation.kill(); dicePool.forEach(die => die.style.display = 'none'); const activeDice = dicePool.slice(0, numDice); animateText(DOM.diceResultText, textToShowDuringRoll); activeDice.forEach(die => { die.style.display = 'flex'; die.className = 'dice-icon'; }); const masterTl = gsap.timeline({ onComplete: () => { if(isSkipping) DOM.diceResultText.innerHTML = ''; resolve(preCalculatedRolls); }}); currentAnimation = masterTl; activeDice.forEach((dieElement, i) => { const dieCube = dieElement.querySelector('.dice-cube'); const visualRoll = preCalculatedRolls[i]; const targetRotation = getRotationForFace(visualRoll); const dieTimeline = gsap.timeline(); dieTimeline.to(dieCube, { rotationX: `+=${gsap.utils.random(720, 1080)}`, rotationY: `+=${gsap.utils.random(720, 1080)}`, duration: 1.8, ease: \"power2.in\" }).to(dieCube, { rotationX: targetRotation.x, rotationY: targetRotation.y, duration: 0.7, ease: \"power4.out\" }); masterTl.add(dieTimeline, 0); }); }); }\n    \n    const debouncedUpdate = debounce(updateUI, 400);\n    [DOM.nameInput, DOM.genderInput, DOM.ageInput, DOM.ocDetailsInput].forEach(el => el.addEventListener('input', debouncedUpdate));\n    \n    DOM.skipAnimationBtn.addEventListener('click', () => {\n        isSkipping = true;\n        if (currentAnimation && currentAnimation.isActive()) currentAnimation.progress(1);\n        if (textAnimation && textAnimation.isActive()) textAnimation.progress(1);\n    });\n\n    $('#roll-background-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const rolls = [roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6()];\n        await animateRoll(6, rolls, '投掷 经历... (2d6 x 3)');\n        \n        const sums = { origin: rolls[0] + rolls[1], past: rolls[2] + rolls[3], encounter: rolls[4] + rolls[5] };\n        \n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `出身: ${rolls[0]} + ${rolls[1]} = ${sums.origin}\\n(${backgroundData.origin[character.race][sums.origin].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `来历: ${rolls[2]} + ${rolls[3]} = ${sums.past}\\n(${backgroundData.past[sums.past].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(4, 6), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `邂逅: ${rolls[4]} + ${rolls[5]} = ${sums.encounter}\\n(${backgroundData.encounter[sums.encounter]})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        character.background.origin = backgroundData.origin[character.race][sums.origin];\n        character.background.past = backgroundData.past[sums.past];\n        character.background.encounter = backgroundData.encounter[sums.encounter];\n        DOM.bgOrigin.textContent = character.background.origin.name;\n        DOM.bgPast.textContent = character.background.past.name;\n        DOM.bgEncounter.textContent = character.background.encounter;\n        DOM.backgroundDisplay.style.display = 'block';\n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        updateUI(true);\n    });\n\n    $('#roll-attributes-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const attrRolls = raceData[character.race].attr_rolls;\n        const allCalculatedRolls = [];\n\n        // Prepare race-based attributes\n        for (const attr in attrRolls) {\n            const formula = attrRolls[attr];\n            const modifier = parseInt(formula.split('d3')[1] || '0');\n            const { d6, d3 } = roll1D3();\n            const finalValue = Math.max(0, d3 + modifier);\n            character.attributes[attr] = finalValue;\n            allCalculatedRolls.push({ attr, formula, d6, d3, modifier, finalValue });\n        }\n        \n        // Prepare \"Potential\" attribute\n        const potentialValue = Math.floor(Math.random() * 3) + 1;\n        const d6ForPotential = (potentialValue * 2) - 1; // Map 1,2,3 to d6 faces 1,3,5 for animation\n        character.attributes['潜力'] = potentialValue;\n        allCalculatedRolls.push({\n            attr: '潜力',\n            formula: '1-3', // Just a descriptor\n            d6: d6ForPotential,\n            finalValue: potentialValue\n        });\n        \n        // Animate all rolls sequentially\n        for (const roll of allCalculatedRolls) {\n            await animateRoll(1, [roll.d6], `投掷 ${roll.attr}...`);\n            if (isSkipping) break;\n\n            gsap.to(dicePool[0], { className: 'dice-icon highlight', duration: 0.3 });\n            \n            let resultText;\n            if (roll.attr === '潜力') {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.finalValue}`;\n            } else {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.d3} ${roll.modifier >= 0 ? '+' : ''} ${roll.modifier} = ${roll.finalValue}`;\n            }\n            await animateText(DOM.diceResultText, resultText);\n            \n            await updateUI();\n            \n            if (isSkipping) break;\n            \n            await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        await updateUI();\n    });\n\n    DOM.raceSelect.addEventListener('change', () => {\n        DOM.backgroundDisplay.style.display = 'none';\n        character.background = { origin: null, past: null, encounter: null };\n        Object.keys(character.attributes).forEach(k => character.attributes[k] = 0);\n        updateUI(true);\n    });\n\n    $('#submit-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        await updateUI(true);\n        \n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '未设定';\n        \n        const finalCharacterObject={ NAME:finalName, GENDER:character.gender||'未设定', AGE:formattedAge, RACE:character.race, ORIGIN: character.background.origin ? character.background.origin.name : '未知', PAST: character.background.past ? character.background.past.name : '未知', ENCOUNTER: character.background.encounter || '未知', SKILLS: uniqueSkills, OC_DETAILS:character.oc_details||'无', ...character.attributes, MONEY:character.money };\n        \n        const slashCommand=`/send <START>\\nAdmin:\\n这是一个TRPG开局，请为 User 生成一段详尽的背景故事。\\n\\n# 故事核心要求\\n请严格根据以下【角色完整设定】，撰写一段从角色童年到现在的成长故事。故事需要清晰地阐述是什么关键事件或心路历程，最终让他/她确立了要成为一名冒险者的志向。请在故事中自然地融入角色的种族、出身背景、技能和性格特点。\\n\\n# 角色完整设定\\n---\\n## 基础信息\\n- **姓名:** ${finalName}\\n- **性别:** ${character.gender||'未设定'}\\n- **年龄:** ${formattedAge}\\n- **种族:** ${character.race}\\n\\n## 经历\\n- **出身:** ${character.background.origin ? character.background.origin.name : '未知'}\\n- **来历:** ${character.background.past ? character.background.past.name : '未知'}\\n- **邂逅:** ${character.background.encounter || '未知'}\\n\\n## 背景与技能\\n- **初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n- **初始技能:** ${uniqueSkills.join(', ')||'无'}\\n\\n## 补充设定 (OC)\\n- **额外补充:** ${character.oc_details||'无'}\\n\\n## 能力值\\n- **力量:** ${character.attributes['力量']}\\n- **敏捷:** ${character.attributes['敏捷']}\\n- **感知:** ${character.attributes['感知']}\\n- **知识:** ${character.attributes['知识']}\\n- **魅力:** ${character.attributes['魅力']}\\n- **信仰力:** ${character.attributes['信仰力']}\\n- **魔力:** ${character.attributes['魔力']}\\n\\n## 初始资产\\n- **资金:** ${character.money} 银币\\n\\|\\n/trigger`; \n        \n        try {\n            if (typeof insertOrAssignVariables === 'function') {\n                await insertOrAssignVariables(finalCharacterObject);\n            } else {\n                console.log(\"SillyTavern Function 'insertOrAssignVariables' not found. Variables:\", finalCharacterObject);\n            }\n            if (typeof triggerSlash === 'function') {\n                await triggerSlash(slashCommand, 'Send');\n            } else { \n                console.log(\"SillyTavern Function 'triggerSlash' not found. Command will be copied to clipboard.\");\n                navigator.clipboard.writeText(slashCommand).then(() => {\n                    alert('角色指令已复制到剪贴板！');\n                });\n            }\n        } catch (error) {\n            console.error('与SillyTavern交互失败:', error);\n            alert('与SillyTavern交互失败，请查看浏览器控制台。');\n        }\n\n        e.target.innerHTML = \"契约成立！\";\n    });\n    \n    initDicePool();\n    Object.keys(raceData).forEach(key => DOM.raceSelect.add(new Option(key, key)));\n    Object.keys(character.attributes).forEach(key => {\n        const pointControl = document.createElement('div');\n        pointControl.className = 'point-control';\n        pointControl.innerHTML = `<span class=\"label\">${key}</span><input type=\"text\" id=\"attr-${key.replace(/\\s/g, '')}\" readonly value=\"0\">`; // ID santized just in case\n        DOM.attributesContainer.appendChild(pointControl);\n    });\n    // A small fix for renderAttributes to handle sanitized IDs\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key.replace(/\\s/g, '')}`).value = value; }); }\n    updateUI(true);\n});\n</script>\n\n</body>\n</html>\n```"
  },
  {
    "role": "user",
    "content": "```\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>哥布林杀手TRPG - 冒险者契约</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/gsap.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/TextPlugin.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.min.js\" defer></script>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Noto+Serif+SC:wght@400;700&family=Vollkorn:wght@400;700&family=Courier+Prime&display=swap\" rel=\"stylesheet\">\n\n    <style>\n        :root {\n            --leather-bg: #5a3a2a;\n            --dark-leather-bg: #3b2a1a;\n            --parchment-bg: #f5f5dc;\n            --parchment-bg-gradient: linear-gradient(165deg, #f7e9d7, #e6d5c3);\n            --text-color: #3d3d3d;\n            --heading-color: #4a3c2c;\n            --border-color: #7a5a4a;\n            --font-main: 'Vollkorn', 'Noto Serif SC', serif;\n            --font-display: 'Cinzel', 'Noto Serif SC', serif;\n            --font-code: 'Courier Prime', 'Courier New', monospace;\n            --dice-size: 5rem; \n        }\n\n        html { height: 100%; }\n        body {\n            background-color: #3a2e20;\n            font-family: var(--font-main);\n            color: var(--text-color);\n            margin: 0; padding: 20px;\n            box-sizing: border-box;\n            display: flex;\n            align-items: center; justify-content: center;\n            min-height: 100%;\n        }\n        *, *:before, *:after { box-sizing: inherit; }\n\n        .creator-wrapper {\n            width: 100%; max-width: 900px;\n            margin: 0;\n            background: var(--parchment-bg-gradient);\n            border: 12px solid #8b7355;\n            border-radius: 8px;\n            box-shadow: 0 0 40px rgba(139, 115, 85, 0.3), inset 0 0 30px rgba(255, 255, 255, 0.4);\n            position: relative;\n            overflow: hidden;\n            padding: 25px;\n            display: flex; flex-direction: column;\n            max-height: 95vh;\n        }\n\n        .border-flow, .inner-border { position: absolute; pointer-events: none; }\n        .border-flow { top: 0; left: 0; right: 0; bottom: 0; background: linear-gradient(90deg, rgba(139,115,85,0.1) 1px, transparent 1px), linear-gradient(0deg, rgba(139,115,85,0.1) 1px, transparent 1px); background-size: 20px 20px; animation: borderFlow 15s linear infinite; }\n        .inner-border { top: 5px; left: 5px; right: 5px; bottom: 5px; border: 3px solid rgba(139,115,85,0.3); border-radius: 5px; }\n        @keyframes borderFlow { from { background-position: 0 0; } to { background-position: 20px 20px; } }\n\n        .creator-header {\n            text-align: center;\n            padding: 10px;\n            margin-bottom: 25px;\n            border-bottom: 2px solid rgba(139, 115, 85, 0.3);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 15px;\n        }\n        .creator-header h1 {\n            font-family: var(--font-display);\n            font-size: clamp(24px, 5vw, 32px);\n            margin: 0;\n            font-weight: 700;\n            letter-spacing: 3px;\n            color: var(--heading-color);\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.1);\n        }\n        \n        .title-char {\n            display: inline-block;\n            opacity: 0;\n            transform: translateY(30px);\n        }\n\n        .wax-seal {\n            width: 45px;\n            height: 45px;\n            display: inline-block;\n            background-color: #c0392b;\n            border-radius: 50%;\n            position: relative;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.4), inset 0 -2px 3px rgba(0,0,0,0.3);\n            opacity: 0;\n            transform: scale(0.5);\n            font-family: 'Cinzel', serif;\n            color: #e7a49c;\n            text-align: center;\n            font-size: 24px;\n            line-height: 45px;\n            font-weight: 700;\n        }\n        .wax-seal::before {\n            content: 'GS';\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.3);\n        }\n\n        .creator-scroll-content { overflow-y: auto; padding: 10px 20px 10px 10px; }\n        .creator-scroll-content::-webkit-scrollbar { width: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-track { background: rgba(139, 115, 85, 0.1); border-radius: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-thumb { background-color: #a89072; border-radius: 10px; border: 2px solid #f7e9d7; }\n        \n        .gs-creator-step { margin-bottom: 40px; overflow: hidden; }\n        .gs-creator-step h3 { font-family: var(--font-display); font-size: 1.5em; font-weight: 700; border-bottom: 1.5px solid var(--border-color); padding-bottom: 8px; margin-bottom: 20px; color: var(--heading-color); text-align: left; }\n        \n        .layout-grid { display: grid; grid-template-columns: 1fr; gap: 25px; align-items: flex-start; }\n        @media (min-width: 768px) {\n            .layout-grid { grid-template-columns: 1fr 280px; }\n        }\n\n        .form-container { text-align: left; }\n        .gs-form-group { margin-bottom: 16px; }\n        .gs-form-group label { display: block; margin-bottom: 6px; font-weight: bold; color: var(--heading-color); }\n        .form-input, .form-select, .form-textarea { width: 100%; padding: 10px; background-color: rgba(255, 255, 255, 0.5); border: 1px solid #a58e72; border-radius: 4px; color: #3d3d3d; font-family: var(--font-main); font-size: 1em; transition: all 0.2s ease-in-out; box-shadow: inset 1px 1px 2px rgba(0,0,0,0.1); }\n        .form-input:focus, .form-select:focus, .form-textarea:focus { outline: none; border-color: #8b7355; background-color: #fff; box-shadow: 0 0 5px rgba(139, 115, 85, 0.5); }\n        .form-textarea { resize: vertical; min-height: 100px; }\n\n        .grid-cols-2 {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 16px;\n        }\n        @media (min-width: 480px) {\n            .grid-cols-2 {\n                grid-template-columns: repeat(2, 1fr);\n            }\n        }\n\n        #attributes-container .point-control { display: flex; align-items: center; justify-content: space-between; margin-bottom: 8px; padding: 6px 8px; background: rgba(0,0,0,0.03); border-left: 3px solid rgba(139,115,85,0.2); border-radius: 4px; }\n        #attributes-container .label { font-weight: bold; color: var(--heading-color); }\n        #attributes-container input[readonly] { width: 40px; text-align: center; font-weight: bold; font-size: 1.2em; font-family: var(--font-display); color: #a02c2c; border: none; background-color: transparent; box-shadow: none; padding: 0; }\n        \n        .attributes-grid {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 0 16px;\n        }\n        @media (min-width: 480px) {\n            .attributes-grid {\n                grid-template-columns: 1fr 1fr;\n            }\n        }\n        \n        .skills-display p { background-color: rgba(0,0,0,0.05); border-left: 3px solid var(--border-color); padding: 10px 15px; margin-top: 10px; font-size: 0.95em; border-radius: 0 4px 4px 0; }\n        .skills-display strong { color: #8b5b4b; font-family: var(--font-display); }\n        .skills-display ul { list-style: none; padding-left: 0; margin-top: 8px; font-size: 0.9em; }\n        .skills-display li { margin-bottom: 4px; }\n\n        #character-summary { background-color: #e9e4d9; font-family: var(--font-code); line-height: 1.6; height: 250px; color: #2c2a2a; }\n        \n        .gs-button { width: 100%; background-color: #8b7355; color: var(--parchment-bg); border: 2px solid var(--dark-leather-bg); border-radius: 5px; padding: 12px 20px; font-family: var(--font-display); font-size: 1.2em; font-weight: 700; cursor: pointer; margin-top: 10px; transition: all 0.3s ease; box-shadow: 0 3px 5px rgba(0,0,0,0.3); }\n        .gs-button:hover { background-color: #a0886c; transform: translateY(-2px); box-shadow: 0 5px 8px rgba(0,0,0,0.3); }\n        .gs-button:disabled { background-color: #9e9e9e; border-color: #757575; cursor: not-allowed; transform: none; box-shadow: none; opacity: 0.6; }\n        .action-button { background-color: #6d5b4b; font-size: 1em; padding: 10px 15px; margin-top: 0; margin-bottom: 10px; width: auto; }\n        \n        .background-display { margin-top: 15px; padding: 15px; border: 1px dashed var(--border-color); border-radius: 5px; background: rgba(0,0,0,0.02); }\n        .background-display p { margin: 0 0 8px; }\n        .background-display span { font-weight: bold; color: var(--heading-color); }\n        \n        #radar-chart-container { \n            max-width: 100%;\n        }\n        @media (min-width: 768px) {\n            #radar-chart-container {\n                position: sticky;\n                top: 0;\n                padding-top: 45px;\n            }\n        }\n\n        pre.mermaid { \n            font-family: var(--font-main); \n            background: rgba(0,0,0,0.02); \n            border: 1px solid rgba(139,115,85,0.1); \n            padding: 10px; \n            border-radius: 5px; \n            overflow: auto;\n            transition: opacity 0.3s ease-in-out;\n        }\n        pre.mermaid.loading { opacity: 0.5; pointer-events: none; }\n\n        pre.mermaid > svg {\n            max-width: 100%;\n            height: auto;\n        }\n\n        #dice-overlay {\n            position: fixed; top: 0; left: 0; width: 100%; height: 100%;\n            background: rgba(0,0,0,0.8); backdrop-filter: blur(5px);\n            display: none; align-items: center; justify-content: center; flex-direction: column;\n            z-index: 100;\n            color: #fff; text-shadow: 0 0 10px #000;\n        }\n\n        .dice-container {\n            display: flex; flex-wrap: wrap; justify-content: center;\n            gap: 2rem; margin-bottom: 2rem;\n            max-width: 600px;\n        }\n        \n        .dice-icon {\n            width: var(--dice-size); height: var(--dice-size);\n            perspective: 800px;\n            transform-style: preserve-3d;\n            display: none;\n        }\n        .dice-icon.highlight {\n            transform: scale(1.15);\n            filter: drop-shadow(0 0 15px #FFEB3B);\n            transition: transform 0.3s ease, filter 0.3s ease;\n        }\n\n        .dice-cube {\n            width: 100%; height: 100%;\n            position: relative;\n            transform-style: preserve-3d;\n            transform: translateZ(calc(var(--dice-size) / -2));\n        }\n        \n        .dice-face {\n            position: absolute;\n            width: var(--dice-size); height: var(--dice-size);\n            background-color: rgba(255, 255, 255, 0.98);\n            border: 1.5px solid #857e72;\n            border-radius: 12%;\n        }\n\n        .pips-container {\n            width: 100%; height: 100%;\n            position: relative; \n        }\n        .pip {\n            width: 22%; height: 22%; \n            background-color: #3d352e;\n            border-radius: 50%;\n            box-shadow: inset 0 1px 3px rgba(0,0,0,0.5);\n            position: absolute; \n        }\n        \n        #dice-result-text { \n            font-family: var(--font-display); \n            font-size: 2.2em;\n            color: #FFEB3B; \n            text-shadow: 0 0 12px #FFEB3B; \n            min-height: 2em;\n            line-height: 1.2;\n            text-align: center; \n        }\n        \n        #skip-animation-btn {\n            position: absolute;\n            bottom: 30px;\n            font-size: 1em;\n            padding: 8px 20px;\n            width: auto;\n            background-color: rgba(0,0,0,0.3);\n            border-color: rgba(255,255,255,0.5);\n            color: rgba(255,255,255,0.8);\n        }\n        #skip-animation-btn:hover {\n            background-color: rgba(0,0,0,0.5);\n            color: #fff;\n        }\n\n        .typed-cursor {\n            opacity: 1;\n            animation: typed-blink 0.7s infinite;\n        }\n        @keyframes typed-blink{\n            0% { opacity: 1; }\n            50% { opacity: 0; }\n            100% { opacity: 1; }\n        }\n        \n        .validation-message {\n            text-align: center;\n            color: #b71c1c;\n            font-size: 0.9em;\n            font-weight: bold;\n            margin-top: -5px;\n            margin-bottom: 10px;\n            height: 1.2em;\n            opacity: 0;\n            will-change: transform, opacity;\n        }\n\n        #credits-screen {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            pointer-events: none;\n            opacity: 0;\n        }\n\n        #credits-screen p {\n            font-family: var(--font-display);\n            font-size: 2em;\n            color: #f5f5dc;\n            text-shadow: 0 0 8px rgba(245, 245, 220, 0.7);\n        }\n    </style>\n</head>\n<body>\n\n<div class=\"creator-wrapper\">\n    <div class=\"border-flow\"></div>\n    <div class=\"inner-border\"></div>\n    <header class=\"creator-header\">\n        <h1 id=\"main-title\">冒险者契约登记</h1>\n        <div id=\"wax-seal\" class=\"wax-seal\"></div>\n    </header>\n\n    <div class=\"creator-scroll-content\">\n        <div class=\"gs-creator-container\">\n            <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第一步：身份确认</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-name-input\">姓名</label><input id=\"char-name-input\" type=\"text\" placeholder=\"可留空，默认为 {{user}}\" class=\"form-input\"></div>\n                    <div class=\"grid-cols-2 gsap-content-item\">\n                        <div class=\"gs-form-group\"><label for=\"char-gender-input\">性别</label><input id=\"char-gender-input\" type=\"text\" placeholder=\"例如: 男性/女性/双性/无性/……\" class=\"form-input\"></div>\n                        <div class=\"gs-form-group\"><label for=\"char-age-input\">年龄</label><input id=\"char-age-input\" type=\"number\" placeholder=\"可参照种族说明\" class=\"form-input\"></div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-race-select\">种族</label><select id=\"char-race-select\" class=\"form-select\"></select></div>\n                    <div class=\"gs-form-group gsap-content-item\">\n                        <label>经历 (出身/来历/邂逅)</label>\n                        <button id=\"roll-background-btn\" class=\"gs-button action-button\">🎲 投骰决定经历</button>\n                        <div id=\"background-display\" class=\"background-display\" style=\"display: none;\">\n                            <p>出身: <span id=\"bg-origin\"></span></p>\n                            <p>来历: <span id=\"bg-past\"></span></p>\n                            <p>邂逅: <span id=\"bg-encounter\"></span></p>\n                        </div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"oc-details-input\">身体特征与补充</label><textarea id=\"oc-details-input\" placeholder=\"发色、瞳色、体型、性格、背景故事构思...\" class=\"form-textarea\"></textarea></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第二步：能力值与技能</h3>\n                <div class=\"layout-grid\">\n                    <div class=\"form-container gsap-content-item\">\n                        <button id=\"roll-attributes-btn\" class=\"gs-button action-button\">🎲 投骰决定能力值</button>\n                        <div id=\"attributes-container\" class=\"attributes-grid\"></div>\n                        <div id=\"skills-and-desc-container\" class=\"skills-display\"></div>\n                    </div>\n                    <div id=\"radar-chart-container\" class=\"gsap-content-item\"><pre class=\"mermaid\" id=\"radar-chart\"></pre></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第三步：完成登记</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"character-summary\">角色卡预览</label><textarea id=\"character-summary\" rows=\"12\" readonly class=\"form-textarea\"></textarea></div>\n                    <button id=\"submit-btn\" class=\"gs-button gsap-content-item\" disabled>确认登记，开始冒险</button>\n                    <div id=\"validation-message\" class=\"validation-message\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div id=\"credits-screen\">\n    <p>作者 𝙀𝙡𝙖𝙞𝙣𝙖𝙙𝙚𝙨</p>\n</div>\n\n<div id=\"dice-overlay\">\n    <div class=\"dice-container\" id=\"dice-container\"></div>\n    <div id=\"dice-result-text\"></div>\n    <button id=\"skip-animation-btn\" class=\"gs-button\">跳过动画</button>\n</div>\n\n<div id=\"dice-templates\" style=\"display:none;\">\n    <div class=\"dice-cube\" data-id_template=\"dice-cube\">\n        <div class=\"dice-face face-front\" data-face=\"1\"><div class=\"pips-container\"><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-back\" data-face=\"6\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-right\" data-face=\"3\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-left\" data-face=\"4\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-top\" data-face=\"2\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-bottom\" data-face=\"5\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n    </div>\n</div>\n\n<script>\n// --- MODIFIED DATA ---\nconst raceData = {\n    '凡人': { attr_rolls: { '力量': '1d3+1', '敏捷': '1d3', '感知': '1d3', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3+2', '魔力': '1d3' }, skills: ['过载行动(初级)', '武器:投掷武器(初级)', '长距离移动(初级)']},\n    '矿人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3', '感知': '1d3+2', '知识': '1d3-1', '魅力': '1d3+1', '信仰力': '1d3+1', '魔力': '1d3-1' }, skills: ['治愈适性(初级)', '夜视(初级)', '锻造(初级)']},\n    '森人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+1', '感知': '1d3+1', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3-1', '魔力': '1d3+1' }, skills: ['武器:弩弓(初级)', '夜视(初级)', '精灵宠儿(初级)']},\n    '蜥蜴人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3+1', '感知': '1d3', '知识': '1d3', '魅力': '1d3+1', '信仰力': '1d3', '魔力': '1d3' }, skills: ['免疫强化(初级)', '夜视(初级)', '龙族血统(初级)']},\n    '圃人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+2', '感知': '1d3+1', '知识': '1d3', '魅力': '1d3-1', '信仰力': '1d3', '魔力': '1d3+2' }, skills: ['隐匿(初级)', '先发制人(初级)', '烹饪(初级)']}\n};\nconst backgroundData = {\n    origin: { \n        '凡人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '学者', class: '魔术师', level: 1, skills: ['文献调查(初级)'] }, 6: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 7: { name: '农民', skills: ['生产业:农业(初级)', '强健(初级)'] }, 8: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '骑士', class: '战士', level: 1, skills: ['骑乘(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n        '矿人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 6: { name: '酒馆老板', class: '战士', level: 1, skills: ['观察(初级)'] }, 7: { name: '铁匠', skills: ['工匠:锻造(初级)', '手工(初级)'] }, 8: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '碎盾者', class: '战士', level: 1, skills: ['强击攻击·斩(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n    },\n    past: { 2: { name: '奴隶', skills: ['劳动(初级)'] }, 3: { name: '牢狱', skills: ['犯罪知识(初级)'] }, 4: { name: '战场', skills: ['沉着冷静(初级)'] }, 5: { name: '神殿', skills: ['神学(初级)'] }, 6: { name: '孤儿', skills: ['忍耐(初级)'] }, 7: { name: '平顺', skills: ['幸运(初级)'] }, 8: { name: '贫困', skills: ['生存术(初级)'] }, 9: { name: '学校', skills: ['博识(初级)'] }, 10: { name: '深闺', skills: ['无偏见(初级)'] }, 11: { name: '奢华', skills: ['鉴定(初级)'] }, 12: { name: '宫廷', skills: ['礼仪(初级)'] }},\n    encounter: { 2: '宿敌', 3: '上司', 4: '后辈', 5: '交易对象', 6: '下属', 7: '家人', 8: '挚友', 9: '前辈', 10: '未婚夫/妻', 11: '劲敌', 12: '师父' }\n};\nbackgroundData.origin['森人'] = backgroundData.origin['凡人']; backgroundData.origin['蜥蜴人'] = backgroundData.origin['凡人']; backgroundData.origin['圃人'] = backgroundData.origin['凡人'];\nconst character = {\n    name: '', gender: '', age: '', oc_details: '', race: '凡人',\n    background: { origin: null, past: null, encounter: null },\n    attributes: { '力量': 0, '敏捷': 0, '感知': 0, '知识': 0, '魅力': 0, '信仰力': 0, '魔力': 0, '潜力': 0 },\n    skills: [], classes: {}, money: 0, _lastAttributesForChart: '',\n};\n// --- END MODIFIED DATA ---\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    gsap.registerPlugin(TextPlugin);\n    mermaid.initialize({ startOnLoad: true, theme: 'base', themeVariables: {\n        '--mermaid-font-family': \"'Vollkorn', 'Noto Serif SC', serif\",\n        primaryColor: '#f7e9d7', primaryTextColor: '#3d3d3d', lineColor: '#8b7355', textColor: '#4a3c2c',\n    }});\n    \n    const $ = (s) => document.querySelector(s);\n    const roll1D6 = () => Math.floor(Math.random() * 6) + 1;\n    const roll1D3 = () => {\n        const d6 = roll1D6();\n        if (d6 <= 2) return { d6, d3: 1 };\n        if (d6 <= 4) return { d6, d3: 2 };\n        return { d6, d3: 3 };\n    };\n    const rollDiceString = (diceString) => { const p=diceString.split('*');const d=p[0];const m=parseInt(p[1])||1;if(!d.includes('d'))return 0;const[n,s]=d.split('d').map(Number);let t=0;for(let i=0;i<n;i++){t+=Math.floor(Math.random()*s)+1;}return t*m; };\n    const formatAge = (ageValue) => { if (!ageValue && ageValue !== 0) return ageValue; const num = Number(ageValue); if (isNaN(num)) return ageValue; if (Math.abs(num) >= 1_000_000) return num.toExponential(2); return ageValue; };\n    const debounce = (func, delay) => { let timeout; return function(...args) { clearTimeout(timeout); timeout = setTimeout(() => func.apply(this, args), delay); }; };\n    const diceUnicode = ['\\u2680', '\\u2681', '\\u2682', '\\u2683', '\\u2684', '\\u2685'];\n\n    const DOM = {\n        nameInput: $('#char-name-input'), genderInput: $('#char-gender-input'), ageInput: $('#char-age-input'),\n        ocDetailsInput: $('#oc-details-input'), raceSelect: $('#char-race-select'), attributesContainer: $('#attributes-container'),\n        skillsContainer: $('#skills-and-desc-container'), radarChart: $('#radar-chart'), summarySheet: $('#character-summary'),\n        diceOverlay: $('#dice-overlay'), diceContainer: $('#dice-container'), diceResultText: $('#dice-result-text'),\n        backgroundDisplay: $('#background-display'), bgOrigin: $('#bg-origin'), bgPast: $('#bg-past'), bgEncounter: $('#bg-encounter'),\n        skipAnimationBtn: $('#skip-animation-btn'),\n        submitBtn: $('#submit-btn'),\n        validationMessage: $('#validation-message'),\n    };\n    \n    const dicePool = []; const MAX_DICE = 6;\n    let currentAnimation = null; let textAnimation = null; let isSkipping = false;\n    let currentValidationMessage = '';\n    \n    function validateAndToggleButton() {\n        let newMessage = '';\n        if (!character.age || String(character.age).trim() === '') {\n            newMessage = '请填写您的冒险者年龄。';\n        } else if (!character.gender || !character.gender.trim()) {\n            newMessage = '请设定冒险者的性别。';\n        } else if (!character.background.origin) {\n            newMessage = '请投骰决定您的冒险者经历。';\n        } else if (Object.values(character.attributes).every(val => val === 0)) {\n            newMessage = '请投骰决定您的能力值。';\n        }\n\n        if (newMessage === currentValidationMessage) return;\n        currentValidationMessage = newMessage;\n\n        if (newMessage) {\n            DOM.submitBtn.disabled = true;\n            DOM.validationMessage.textContent = newMessage;\n            gsap.fromTo(DOM.validationMessage, { autoAlpha: 0, scale: 0.8 }, { autoAlpha: 1, scale: 1, duration: 0.4, ease: 'elastic.out(1, 0.75)' });\n        } else {\n            DOM.submitBtn.disabled = false;\n            gsap.to(DOM.validationMessage, { autoAlpha: 0, duration: 0.3 });\n        }\n    }\n    function updateCharacterDataFromDOM() { character.name = DOM.nameInput.value; character.gender = DOM.genderInput.value; character.age = DOM.ageInput.value; character.oc_details = DOM.ocDetailsInput.value; character.race = DOM.raceSelect.value; }\n    function renderSkills() { const uniqueSkills = [...new Set(character.skills)]; DOM.skillsContainer.innerHTML = `<p><strong>天赋与习得技能:</strong></p><ul>${uniqueSkills.map(s => `<li>- ${s}</li>`).join('')}</ul>`; }\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key}`).value = value; }); }\n    function renderSummary() {\n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '?';\n        const originText = `出身:${character.background.origin ? character.background.origin.name : '?'}`;\n        const pastText = `来历:${character.background.past ? character.background.past.name : '?'}`;\n        const encounterText = `邂逅:${character.background.encounter || '?'}`;\n        let summary = `### 《哥布林杀手TRPG》冒险者登记卡\\n` + `**姓名:** ${finalName} | **种族:** ${character.race} | **性别:** ${character.gender || '?'} | **年龄:** ${formattedAge}\\n` + `**经历:** ${originText} / ${pastText} / ${encounterText}\\n` + `**初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n` + `**初始技能:** ${uniqueSkills.join(', ') || '无'}\\n`; if (character.oc_details) { summary += `**身体特征与补充:** ${character.oc_details}\\n`; } summary += `---\\n**能力值:**\\n`; summary += Object.entries(character.attributes).map(([key, value]) => `- ${key}: ${value}`).join('\\n'); summary += `\\n**持有资金:** ${character.money} 银币`;\n        DOM.summarySheet.value = summary.replace(/### /g, '').replace(/\\*\\*/g, '').replace(/---/g, '\\n────────────────────\\n').replace(/- /g, '  ');\n        DOM.summarySheet.setAttribute('data-raw', summary);\n    }\n    async function renderRadarChartIfNeeded() { const currentAttributesString = JSON.stringify(character.attributes); if (currentAttributesString === character._lastAttributesForChart) return; DOM.radarChart.classList.add('loading'); const radarSyntax = `radar-beta\\ntitle 能力值分布\\naxis a[\"力量 ${character.attributes['力量']}\"]\\naxis b[\"敏捷 ${character.attributes['敏捷']}\"]\\naxis c[\"感知 ${character.attributes['感知']}\"]\\naxis d[\"知识 ${character.attributes['知识']}\"]\\naxis e[\"魅力 ${character.attributes['魅力']}\"]\\naxis f[\"信仰 ${character.attributes['信仰力']}\"]\\naxis g[\"魔力 ${character.attributes['魔力']}\"]\\naxis h[\"潜力 ${character.attributes['潜力']}\"]\\ncurve current[\"能力\"]{${character.attributes['力量']},${character.attributes['敏捷']},${character.attributes['感知']},${character.attributes['知识']},${character.attributes['魅力']},${character.attributes['信仰力']},${character.attributes['魔力']},${character.attributes['潜力']}}\\nmax 10\\nmin 0`; DOM.radarChart.innerHTML = radarSyntax; DOM.radarChart.removeAttribute('data-processed'); try { await mermaid.run({ nodes: [DOM.radarChart] }); character._lastAttributesForChart = currentAttributesString; } catch(e) { console.error(\"Mermaid rendering error:\", e); } finally { DOM.radarChart.classList.remove('loading'); } }\n    async function updateUI(forceFullUpdate = false) { updateCharacterDataFromDOM(); if(forceFullUpdate) { character._lastAttributesForChart = ''; character.skills = []; character.classes = {}; character.money = 100; if(raceData[character.race].skills) character.skills.push(...raceData[character.race].skills); if (character.background.origin) { if (character.background.origin.skills) character.skills.push(...character.background.origin.skills); if (character.background.origin.class) character.classes[character.background.origin.class] = character.background.origin.level; if(character.background.origin.money) character.money += rollDiceString(character.background.origin.money); } if (character.background.past && character.background.past.skills) { character.skills.push(...character.background.past.skills); } } renderAttributes(); renderSkills(); renderSummary(); await renderRadarChartIfNeeded(); validateAndToggleButton(); }\n\n    const masterTl = gsap.timeline({ delay: 0.2 });\n    const title = $('#main-title');\n    title.innerHTML = title.textContent.split('').map(char => `<span class=\"title-char\">${char}</span>`).join('');\n    gsap.set(\".gsap-header-item, .gsap-content-item\", { autoAlpha: 0, y: 20 });\n    masterTl.to(\".title-char\", { autoAlpha: 1, y: 0, duration: 0.7, ease: \"power3.out\", stagger: 0.1 }).to(\"#wax-seal\", { autoAlpha: 1, scale: 1, duration: 0.6, ease: \"elastic.out(1, 0.7)\" }, \"-=0.5\");\n    document.querySelectorAll('.gs-creator-step').forEach((step, index) => { const stepTl = gsap.timeline(); stepTl.to(step.querySelector('.gsap-header-item'), { autoAlpha: 1, y: 0, duration: 0.6, ease: 'power2.out' }).to(step.querySelectorAll('.gsap-content-item'), { autoAlpha: 1, y: 0, duration: 0.5, ease: 'power2.out', stagger: 0.1 }, '-=0.4'); masterTl.add(stepTl, `-=${index === 0 ? 0.2 : 0.7}`); });\n    const pipPositions = { 1: [ { left: '50%', top: '50%' } ], 2: [ { left: '25%', top: '25%' }, { left: '75%', top: '75%' } ], 3: [ { left: '25%', top: '25%' }, { left: '50%', top: '50%' }, { left: '75%', top: '75%' } ], 4: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 5: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '50%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 6: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '50%' }, { left: '75%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ]};\n    function setupCube(cubeEl) { const size = 'calc(var(--dice-size) / 2)'; gsap.set(cubeEl.querySelector('.face-front'),  { transform: `rotateY(0deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-back'),   { transform: `rotateY(180deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-right'),  { transform: `rotateY(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-left'),   { transform: `rotateY(-90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-top'),   { transform: `rotateX(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-bottom'), { transform: `rotateX(-90deg) translateZ(${size})` }); const faces = cubeEl.querySelectorAll('.dice-face'); faces.forEach(face => { const faceNum = face.getAttribute('data-face'); const pips = face.querySelectorAll('.pip'); const positions = pipPositions[faceNum]; if (!pips.length || !positions) return; pips.forEach((pip, index) => { const pos = positions[index]; gsap.set(pip, { left: pos.left, top: pos.top, xPercent: -50, yPercent: -50 }); }); }); }\n    function getRotationForFace(faceValue) { switch (faceValue) { case 1: return { x: 0, y: 0 }; case 6: return { x: 0, y: 180 }; case 3: return { x: 0, y: -90 }; case 4: return { x: 0, y: 90 }; case 2: return { x: -90, y: 0 }; case 5: return { x: 90,  y: 0 }; default: return { x: 0, y: 0 }; } }\n    async function animateText(element, text) { if(isSkipping) {element.innerHTML = text.replace(/\\n/g, '<br>'); return;} return new Promise(resolve => { if (textAnimation && textAnimation.isActive()) textAnimation.kill(); element.innerHTML = ''; textAnimation = gsap.to(element, { duration: text.length * 0.05, text: { value: text.replace(/\\n/g, '<br>'), newClass: \"typed-cursor\" }, ease: \"none\", onComplete: () => { gsap.delayedCall(0.7, () => { element.querySelector('.typed-cursor')?.remove(); resolve(); }); } }); }); }\n    function initDicePool() { const diceTemplate = document.querySelector('[data-id_template=\"dice-cube\"]'); if (!diceTemplate) return; for (let i = 0; i < MAX_DICE; i++) { const dieIconElement = document.createElement('div'); dieIconElement.className = 'dice-icon'; const newCube = diceTemplate.cloneNode(true); dieIconElement.appendChild(newCube); DOM.diceContainer.appendChild(dieIconElement); setupCube(newCube); dicePool.push(dieIconElement); } }\n    async function animateRoll(numDice, preCalculatedRolls, textToShowDuringRoll = \"投掷中...\") { return new Promise(resolve => { if (currentAnimation && currentAnimation.isActive()) currentAnimation.kill(); dicePool.forEach(die => die.style.display = 'none'); const activeDice = dicePool.slice(0, numDice); animateText(DOM.diceResultText, textToShowDuringRoll); activeDice.forEach(die => { die.style.display = 'flex'; die.className = 'dice-icon'; }); const masterTl = gsap.timeline({ onComplete: () => { if(isSkipping) DOM.diceResultText.innerHTML = ''; resolve(preCalculatedRolls); }}); currentAnimation = masterTl; activeDice.forEach((dieElement, i) => { const dieCube = dieElement.querySelector('.dice-cube'); const visualRoll = preCalculatedRolls[i]; const targetRotation = getRotationForFace(visualRoll); const dieTimeline = gsap.timeline(); dieTimeline.to(dieCube, { rotationX: `+=${gsap.utils.random(720, 1080)}`, rotationY: `+=${gsap.utils.random(720, 1080)}`, duration: 1.8, ease: \"power2.in\" }).to(dieCube, { rotationX: targetRotation.x, rotationY: targetRotation.y, duration: 0.7, ease: \"power4.out\" }); masterTl.add(dieTimeline, 0); }); }); }\n    \n    const debouncedUpdate = debounce(updateUI, 400);\n    [DOM.nameInput, DOM.genderInput, DOM.ageInput, DOM.ocDetailsInput].forEach(el => el.addEventListener('input', debouncedUpdate));\n    \n    DOM.skipAnimationBtn.addEventListener('click', () => {\n        isSkipping = true;\n        if (currentAnimation && currentAnimation.isActive()) currentAnimation.progress(1);\n        if (textAnimation && textAnimation.isActive()) textAnimation.progress(1);\n    });\n\n    $('#roll-background-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const rolls = [roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6()];\n        await animateRoll(6, rolls, '投掷 经历... (2d6 x 3)');\n        \n        const sums = { origin: rolls[0] + rolls[1], past: rolls[2] + rolls[3], encounter: rolls[4] + rolls[5] };\n        \n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `出身: ${rolls[0]} + ${rolls[1]} = ${sums.origin}\\n(${backgroundData.origin[character.race][sums.origin].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `来历: ${rolls[2]} + ${rolls[3]} = ${sums.past}\\n(${backgroundData.past[sums.past].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(4, 6), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `邂逅: ${rolls[4]} + ${rolls[5]} = ${sums.encounter}\\n(${backgroundData.encounter[sums.encounter]})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        character.background.origin = backgroundData.origin[character.race][sums.origin];\n        character.background.past = backgroundData.past[sums.past];\n        character.background.encounter = backgroundData.encounter[sums.encounter];\n        DOM.bgOrigin.textContent = character.background.origin.name;\n        DOM.bgPast.textContent = character.background.past.name;\n        DOM.bgEncounter.textContent = character.background.encounter;\n        DOM.backgroundDisplay.style.display = 'block';\n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        updateUI(true);\n    });\n\n    $('#roll-attributes-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const attrRolls = raceData[character.race].attr_rolls;\n        const allCalculatedRolls = [];\n\n        // Prepare race-based attributes\n        for (const attr in attrRolls) {\n            const formula = attrRolls[attr];\n            const modifier = parseInt(formula.split('d3')[1] || '0');\n            const { d6, d3 } = roll1D3();\n            const finalValue = Math.max(0, d3 + modifier);\n            character.attributes[attr] = finalValue;\n            allCalculatedRolls.push({ attr, formula, d6, d3, modifier, finalValue });\n        }\n        \n        // Prepare \"Potential\" attribute\n        const potentialValue = Math.floor(Math.random() * 3) + 1;\n        const d6ForPotential = (potentialValue * 2) - 1; // Map 1,2,3 to d6 faces 1,3,5 for animation\n        character.attributes['潜力'] = potentialValue;\n        allCalculatedRolls.push({\n            attr: '潜力',\n            formula: '1-3', // Just a descriptor\n            d6: d6ForPotential,\n            finalValue: potentialValue\n        });\n        \n        // Animate all rolls sequentially\n        for (const roll of allCalculatedRolls) {\n            await animateRoll(1, [roll.d6], `投掷 ${roll.attr}...`);\n            if (isSkipping) break;\n\n            gsap.to(dicePool[0], { className: 'dice-icon highlight', duration: 0.3 });\n            \n            let resultText;\n            if (roll.attr === '潜力') {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.finalValue}`;\n            } else {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.d3} ${roll.modifier >= 0 ? '+' : ''} ${roll.modifier} = ${roll.finalValue}`;\n            }\n            await animateText(DOM.diceResultText, resultText);\n            \n            await updateUI();\n            \n            if (isSkipping) break;\n            \n            await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        await updateUI();\n    });\n\n    DOM.raceSelect.addEventListener('change', () => {\n        DOM.backgroundDisplay.style.display = 'none';\n        character.background = { origin: null, past: null, encounter: null };\n        Object.keys(character.attributes).forEach(k => character.attributes[k] = 0);\n        updateUI(true);\n    });\n\n    $('#submit-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        await updateUI(true);\n        \n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '未设定';\n        \n        const finalCharacterObject={ NAME:finalName, GENDER:character.gender||'未设定', AGE:formattedAge, RACE:character.race, ORIGIN: character.background.origin ? character.background.origin.name : '未知', PAST: character.background.past ? character.background.past.name : '未知', ENCOUNTER: character.background.encounter || '未知', SKILLS: uniqueSkills, OC_DETAILS:character.oc_details||'无', ...character.attributes, MONEY:character.money };\n        \n        const slashCommand=`/send <START>\\nAdmin:\\n这是一个TRPG开局，请为 User 生成一段详尽的背景故事。\\n\\n# 故事核心要求\\n请严格根据以下【角色完整设定】，撰写一段从角色童年到现在的成长故事。故事需要清晰地阐述是什么关键事件或心路历程，最终让他/她确立了要成为一名冒险者的志向。请在故事中自然地融入角色的种族、出身背景、技能和性格特点。\\n\\n# 角色完整设定\\n---\\n## 基础信息\\n- **姓名:** ${finalName}\\n- **性别:** ${character.gender||'未设定'}\\n- **年龄:** ${formattedAge}\\n- **种族:** ${character.race}\\n\\n## 经历\\n- **出身:** ${character.background.origin ? character.background.origin.name : '未知'}\\n- **来历:** ${character.background.past ? character.background.past.name : '未知'}\\n- **邂逅:** ${character.background.encounter || '未知'}\\n\\n## 背景与技能\\n- **初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n- **初始技能:** ${uniqueSkills.join(', ')||'无'}\\n\\n## 补充设定 (OC)\\n- **额外补充:** ${character.oc_details||'无'}\\n\\n## 能力值\\n- **力量:** ${character.attributes['力量']}\\n- **敏捷:** ${character.attributes['敏捷']}\\n- **感知:** ${character.attributes['感知']}\\n- **知识:** ${character.attributes['知识']}\\n- **魅力:** ${character.attributes['魅力']}\\n- **信仰力:** ${character.attributes['信仰力']}\\n- **魔力:** ${character.attributes['魔力']}\\n\\n## 初始资产\\n- **资金:** ${character.money} 银币\\n\\|\\n/trigger`; \n        \n        try {\n            if (typeof insertOrAssignVariables === 'function') {\n                await insertOrAssignVariables(finalCharacterObject);\n            } else {\n                console.log(\"SillyTavern Function 'insertOrAssignVariables' not found. Variables:\", finalCharacterObject);\n            }\n            if (typeof triggerSlash === 'function') {\n                await triggerSlash(slashCommand, 'Send');\n            } else { \n                console.log(\"SillyTavern Function 'triggerSlash' not found. Command will be copied to clipboard.\");\n                navigator.clipboard.writeText(slashCommand).then(() => {\n                    alert('角色指令已复制到剪贴板！');\n                });\n            }\n        } catch (error) {\n            console.error('与SillyTavern交互失败:', error);\n            alert('与SillyTavern交互失败，请查看浏览器控制台。');\n        }\n\n        e.target.innerHTML = \"契约成立！\";\n    });\n    \n    initDicePool();\n    Object.keys(raceData).forEach(key => DOM.raceSelect.add(new Option(key, key)));\n    Object.keys(character.attributes).forEach(key => {\n        const pointControl = document.createElement('div');\n        pointControl.className = 'point-control';\n        pointControl.innerHTML = `<span class=\"label\">${key}</span><input type=\"text\" id=\"attr-${key.replace(/\\s/g, '')}\" readonly value=\"0\">`; // ID santized just in case\n        DOM.attributesContainer.appendChild(pointControl);\n    });\n    // A small fix for renderAttributes to handle sanitized IDs\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key.replace(/\\s/g, '')}`).value = value; }); }\n    updateUI(true);\n});\n</script>\n\n</body>\n</html>\n```"
  },
  {
    "role": "user",
    "content": "```\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>哥布林杀手TRPG - 冒险者契约</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/gsap.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/TextPlugin.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.min.js\" defer></script>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Noto+Serif+SC:wght@400;700&family=Vollkorn:wght@400;700&family=Courier+Prime&display=swap\" rel=\"stylesheet\">\n\n    <style>\n        :root {\n            --leather-bg: #5a3a2a;\n            --dark-leather-bg: #3b2a1a;\n            --parchment-bg: #f5f5dc;\n            --parchment-bg-gradient: linear-gradient(165deg, #f7e9d7, #e6d5c3);\n            --text-color: #3d3d3d;\n            --heading-color: #4a3c2c;\n            --border-color: #7a5a4a;\n            --font-main: 'Vollkorn', 'Noto Serif SC', serif;\n            --font-display: 'Cinzel', 'Noto Serif SC', serif;\n            --font-code: 'Courier Prime', 'Courier New', monospace;\n            --dice-size: 5rem; \n        }\n\n        html { height: 100%; }\n        body {\n            background-color: #3a2e20;\n            font-family: var(--font-main);\n            color: var(--text-color);\n            margin: 0; padding: 20px;\n            box-sizing: border-box;\n            display: flex;\n            align-items: center; justify-content: center;\n            min-height: 100%;\n        }\n        *, *:before, *:after { box-sizing: inherit; }\n\n        .creator-wrapper {\n            width: 100%; max-width: 900px;\n            margin: 0;\n            background: var(--parchment-bg-gradient);\n            border: 12px solid #8b7355;\n            border-radius: 8px;\n            box-shadow: 0 0 40px rgba(139, 115, 85, 0.3), inset 0 0 30px rgba(255, 255, 255, 0.4);\n            position: relative;\n            overflow: hidden;\n            padding: 25px;\n            display: flex; flex-direction: column;\n            max-height: 95vh;\n        }\n\n        .border-flow, .inner-border { position: absolute; pointer-events: none; }\n        .border-flow { top: 0; left: 0; right: 0; bottom: 0; background: linear-gradient(90deg, rgba(139,115,85,0.1) 1px, transparent 1px), linear-gradient(0deg, rgba(139,115,85,0.1) 1px, transparent 1px); background-size: 20px 20px; animation: borderFlow 15s linear infinite; }\n        .inner-border { top: 5px; left: 5px; right: 5px; bottom: 5px; border: 3px solid rgba(139,115,85,0.3); border-radius: 5px; }\n        @keyframes borderFlow { from { background-position: 0 0; } to { background-position: 20px 20px; } }\n\n        .creator-header {\n            text-align: center;\n            padding: 10px;\n            margin-bottom: 25px;\n            border-bottom: 2px solid rgba(139, 115, 85, 0.3);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 15px;\n        }\n        .creator-header h1 {\n            font-family: var(--font-display);\n            font-size: clamp(24px, 5vw, 32px);\n            margin: 0;\n            font-weight: 700;\n            letter-spacing: 3px;\n            color: var(--heading-color);\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.1);\n        }\n        \n        .title-char {\n            display: inline-block;\n            opacity: 0;\n            transform: translateY(30px);\n        }\n\n        .wax-seal {\n            width: 45px;\n            height: 45px;\n            display: inline-block;\n            background-color: #c0392b;\n            border-radius: 50%;\n            position: relative;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.4), inset 0 -2px 3px rgba(0,0,0,0.3);\n            opacity: 0;\n            transform: scale(0.5);\n            font-family: 'Cinzel', serif;\n            color: #e7a49c;\n            text-align: center;\n            font-size: 24px;\n            line-height: 45px;\n            font-weight: 700;\n        }\n        .wax-seal::before {\n            content: 'GS';\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.3);\n        }\n\n        .creator-scroll-content { overflow-y: auto; padding: 10px 20px 10px 10px; }\n        .creator-scroll-content::-webkit-scrollbar { width: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-track { background: rgba(139, 115, 85, 0.1); border-radius: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-thumb { background-color: #a89072; border-radius: 10px; border: 2px solid #f7e9d7; }\n        \n        .gs-creator-step { margin-bottom: 40px; overflow: hidden; }\n        .gs-creator-step h3 { font-family: var(--font-display); font-size: 1.5em; font-weight: 700; border-bottom: 1.5px solid var(--border-color); padding-bottom: 8px; margin-bottom: 20px; color: var(--heading-color); text-align: left; }\n        \n        .layout-grid { display: grid; grid-template-columns: 1fr; gap: 25px; align-items: flex-start; }\n        @media (min-width: 768px) {\n            .layout-grid { grid-template-columns: 1fr 280px; }\n        }\n\n        .form-container { text-align: left; }\n        .gs-form-group { margin-bottom: 16px; }\n        .gs-form-group label { display: block; margin-bottom: 6px; font-weight: bold; color: var(--heading-color); }\n        .form-input, .form-select, .form-textarea { width: 100%; padding: 10px; background-color: rgba(255, 255, 255, 0.5); border: 1px solid #a58e72; border-radius: 4px; color: #3d3d3d; font-family: var(--font-main); font-size: 1em; transition: all 0.2s ease-in-out; box-shadow: inset 1px 1px 2px rgba(0,0,0,0.1); }\n        .form-input:focus, .form-select:focus, .form-textarea:focus { outline: none; border-color: #8b7355; background-color: #fff; box-shadow: 0 0 5px rgba(139, 115, 85, 0.5); }\n        .form-textarea { resize: vertical; min-height: 100px; }\n\n        .grid-cols-2 {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 16px;\n        }\n        @media (min-width: 480px) {\n            .grid-cols-2 {\n                grid-template-columns: repeat(2, 1fr);\n            }\n        }\n\n        #attributes-container .point-control { display: flex; align-items: center; justify-content: space-between; margin-bottom: 8px; padding: 6px 8px; background: rgba(0,0,0,0.03); border-left: 3px solid rgba(139,115,85,0.2); border-radius: 4px; }\n        #attributes-container .label { font-weight: bold; color: var(--heading-color); }\n        #attributes-container input[readonly] { width: 40px; text-align: center; font-weight: bold; font-size: 1.2em; font-family: var(--font-display); color: #a02c2c; border: none; background-color: transparent; box-shadow: none; padding: 0; }\n        \n        .attributes-grid {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 0 16px;\n        }\n        @media (min-width: 480px) {\n            .attributes-grid {\n                grid-template-columns: 1fr 1fr;\n            }\n        }\n        \n        .skills-display p { background-color: rgba(0,0,0,0.05); border-left: 3px solid var(--border-color); padding: 10px 15px; margin-top: 10px; font-size: 0.95em; border-radius: 0 4px 4px 0; }\n        .skills-display strong { color: #8b5b4b; font-family: var(--font-display); }\n        .skills-display ul { list-style: none; padding-left: 0; margin-top: 8px; font-size: 0.9em; }\n        .skills-display li { margin-bottom: 4px; }\n\n        #character-summary { background-color: #e9e4d9; font-family: var(--font-code); line-height: 1.6; height: 250px; color: #2c2a2a; }\n        \n        .gs-button { width: 100%; background-color: #8b7355; color: var(--parchment-bg); border: 2px solid var(--dark-leather-bg); border-radius: 5px; padding: 12px 20px; font-family: var(--font-display); font-size: 1.2em; font-weight: 700; cursor: pointer; margin-top: 10px; transition: all 0.3s ease; box-shadow: 0 3px 5px rgba(0,0,0,0.3); }\n        .gs-button:hover { background-color: #a0886c; transform: translateY(-2px); box-shadow: 0 5px 8px rgba(0,0,0,0.3); }\n        .gs-button:disabled { background-color: #9e9e9e; border-color: #757575; cursor: not-allowed; transform: none; box-shadow: none; opacity: 0.6; }\n        .action-button { background-color: #6d5b4b; font-size: 1em; padding: 10px 15px; margin-top: 0; margin-bottom: 10px; width: auto; }\n        \n        .background-display { margin-top: 15px; padding: 15px; border: 1px dashed var(--border-color); border-radius: 5px; background: rgba(0,0,0,0.02); }\n        .background-display p { margin: 0 0 8px; }\n        .background-display span { font-weight: bold; color: var(--heading-color); }\n        \n        #radar-chart-container { \n            max-width: 100%;\n        }\n        @media (min-width: 768px) {\n            #radar-chart-container {\n                position: sticky;\n                top: 0;\n                padding-top: 45px;\n            }\n        }\n\n        pre.mermaid { \n            font-family: var(--font-main); \n            background: rgba(0,0,0,0.02); \n            border: 1px solid rgba(139,115,85,0.1); \n            padding: 10px; \n            border-radius: 5px; \n            overflow: auto;\n            transition: opacity 0.3s ease-in-out;\n        }\n        pre.mermaid.loading { opacity: 0.5; pointer-events: none; }\n\n        pre.mermaid > svg {\n            max-width: 100%;\n            height: auto;\n        }\n\n        #dice-overlay {\n            position: fixed; top: 0; left: 0; width: 100%; height: 100%;\n            background: rgba(0,0,0,0.8); backdrop-filter: blur(5px);\n            display: none; align-items: center; justify-content: center; flex-direction: column;\n            z-index: 100;\n            color: #fff; text-shadow: 0 0 10px #000;\n        }\n\n        .dice-container {\n            display: flex; flex-wrap: wrap; justify-content: center;\n            gap: 2rem; margin-bottom: 2rem;\n            max-width: 600px;\n        }\n        \n        .dice-icon {\n            width: var(--dice-size); height: var(--dice-size);\n            perspective: 800px;\n            transform-style: preserve-3d;\n            display: none;\n        }\n        .dice-icon.highlight {\n            transform: scale(1.15);\n            filter: drop-shadow(0 0 15px #FFEB3B);\n            transition: transform 0.3s ease, filter 0.3s ease;\n        }\n\n        .dice-cube {\n            width: 100%; height: 100%;\n            position: relative;\n            transform-style: preserve-3d;\n            transform: translateZ(calc(var(--dice-size) / -2));\n        }\n        \n        .dice-face {\n            position: absolute;\n            width: var(--dice-size); height: var(--dice-size);\n            background-color: rgba(255, 255, 255, 0.98);\n            border: 1.5px solid #857e72;\n            border-radius: 12%;\n        }\n\n        .pips-container {\n            width: 100%; height: 100%;\n            position: relative; \n        }\n        .pip {\n            width: 22%; height: 22%; \n            background-color: #3d352e;\n            border-radius: 50%;\n            box-shadow: inset 0 1px 3px rgba(0,0,0,0.5);\n            position: absolute; \n        }\n        \n        #dice-result-text { \n            font-family: var(--font-display); \n            font-size: 2.2em;\n            color: #FFEB3B; \n            text-shadow: 0 0 12px #FFEB3B; \n            min-height: 2em;\n            line-height: 1.2;\n            text-align: center; \n        }\n        \n        #skip-animation-btn {\n            position: absolute;\n            bottom: 30px;\n            font-size: 1em;\n            padding: 8px 20px;\n            width: auto;\n            background-color: rgba(0,0,0,0.3);\n            border-color: rgba(255,255,255,0.5);\n            color: rgba(255,255,255,0.8);\n        }\n        #skip-animation-btn:hover {\n            background-color: rgba(0,0,0,0.5);\n            color: #fff;\n        }\n\n        .typed-cursor {\n            opacity: 1;\n            animation: typed-blink 0.7s infinite;\n        }\n        @keyframes typed-blink{\n            0% { opacity: 1; }\n            50% { opacity: 0; }\n            100% { opacity: 1; }\n        }\n        \n        .validation-message {\n            text-align: center;\n            color: #b71c1c;\n            font-size: 0.9em;\n            font-weight: bold;\n            margin-top: -5px;\n            margin-bottom: 10px;\n            height: 1.2em;\n            opacity: 0;\n            will-change: transform, opacity;\n        }\n\n        #credits-screen {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            pointer-events: none;\n            opacity: 0;\n        }\n\n        #credits-screen p {\n            font-family: var(--font-display);\n            font-size: 2em;\n            color: #f5f5dc;\n            text-shadow: 0 0 8px rgba(245, 245, 220, 0.7);\n        }\n    </style>\n</head>\n<body>\n\n<div class=\"creator-wrapper\">\n    <div class=\"border-flow\"></div>\n    <div class=\"inner-border\"></div>\n    <header class=\"creator-header\">\n        <h1 id=\"main-title\">冒险者契约登记</h1>\n        <div id=\"wax-seal\" class=\"wax-seal\"></div>\n    </header>\n\n    <div class=\"creator-scroll-content\">\n        <div class=\"gs-creator-container\">\n            <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第一步：身份确认</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-name-input\">姓名</label><input id=\"char-name-input\" type=\"text\" placeholder=\"可留空，默认为 {{user}}\" class=\"form-input\"></div>\n                    <div class=\"grid-cols-2 gsap-content-item\">\n                        <div class=\"gs-form-group\"><label for=\"char-gender-input\">性别</label><input id=\"char-gender-input\" type=\"text\" placeholder=\"例如: 男性/女性/双性/无性/……\" class=\"form-input\"></div>\n                        <div class=\"gs-form-group\"><label for=\"char-age-input\">年龄</label><input id=\"char-age-input\" type=\"number\" placeholder=\"可参照种族说明\" class=\"form-input\"></div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-race-select\">种族</label><select id=\"char-race-select\" class=\"form-select\"></select></div>\n                    <div class=\"gs-form-group gsap-content-item\">\n                        <label>经历 (出身/来历/邂逅)</label>\n                        <button id=\"roll-background-btn\" class=\"gs-button action-button\">🎲 投骰决定经历</button>\n                        <div id=\"background-display\" class=\"background-display\" style=\"display: none;\">\n                            <p>出身: <span id=\"bg-origin\"></span></p>\n                            <p>来历: <span id=\"bg-past\"></span></p>\n                            <p>邂逅: <span id=\"bg-encounter\"></span></p>\n                        </div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"oc-details-input\">身体特征与补充</label><textarea id=\"oc-details-input\" placeholder=\"发色、瞳色、体型、性格、背景故事构思...\" class=\"form-textarea\"></textarea></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第二步：能力值与技能</h3>\n                <div class=\"layout-grid\">\n                    <div class=\"form-container gsap-content-item\">\n                        <button id=\"roll-attributes-btn\" class=\"gs-button action-button\">🎲 投骰决定能力值</button>\n                        <div id=\"attributes-container\" class=\"attributes-grid\"></div>\n                        <div id=\"skills-and-desc-container\" class=\"skills-display\"></div>\n                    </div>\n                    <div id=\"radar-chart-container\" class=\"gsap-content-item\"><pre class=\"mermaid\" id=\"radar-chart\"></pre></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第三步：完成登记</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"character-summary\">角色卡预览</label><textarea id=\"character-summary\" rows=\"12\" readonly class=\"form-textarea\"></textarea></div>\n                    <button id=\"submit-btn\" class=\"gs-button gsap-content-item\" disabled>确认登记，开始冒险</button>\n                    <div id=\"validation-message\" class=\"validation-message\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div id=\"credits-screen\">\n    <p>作者 𝙀𝙡𝙖𝙞𝙣𝙖𝙙𝙚𝙨</p>\n</div>\n\n<div id=\"dice-overlay\">\n    <div class=\"dice-container\" id=\"dice-container\"></div>\n    <div id=\"dice-result-text\"></div>\n    <button id=\"skip-animation-btn\" class=\"gs-button\">跳过动画</button>\n</div>\n\n<div id=\"dice-templates\" style=\"display:none;\">\n    <div class=\"dice-cube\" data-id_template=\"dice-cube\">\n        <div class=\"dice-face face-front\" data-face=\"1\"><div class=\"pips-container\"><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-back\" data-face=\"6\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-right\" data-face=\"3\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-left\" data-face=\"4\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-top\" data-face=\"2\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-bottom\" data-face=\"5\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n    </div>\n</div>\n\n<script>\n// --- MODIFIED DATA ---\nconst raceData = {\n    '凡人': { attr_rolls: { '力量': '1d3+1', '敏捷': '1d3', '感知': '1d3', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3+2', '魔力': '1d3' }, skills: ['过载行动(初级)', '武器:投掷武器(初级)', '长距离移动(初级)']},\n    '矿人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3', '感知': '1d3+2', '知识': '1d3-1', '魅力': '1d3+1', '信仰力': '1d3+1', '魔力': '1d3-1' }, skills: ['治愈适性(初级)', '夜视(初级)', '锻造(初级)']},\n    '森人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+1', '感知': '1d3+1', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3-1', '魔力': '1d3+1' }, skills: ['武器:弩弓(初级)', '夜视(初级)', '精灵宠儿(初级)']},\n    '蜥蜴人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3+1', '感知': '1d3', '知识': '1d3', '魅力': '1d3+1', '信仰力': '1d3', '魔力': '1d3' }, skills: ['免疫强化(初级)', '夜视(初级)', '龙族血统(初级)']},\n    '圃人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+2', '感知': '1d3+1', '知识': '1d3', '魅力': '1d3-1', '信仰力': '1d3', '魔力': '1d3+2' }, skills: ['隐匿(初级)', '先发制人(初级)', '烹饪(初级)']}\n};\nconst backgroundData = {\n    origin: { \n        '凡人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '学者', class: '魔术师', level: 1, skills: ['文献调查(初级)'] }, 6: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 7: { name: '农民', skills: ['生产业:农业(初级)', '强健(初级)'] }, 8: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '骑士', class: '战士', level: 1, skills: ['骑乘(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n        '矿人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 6: { name: '酒馆老板', class: '战士', level: 1, skills: ['观察(初级)'] }, 7: { name: '铁匠', skills: ['工匠:锻造(初级)', '手工(初级)'] }, 8: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '碎盾者', class: '战士', level: 1, skills: ['强击攻击·斩(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n    },\n    past: { 2: { name: '奴隶', skills: ['劳动(初级)'] }, 3: { name: '牢狱', skills: ['犯罪知识(初级)'] }, 4: { name: '战场', skills: ['沉着冷静(初级)'] }, 5: { name: '神殿', skills: ['神学(初级)'] }, 6: { name: '孤儿', skills: ['忍耐(初级)'] }, 7: { name: '平顺', skills: ['幸运(初级)'] }, 8: { name: '贫困', skills: ['生存术(初级)'] }, 9: { name: '学校', skills: ['博识(初级)'] }, 10: { name: '深闺', skills: ['无偏见(初级)'] }, 11: { name: '奢华', skills: ['鉴定(初级)'] }, 12: { name: '宫廷', skills: ['礼仪(初级)'] }},\n    encounter: { 2: '宿敌', 3: '上司', 4: '后辈', 5: '交易对象', 6: '下属', 7: '家人', 8: '挚友', 9: '前辈', 10: '未婚夫/妻', 11: '劲敌', 12: '师父' }\n};\nbackgroundData.origin['森人'] = backgroundData.origin['凡人']; backgroundData.origin['蜥蜴人'] = backgroundData.origin['凡人']; backgroundData.origin['圃人'] = backgroundData.origin['凡人'];\nconst character = {\n    name: '', gender: '', age: '', oc_details: '', race: '凡人',\n    background: { origin: null, past: null, encounter: null },\n    attributes: { '力量': 0, '敏捷': 0, '感知': 0, '知识': 0, '魅力': 0, '信仰力': 0, '魔力': 0, '潜力': 0 },\n    skills: [], classes: {}, money: 0, _lastAttributesForChart: '',\n};\n// --- END MODIFIED DATA ---\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    gsap.registerPlugin(TextPlugin);\n    mermaid.initialize({ startOnLoad: true, theme: 'base', themeVariables: {\n        '--mermaid-font-family': \"'Vollkorn', 'Noto Serif SC', serif\",\n        primaryColor: '#f7e9d7', primaryTextColor: '#3d3d3d', lineColor: '#8b7355', textColor: '#4a3c2c',\n    }});\n    \n    const $ = (s) => document.querySelector(s);\n    const roll1D6 = () => Math.floor(Math.random() * 6) + 1;\n    const roll1D3 = () => {\n        const d6 = roll1D6();\n        if (d6 <= 2) return { d6, d3: 1 };\n        if (d6 <= 4) return { d6, d3: 2 };\n        return { d6, d3: 3 };\n    };\n    const rollDiceString = (diceString) => { const p=diceString.split('*');const d=p[0];const m=parseInt(p[1])||1;if(!d.includes('d'))return 0;const[n,s]=d.split('d').map(Number);let t=0;for(let i=0;i<n;i++){t+=Math.floor(Math.random()*s)+1;}return t*m; };\n    const formatAge = (ageValue) => { if (!ageValue && ageValue !== 0) return ageValue; const num = Number(ageValue); if (isNaN(num)) return ageValue; if (Math.abs(num) >= 1_000_000) return num.toExponential(2); return ageValue; };\n    const debounce = (func, delay) => { let timeout; return function(...args) { clearTimeout(timeout); timeout = setTimeout(() => func.apply(this, args), delay); }; };\n    const diceUnicode = ['\\u2680', '\\u2681', '\\u2682', '\\u2683', '\\u2684', '\\u2685'];\n\n    const DOM = {\n        nameInput: $('#char-name-input'), genderInput: $('#char-gender-input'), ageInput: $('#char-age-input'),\n        ocDetailsInput: $('#oc-details-input'), raceSelect: $('#char-race-select'), attributesContainer: $('#attributes-container'),\n        skillsContainer: $('#skills-and-desc-container'), radarChart: $('#radar-chart'), summarySheet: $('#character-summary'),\n        diceOverlay: $('#dice-overlay'), diceContainer: $('#dice-container'), diceResultText: $('#dice-result-text'),\n        backgroundDisplay: $('#background-display'), bgOrigin: $('#bg-origin'), bgPast: $('#bg-past'), bgEncounter: $('#bg-encounter'),\n        skipAnimationBtn: $('#skip-animation-btn'),\n        submitBtn: $('#submit-btn'),\n        validationMessage: $('#validation-message'),\n    };\n    \n    const dicePool = []; const MAX_DICE = 6;\n    let currentAnimation = null; let textAnimation = null; let isSkipping = false;\n    let currentValidationMessage = '';\n    \n    function validateAndToggleButton() {\n        let newMessage = '';\n        if (!character.age || String(character.age).trim() === '') {\n            newMessage = '请填写您的冒险者年龄。';\n        } else if (!character.gender || !character.gender.trim()) {\n            newMessage = '请设定冒险者的性别。';\n        } else if (!character.background.origin) {\n            newMessage = '请投骰决定您的冒险者经历。';\n        } else if (Object.values(character.attributes).every(val => val === 0)) {\n            newMessage = '请投骰决定您的能力值。';\n        }\n\n        if (newMessage === currentValidationMessage) return;\n        currentValidationMessage = newMessage;\n\n        if (newMessage) {\n            DOM.submitBtn.disabled = true;\n            DOM.validationMessage.textContent = newMessage;\n            gsap.fromTo(DOM.validationMessage, { autoAlpha: 0, scale: 0.8 }, { autoAlpha: 1, scale: 1, duration: 0.4, ease: 'elastic.out(1, 0.75)' });\n        } else {\n            DOM.submitBtn.disabled = false;\n            gsap.to(DOM.validationMessage, { autoAlpha: 0, duration: 0.3 });\n        }\n    }\n    function updateCharacterDataFromDOM() { character.name = DOM.nameInput.value; character.gender = DOM.genderInput.value; character.age = DOM.ageInput.value; character.oc_details = DOM.ocDetailsInput.value; character.race = DOM.raceSelect.value; }\n    function renderSkills() { const uniqueSkills = [...new Set(character.skills)]; DOM.skillsContainer.innerHTML = `<p><strong>天赋与习得技能:</strong></p><ul>${uniqueSkills.map(s => `<li>- ${s}</li>`).join('')}</ul>`; }\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key}`).value = value; }); }\n    function renderSummary() {\n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '?';\n        const originText = `出身:${character.background.origin ? character.background.origin.name : '?'}`;\n        const pastText = `来历:${character.background.past ? character.background.past.name : '?'}`;\n        const encounterText = `邂逅:${character.background.encounter || '?'}`;\n        let summary = `### 《哥布林杀手TRPG》冒险者登记卡\\n` + `**姓名:** ${finalName} | **种族:** ${character.race} | **性别:** ${character.gender || '?'} | **年龄:** ${formattedAge}\\n` + `**经历:** ${originText} / ${pastText} / ${encounterText}\\n` + `**初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n` + `**初始技能:** ${uniqueSkills.join(', ') || '无'}\\n`; if (character.oc_details) { summary += `**身体特征与补充:** ${character.oc_details}\\n`; } summary += `---\\n**能力值:**\\n`; summary += Object.entries(character.attributes).map(([key, value]) => `- ${key}: ${value}`).join('\\n'); summary += `\\n**持有资金:** ${character.money} 银币`;\n        DOM.summarySheet.value = summary.replace(/### /g, '').replace(/\\*\\*/g, '').replace(/---/g, '\\n────────────────────\\n').replace(/- /g, '  ');\n        DOM.summarySheet.setAttribute('data-raw', summary);\n    }\n    async function renderRadarChartIfNeeded() { const currentAttributesString = JSON.stringify(character.attributes); if (currentAttributesString === character._lastAttributesForChart) return; DOM.radarChart.classList.add('loading'); const radarSyntax = `radar-beta\\ntitle 能力值分布\\naxis a[\"力量 ${character.attributes['力量']}\"]\\naxis b[\"敏捷 ${character.attributes['敏捷']}\"]\\naxis c[\"感知 ${character.attributes['感知']}\"]\\naxis d[\"知识 ${character.attributes['知识']}\"]\\naxis e[\"魅力 ${character.attributes['魅力']}\"]\\naxis f[\"信仰 ${character.attributes['信仰力']}\"]\\naxis g[\"魔力 ${character.attributes['魔力']}\"]\\naxis h[\"潜力 ${character.attributes['潜力']}\"]\\ncurve current[\"能力\"]{${character.attributes['力量']},${character.attributes['敏捷']},${character.attributes['感知']},${character.attributes['知识']},${character.attributes['魅力']},${character.attributes['信仰力']},${character.attributes['魔力']},${character.attributes['潜力']}}\\nmax 10\\nmin 0`; DOM.radarChart.innerHTML = radarSyntax; DOM.radarChart.removeAttribute('data-processed'); try { await mermaid.run({ nodes: [DOM.radarChart] }); character._lastAttributesForChart = currentAttributesString; } catch(e) { console.error(\"Mermaid rendering error:\", e); } finally { DOM.radarChart.classList.remove('loading'); } }\n    async function updateUI(forceFullUpdate = false) { updateCharacterDataFromDOM(); if(forceFullUpdate) { character._lastAttributesForChart = ''; character.skills = []; character.classes = {}; character.money = 100; if(raceData[character.race].skills) character.skills.push(...raceData[character.race].skills); if (character.background.origin) { if (character.background.origin.skills) character.skills.push(...character.background.origin.skills); if (character.background.origin.class) character.classes[character.background.origin.class] = character.background.origin.level; if(character.background.origin.money) character.money += rollDiceString(character.background.origin.money); } if (character.background.past && character.background.past.skills) { character.skills.push(...character.background.past.skills); } } renderAttributes(); renderSkills(); renderSummary(); await renderRadarChartIfNeeded(); validateAndToggleButton(); }\n\n    const masterTl = gsap.timeline({ delay: 0.2 });\n    const title = $('#main-title');\n    title.innerHTML = title.textContent.split('').map(char => `<span class=\"title-char\">${char}</span>`).join('');\n    gsap.set(\".gsap-header-item, .gsap-content-item\", { autoAlpha: 0, y: 20 });\n    masterTl.to(\".title-char\", { autoAlpha: 1, y: 0, duration: 0.7, ease: \"power3.out\", stagger: 0.1 }).to(\"#wax-seal\", { autoAlpha: 1, scale: 1, duration: 0.6, ease: \"elastic.out(1, 0.7)\" }, \"-=0.5\");\n    document.querySelectorAll('.gs-creator-step').forEach((step, index) => { const stepTl = gsap.timeline(); stepTl.to(step.querySelector('.gsap-header-item'), { autoAlpha: 1, y: 0, duration: 0.6, ease: 'power2.out' }).to(step.querySelectorAll('.gsap-content-item'), { autoAlpha: 1, y: 0, duration: 0.5, ease: 'power2.out', stagger: 0.1 }, '-=0.4'); masterTl.add(stepTl, `-=${index === 0 ? 0.2 : 0.7}`); });\n    const pipPositions = { 1: [ { left: '50%', top: '50%' } ], 2: [ { left: '25%', top: '25%' }, { left: '75%', top: '75%' } ], 3: [ { left: '25%', top: '25%' }, { left: '50%', top: '50%' }, { left: '75%', top: '75%' } ], 4: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 5: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '50%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 6: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '50%' }, { left: '75%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ]};\n    function setupCube(cubeEl) { const size = 'calc(var(--dice-size) / 2)'; gsap.set(cubeEl.querySelector('.face-front'),  { transform: `rotateY(0deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-back'),   { transform: `rotateY(180deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-right'),  { transform: `rotateY(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-left'),   { transform: `rotateY(-90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-top'),   { transform: `rotateX(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-bottom'), { transform: `rotateX(-90deg) translateZ(${size})` }); const faces = cubeEl.querySelectorAll('.dice-face'); faces.forEach(face => { const faceNum = face.getAttribute('data-face'); const pips = face.querySelectorAll('.pip'); const positions = pipPositions[faceNum]; if (!pips.length || !positions) return; pips.forEach((pip, index) => { const pos = positions[index]; gsap.set(pip, { left: pos.left, top: pos.top, xPercent: -50, yPercent: -50 }); }); }); }\n    function getRotationForFace(faceValue) { switch (faceValue) { case 1: return { x: 0, y: 0 }; case 6: return { x: 0, y: 180 }; case 3: return { x: 0, y: -90 }; case 4: return { x: 0, y: 90 }; case 2: return { x: -90, y: 0 }; case 5: return { x: 90,  y: 0 }; default: return { x: 0, y: 0 }; } }\n    async function animateText(element, text) { if(isSkipping) {element.innerHTML = text.replace(/\\n/g, '<br>'); return;} return new Promise(resolve => { if (textAnimation && textAnimation.isActive()) textAnimation.kill(); element.innerHTML = ''; textAnimation = gsap.to(element, { duration: text.length * 0.05, text: { value: text.replace(/\\n/g, '<br>'), newClass: \"typed-cursor\" }, ease: \"none\", onComplete: () => { gsap.delayedCall(0.7, () => { element.querySelector('.typed-cursor')?.remove(); resolve(); }); } }); }); }\n    function initDicePool() { const diceTemplate = document.querySelector('[data-id_template=\"dice-cube\"]'); if (!diceTemplate) return; for (let i = 0; i < MAX_DICE; i++) { const dieIconElement = document.createElement('div'); dieIconElement.className = 'dice-icon'; const newCube = diceTemplate.cloneNode(true); dieIconElement.appendChild(newCube); DOM.diceContainer.appendChild(dieIconElement); setupCube(newCube); dicePool.push(dieIconElement); } }\n    async function animateRoll(numDice, preCalculatedRolls, textToShowDuringRoll = \"投掷中...\") { return new Promise(resolve => { if (currentAnimation && currentAnimation.isActive()) currentAnimation.kill(); dicePool.forEach(die => die.style.display = 'none'); const activeDice = dicePool.slice(0, numDice); animateText(DOM.diceResultText, textToShowDuringRoll); activeDice.forEach(die => { die.style.display = 'flex'; die.className = 'dice-icon'; }); const masterTl = gsap.timeline({ onComplete: () => { if(isSkipping) DOM.diceResultText.innerHTML = ''; resolve(preCalculatedRolls); }}); currentAnimation = masterTl; activeDice.forEach((dieElement, i) => { const dieCube = dieElement.querySelector('.dice-cube'); const visualRoll = preCalculatedRolls[i]; const targetRotation = getRotationForFace(visualRoll); const dieTimeline = gsap.timeline(); dieTimeline.to(dieCube, { rotationX: `+=${gsap.utils.random(720, 1080)}`, rotationY: `+=${gsap.utils.random(720, 1080)}`, duration: 1.8, ease: \"power2.in\" }).to(dieCube, { rotationX: targetRotation.x, rotationY: targetRotation.y, duration: 0.7, ease: \"power4.out\" }); masterTl.add(dieTimeline, 0); }); }); }\n    \n    const debouncedUpdate = debounce(updateUI, 400);\n    [DOM.nameInput, DOM.genderInput, DOM.ageInput, DOM.ocDetailsInput].forEach(el => el.addEventListener('input', debouncedUpdate));\n    \n    DOM.skipAnimationBtn.addEventListener('click', () => {\n        isSkipping = true;\n        if (currentAnimation && currentAnimation.isActive()) currentAnimation.progress(1);\n        if (textAnimation && textAnimation.isActive()) textAnimation.progress(1);\n    });\n\n    $('#roll-background-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const rolls = [roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6()];\n        await animateRoll(6, rolls, '投掷 经历... (2d6 x 3)');\n        \n        const sums = { origin: rolls[0] + rolls[1], past: rolls[2] + rolls[3], encounter: rolls[4] + rolls[5] };\n        \n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `出身: ${rolls[0]} + ${rolls[1]} = ${sums.origin}\\n(${backgroundData.origin[character.race][sums.origin].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `来历: ${rolls[2]} + ${rolls[3]} = ${sums.past}\\n(${backgroundData.past[sums.past].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(4, 6), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `邂逅: ${rolls[4]} + ${rolls[5]} = ${sums.encounter}\\n(${backgroundData.encounter[sums.encounter]})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        character.background.origin = backgroundData.origin[character.race][sums.origin];\n        character.background.past = backgroundData.past[sums.past];\n        character.background.encounter = backgroundData.encounter[sums.encounter];\n        DOM.bgOrigin.textContent = character.background.origin.name;\n        DOM.bgPast.textContent = character.background.past.name;\n        DOM.bgEncounter.textContent = character.background.encounter;\n        DOM.backgroundDisplay.style.display = 'block';\n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        updateUI(true);\n    });\n\n    $('#roll-attributes-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const attrRolls = raceData[character.race].attr_rolls;\n        const allCalculatedRolls = [];\n\n        // Prepare race-based attributes\n        for (const attr in attrRolls) {\n            const formula = attrRolls[attr];\n            const modifier = parseInt(formula.split('d3')[1] || '0');\n            const { d6, d3 } = roll1D3();\n            const finalValue = Math.max(0, d3 + modifier);\n            character.attributes[attr] = finalValue;\n            allCalculatedRolls.push({ attr, formula, d6, d3, modifier, finalValue });\n        }\n        \n        // Prepare \"Potential\" attribute\n        const potentialValue = Math.floor(Math.random() * 3) + 1;\n        const d6ForPotential = (potentialValue * 2) - 1; // Map 1,2,3 to d6 faces 1,3,5 for animation\n        character.attributes['潜力'] = potentialValue;\n        allCalculatedRolls.push({\n            attr: '潜力',\n            formula: '1-3', // Just a descriptor\n            d6: d6ForPotential,\n            finalValue: potentialValue\n        });\n        \n        // Animate all rolls sequentially\n        for (const roll of allCalculatedRolls) {\n            await animateRoll(1, [roll.d6], `投掷 ${roll.attr}...`);\n            if (isSkipping) break;\n\n            gsap.to(dicePool[0], { className: 'dice-icon highlight', duration: 0.3 });\n            \n            let resultText;\n            if (roll.attr === '潜力') {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.finalValue}`;\n            } else {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.d3} ${roll.modifier >= 0 ? '+' : ''} ${roll.modifier} = ${roll.finalValue}`;\n            }\n            await animateText(DOM.diceResultText, resultText);\n            \n            await updateUI();\n            \n            if (isSkipping) break;\n            \n            await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        await updateUI();\n    });\n\n    DOM.raceSelect.addEventListener('change', () => {\n        DOM.backgroundDisplay.style.display = 'none';\n        character.background = { origin: null, past: null, encounter: null };\n        Object.keys(character.attributes).forEach(k => character.attributes[k] = 0);\n        updateUI(true);\n    });\n\n    $('#submit-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        await updateUI(true);\n        \n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '未设定';\n        \n        const finalCharacterObject={ NAME:finalName, GENDER:character.gender||'未设定', AGE:formattedAge, RACE:character.race, ORIGIN: character.background.origin ? character.background.origin.name : '未知', PAST: character.background.past ? character.background.past.name : '未知', ENCOUNTER: character.background.encounter || '未知', SKILLS: uniqueSkills, OC_DETAILS:character.oc_details||'无', ...character.attributes, MONEY:character.money };\n        \n        const slashCommand=`/send <START>\\nAdmin:\\n这是一个TRPG开局，请为 User 生成一段详尽的背景故事。\\n\\n# 故事核心要求\\n请严格根据以下【角色完整设定】，撰写一段从角色童年到现在的成长故事。故事需要清晰地阐述是什么关键事件或心路历程，最终让他/她确立了要成为一名冒险者的志向。请在故事中自然地融入角色的种族、出身背景、技能和性格特点。\\n\\n# 角色完整设定\\n---\\n## 基础信息\\n- **姓名:** ${finalName}\\n- **性别:** ${character.gender||'未设定'}\\n- **年龄:** ${formattedAge}\\n- **种族:** ${character.race}\\n\\n## 经历\\n- **出身:** ${character.background.origin ? character.background.origin.name : '未知'}\\n- **来历:** ${character.background.past ? character.background.past.name : '未知'}\\n- **邂逅:** ${character.background.encounter || '未知'}\\n\\n## 背景与技能\\n- **初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n- **初始技能:** ${uniqueSkills.join(', ')||'无'}\\n\\n## 补充设定 (OC)\\n- **额外补充:** ${character.oc_details||'无'}\\n\\n## 能力值\\n- **力量:** ${character.attributes['力量']}\\n- **敏捷:** ${character.attributes['敏捷']}\\n- **感知:** ${character.attributes['感知']}\\n- **知识:** ${character.attributes['知识']}\\n- **魅力:** ${character.attributes['魅力']}\\n- **信仰力:** ${character.attributes['信仰力']}\\n- **魔力:** ${character.attributes['魔力']}\\n\\n## 初始资产\\n- **资金:** ${character.money} 银币\\n\\|\\n/trigger`; \n        \n        try {\n            if (typeof insertOrAssignVariables === 'function') {\n                await insertOrAssignVariables(finalCharacterObject);\n            } else {\n                console.log(\"SillyTavern Function 'insertOrAssignVariables' not found. Variables:\", finalCharacterObject);\n            }\n            if (typeof triggerSlash === 'function') {\n                await triggerSlash(slashCommand, 'Send');\n            } else { \n                console.log(\"SillyTavern Function 'triggerSlash' not found. Command will be copied to clipboard.\");\n                navigator.clipboard.writeText(slashCommand).then(() => {\n                    alert('角色指令已复制到剪贴板！');\n                });\n            }\n        } catch (error) {\n            console.error('与SillyTavern交互失败:', error);\n            alert('与SillyTavern交互失败，请查看浏览器控制台。');\n        }\n\n        e.target.innerHTML = \"契约成立！\";\n    });\n    \n    initDicePool();\n    Object.keys(raceData).forEach(key => DOM.raceSelect.add(new Option(key, key)));\n    Object.keys(character.attributes).forEach(key => {\n        const pointControl = document.createElement('div');\n        pointControl.className = 'point-control';\n        pointControl.innerHTML = `<span class=\"label\">${key}</span><input type=\"text\" id=\"attr-${key.replace(/\\s/g, '')}\" readonly value=\"0\">`; // ID santized just in case\n        DOM.attributesContainer.appendChild(pointControl);\n    });\n    // A small fix for renderAttributes to handle sanitized IDs\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key.replace(/\\s/g, '')}`).value = value; }); }\n    updateUI(true);\n});\n</script>\n\n</body>\n</html>\n```"
  },
  {
    "role": "user",
    "content": "```\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>哥布林杀手TRPG - 冒险者契约</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/gsap.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/TextPlugin.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.min.js\" defer></script>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Noto+Serif+SC:wght@400;700&family=Vollkorn:wght@400;700&family=Courier+Prime&display=swap\" rel=\"stylesheet\">\n\n    <style>\n        :root {\n            --leather-bg: #5a3a2a;\n            --dark-leather-bg: #3b2a1a;\n            --parchment-bg: #f5f5dc;\n            --parchment-bg-gradient: linear-gradient(165deg, #f7e9d7, #e6d5c3);\n            --text-color: #3d3d3d;\n            --heading-color: #4a3c2c;\n            --border-color: #7a5a4a;\n            --font-main: 'Vollkorn', 'Noto Serif SC', serif;\n            --font-display: 'Cinzel', 'Noto Serif SC', serif;\n            --font-code: 'Courier Prime', 'Courier New', monospace;\n            --dice-size: 5rem; \n        }\n\n        html { height: 100%; }\n        body {\n            background-color: #3a2e20;\n            font-family: var(--font-main);\n            color: var(--text-color);\n            margin: 0; padding: 20px;\n            box-sizing: border-box;\n            display: flex;\n            align-items: center; justify-content: center;\n            min-height: 100%;\n        }\n        *, *:before, *:after { box-sizing: inherit; }\n\n        .creator-wrapper {\n            width: 100%; max-width: 900px;\n            margin: 0;\n            background: var(--parchment-bg-gradient);\n            border: 12px solid #8b7355;\n            border-radius: 8px;\n            box-shadow: 0 0 40px rgba(139, 115, 85, 0.3), inset 0 0 30px rgba(255, 255, 255, 0.4);\n            position: relative;\n            overflow: hidden;\n            padding: 25px;\n            display: flex; flex-direction: column;\n            max-height: 95vh;\n        }\n\n        .border-flow, .inner-border { position: absolute; pointer-events: none; }\n        .border-flow { top: 0; left: 0; right: 0; bottom: 0; background: linear-gradient(90deg, rgba(139,115,85,0.1) 1px, transparent 1px), linear-gradient(0deg, rgba(139,115,85,0.1) 1px, transparent 1px); background-size: 20px 20px; animation: borderFlow 15s linear infinite; }\n        .inner-border { top: 5px; left: 5px; right: 5px; bottom: 5px; border: 3px solid rgba(139,115,85,0.3); border-radius: 5px; }\n        @keyframes borderFlow { from { background-position: 0 0; } to { background-position: 20px 20px; } }\n\n        .creator-header {\n            text-align: center;\n            padding: 10px;\n            margin-bottom: 25px;\n            border-bottom: 2px solid rgba(139, 115, 85, 0.3);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 15px;\n        }\n        .creator-header h1 {\n            font-family: var(--font-display);\n            font-size: clamp(24px, 5vw, 32px);\n            margin: 0;\n            font-weight: 700;\n            letter-spacing: 3px;\n            color: var(--heading-color);\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.1);\n        }\n        \n        .title-char {\n            display: inline-block;\n            opacity: 0;\n            transform: translateY(30px);\n        }\n\n        .wax-seal {\n            width: 45px;\n            height: 45px;\n            display: inline-block;\n            background-color: #c0392b;\n            border-radius: 50%;\n            position: relative;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.4), inset 0 -2px 3px rgba(0,0,0,0.3);\n            opacity: 0;\n            transform: scale(0.5);\n            font-family: 'Cinzel', serif;\n            color: #e7a49c;\n            text-align: center;\n            font-size: 24px;\n            line-height: 45px;\n            font-weight: 700;\n        }\n        .wax-seal::before {\n            content: 'GS';\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.3);\n        }\n\n        .creator-scroll-content { overflow-y: auto; padding: 10px 20px 10px 10px; }\n        .creator-scroll-content::-webkit-scrollbar { width: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-track { background: rgba(139, 115, 85, 0.1); border-radius: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-thumb { background-color: #a89072; border-radius: 10px; border: 2px solid #f7e9d7; }\n        \n        .gs-creator-step { margin-bottom: 40px; overflow: hidden; }\n        .gs-creator-step h3 { font-family: var(--font-display); font-size: 1.5em; font-weight: 700; border-bottom: 1.5px solid var(--border-color); padding-bottom: 8px; margin-bottom: 20px; color: var(--heading-color); text-align: left; }\n        \n        .layout-grid { display: grid; grid-template-columns: 1fr; gap: 25px; align-items: flex-start; }\n        @media (min-width: 768px) {\n            .layout-grid { grid-template-columns: 1fr 280px; }\n        }\n\n        .form-container { text-align: left; }\n        .gs-form-group { margin-bottom: 16px; }\n        .gs-form-group label { display: block; margin-bottom: 6px; font-weight: bold; color: var(--heading-color); }\n        .form-input, .form-select, .form-textarea { width: 100%; padding: 10px; background-color: rgba(255, 255, 255, 0.5); border: 1px solid #a58e72; border-radius: 4px; color: #3d3d3d; font-family: var(--font-main); font-size: 1em; transition: all 0.2s ease-in-out; box-shadow: inset 1px 1px 2px rgba(0,0,0,0.1); }\n        .form-input:focus, .form-select:focus, .form-textarea:focus { outline: none; border-color: #8b7355; background-color: #fff; box-shadow: 0 0 5px rgba(139, 115, 85, 0.5); }\n        .form-textarea { resize: vertical; min-height: 100px; }\n\n        .grid-cols-2 {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 16px;\n        }\n        @media (min-width: 480px) {\n            .grid-cols-2 {\n                grid-template-columns: repeat(2, 1fr);\n            }\n        }\n\n        #attributes-container .point-control { display: flex; align-items: center; justify-content: space-between; margin-bottom: 8px; padding: 6px 8px; background: rgba(0,0,0,0.03); border-left: 3px solid rgba(139,115,85,0.2); border-radius: 4px; }\n        #attributes-container .label { font-weight: bold; color: var(--heading-color); }\n        #attributes-container input[readonly] { width: 40px; text-align: center; font-weight: bold; font-size: 1.2em; font-family: var(--font-display); color: #a02c2c; border: none; background-color: transparent; box-shadow: none; padding: 0; }\n        \n        .attributes-grid {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 0 16px;\n        }\n        @media (min-width: 480px) {\n            .attributes-grid {\n                grid-template-columns: 1fr 1fr;\n            }\n        }\n        \n        .skills-display p { background-color: rgba(0,0,0,0.05); border-left: 3px solid var(--border-color); padding: 10px 15px; margin-top: 10px; font-size: 0.95em; border-radius: 0 4px 4px 0; }\n        .skills-display strong { color: #8b5b4b; font-family: var(--font-display); }\n        .skills-display ul { list-style: none; padding-left: 0; margin-top: 8px; font-size: 0.9em; }\n        .skills-display li { margin-bottom: 4px; }\n\n        #character-summary { background-color: #e9e4d9; font-family: var(--font-code); line-height: 1.6; height: 250px; color: #2c2a2a; }\n        \n        .gs-button { width: 100%; background-color: #8b7355; color: var(--parchment-bg); border: 2px solid var(--dark-leather-bg); border-radius: 5px; padding: 12px 20px; font-family: var(--font-display); font-size: 1.2em; font-weight: 700; cursor: pointer; margin-top: 10px; transition: all 0.3s ease; box-shadow: 0 3px 5px rgba(0,0,0,0.3); }\n        .gs-button:hover { background-color: #a0886c; transform: translateY(-2px); box-shadow: 0 5px 8px rgba(0,0,0,0.3); }\n        .gs-button:disabled { background-color: #9e9e9e; border-color: #757575; cursor: not-allowed; transform: none; box-shadow: none; opacity: 0.6; }\n        .action-button { background-color: #6d5b4b; font-size: 1em; padding: 10px 15px; margin-top: 0; margin-bottom: 10px; width: auto; }\n        \n        .background-display { margin-top: 15px; padding: 15px; border: 1px dashed var(--border-color); border-radius: 5px; background: rgba(0,0,0,0.02); }\n        .background-display p { margin: 0 0 8px; }\n        .background-display span { font-weight: bold; color: var(--heading-color); }\n        \n        #radar-chart-container { \n            max-width: 100%;\n        }\n        @media (min-width: 768px) {\n            #radar-chart-container {\n                position: sticky;\n                top: 0;\n                padding-top: 45px;\n            }\n        }\n\n        pre.mermaid { \n            font-family: var(--font-main); \n            background: rgba(0,0,0,0.02); \n            border: 1px solid rgba(139,115,85,0.1); \n            padding: 10px; \n            border-radius: 5px; \n            overflow: auto;\n            transition: opacity 0.3s ease-in-out;\n        }\n        pre.mermaid.loading { opacity: 0.5; pointer-events: none; }\n\n        pre.mermaid > svg {\n            max-width: 100%;\n            height: auto;\n        }\n\n        #dice-overlay {\n            position: fixed; top: 0; left: 0; width: 100%; height: 100%;\n            background: rgba(0,0,0,0.8); backdrop-filter: blur(5px);\n            display: none; align-items: center; justify-content: center; flex-direction: column;\n            z-index: 100;\n            color: #fff; text-shadow: 0 0 10px #000;\n        }\n\n        .dice-container {\n            display: flex; flex-wrap: wrap; justify-content: center;\n            gap: 2rem; margin-bottom: 2rem;\n            max-width: 600px;\n        }\n        \n        .dice-icon {\n            width: var(--dice-size); height: var(--dice-size);\n            perspective: 800px;\n            transform-style: preserve-3d;\n            display: none;\n        }\n        .dice-icon.highlight {\n            transform: scale(1.15);\n            filter: drop-shadow(0 0 15px #FFEB3B);\n            transition: transform 0.3s ease, filter 0.3s ease;\n        }\n\n        .dice-cube {\n            width: 100%; height: 100%;\n            position: relative;\n            transform-style: preserve-3d;\n            transform: translateZ(calc(var(--dice-size) / -2));\n        }\n        \n        .dice-face {\n            position: absolute;\n            width: var(--dice-size); height: var(--dice-size);\n            background-color: rgba(255, 255, 255, 0.98);\n            border: 1.5px solid #857e72;\n            border-radius: 12%;\n        }\n\n        .pips-container {\n            width: 100%; height: 100%;\n            position: relative; \n        }\n        .pip {\n            width: 22%; height: 22%; \n            background-color: #3d352e;\n            border-radius: 50%;\n            box-shadow: inset 0 1px 3px rgba(0,0,0,0.5);\n            position: absolute; \n        }\n        \n        #dice-result-text { \n            font-family: var(--font-display); \n            font-size: 2.2em;\n            color: #FFEB3B; \n            text-shadow: 0 0 12px #FFEB3B; \n            min-height: 2em;\n            line-height: 1.2;\n            text-align: center; \n        }\n        \n        #skip-animation-btn {\n            position: absolute;\n            bottom: 30px;\n            font-size: 1em;\n            padding: 8px 20px;\n            width: auto;\n            background-color: rgba(0,0,0,0.3);\n            border-color: rgba(255,255,255,0.5);\n            color: rgba(255,255,255,0.8);\n        }\n        #skip-animation-btn:hover {\n            background-color: rgba(0,0,0,0.5);\n            color: #fff;\n        }\n\n        .typed-cursor {\n            opacity: 1;\n            animation: typed-blink 0.7s infinite;\n        }\n        @keyframes typed-blink{\n            0% { opacity: 1; }\n            50% { opacity: 0; }\n            100% { opacity: 1; }\n        }\n        \n        .validation-message {\n            text-align: center;\n            color: #b71c1c;\n            font-size: 0.9em;\n            font-weight: bold;\n            margin-top: -5px;\n            margin-bottom: 10px;\n            height: 1.2em;\n            opacity: 0;\n            will-change: transform, opacity;\n        }\n\n        #credits-screen {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            pointer-events: none;\n            opacity: 0;\n        }\n\n        #credits-screen p {\n            font-family: var(--font-display);\n            font-size: 2em;\n            color: #f5f5dc;\n            text-shadow: 0 0 8px rgba(245, 245, 220, 0.7);\n        }\n    </style>\n</head>\n<body>\n\n<div class=\"creator-wrapper\">\n    <div class=\"border-flow\"></div>\n    <div class=\"inner-border\"></div>\n    <header class=\"creator-header\">\n        <h1 id=\"main-title\">冒险者契约登记</h1>\n        <div id=\"wax-seal\" class=\"wax-seal\"></div>\n    </header>\n\n    <div class=\"creator-scroll-content\">\n        <div class=\"gs-creator-container\">\n            <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第一步：身份确认</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-name-input\">姓名</label><input id=\"char-name-input\" type=\"text\" placeholder=\"可留空，默认为 {{user}}\" class=\"form-input\"></div>\n                    <div class=\"grid-cols-2 gsap-content-item\">\n                        <div class=\"gs-form-group\"><label for=\"char-gender-input\">性别</label><input id=\"char-gender-input\" type=\"text\" placeholder=\"例如: 男性/女性/双性/无性/……\" class=\"form-input\"></div>\n                        <div class=\"gs-form-group\"><label for=\"char-age-input\">年龄</label><input id=\"char-age-input\" type=\"number\" placeholder=\"可参照种族说明\" class=\"form-input\"></div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-race-select\">种族</label><select id=\"char-race-select\" class=\"form-select\"></select></div>\n                    <div class=\"gs-form-group gsap-content-item\">\n                        <label>经历 (出身/来历/邂逅)</label>\n                        <button id=\"roll-background-btn\" class=\"gs-button action-button\">🎲 投骰决定经历</button>\n                        <div id=\"background-display\" class=\"background-display\" style=\"display: none;\">\n                            <p>出身: <span id=\"bg-origin\"></span></p>\n                            <p>来历: <span id=\"bg-past\"></span></p>\n                            <p>邂逅: <span id=\"bg-encounter\"></span></p>\n                        </div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"oc-details-input\">身体特征与补充</label><textarea id=\"oc-details-input\" placeholder=\"发色、瞳色、体型、性格、背景故事构思...\" class=\"form-textarea\"></textarea></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第二步：能力值与技能</h3>\n                <div class=\"layout-grid\">\n                    <div class=\"form-container gsap-content-item\">\n                        <button id=\"roll-attributes-btn\" class=\"gs-button action-button\">🎲 投骰决定能力值</button>\n                        <div id=\"attributes-container\" class=\"attributes-grid\"></div>\n                        <div id=\"skills-and-desc-container\" class=\"skills-display\"></div>\n                    </div>\n                    <div id=\"radar-chart-container\" class=\"gsap-content-item\"><pre class=\"mermaid\" id=\"radar-chart\"></pre></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第三步：完成登记</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"character-summary\">角色卡预览</label><textarea id=\"character-summary\" rows=\"12\" readonly class=\"form-textarea\"></textarea></div>\n                    <button id=\"submit-btn\" class=\"gs-button gsap-content-item\" disabled>确认登记，开始冒险</button>\n                    <div id=\"validation-message\" class=\"validation-message\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div id=\"credits-screen\">\n    <p>作者 𝙀𝙡𝙖𝙞𝙣𝙖𝙙𝙚𝙨</p>\n</div>\n\n<div id=\"dice-overlay\">\n    <div class=\"dice-container\" id=\"dice-container\"></div>\n    <div id=\"dice-result-text\"></div>\n    <button id=\"skip-animation-btn\" class=\"gs-button\">跳过动画</button>\n</div>\n\n<div id=\"dice-templates\" style=\"display:none;\">\n    <div class=\"dice-cube\" data-id_template=\"dice-cube\">\n        <div class=\"dice-face face-front\" data-face=\"1\"><div class=\"pips-container\"><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-back\" data-face=\"6\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-right\" data-face=\"3\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-left\" data-face=\"4\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-top\" data-face=\"2\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-bottom\" data-face=\"5\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n    </div>\n</div>\n\n<script>\n// --- MODIFIED DATA ---\nconst raceData = {\n    '凡人': { attr_rolls: { '力量': '1d3+1', '敏捷': '1d3', '感知': '1d3', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3+2', '魔力': '1d3' }, skills: ['过载行动(初级)', '武器:投掷武器(初级)', '长距离移动(初级)']},\n    '矿人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3', '感知': '1d3+2', '知识': '1d3-1', '魅力': '1d3+1', '信仰力': '1d3+1', '魔力': '1d3-1' }, skills: ['治愈适性(初级)', '夜视(初级)', '锻造(初级)']},\n    '森人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+1', '感知': '1d3+1', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3-1', '魔力': '1d3+1' }, skills: ['武器:弩弓(初级)', '夜视(初级)', '精灵宠儿(初级)']},\n    '蜥蜴人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3+1', '感知': '1d3', '知识': '1d3', '魅力': '1d3+1', '信仰力': '1d3', '魔力': '1d3' }, skills: ['免疫强化(初级)', '夜视(初级)', '龙族血统(初级)']},\n    '圃人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+2', '感知': '1d3+1', '知识': '1d3', '魅力': '1d3-1', '信仰力': '1d3', '魔力': '1d3+2' }, skills: ['隐匿(初级)', '先发制人(初级)', '烹饪(初级)']}\n};\nconst backgroundData = {\n    origin: { \n        '凡人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '学者', class: '魔术师', level: 1, skills: ['文献调查(初级)'] }, 6: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 7: { name: '农民', skills: ['生产业:农业(初级)', '强健(初级)'] }, 8: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '骑士', class: '战士', level: 1, skills: ['骑乘(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n        '矿人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 6: { name: '酒馆老板', class: '战士', level: 1, skills: ['观察(初级)'] }, 7: { name: '铁匠', skills: ['工匠:锻造(初级)', '手工(初级)'] }, 8: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '碎盾者', class: '战士', level: 1, skills: ['强击攻击·斩(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n    },\n    past: { 2: { name: '奴隶', skills: ['劳动(初级)'] }, 3: { name: '牢狱', skills: ['犯罪知识(初级)'] }, 4: { name: '战场', skills: ['沉着冷静(初级)'] }, 5: { name: '神殿', skills: ['神学(初级)'] }, 6: { name: '孤儿', skills: ['忍耐(初级)'] }, 7: { name: '平顺', skills: ['幸运(初级)'] }, 8: { name: '贫困', skills: ['生存术(初级)'] }, 9: { name: '学校', skills: ['博识(初级)'] }, 10: { name: '深闺', skills: ['无偏见(初级)'] }, 11: { name: '奢华', skills: ['鉴定(初级)'] }, 12: { name: '宫廷', skills: ['礼仪(初级)'] }},\n    encounter: { 2: '宿敌', 3: '上司', 4: '后辈', 5: '交易对象', 6: '下属', 7: '家人', 8: '挚友', 9: '前辈', 10: '未婚夫/妻', 11: '劲敌', 12: '师父' }\n};\nbackgroundData.origin['森人'] = backgroundData.origin['凡人']; backgroundData.origin['蜥蜴人'] = backgroundData.origin['凡人']; backgroundData.origin['圃人'] = backgroundData.origin['凡人'];\nconst character = {\n    name: '', gender: '', age: '', oc_details: '', race: '凡人',\n    background: { origin: null, past: null, encounter: null },\n    attributes: { '力量': 0, '敏捷': 0, '感知': 0, '知识': 0, '魅力': 0, '信仰力': 0, '魔力': 0, '潜力': 0 },\n    skills: [], classes: {}, money: 0, _lastAttributesForChart: '',\n};\n// --- END MODIFIED DATA ---\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    gsap.registerPlugin(TextPlugin);\n    mermaid.initialize({ startOnLoad: true, theme: 'base', themeVariables: {\n        '--mermaid-font-family': \"'Vollkorn', 'Noto Serif SC', serif\",\n        primaryColor: '#f7e9d7', primaryTextColor: '#3d3d3d', lineColor: '#8b7355', textColor: '#4a3c2c',\n    }});\n    \n    const $ = (s) => document.querySelector(s);\n    const roll1D6 = () => Math.floor(Math.random() * 6) + 1;\n    const roll1D3 = () => {\n        const d6 = roll1D6();\n        if (d6 <= 2) return { d6, d3: 1 };\n        if (d6 <= 4) return { d6, d3: 2 };\n        return { d6, d3: 3 };\n    };\n    const rollDiceString = (diceString) => { const p=diceString.split('*');const d=p[0];const m=parseInt(p[1])||1;if(!d.includes('d'))return 0;const[n,s]=d.split('d').map(Number);let t=0;for(let i=0;i<n;i++){t+=Math.floor(Math.random()*s)+1;}return t*m; };\n    const formatAge = (ageValue) => { if (!ageValue && ageValue !== 0) return ageValue; const num = Number(ageValue); if (isNaN(num)) return ageValue; if (Math.abs(num) >= 1_000_000) return num.toExponential(2); return ageValue; };\n    const debounce = (func, delay) => { let timeout; return function(...args) { clearTimeout(timeout); timeout = setTimeout(() => func.apply(this, args), delay); }; };\n    const diceUnicode = ['\\u2680', '\\u2681', '\\u2682', '\\u2683', '\\u2684', '\\u2685'];\n\n    const DOM = {\n        nameInput: $('#char-name-input'), genderInput: $('#char-gender-input'), ageInput: $('#char-age-input'),\n        ocDetailsInput: $('#oc-details-input'), raceSelect: $('#char-race-select'), attributesContainer: $('#attributes-container'),\n        skillsContainer: $('#skills-and-desc-container'), radarChart: $('#radar-chart'), summarySheet: $('#character-summary'),\n        diceOverlay: $('#dice-overlay'), diceContainer: $('#dice-container'), diceResultText: $('#dice-result-text'),\n        backgroundDisplay: $('#background-display'), bgOrigin: $('#bg-origin'), bgPast: $('#bg-past'), bgEncounter: $('#bg-encounter'),\n        skipAnimationBtn: $('#skip-animation-btn'),\n        submitBtn: $('#submit-btn'),\n        validationMessage: $('#validation-message'),\n    };\n    \n    const dicePool = []; const MAX_DICE = 6;\n    let currentAnimation = null; let textAnimation = null; let isSkipping = false;\n    let currentValidationMessage = '';\n    \n    function validateAndToggleButton() {\n        let newMessage = '';\n        if (!character.age || String(character.age).trim() === '') {\n            newMessage = '请填写您的冒险者年龄。';\n        } else if (!character.gender || !character.gender.trim()) {\n            newMessage = '请设定冒险者的性别。';\n        } else if (!character.background.origin) {\n            newMessage = '请投骰决定您的冒险者经历。';\n        } else if (Object.values(character.attributes).every(val => val === 0)) {\n            newMessage = '请投骰决定您的能力值。';\n        }\n\n        if (newMessage === currentValidationMessage) return;\n        currentValidationMessage = newMessage;\n\n        if (newMessage) {\n            DOM.submitBtn.disabled = true;\n            DOM.validationMessage.textContent = newMessage;\n            gsap.fromTo(DOM.validationMessage, { autoAlpha: 0, scale: 0.8 }, { autoAlpha: 1, scale: 1, duration: 0.4, ease: 'elastic.out(1, 0.75)' });\n        } else {\n            DOM.submitBtn.disabled = false;\n            gsap.to(DOM.validationMessage, { autoAlpha: 0, duration: 0.3 });\n        }\n    }\n    function updateCharacterDataFromDOM() { character.name = DOM.nameInput.value; character.gender = DOM.genderInput.value; character.age = DOM.ageInput.value; character.oc_details = DOM.ocDetailsInput.value; character.race = DOM.raceSelect.value; }\n    function renderSkills() { const uniqueSkills = [...new Set(character.skills)]; DOM.skillsContainer.innerHTML = `<p><strong>天赋与习得技能:</strong></p><ul>${uniqueSkills.map(s => `<li>- ${s}</li>`).join('')}</ul>`; }\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key}`).value = value; }); }\n    function renderSummary() {\n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '?';\n        const originText = `出身:${character.background.origin ? character.background.origin.name : '?'}`;\n        const pastText = `来历:${character.background.past ? character.background.past.name : '?'}`;\n        const encounterText = `邂逅:${character.background.encounter || '?'}`;\n        let summary = `### 《哥布林杀手TRPG》冒险者登记卡\\n` + `**姓名:** ${finalName} | **种族:** ${character.race} | **性别:** ${character.gender || '?'} | **年龄:** ${formattedAge}\\n` + `**经历:** ${originText} / ${pastText} / ${encounterText}\\n` + `**初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n` + `**初始技能:** ${uniqueSkills.join(', ') || '无'}\\n`; if (character.oc_details) { summary += `**身体特征与补充:** ${character.oc_details}\\n`; } summary += `---\\n**能力值:**\\n`; summary += Object.entries(character.attributes).map(([key, value]) => `- ${key}: ${value}`).join('\\n'); summary += `\\n**持有资金:** ${character.money} 银币`;\n        DOM.summarySheet.value = summary.replace(/### /g, '').replace(/\\*\\*/g, '').replace(/---/g, '\\n────────────────────\\n').replace(/- /g, '  ');\n        DOM.summarySheet.setAttribute('data-raw', summary);\n    }\n    async function renderRadarChartIfNeeded() { const currentAttributesString = JSON.stringify(character.attributes); if (currentAttributesString === character._lastAttributesForChart) return; DOM.radarChart.classList.add('loading'); const radarSyntax = `radar-beta\\ntitle 能力值分布\\naxis a[\"力量 ${character.attributes['力量']}\"]\\naxis b[\"敏捷 ${character.attributes['敏捷']}\"]\\naxis c[\"感知 ${character.attributes['感知']}\"]\\naxis d[\"知识 ${character.attributes['知识']}\"]\\naxis e[\"魅力 ${character.attributes['魅力']}\"]\\naxis f[\"信仰 ${character.attributes['信仰力']}\"]\\naxis g[\"魔力 ${character.attributes['魔力']}\"]\\naxis h[\"潜力 ${character.attributes['潜力']}\"]\\ncurve current[\"能力\"]{${character.attributes['力量']},${character.attributes['敏捷']},${character.attributes['感知']},${character.attributes['知识']},${character.attributes['魅力']},${character.attributes['信仰力']},${character.attributes['魔力']},${character.attributes['潜力']}}\\nmax 10\\nmin 0`; DOM.radarChart.innerHTML = radarSyntax; DOM.radarChart.removeAttribute('data-processed'); try { await mermaid.run({ nodes: [DOM.radarChart] }); character._lastAttributesForChart = currentAttributesString; } catch(e) { console.error(\"Mermaid rendering error:\", e); } finally { DOM.radarChart.classList.remove('loading'); } }\n    async function updateUI(forceFullUpdate = false) { updateCharacterDataFromDOM(); if(forceFullUpdate) { character._lastAttributesForChart = ''; character.skills = []; character.classes = {}; character.money = 100; if(raceData[character.race].skills) character.skills.push(...raceData[character.race].skills); if (character.background.origin) { if (character.background.origin.skills) character.skills.push(...character.background.origin.skills); if (character.background.origin.class) character.classes[character.background.origin.class] = character.background.origin.level; if(character.background.origin.money) character.money += rollDiceString(character.background.origin.money); } if (character.background.past && character.background.past.skills) { character.skills.push(...character.background.past.skills); } } renderAttributes(); renderSkills(); renderSummary(); await renderRadarChartIfNeeded(); validateAndToggleButton(); }\n\n    const masterTl = gsap.timeline({ delay: 0.2 });\n    const title = $('#main-title');\n    title.innerHTML = title.textContent.split('').map(char => `<span class=\"title-char\">${char}</span>`).join('');\n    gsap.set(\".gsap-header-item, .gsap-content-item\", { autoAlpha: 0, y: 20 });\n    masterTl.to(\".title-char\", { autoAlpha: 1, y: 0, duration: 0.7, ease: \"power3.out\", stagger: 0.1 }).to(\"#wax-seal\", { autoAlpha: 1, scale: 1, duration: 0.6, ease: \"elastic.out(1, 0.7)\" }, \"-=0.5\");\n    document.querySelectorAll('.gs-creator-step').forEach((step, index) => { const stepTl = gsap.timeline(); stepTl.to(step.querySelector('.gsap-header-item'), { autoAlpha: 1, y: 0, duration: 0.6, ease: 'power2.out' }).to(step.querySelectorAll('.gsap-content-item'), { autoAlpha: 1, y: 0, duration: 0.5, ease: 'power2.out', stagger: 0.1 }, '-=0.4'); masterTl.add(stepTl, `-=${index === 0 ? 0.2 : 0.7}`); });\n    const pipPositions = { 1: [ { left: '50%', top: '50%' } ], 2: [ { left: '25%', top: '25%' }, { left: '75%', top: '75%' } ], 3: [ { left: '25%', top: '25%' }, { left: '50%', top: '50%' }, { left: '75%', top: '75%' } ], 4: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 5: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '50%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 6: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '50%' }, { left: '75%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ]};\n    function setupCube(cubeEl) { const size = 'calc(var(--dice-size) / 2)'; gsap.set(cubeEl.querySelector('.face-front'),  { transform: `rotateY(0deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-back'),   { transform: `rotateY(180deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-right'),  { transform: `rotateY(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-left'),   { transform: `rotateY(-90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-top'),   { transform: `rotateX(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-bottom'), { transform: `rotateX(-90deg) translateZ(${size})` }); const faces = cubeEl.querySelectorAll('.dice-face'); faces.forEach(face => { const faceNum = face.getAttribute('data-face'); const pips = face.querySelectorAll('.pip'); const positions = pipPositions[faceNum]; if (!pips.length || !positions) return; pips.forEach((pip, index) => { const pos = positions[index]; gsap.set(pip, { left: pos.left, top: pos.top, xPercent: -50, yPercent: -50 }); }); }); }\n    function getRotationForFace(faceValue) { switch (faceValue) { case 1: return { x: 0, y: 0 }; case 6: return { x: 0, y: 180 }; case 3: return { x: 0, y: -90 }; case 4: return { x: 0, y: 90 }; case 2: return { x: -90, y: 0 }; case 5: return { x: 90,  y: 0 }; default: return { x: 0, y: 0 }; } }\n    async function animateText(element, text) { if(isSkipping) {element.innerHTML = text.replace(/\\n/g, '<br>'); return;} return new Promise(resolve => { if (textAnimation && textAnimation.isActive()) textAnimation.kill(); element.innerHTML = ''; textAnimation = gsap.to(element, { duration: text.length * 0.05, text: { value: text.replace(/\\n/g, '<br>'), newClass: \"typed-cursor\" }, ease: \"none\", onComplete: () => { gsap.delayedCall(0.7, () => { element.querySelector('.typed-cursor')?.remove(); resolve(); }); } }); }); }\n    function initDicePool() { const diceTemplate = document.querySelector('[data-id_template=\"dice-cube\"]'); if (!diceTemplate) return; for (let i = 0; i < MAX_DICE; i++) { const dieIconElement = document.createElement('div'); dieIconElement.className = 'dice-icon'; const newCube = diceTemplate.cloneNode(true); dieIconElement.appendChild(newCube); DOM.diceContainer.appendChild(dieIconElement); setupCube(newCube); dicePool.push(dieIconElement); } }\n    async function animateRoll(numDice, preCalculatedRolls, textToShowDuringRoll = \"投掷中...\") { return new Promise(resolve => { if (currentAnimation && currentAnimation.isActive()) currentAnimation.kill(); dicePool.forEach(die => die.style.display = 'none'); const activeDice = dicePool.slice(0, numDice); animateText(DOM.diceResultText, textToShowDuringRoll); activeDice.forEach(die => { die.style.display = 'flex'; die.className = 'dice-icon'; }); const masterTl = gsap.timeline({ onComplete: () => { if(isSkipping) DOM.diceResultText.innerHTML = ''; resolve(preCalculatedRolls); }}); currentAnimation = masterTl; activeDice.forEach((dieElement, i) => { const dieCube = dieElement.querySelector('.dice-cube'); const visualRoll = preCalculatedRolls[i]; const targetRotation = getRotationForFace(visualRoll); const dieTimeline = gsap.timeline(); dieTimeline.to(dieCube, { rotationX: `+=${gsap.utils.random(720, 1080)}`, rotationY: `+=${gsap.utils.random(720, 1080)}`, duration: 1.8, ease: \"power2.in\" }).to(dieCube, { rotationX: targetRotation.x, rotationY: targetRotation.y, duration: 0.7, ease: \"power4.out\" }); masterTl.add(dieTimeline, 0); }); }); }\n    \n    const debouncedUpdate = debounce(updateUI, 400);\n    [DOM.nameInput, DOM.genderInput, DOM.ageInput, DOM.ocDetailsInput].forEach(el => el.addEventListener('input', debouncedUpdate));\n    \n    DOM.skipAnimationBtn.addEventListener('click', () => {\n        isSkipping = true;\n        if (currentAnimation && currentAnimation.isActive()) currentAnimation.progress(1);\n        if (textAnimation && textAnimation.isActive()) textAnimation.progress(1);\n    });\n\n    $('#roll-background-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const rolls = [roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6()];\n        await animateRoll(6, rolls, '投掷 经历... (2d6 x 3)');\n        \n        const sums = { origin: rolls[0] + rolls[1], past: rolls[2] + rolls[3], encounter: rolls[4] + rolls[5] };\n        \n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `出身: ${rolls[0]} + ${rolls[1]} = ${sums.origin}\\n(${backgroundData.origin[character.race][sums.origin].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `来历: ${rolls[2]} + ${rolls[3]} = ${sums.past}\\n(${backgroundData.past[sums.past].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(4, 6), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `邂逅: ${rolls[4]} + ${rolls[5]} = ${sums.encounter}\\n(${backgroundData.encounter[sums.encounter]})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        character.background.origin = backgroundData.origin[character.race][sums.origin];\n        character.background.past = backgroundData.past[sums.past];\n        character.background.encounter = backgroundData.encounter[sums.encounter];\n        DOM.bgOrigin.textContent = character.background.origin.name;\n        DOM.bgPast.textContent = character.background.past.name;\n        DOM.bgEncounter.textContent = character.background.encounter;\n        DOM.backgroundDisplay.style.display = 'block';\n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        updateUI(true);\n    });\n\n    $('#roll-attributes-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const attrRolls = raceData[character.race].attr_rolls;\n        const allCalculatedRolls = [];\n\n        // Prepare race-based attributes\n        for (const attr in attrRolls) {\n            const formula = attrRolls[attr];\n            const modifier = parseInt(formula.split('d3')[1] || '0');\n            const { d6, d3 } = roll1D3();\n            const finalValue = Math.max(0, d3 + modifier);\n            character.attributes[attr] = finalValue;\n            allCalculatedRolls.push({ attr, formula, d6, d3, modifier, finalValue });\n        }\n        \n        // Prepare \"Potential\" attribute\n        const potentialValue = Math.floor(Math.random() * 3) + 1;\n        const d6ForPotential = (potentialValue * 2) - 1; // Map 1,2,3 to d6 faces 1,3,5 for animation\n        character.attributes['潜力'] = potentialValue;\n        allCalculatedRolls.push({\n            attr: '潜力',\n            formula: '1-3', // Just a descriptor\n            d6: d6ForPotential,\n            finalValue: potentialValue\n        });\n        \n        // Animate all rolls sequentially\n        for (const roll of allCalculatedRolls) {\n            await animateRoll(1, [roll.d6], `投掷 ${roll.attr}...`);\n            if (isSkipping) break;\n\n            gsap.to(dicePool[0], { className: 'dice-icon highlight', duration: 0.3 });\n            \n            let resultText;\n            if (roll.attr === '潜力') {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.finalValue}`;\n            } else {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.d3} ${roll.modifier >= 0 ? '+' : ''} ${roll.modifier} = ${roll.finalValue}`;\n            }\n            await animateText(DOM.diceResultText, resultText);\n            \n            await updateUI();\n            \n            if (isSkipping) break;\n            \n            await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        await updateUI();\n    });\n\n    DOM.raceSelect.addEventListener('change', () => {\n        DOM.backgroundDisplay.style.display = 'none';\n        character.background = { origin: null, past: null, encounter: null };\n        Object.keys(character.attributes).forEach(k => character.attributes[k] = 0);\n        updateUI(true);\n    });\n\n    $('#submit-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        await updateUI(true);\n        \n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '未设定';\n        \n        const finalCharacterObject={ NAME:finalName, GENDER:character.gender||'未设定', AGE:formattedAge, RACE:character.race, ORIGIN: character.background.origin ? character.background.origin.name : '未知', PAST: character.background.past ? character.background.past.name : '未知', ENCOUNTER: character.background.encounter || '未知', SKILLS: uniqueSkills, OC_DETAILS:character.oc_details||'无', ...character.attributes, MONEY:character.money };\n        \n        const slashCommand=`/send <START>\\nAdmin:\\n这是一个TRPG开局，请为 User 生成一段详尽的背景故事。\\n\\n# 故事核心要求\\n请严格根据以下【角色完整设定】，撰写一段从角色童年到现在的成长故事。故事需要清晰地阐述是什么关键事件或心路历程，最终让他/她确立了要成为一名冒险者的志向。请在故事中自然地融入角色的种族、出身背景、技能和性格特点。\\n\\n# 角色完整设定\\n---\\n## 基础信息\\n- **姓名:** ${finalName}\\n- **性别:** ${character.gender||'未设定'}\\n- **年龄:** ${formattedAge}\\n- **种族:** ${character.race}\\n\\n## 经历\\n- **出身:** ${character.background.origin ? character.background.origin.name : '未知'}\\n- **来历:** ${character.background.past ? character.background.past.name : '未知'}\\n- **邂逅:** ${character.background.encounter || '未知'}\\n\\n## 背景与技能\\n- **初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n- **初始技能:** ${uniqueSkills.join(', ')||'无'}\\n\\n## 补充设定 (OC)\\n- **额外补充:** ${character.oc_details||'无'}\\n\\n## 能力值\\n- **力量:** ${character.attributes['力量']}\\n- **敏捷:** ${character.attributes['敏捷']}\\n- **感知:** ${character.attributes['感知']}\\n- **知识:** ${character.attributes['知识']}\\n- **魅力:** ${character.attributes['魅力']}\\n- **信仰力:** ${character.attributes['信仰力']}\\n- **魔力:** ${character.attributes['魔力']}\\n\\n## 初始资产\\n- **资金:** ${character.money} 银币\\n\\|\\n/trigger`; \n        \n        try {\n            if (typeof insertOrAssignVariables === 'function') {\n                await insertOrAssignVariables(finalCharacterObject);\n            } else {\n                console.log(\"SillyTavern Function 'insertOrAssignVariables' not found. Variables:\", finalCharacterObject);\n            }\n            if (typeof triggerSlash === 'function') {\n                await triggerSlash(slashCommand, 'Send');\n            } else { \n                console.log(\"SillyTavern Function 'triggerSlash' not found. Command will be copied to clipboard.\");\n                navigator.clipboard.writeText(slashCommand).then(() => {\n                    alert('角色指令已复制到剪贴板！');\n                });\n            }\n        } catch (error) {\n            console.error('与SillyTavern交互失败:', error);\n            alert('与SillyTavern交互失败，请查看浏览器控制台。');\n        }\n\n        e.target.innerHTML = \"契约成立！\";\n    });\n    \n    initDicePool();\n    Object.keys(raceData).forEach(key => DOM.raceSelect.add(new Option(key, key)));\n    Object.keys(character.attributes).forEach(key => {\n        const pointControl = document.createElement('div');\n        pointControl.className = 'point-control';\n        pointControl.innerHTML = `<span class=\"label\">${key}</span><input type=\"text\" id=\"attr-${key.replace(/\\s/g, '')}\" readonly value=\"0\">`; // ID santized just in case\n        DOM.attributesContainer.appendChild(pointControl);\n    });\n    // A small fix for renderAttributes to handle sanitized IDs\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key.replace(/\\s/g, '')}`).value = value; }); }\n    updateUI(true);\n});\n</script>\n\n</body>\n</html>\n```"
  },
  {
    "role": "user",
    "content": "```\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>哥布林杀手TRPG - 冒险者契约</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/gsap.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/TextPlugin.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.min.js\" defer></script>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Noto+Serif+SC:wght@400;700&family=Vollkorn:wght@400;700&family=Courier+Prime&display=swap\" rel=\"stylesheet\">\n\n    <style>\n        :root {\n            --leather-bg: #5a3a2a;\n            --dark-leather-bg: #3b2a1a;\n            --parchment-bg: #f5f5dc;\n            --parchment-bg-gradient: linear-gradient(165deg, #f7e9d7, #e6d5c3);\n            --text-color: #3d3d3d;\n            --heading-color: #4a3c2c;\n            --border-color: #7a5a4a;\n            --font-main: 'Vollkorn', 'Noto Serif SC', serif;\n            --font-display: 'Cinzel', 'Noto Serif SC', serif;\n            --font-code: 'Courier Prime', 'Courier New', monospace;\n            --dice-size: 5rem; \n        }\n\n        html { height: 100%; }\n        body {\n            background-color: #3a2e20;\n            font-family: var(--font-main);\n            color: var(--text-color);\n            margin: 0; padding: 20px;\n            box-sizing: border-box;\n            display: flex;\n            align-items: center; justify-content: center;\n            min-height: 100%;\n        }\n        *, *:before, *:after { box-sizing: inherit; }\n\n        .creator-wrapper {\n            width: 100%; max-width: 900px;\n            margin: 0;\n            background: var(--parchment-bg-gradient);\n            border: 12px solid #8b7355;\n            border-radius: 8px;\n            box-shadow: 0 0 40px rgba(139, 115, 85, 0.3), inset 0 0 30px rgba(255, 255, 255, 0.4);\n            position: relative;\n            overflow: hidden;\n            padding: 25px;\n            display: flex; flex-direction: column;\n            max-height: 95vh;\n        }\n\n        .border-flow, .inner-border { position: absolute; pointer-events: none; }\n        .border-flow { top: 0; left: 0; right: 0; bottom: 0; background: linear-gradient(90deg, rgba(139,115,85,0.1) 1px, transparent 1px), linear-gradient(0deg, rgba(139,115,85,0.1) 1px, transparent 1px); background-size: 20px 20px; animation: borderFlow 15s linear infinite; }\n        .inner-border { top: 5px; left: 5px; right: 5px; bottom: 5px; border: 3px solid rgba(139,115,85,0.3); border-radius: 5px; }\n        @keyframes borderFlow { from { background-position: 0 0; } to { background-position: 20px 20px; } }\n\n        .creator-header {\n            text-align: center;\n            padding: 10px;\n            margin-bottom: 25px;\n            border-bottom: 2px solid rgba(139, 115, 85, 0.3);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 15px;\n        }\n        .creator-header h1 {\n            font-family: var(--font-display);\n            font-size: clamp(24px, 5vw, 32px);\n            margin: 0;\n            font-weight: 700;\n            letter-spacing: 3px;\n            color: var(--heading-color);\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.1);\n        }\n        \n        .title-char {\n            display: inline-block;\n            opacity: 0;\n            transform: translateY(30px);\n        }\n\n        .wax-seal {\n            width: 45px;\n            height: 45px;\n            display: inline-block;\n            background-color: #c0392b;\n            border-radius: 50%;\n            position: relative;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.4), inset 0 -2px 3px rgba(0,0,0,0.3);\n            opacity: 0;\n            transform: scale(0.5);\n            font-family: 'Cinzel', serif;\n            color: #e7a49c;\n            text-align: center;\n            font-size: 24px;\n            line-height: 45px;\n            font-weight: 700;\n        }\n        .wax-seal::before {\n            content: 'GS';\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.3);\n        }\n\n        .creator-scroll-content { overflow-y: auto; padding: 10px 20px 10px 10px; }\n        .creator-scroll-content::-webkit-scrollbar { width: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-track { background: rgba(139, 115, 85, 0.1); border-radius: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-thumb { background-color: #a89072; border-radius: 10px; border: 2px solid #f7e9d7; }\n        \n        .gs-creator-step { margin-bottom: 40px; overflow: hidden; }\n        .gs-creator-step h3 { font-family: var(--font-display); font-size: 1.5em; font-weight: 700; border-bottom: 1.5px solid var(--border-color); padding-bottom: 8px; margin-bottom: 20px; color: var(--heading-color); text-align: left; }\n        \n        .layout-grid { display: grid; grid-template-columns: 1fr; gap: 25px; align-items: flex-start; }\n        @media (min-width: 768px) {\n            .layout-grid { grid-template-columns: 1fr 280px; }\n        }\n\n        .form-container { text-align: left; }\n        .gs-form-group { margin-bottom: 16px; }\n        .gs-form-group label { display: block; margin-bottom: 6px; font-weight: bold; color: var(--heading-color); }\n        .form-input, .form-select, .form-textarea { width: 100%; padding: 10px; background-color: rgba(255, 255, 255, 0.5); border: 1px solid #a58e72; border-radius: 4px; color: #3d3d3d; font-family: var(--font-main); font-size: 1em; transition: all 0.2s ease-in-out; box-shadow: inset 1px 1px 2px rgba(0,0,0,0.1); }\n        .form-input:focus, .form-select:focus, .form-textarea:focus { outline: none; border-color: #8b7355; background-color: #fff; box-shadow: 0 0 5px rgba(139, 115, 85, 0.5); }\n        .form-textarea { resize: vertical; min-height: 100px; }\n\n        .grid-cols-2 {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 16px;\n        }\n        @media (min-width: 480px) {\n            .grid-cols-2 {\n                grid-template-columns: repeat(2, 1fr);\n            }\n        }\n\n        #attributes-container .point-control { display: flex; align-items: center; justify-content: space-between; margin-bottom: 8px; padding: 6px 8px; background: rgba(0,0,0,0.03); border-left: 3px solid rgba(139,115,85,0.2); border-radius: 4px; }\n        #attributes-container .label { font-weight: bold; color: var(--heading-color); }\n        #attributes-container input[readonly] { width: 40px; text-align: center; font-weight: bold; font-size: 1.2em; font-family: var(--font-display); color: #a02c2c; border: none; background-color: transparent; box-shadow: none; padding: 0; }\n        \n        .attributes-grid {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 0 16px;\n        }\n        @media (min-width: 480px) {\n            .attributes-grid {\n                grid-template-columns: 1fr 1fr;\n            }\n        }\n        \n        .skills-display p { background-color: rgba(0,0,0,0.05); border-left: 3px solid var(--border-color); padding: 10px 15px; margin-top: 10px; font-size: 0.95em; border-radius: 0 4px 4px 0; }\n        .skills-display strong { color: #8b5b4b; font-family: var(--font-display); }\n        .skills-display ul { list-style: none; padding-left: 0; margin-top: 8px; font-size: 0.9em; }\n        .skills-display li { margin-bottom: 4px; }\n\n        #character-summary { background-color: #e9e4d9; font-family: var(--font-code); line-height: 1.6; height: 250px; color: #2c2a2a; }\n        \n        .gs-button { width: 100%; background-color: #8b7355; color: var(--parchment-bg); border: 2px solid var(--dark-leather-bg); border-radius: 5px; padding: 12px 20px; font-family: var(--font-display); font-size: 1.2em; font-weight: 700; cursor: pointer; margin-top: 10px; transition: all 0.3s ease; box-shadow: 0 3px 5px rgba(0,0,0,0.3); }\n        .gs-button:hover { background-color: #a0886c; transform: translateY(-2px); box-shadow: 0 5px 8px rgba(0,0,0,0.3); }\n        .gs-button:disabled { background-color: #9e9e9e; border-color: #757575; cursor: not-allowed; transform: none; box-shadow: none; opacity: 0.6; }\n        .action-button { background-color: #6d5b4b; font-size: 1em; padding: 10px 15px; margin-top: 0; margin-bottom: 10px; width: auto; }\n        \n        .background-display { margin-top: 15px; padding: 15px; border: 1px dashed var(--border-color); border-radius: 5px; background: rgba(0,0,0,0.02); }\n        .background-display p { margin: 0 0 8px; }\n        .background-display span { font-weight: bold; color: var(--heading-color); }\n        \n        #radar-chart-container { \n            max-width: 100%;\n        }\n        @media (min-width: 768px) {\n            #radar-chart-container {\n                position: sticky;\n                top: 0;\n                padding-top: 45px;\n            }\n        }\n\n        pre.mermaid { \n            font-family: var(--font-main); \n            background: rgba(0,0,0,0.02); \n            border: 1px solid rgba(139,115,85,0.1); \n            padding: 10px; \n            border-radius: 5px; \n            overflow: auto;\n            transition: opacity 0.3s ease-in-out;\n        }\n        pre.mermaid.loading { opacity: 0.5; pointer-events: none; }\n\n        pre.mermaid > svg {\n            max-width: 100%;\n            height: auto;\n        }\n\n        #dice-overlay {\n            position: fixed; top: 0; left: 0; width: 100%; height: 100%;\n            background: rgba(0,0,0,0.8); backdrop-filter: blur(5px);\n            display: none; align-items: center; justify-content: center; flex-direction: column;\n            z-index: 100;\n            color: #fff; text-shadow: 0 0 10px #000;\n        }\n\n        .dice-container {\n            display: flex; flex-wrap: wrap; justify-content: center;\n            gap: 2rem; margin-bottom: 2rem;\n            max-width: 600px;\n        }\n        \n        .dice-icon {\n            width: var(--dice-size); height: var(--dice-size);\n            perspective: 800px;\n            transform-style: preserve-3d;\n            display: none;\n        }\n        .dice-icon.highlight {\n            transform: scale(1.15);\n            filter: drop-shadow(0 0 15px #FFEB3B);\n            transition: transform 0.3s ease, filter 0.3s ease;\n        }\n\n        .dice-cube {\n            width: 100%; height: 100%;\n            position: relative;\n            transform-style: preserve-3d;\n            transform: translateZ(calc(var(--dice-size) / -2));\n        }\n        \n        .dice-face {\n            position: absolute;\n            width: var(--dice-size); height: var(--dice-size);\n            background-color: rgba(255, 255, 255, 0.98);\n            border: 1.5px solid #857e72;\n            border-radius: 12%;\n        }\n\n        .pips-container {\n            width: 100%; height: 100%;\n            position: relative; \n        }\n        .pip {\n            width: 22%; height: 22%; \n            background-color: #3d352e;\n            border-radius: 50%;\n            box-shadow: inset 0 1px 3px rgba(0,0,0,0.5);\n            position: absolute; \n        }\n        \n        #dice-result-text { \n            font-family: var(--font-display); \n            font-size: 2.2em;\n            color: #FFEB3B; \n            text-shadow: 0 0 12px #FFEB3B; \n            min-height: 2em;\n            line-height: 1.2;\n            text-align: center; \n        }\n        \n        #skip-animation-btn {\n            position: absolute;\n            bottom: 30px;\n            font-size: 1em;\n            padding: 8px 20px;\n            width: auto;\n            background-color: rgba(0,0,0,0.3);\n            border-color: rgba(255,255,255,0.5);\n            color: rgba(255,255,255,0.8);\n        }\n        #skip-animation-btn:hover {\n            background-color: rgba(0,0,0,0.5);\n            color: #fff;\n        }\n\n        .typed-cursor {\n            opacity: 1;\n            animation: typed-blink 0.7s infinite;\n        }\n        @keyframes typed-blink{\n            0% { opacity: 1; }\n            50% { opacity: 0; }\n            100% { opacity: 1; }\n        }\n        \n        .validation-message {\n            text-align: center;\n            color: #b71c1c;\n            font-size: 0.9em;\n            font-weight: bold;\n            margin-top: -5px;\n            margin-bottom: 10px;\n            height: 1.2em;\n            opacity: 0;\n            will-change: transform, opacity;\n        }\n\n        #credits-screen {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            pointer-events: none;\n            opacity: 0;\n        }\n\n        #credits-screen p {\n            font-family: var(--font-display);\n            font-size: 2em;\n            color: #f5f5dc;\n            text-shadow: 0 0 8px rgba(245, 245, 220, 0.7);\n        }\n    </style>\n</head>\n<body>\n\n<div class=\"creator-wrapper\">\n    <div class=\"border-flow\"></div>\n    <div class=\"inner-border\"></div>\n    <header class=\"creator-header\">\n        <h1 id=\"main-title\">冒险者契约登记</h1>\n        <div id=\"wax-seal\" class=\"wax-seal\"></div>\n    </header>\n\n    <div class=\"creator-scroll-content\">\n        <div class=\"gs-creator-container\">\n            <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第一步：身份确认</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-name-input\">姓名</label><input id=\"char-name-input\" type=\"text\" placeholder=\"可留空，默认为 {{user}}\" class=\"form-input\"></div>\n                    <div class=\"grid-cols-2 gsap-content-item\">\n                        <div class=\"gs-form-group\"><label for=\"char-gender-input\">性别</label><input id=\"char-gender-input\" type=\"text\" placeholder=\"例如: 男性/女性/双性/无性/……\" class=\"form-input\"></div>\n                        <div class=\"gs-form-group\"><label for=\"char-age-input\">年龄</label><input id=\"char-age-input\" type=\"number\" placeholder=\"可参照种族说明\" class=\"form-input\"></div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-race-select\">种族</label><select id=\"char-race-select\" class=\"form-select\"></select></div>\n                    <div class=\"gs-form-group gsap-content-item\">\n                        <label>经历 (出身/来历/邂逅)</label>\n                        <button id=\"roll-background-btn\" class=\"gs-button action-button\">🎲 投骰决定经历</button>\n                        <div id=\"background-display\" class=\"background-display\" style=\"display: none;\">\n                            <p>出身: <span id=\"bg-origin\"></span></p>\n                            <p>来历: <span id=\"bg-past\"></span></p>\n                            <p>邂逅: <span id=\"bg-encounter\"></span></p>\n                        </div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"oc-details-input\">身体特征与补充</label><textarea id=\"oc-details-input\" placeholder=\"发色、瞳色、体型、性格、背景故事构思...\" class=\"form-textarea\"></textarea></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第二步：能力值与技能</h3>\n                <div class=\"layout-grid\">\n                    <div class=\"form-container gsap-content-item\">\n                        <button id=\"roll-attributes-btn\" class=\"gs-button action-button\">🎲 投骰决定能力值</button>\n                        <div id=\"attributes-container\" class=\"attributes-grid\"></div>\n                        <div id=\"skills-and-desc-container\" class=\"skills-display\"></div>\n                    </div>\n                    <div id=\"radar-chart-container\" class=\"gsap-content-item\"><pre class=\"mermaid\" id=\"radar-chart\"></pre></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第三步：完成登记</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"character-summary\">角色卡预览</label><textarea id=\"character-summary\" rows=\"12\" readonly class=\"form-textarea\"></textarea></div>\n                    <button id=\"submit-btn\" class=\"gs-button gsap-content-item\" disabled>确认登记，开始冒险</button>\n                    <div id=\"validation-message\" class=\"validation-message\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div id=\"credits-screen\">\n    <p>作者 𝙀𝙡𝙖𝙞𝙣𝙖𝙙𝙚𝙨</p>\n</div>\n\n<div id=\"dice-overlay\">\n    <div class=\"dice-container\" id=\"dice-container\"></div>\n    <div id=\"dice-result-text\"></div>\n    <button id=\"skip-animation-btn\" class=\"gs-button\">跳过动画</button>\n</div>\n\n<div id=\"dice-templates\" style=\"display:none;\">\n    <div class=\"dice-cube\" data-id_template=\"dice-cube\">\n        <div class=\"dice-face face-front\" data-face=\"1\"><div class=\"pips-container\"><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-back\" data-face=\"6\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-right\" data-face=\"3\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-left\" data-face=\"4\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-top\" data-face=\"2\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-bottom\" data-face=\"5\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n    </div>\n</div>\n\n<script>\n// --- MODIFIED DATA ---\nconst raceData = {\n    '凡人': { attr_rolls: { '力量': '1d3+1', '敏捷': '1d3', '感知': '1d3', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3+2', '魔力': '1d3' }, skills: ['过载行动(初级)', '武器:投掷武器(初级)', '长距离移动(初级)']},\n    '矿人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3', '感知': '1d3+2', '知识': '1d3-1', '魅力': '1d3+1', '信仰力': '1d3+1', '魔力': '1d3-1' }, skills: ['治愈适性(初级)', '夜视(初级)', '锻造(初级)']},\n    '森人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+1', '感知': '1d3+1', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3-1', '魔力': '1d3+1' }, skills: ['武器:弩弓(初级)', '夜视(初级)', '精灵宠儿(初级)']},\n    '蜥蜴人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3+1', '感知': '1d3', '知识': '1d3', '魅力': '1d3+1', '信仰力': '1d3', '魔力': '1d3' }, skills: ['免疫强化(初级)', '夜视(初级)', '龙族血统(初级)']},\n    '圃人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+2', '感知': '1d3+1', '知识': '1d3', '魅力': '1d3-1', '信仰力': '1d3', '魔力': '1d3+2' }, skills: ['隐匿(初级)', '先发制人(初级)', '烹饪(初级)']}\n};\nconst backgroundData = {\n    origin: { \n        '凡人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '学者', class: '魔术师', level: 1, skills: ['文献调查(初级)'] }, 6: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 7: { name: '农民', skills: ['生产业:农业(初级)', '强健(初级)'] }, 8: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '骑士', class: '战士', level: 1, skills: ['骑乘(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n        '矿人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 6: { name: '酒馆老板', class: '战士', level: 1, skills: ['观察(初级)'] }, 7: { name: '铁匠', skills: ['工匠:锻造(初级)', '手工(初级)'] }, 8: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '碎盾者', class: '战士', level: 1, skills: ['强击攻击·斩(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n    },\n    past: { 2: { name: '奴隶', skills: ['劳动(初级)'] }, 3: { name: '牢狱', skills: ['犯罪知识(初级)'] }, 4: { name: '战场', skills: ['沉着冷静(初级)'] }, 5: { name: '神殿', skills: ['神学(初级)'] }, 6: { name: '孤儿', skills: ['忍耐(初级)'] }, 7: { name: '平顺', skills: ['幸运(初级)'] }, 8: { name: '贫困', skills: ['生存术(初级)'] }, 9: { name: '学校', skills: ['博识(初级)'] }, 10: { name: '深闺', skills: ['无偏见(初级)'] }, 11: { name: '奢华', skills: ['鉴定(初级)'] }, 12: { name: '宫廷', skills: ['礼仪(初级)'] }},\n    encounter: { 2: '宿敌', 3: '上司', 4: '后辈', 5: '交易对象', 6: '下属', 7: '家人', 8: '挚友', 9: '前辈', 10: '未婚夫/妻', 11: '劲敌', 12: '师父' }\n};\nbackgroundData.origin['森人'] = backgroundData.origin['凡人']; backgroundData.origin['蜥蜴人'] = backgroundData.origin['凡人']; backgroundData.origin['圃人'] = backgroundData.origin['凡人'];\nconst character = {\n    name: '', gender: '', age: '', oc_details: '', race: '凡人',\n    background: { origin: null, past: null, encounter: null },\n    attributes: { '力量': 0, '敏捷': 0, '感知': 0, '知识': 0, '魅力': 0, '信仰力': 0, '魔力': 0, '潜力': 0 },\n    skills: [], classes: {}, money: 0, _lastAttributesForChart: '',\n};\n// --- END MODIFIED DATA ---\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    gsap.registerPlugin(TextPlugin);\n    mermaid.initialize({ startOnLoad: true, theme: 'base', themeVariables: {\n        '--mermaid-font-family': \"'Vollkorn', 'Noto Serif SC', serif\",\n        primaryColor: '#f7e9d7', primaryTextColor: '#3d3d3d', lineColor: '#8b7355', textColor: '#4a3c2c',\n    }});\n    \n    const $ = (s) => document.querySelector(s);\n    const roll1D6 = () => Math.floor(Math.random() * 6) + 1;\n    const roll1D3 = () => {\n        const d6 = roll1D6();\n        if (d6 <= 2) return { d6, d3: 1 };\n        if (d6 <= 4) return { d6, d3: 2 };\n        return { d6, d3: 3 };\n    };\n    const rollDiceString = (diceString) => { const p=diceString.split('*');const d=p[0];const m=parseInt(p[1])||1;if(!d.includes('d'))return 0;const[n,s]=d.split('d').map(Number);let t=0;for(let i=0;i<n;i++){t+=Math.floor(Math.random()*s)+1;}return t*m; };\n    const formatAge = (ageValue) => { if (!ageValue && ageValue !== 0) return ageValue; const num = Number(ageValue); if (isNaN(num)) return ageValue; if (Math.abs(num) >= 1_000_000) return num.toExponential(2); return ageValue; };\n    const debounce = (func, delay) => { let timeout; return function(...args) { clearTimeout(timeout); timeout = setTimeout(() => func.apply(this, args), delay); }; };\n    const diceUnicode = ['\\u2680', '\\u2681', '\\u2682', '\\u2683', '\\u2684', '\\u2685'];\n\n    const DOM = {\n        nameInput: $('#char-name-input'), genderInput: $('#char-gender-input'), ageInput: $('#char-age-input'),\n        ocDetailsInput: $('#oc-details-input'), raceSelect: $('#char-race-select'), attributesContainer: $('#attributes-container'),\n        skillsContainer: $('#skills-and-desc-container'), radarChart: $('#radar-chart'), summarySheet: $('#character-summary'),\n        diceOverlay: $('#dice-overlay'), diceContainer: $('#dice-container'), diceResultText: $('#dice-result-text'),\n        backgroundDisplay: $('#background-display'), bgOrigin: $('#bg-origin'), bgPast: $('#bg-past'), bgEncounter: $('#bg-encounter'),\n        skipAnimationBtn: $('#skip-animation-btn'),\n        submitBtn: $('#submit-btn'),\n        validationMessage: $('#validation-message'),\n    };\n    \n    const dicePool = []; const MAX_DICE = 6;\n    let currentAnimation = null; let textAnimation = null; let isSkipping = false;\n    let currentValidationMessage = '';\n    \n    function validateAndToggleButton() {\n        let newMessage = '';\n        if (!character.age || String(character.age).trim() === '') {\n            newMessage = '请填写您的冒险者年龄。';\n        } else if (!character.gender || !character.gender.trim()) {\n            newMessage = '请设定冒险者的性别。';\n        } else if (!character.background.origin) {\n            newMessage = '请投骰决定您的冒险者经历。';\n        } else if (Object.values(character.attributes).every(val => val === 0)) {\n            newMessage = '请投骰决定您的能力值。';\n        }\n\n        if (newMessage === currentValidationMessage) return;\n        currentValidationMessage = newMessage;\n\n        if (newMessage) {\n            DOM.submitBtn.disabled = true;\n            DOM.validationMessage.textContent = newMessage;\n            gsap.fromTo(DOM.validationMessage, { autoAlpha: 0, scale: 0.8 }, { autoAlpha: 1, scale: 1, duration: 0.4, ease: 'elastic.out(1, 0.75)' });\n        } else {\n            DOM.submitBtn.disabled = false;\n            gsap.to(DOM.validationMessage, { autoAlpha: 0, duration: 0.3 });\n        }\n    }\n    function updateCharacterDataFromDOM() { character.name = DOM.nameInput.value; character.gender = DOM.genderInput.value; character.age = DOM.ageInput.value; character.oc_details = DOM.ocDetailsInput.value; character.race = DOM.raceSelect.value; }\n    function renderSkills() { const uniqueSkills = [...new Set(character.skills)]; DOM.skillsContainer.innerHTML = `<p><strong>天赋与习得技能:</strong></p><ul>${uniqueSkills.map(s => `<li>- ${s}</li>`).join('')}</ul>`; }\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key}`).value = value; }); }\n    function renderSummary() {\n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '?';\n        const originText = `出身:${character.background.origin ? character.background.origin.name : '?'}`;\n        const pastText = `来历:${character.background.past ? character.background.past.name : '?'}`;\n        const encounterText = `邂逅:${character.background.encounter || '?'}`;\n        let summary = `### 《哥布林杀手TRPG》冒险者登记卡\\n` + `**姓名:** ${finalName} | **种族:** ${character.race} | **性别:** ${character.gender || '?'} | **年龄:** ${formattedAge}\\n` + `**经历:** ${originText} / ${pastText} / ${encounterText}\\n` + `**初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n` + `**初始技能:** ${uniqueSkills.join(', ') || '无'}\\n`; if (character.oc_details) { summary += `**身体特征与补充:** ${character.oc_details}\\n`; } summary += `---\\n**能力值:**\\n`; summary += Object.entries(character.attributes).map(([key, value]) => `- ${key}: ${value}`).join('\\n'); summary += `\\n**持有资金:** ${character.money} 银币`;\n        DOM.summarySheet.value = summary.replace(/### /g, '').replace(/\\*\\*/g, '').replace(/---/g, '\\n────────────────────\\n').replace(/- /g, '  ');\n        DOM.summarySheet.setAttribute('data-raw', summary);\n    }\n    async function renderRadarChartIfNeeded() { const currentAttributesString = JSON.stringify(character.attributes); if (currentAttributesString === character._lastAttributesForChart) return; DOM.radarChart.classList.add('loading'); const radarSyntax = `radar-beta\\ntitle 能力值分布\\naxis a[\"力量 ${character.attributes['力量']}\"]\\naxis b[\"敏捷 ${character.attributes['敏捷']}\"]\\naxis c[\"感知 ${character.attributes['感知']}\"]\\naxis d[\"知识 ${character.attributes['知识']}\"]\\naxis e[\"魅力 ${character.attributes['魅力']}\"]\\naxis f[\"信仰 ${character.attributes['信仰力']}\"]\\naxis g[\"魔力 ${character.attributes['魔力']}\"]\\naxis h[\"潜力 ${character.attributes['潜力']}\"]\\ncurve current[\"能力\"]{${character.attributes['力量']},${character.attributes['敏捷']},${character.attributes['感知']},${character.attributes['知识']},${character.attributes['魅力']},${character.attributes['信仰力']},${character.attributes['魔力']},${character.attributes['潜力']}}\\nmax 10\\nmin 0`; DOM.radarChart.innerHTML = radarSyntax; DOM.radarChart.removeAttribute('data-processed'); try { await mermaid.run({ nodes: [DOM.radarChart] }); character._lastAttributesForChart = currentAttributesString; } catch(e) { console.error(\"Mermaid rendering error:\", e); } finally { DOM.radarChart.classList.remove('loading'); } }\n    async function updateUI(forceFullUpdate = false) { updateCharacterDataFromDOM(); if(forceFullUpdate) { character._lastAttributesForChart = ''; character.skills = []; character.classes = {}; character.money = 100; if(raceData[character.race].skills) character.skills.push(...raceData[character.race].skills); if (character.background.origin) { if (character.background.origin.skills) character.skills.push(...character.background.origin.skills); if (character.background.origin.class) character.classes[character.background.origin.class] = character.background.origin.level; if(character.background.origin.money) character.money += rollDiceString(character.background.origin.money); } if (character.background.past && character.background.past.skills) { character.skills.push(...character.background.past.skills); } } renderAttributes(); renderSkills(); renderSummary(); await renderRadarChartIfNeeded(); validateAndToggleButton(); }\n\n    const masterTl = gsap.timeline({ delay: 0.2 });\n    const title = $('#main-title');\n    title.innerHTML = title.textContent.split('').map(char => `<span class=\"title-char\">${char}</span>`).join('');\n    gsap.set(\".gsap-header-item, .gsap-content-item\", { autoAlpha: 0, y: 20 });\n    masterTl.to(\".title-char\", { autoAlpha: 1, y: 0, duration: 0.7, ease: \"power3.out\", stagger: 0.1 }).to(\"#wax-seal\", { autoAlpha: 1, scale: 1, duration: 0.6, ease: \"elastic.out(1, 0.7)\" }, \"-=0.5\");\n    document.querySelectorAll('.gs-creator-step').forEach((step, index) => { const stepTl = gsap.timeline(); stepTl.to(step.querySelector('.gsap-header-item'), { autoAlpha: 1, y: 0, duration: 0.6, ease: 'power2.out' }).to(step.querySelectorAll('.gsap-content-item'), { autoAlpha: 1, y: 0, duration: 0.5, ease: 'power2.out', stagger: 0.1 }, '-=0.4'); masterTl.add(stepTl, `-=${index === 0 ? 0.2 : 0.7}`); });\n    const pipPositions = { 1: [ { left: '50%', top: '50%' } ], 2: [ { left: '25%', top: '25%' }, { left: '75%', top: '75%' } ], 3: [ { left: '25%', top: '25%' }, { left: '50%', top: '50%' }, { left: '75%', top: '75%' } ], 4: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 5: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '50%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 6: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '50%' }, { left: '75%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ]};\n    function setupCube(cubeEl) { const size = 'calc(var(--dice-size) / 2)'; gsap.set(cubeEl.querySelector('.face-front'),  { transform: `rotateY(0deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-back'),   { transform: `rotateY(180deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-right'),  { transform: `rotateY(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-left'),   { transform: `rotateY(-90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-top'),   { transform: `rotateX(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-bottom'), { transform: `rotateX(-90deg) translateZ(${size})` }); const faces = cubeEl.querySelectorAll('.dice-face'); faces.forEach(face => { const faceNum = face.getAttribute('data-face'); const pips = face.querySelectorAll('.pip'); const positions = pipPositions[faceNum]; if (!pips.length || !positions) return; pips.forEach((pip, index) => { const pos = positions[index]; gsap.set(pip, { left: pos.left, top: pos.top, xPercent: -50, yPercent: -50 }); }); }); }\n    function getRotationForFace(faceValue) { switch (faceValue) { case 1: return { x: 0, y: 0 }; case 6: return { x: 0, y: 180 }; case 3: return { x: 0, y: -90 }; case 4: return { x: 0, y: 90 }; case 2: return { x: -90, y: 0 }; case 5: return { x: 90,  y: 0 }; default: return { x: 0, y: 0 }; } }\n    async function animateText(element, text) { if(isSkipping) {element.innerHTML = text.replace(/\\n/g, '<br>'); return;} return new Promise(resolve => { if (textAnimation && textAnimation.isActive()) textAnimation.kill(); element.innerHTML = ''; textAnimation = gsap.to(element, { duration: text.length * 0.05, text: { value: text.replace(/\\n/g, '<br>'), newClass: \"typed-cursor\" }, ease: \"none\", onComplete: () => { gsap.delayedCall(0.7, () => { element.querySelector('.typed-cursor')?.remove(); resolve(); }); } }); }); }\n    function initDicePool() { const diceTemplate = document.querySelector('[data-id_template=\"dice-cube\"]'); if (!diceTemplate) return; for (let i = 0; i < MAX_DICE; i++) { const dieIconElement = document.createElement('div'); dieIconElement.className = 'dice-icon'; const newCube = diceTemplate.cloneNode(true); dieIconElement.appendChild(newCube); DOM.diceContainer.appendChild(dieIconElement); setupCube(newCube); dicePool.push(dieIconElement); } }\n    async function animateRoll(numDice, preCalculatedRolls, textToShowDuringRoll = \"投掷中...\") { return new Promise(resolve => { if (currentAnimation && currentAnimation.isActive()) currentAnimation.kill(); dicePool.forEach(die => die.style.display = 'none'); const activeDice = dicePool.slice(0, numDice); animateText(DOM.diceResultText, textToShowDuringRoll); activeDice.forEach(die => { die.style.display = 'flex'; die.className = 'dice-icon'; }); const masterTl = gsap.timeline({ onComplete: () => { if(isSkipping) DOM.diceResultText.innerHTML = ''; resolve(preCalculatedRolls); }}); currentAnimation = masterTl; activeDice.forEach((dieElement, i) => { const dieCube = dieElement.querySelector('.dice-cube'); const visualRoll = preCalculatedRolls[i]; const targetRotation = getRotationForFace(visualRoll); const dieTimeline = gsap.timeline(); dieTimeline.to(dieCube, { rotationX: `+=${gsap.utils.random(720, 1080)}`, rotationY: `+=${gsap.utils.random(720, 1080)}`, duration: 1.8, ease: \"power2.in\" }).to(dieCube, { rotationX: targetRotation.x, rotationY: targetRotation.y, duration: 0.7, ease: \"power4.out\" }); masterTl.add(dieTimeline, 0); }); }); }\n    \n    const debouncedUpdate = debounce(updateUI, 400);\n    [DOM.nameInput, DOM.genderInput, DOM.ageInput, DOM.ocDetailsInput].forEach(el => el.addEventListener('input', debouncedUpdate));\n    \n    DOM.skipAnimationBtn.addEventListener('click', () => {\n        isSkipping = true;\n        if (currentAnimation && currentAnimation.isActive()) currentAnimation.progress(1);\n        if (textAnimation && textAnimation.isActive()) textAnimation.progress(1);\n    });\n\n    $('#roll-background-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const rolls = [roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6()];\n        await animateRoll(6, rolls, '投掷 经历... (2d6 x 3)');\n        \n        const sums = { origin: rolls[0] + rolls[1], past: rolls[2] + rolls[3], encounter: rolls[4] + rolls[5] };\n        \n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `出身: ${rolls[0]} + ${rolls[1]} = ${sums.origin}\\n(${backgroundData.origin[character.race][sums.origin].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `来历: ${rolls[2]} + ${rolls[3]} = ${sums.past}\\n(${backgroundData.past[sums.past].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(4, 6), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `邂逅: ${rolls[4]} + ${rolls[5]} = ${sums.encounter}\\n(${backgroundData.encounter[sums.encounter]})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        character.background.origin = backgroundData.origin[character.race][sums.origin];\n        character.background.past = backgroundData.past[sums.past];\n        character.background.encounter = backgroundData.encounter[sums.encounter];\n        DOM.bgOrigin.textContent = character.background.origin.name;\n        DOM.bgPast.textContent = character.background.past.name;\n        DOM.bgEncounter.textContent = character.background.encounter;\n        DOM.backgroundDisplay.style.display = 'block';\n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        updateUI(true);\n    });\n\n    $('#roll-attributes-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const attrRolls = raceData[character.race].attr_rolls;\n        const allCalculatedRolls = [];\n\n        // Prepare race-based attributes\n        for (const attr in attrRolls) {\n            const formula = attrRolls[attr];\n            const modifier = parseInt(formula.split('d3')[1] || '0');\n            const { d6, d3 } = roll1D3();\n            const finalValue = Math.max(0, d3 + modifier);\n            character.attributes[attr] = finalValue;\n            allCalculatedRolls.push({ attr, formula, d6, d3, modifier, finalValue });\n        }\n        \n        // Prepare \"Potential\" attribute\n        const potentialValue = Math.floor(Math.random() * 3) + 1;\n        const d6ForPotential = (potentialValue * 2) - 1; // Map 1,2,3 to d6 faces 1,3,5 for animation\n        character.attributes['潜力'] = potentialValue;\n        allCalculatedRolls.push({\n            attr: '潜力',\n            formula: '1-3', // Just a descriptor\n            d6: d6ForPotential,\n            finalValue: potentialValue\n        });\n        \n        // Animate all rolls sequentially\n        for (const roll of allCalculatedRolls) {\n            await animateRoll(1, [roll.d6], `投掷 ${roll.attr}...`);\n            if (isSkipping) break;\n\n            gsap.to(dicePool[0], { className: 'dice-icon highlight', duration: 0.3 });\n            \n            let resultText;\n            if (roll.attr === '潜力') {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.finalValue}`;\n            } else {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.d3} ${roll.modifier >= 0 ? '+' : ''} ${roll.modifier} = ${roll.finalValue}`;\n            }\n            await animateText(DOM.diceResultText, resultText);\n            \n            await updateUI();\n            \n            if (isSkipping) break;\n            \n            await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        await updateUI();\n    });\n\n    DOM.raceSelect.addEventListener('change', () => {\n        DOM.backgroundDisplay.style.display = 'none';\n        character.background = { origin: null, past: null, encounter: null };\n        Object.keys(character.attributes).forEach(k => character.attributes[k] = 0);\n        updateUI(true);\n    });\n\n    $('#submit-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        await updateUI(true);\n        \n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '未设定';\n        \n        const finalCharacterObject={ NAME:finalName, GENDER:character.gender||'未设定', AGE:formattedAge, RACE:character.race, ORIGIN: character.background.origin ? character.background.origin.name : '未知', PAST: character.background.past ? character.background.past.name : '未知', ENCOUNTER: character.background.encounter || '未知', SKILLS: uniqueSkills, OC_DETAILS:character.oc_details||'无', ...character.attributes, MONEY:character.money };\n        \n        const slashCommand=`/send <START>\\nAdmin:\\n这是一个TRPG开局，请为 User 生成一段详尽的背景故事。\\n\\n# 故事核心要求\\n请严格根据以下【角色完整设定】，撰写一段从角色童年到现在的成长故事。故事需要清晰地阐述是什么关键事件或心路历程，最终让他/她确立了要成为一名冒险者的志向。请在故事中自然地融入角色的种族、出身背景、技能和性格特点。\\n\\n# 角色完整设定\\n---\\n## 基础信息\\n- **姓名:** ${finalName}\\n- **性别:** ${character.gender||'未设定'}\\n- **年龄:** ${formattedAge}\\n- **种族:** ${character.race}\\n\\n## 经历\\n- **出身:** ${character.background.origin ? character.background.origin.name : '未知'}\\n- **来历:** ${character.background.past ? character.background.past.name : '未知'}\\n- **邂逅:** ${character.background.encounter || '未知'}\\n\\n## 背景与技能\\n- **初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n- **初始技能:** ${uniqueSkills.join(', ')||'无'}\\n\\n## 补充设定 (OC)\\n- **额外补充:** ${character.oc_details||'无'}\\n\\n## 能力值\\n- **力量:** ${character.attributes['力量']}\\n- **敏捷:** ${character.attributes['敏捷']}\\n- **感知:** ${character.attributes['感知']}\\n- **知识:** ${character.attributes['知识']}\\n- **魅力:** ${character.attributes['魅力']}\\n- **信仰力:** ${character.attributes['信仰力']}\\n- **魔力:** ${character.attributes['魔力']}\\n\\n## 初始资产\\n- **资金:** ${character.money} 银币\\n\\|\\n/trigger`; \n        \n        try {\n            if (typeof insertOrAssignVariables === 'function') {\n                await insertOrAssignVariables(finalCharacterObject);\n            } else {\n                console.log(\"SillyTavern Function 'insertOrAssignVariables' not found. Variables:\", finalCharacterObject);\n            }\n            if (typeof triggerSlash === 'function') {\n                await triggerSlash(slashCommand, 'Send');\n            } else { \n                console.log(\"SillyTavern Function 'triggerSlash' not found. Command will be copied to clipboard.\");\n                navigator.clipboard.writeText(slashCommand).then(() => {\n                    alert('角色指令已复制到剪贴板！');\n                });\n            }\n        } catch (error) {\n            console.error('与SillyTavern交互失败:', error);\n            alert('与SillyTavern交互失败，请查看浏览器控制台。');\n        }\n\n        e.target.innerHTML = \"契约成立！\";\n    });\n    \n    initDicePool();\n    Object.keys(raceData).forEach(key => DOM.raceSelect.add(new Option(key, key)));\n    Object.keys(character.attributes).forEach(key => {\n        const pointControl = document.createElement('div');\n        pointControl.className = 'point-control';\n        pointControl.innerHTML = `<span class=\"label\">${key}</span><input type=\"text\" id=\"attr-${key.replace(/\\s/g, '')}\" readonly value=\"0\">`; // ID santized just in case\n        DOM.attributesContainer.appendChild(pointControl);\n    });\n    // A small fix for renderAttributes to handle sanitized IDs\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key.replace(/\\s/g, '')}`).value = value; }); }\n    updateUI(true);\n});\n</script>\n\n</body>\n</html>\n```"
  },
  {
    "role": "user",
    "content": "```\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>哥布林杀手TRPG - 冒险者契约</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/gsap.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/TextPlugin.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.min.js\" defer></script>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Noto+Serif+SC:wght@400;700&family=Vollkorn:wght@400;700&family=Courier+Prime&display=swap\" rel=\"stylesheet\">\n\n    <style>\n        :root {\n            --leather-bg: #5a3a2a;\n            --dark-leather-bg: #3b2a1a;\n            --parchment-bg: #f5f5dc;\n            --parchment-bg-gradient: linear-gradient(165deg, #f7e9d7, #e6d5c3);\n            --text-color: #3d3d3d;\n            --heading-color: #4a3c2c;\n            --border-color: #7a5a4a;\n            --font-main: 'Vollkorn', 'Noto Serif SC', serif;\n            --font-display: 'Cinzel', 'Noto Serif SC', serif;\n            --font-code: 'Courier Prime', 'Courier New', monospace;\n            --dice-size: 5rem; \n        }\n\n        html { height: 100%; }\n        body {\n            background-color: #3a2e20;\n            font-family: var(--font-main);\n            color: var(--text-color);\n            margin: 0; padding: 20px;\n            box-sizing: border-box;\n            display: flex;\n            align-items: center; justify-content: center;\n            min-height: 100%;\n        }\n        *, *:before, *:after { box-sizing: inherit; }\n\n        .creator-wrapper {\n            width: 100%; max-width: 900px;\n            margin: 0;\n            background: var(--parchment-bg-gradient);\n            border: 12px solid #8b7355;\n            border-radius: 8px;\n            box-shadow: 0 0 40px rgba(139, 115, 85, 0.3), inset 0 0 30px rgba(255, 255, 255, 0.4);\n            position: relative;\n            overflow: hidden;\n            padding: 25px;\n            display: flex; flex-direction: column;\n            max-height: 95vh;\n        }\n\n        .border-flow, .inner-border { position: absolute; pointer-events: none; }\n        .border-flow { top: 0; left: 0; right: 0; bottom: 0; background: linear-gradient(90deg, rgba(139,115,85,0.1) 1px, transparent 1px), linear-gradient(0deg, rgba(139,115,85,0.1) 1px, transparent 1px); background-size: 20px 20px; animation: borderFlow 15s linear infinite; }\n        .inner-border { top: 5px; left: 5px; right: 5px; bottom: 5px; border: 3px solid rgba(139,115,85,0.3); border-radius: 5px; }\n        @keyframes borderFlow { from { background-position: 0 0; } to { background-position: 20px 20px; } }\n\n        .creator-header {\n            text-align: center;\n            padding: 10px;\n            margin-bottom: 25px;\n            border-bottom: 2px solid rgba(139, 115, 85, 0.3);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 15px;\n        }\n        .creator-header h1 {\n            font-family: var(--font-display);\n            font-size: clamp(24px, 5vw, 32px);\n            margin: 0;\n            font-weight: 700;\n            letter-spacing: 3px;\n            color: var(--heading-color);\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.1);\n        }\n        \n        .title-char {\n            display: inline-block;\n            opacity: 0;\n            transform: translateY(30px);\n        }\n\n        .wax-seal {\n            width: 45px;\n            height: 45px;\n            display: inline-block;\n            background-color: #c0392b;\n            border-radius: 50%;\n            position: relative;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.4), inset 0 -2px 3px rgba(0,0,0,0.3);\n            opacity: 0;\n            transform: scale(0.5);\n            font-family: 'Cinzel', serif;\n            color: #e7a49c;\n            text-align: center;\n            font-size: 24px;\n            line-height: 45px;\n            font-weight: 700;\n        }\n        .wax-seal::before {\n            content: 'GS';\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.3);\n        }\n\n        .creator-scroll-content { overflow-y: auto; padding: 10px 20px 10px 10px; }\n        .creator-scroll-content::-webkit-scrollbar { width: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-track { background: rgba(139, 115, 85, 0.1); border-radius: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-thumb { background-color: #a89072; border-radius: 10px; border: 2px solid #f7e9d7; }\n        \n        .gs-creator-step { margin-bottom: 40px; overflow: hidden; }\n        .gs-creator-step h3 { font-family: var(--font-display); font-size: 1.5em; font-weight: 700; border-bottom: 1.5px solid var(--border-color); padding-bottom: 8px; margin-bottom: 20px; color: var(--heading-color); text-align: left; }\n        \n        .layout-grid { display: grid; grid-template-columns: 1fr; gap: 25px; align-items: flex-start; }\n        @media (min-width: 768px) {\n            .layout-grid { grid-template-columns: 1fr 280px; }\n        }\n\n        .form-container { text-align: left; }\n        .gs-form-group { margin-bottom: 16px; }\n        .gs-form-group label { display: block; margin-bottom: 6px; font-weight: bold; color: var(--heading-color); }\n        .form-input, .form-select, .form-textarea { width: 100%; padding: 10px; background-color: rgba(255, 255, 255, 0.5); border: 1px solid #a58e72; border-radius: 4px; color: #3d3d3d; font-family: var(--font-main); font-size: 1em; transition: all 0.2s ease-in-out; box-shadow: inset 1px 1px 2px rgba(0,0,0,0.1); }\n        .form-input:focus, .form-select:focus, .form-textarea:focus { outline: none; border-color: #8b7355; background-color: #fff; box-shadow: 0 0 5px rgba(139, 115, 85, 0.5); }\n        .form-textarea { resize: vertical; min-height: 100px; }\n\n        .grid-cols-2 {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 16px;\n        }\n        @media (min-width: 480px) {\n            .grid-cols-2 {\n                grid-template-columns: repeat(2, 1fr);\n            }\n        }\n\n        #attributes-container .point-control { display: flex; align-items: center; justify-content: space-between; margin-bottom: 8px; padding: 6px 8px; background: rgba(0,0,0,0.03); border-left: 3px solid rgba(139,115,85,0.2); border-radius: 4px; }\n        #attributes-container .label { font-weight: bold; color: var(--heading-color); }\n        #attributes-container input[readonly] { width: 40px; text-align: center; font-weight: bold; font-size: 1.2em; font-family: var(--font-display); color: #a02c2c; border: none; background-color: transparent; box-shadow: none; padding: 0; }\n        \n        .attributes-grid {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 0 16px;\n        }\n        @media (min-width: 480px) {\n            .attributes-grid {\n                grid-template-columns: 1fr 1fr;\n            }\n        }\n        \n        .skills-display p { background-color: rgba(0,0,0,0.05); border-left: 3px solid var(--border-color); padding: 10px 15px; margin-top: 10px; font-size: 0.95em; border-radius: 0 4px 4px 0; }\n        .skills-display strong { color: #8b5b4b; font-family: var(--font-display); }\n        .skills-display ul { list-style: none; padding-left: 0; margin-top: 8px; font-size: 0.9em; }\n        .skills-display li { margin-bottom: 4px; }\n\n        #character-summary { background-color: #e9e4d9; font-family: var(--font-code); line-height: 1.6; height: 250px; color: #2c2a2a; }\n        \n        .gs-button { width: 100%; background-color: #8b7355; color: var(--parchment-bg); border: 2px solid var(--dark-leather-bg); border-radius: 5px; padding: 12px 20px; font-family: var(--font-display); font-size: 1.2em; font-weight: 700; cursor: pointer; margin-top: 10px; transition: all 0.3s ease; box-shadow: 0 3px 5px rgba(0,0,0,0.3); }\n        .gs-button:hover { background-color: #a0886c; transform: translateY(-2px); box-shadow: 0 5px 8px rgba(0,0,0,0.3); }\n        .gs-button:disabled { background-color: #9e9e9e; border-color: #757575; cursor: not-allowed; transform: none; box-shadow: none; opacity: 0.6; }\n        .action-button { background-color: #6d5b4b; font-size: 1em; padding: 10px 15px; margin-top: 0; margin-bottom: 10px; width: auto; }\n        \n        .background-display { margin-top: 15px; padding: 15px; border: 1px dashed var(--border-color); border-radius: 5px; background: rgba(0,0,0,0.02); }\n        .background-display p { margin: 0 0 8px; }\n        .background-display span { font-weight: bold; color: var(--heading-color); }\n        \n        #radar-chart-container { \n            max-width: 100%;\n        }\n        @media (min-width: 768px) {\n            #radar-chart-container {\n                position: sticky;\n                top: 0;\n                padding-top: 45px;\n            }\n        }\n\n        pre.mermaid { \n            font-family: var(--font-main); \n            background: rgba(0,0,0,0.02); \n            border: 1px solid rgba(139,115,85,0.1); \n            padding: 10px; \n            border-radius: 5px; \n            overflow: auto;\n            transition: opacity 0.3s ease-in-out;\n        }\n        pre.mermaid.loading { opacity: 0.5; pointer-events: none; }\n\n        pre.mermaid > svg {\n            max-width: 100%;\n            height: auto;\n        }\n\n        #dice-overlay {\n            position: fixed; top: 0; left: 0; width: 100%; height: 100%;\n            background: rgba(0,0,0,0.8); backdrop-filter: blur(5px);\n            display: none; align-items: center; justify-content: center; flex-direction: column;\n            z-index: 100;\n            color: #fff; text-shadow: 0 0 10px #000;\n        }\n\n        .dice-container {\n            display: flex; flex-wrap: wrap; justify-content: center;\n            gap: 2rem; margin-bottom: 2rem;\n            max-width: 600px;\n        }\n        \n        .dice-icon {\n            width: var(--dice-size); height: var(--dice-size);\n            perspective: 800px;\n            transform-style: preserve-3d;\n            display: none;\n        }\n        .dice-icon.highlight {\n            transform: scale(1.15);\n            filter: drop-shadow(0 0 15px #FFEB3B);\n            transition: transform 0.3s ease, filter 0.3s ease;\n        }\n\n        .dice-cube {\n            width: 100%; height: 100%;\n            position: relative;\n            transform-style: preserve-3d;\n            transform: translateZ(calc(var(--dice-size) / -2));\n        }\n        \n        .dice-face {\n            position: absolute;\n            width: var(--dice-size); height: var(--dice-size);\n            background-color: rgba(255, 255, 255, 0.98);\n            border: 1.5px solid #857e72;\n            border-radius: 12%;\n        }\n\n        .pips-container {\n            width: 100%; height: 100%;\n            position: relative; \n        }\n        .pip {\n            width: 22%; height: 22%; \n            background-color: #3d352e;\n            border-radius: 50%;\n            box-shadow: inset 0 1px 3px rgba(0,0,0,0.5);\n            position: absolute; \n        }\n        \n        #dice-result-text { \n            font-family: var(--font-display); \n            font-size: 2.2em;\n            color: #FFEB3B; \n            text-shadow: 0 0 12px #FFEB3B; \n            min-height: 2em;\n            line-height: 1.2;\n            text-align: center; \n        }\n        \n        #skip-animation-btn {\n            position: absolute;\n            bottom: 30px;\n            font-size: 1em;\n            padding: 8px 20px;\n            width: auto;\n            background-color: rgba(0,0,0,0.3);\n            border-color: rgba(255,255,255,0.5);\n            color: rgba(255,255,255,0.8);\n        }\n        #skip-animation-btn:hover {\n            background-color: rgba(0,0,0,0.5);\n            color: #fff;\n        }\n\n        .typed-cursor {\n            opacity: 1;\n            animation: typed-blink 0.7s infinite;\n        }\n        @keyframes typed-blink{\n            0% { opacity: 1; }\n            50% { opacity: 0; }\n            100% { opacity: 1; }\n        }\n        \n        .validation-message {\n            text-align: center;\n            color: #b71c1c;\n            font-size: 0.9em;\n            font-weight: bold;\n            margin-top: -5px;\n            margin-bottom: 10px;\n            height: 1.2em;\n            opacity: 0;\n            will-change: transform, opacity;\n        }\n\n        #credits-screen {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            pointer-events: none;\n            opacity: 0;\n        }\n\n        #credits-screen p {\n            font-family: var(--font-display);\n            font-size: 2em;\n            color: #f5f5dc;\n            text-shadow: 0 0 8px rgba(245, 245, 220, 0.7);\n        }\n    </style>\n</head>\n<body>\n\n<div class=\"creator-wrapper\">\n    <div class=\"border-flow\"></div>\n    <div class=\"inner-border\"></div>\n    <header class=\"creator-header\">\n        <h1 id=\"main-title\">冒险者契约登记</h1>\n        <div id=\"wax-seal\" class=\"wax-seal\"></div>\n    </header>\n\n    <div class=\"creator-scroll-content\">\n        <div class=\"gs-creator-container\">\n            <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第一步：身份确认</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-name-input\">姓名</label><input id=\"char-name-input\" type=\"text\" placeholder=\"可留空，默认为 {{user}}\" class=\"form-input\"></div>\n                    <div class=\"grid-cols-2 gsap-content-item\">\n                        <div class=\"gs-form-group\"><label for=\"char-gender-input\">性别</label><input id=\"char-gender-input\" type=\"text\" placeholder=\"例如: 男性/女性/双性/无性/……\" class=\"form-input\"></div>\n                        <div class=\"gs-form-group\"><label for=\"char-age-input\">年龄</label><input id=\"char-age-input\" type=\"number\" placeholder=\"可参照种族说明\" class=\"form-input\"></div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-race-select\">种族</label><select id=\"char-race-select\" class=\"form-select\"></select></div>\n                    <div class=\"gs-form-group gsap-content-item\">\n                        <label>经历 (出身/来历/邂逅)</label>\n                        <button id=\"roll-background-btn\" class=\"gs-button action-button\">🎲 投骰决定经历</button>\n                        <div id=\"background-display\" class=\"background-display\" style=\"display: none;\">\n                            <p>出身: <span id=\"bg-origin\"></span></p>\n                            <p>来历: <span id=\"bg-past\"></span></p>\n                            <p>邂逅: <span id=\"bg-encounter\"></span></p>\n                        </div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"oc-details-input\">身体特征与补充</label><textarea id=\"oc-details-input\" placeholder=\"发色、瞳色、体型、性格、背景故事构思...\" class=\"form-textarea\"></textarea></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第二步：能力值与技能</h3>\n                <div class=\"layout-grid\">\n                    <div class=\"form-container gsap-content-item\">\n                        <button id=\"roll-attributes-btn\" class=\"gs-button action-button\">🎲 投骰决定能力值</button>\n                        <div id=\"attributes-container\" class=\"attributes-grid\"></div>\n                        <div id=\"skills-and-desc-container\" class=\"skills-display\"></div>\n                    </div>\n                    <div id=\"radar-chart-container\" class=\"gsap-content-item\"><pre class=\"mermaid\" id=\"radar-chart\"></pre></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第三步：完成登记</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"character-summary\">角色卡预览</label><textarea id=\"character-summary\" rows=\"12\" readonly class=\"form-textarea\"></textarea></div>\n                    <button id=\"submit-btn\" class=\"gs-button gsap-content-item\" disabled>确认登记，开始冒险</button>\n                    <div id=\"validation-message\" class=\"validation-message\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div id=\"credits-screen\">\n    <p>作者 𝙀𝙡𝙖𝙞𝙣𝙖𝙙𝙚𝙨</p>\n</div>\n\n<div id=\"dice-overlay\">\n    <div class=\"dice-container\" id=\"dice-container\"></div>\n    <div id=\"dice-result-text\"></div>\n    <button id=\"skip-animation-btn\" class=\"gs-button\">跳过动画</button>\n</div>\n\n<div id=\"dice-templates\" style=\"display:none;\">\n    <div class=\"dice-cube\" data-id_template=\"dice-cube\">\n        <div class=\"dice-face face-front\" data-face=\"1\"><div class=\"pips-container\"><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-back\" data-face=\"6\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-right\" data-face=\"3\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-left\" data-face=\"4\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-top\" data-face=\"2\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-bottom\" data-face=\"5\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n    </div>\n</div>\n\n<script>\n// --- MODIFIED DATA ---\nconst raceData = {\n    '凡人': { attr_rolls: { '力量': '1d3+1', '敏捷': '1d3', '感知': '1d3', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3+2', '魔力': '1d3' }, skills: ['过载行动(初级)', '武器:投掷武器(初级)', '长距离移动(初级)']},\n    '矿人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3', '感知': '1d3+2', '知识': '1d3-1', '魅力': '1d3+1', '信仰力': '1d3+1', '魔力': '1d3-1' }, skills: ['治愈适性(初级)', '夜视(初级)', '锻造(初级)']},\n    '森人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+1', '感知': '1d3+1', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3-1', '魔力': '1d3+1' }, skills: ['武器:弩弓(初级)', '夜视(初级)', '精灵宠儿(初级)']},\n    '蜥蜴人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3+1', '感知': '1d3', '知识': '1d3', '魅力': '1d3+1', '信仰力': '1d3', '魔力': '1d3' }, skills: ['免疫强化(初级)', '夜视(初级)', '龙族血统(初级)']},\n    '圃人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+2', '感知': '1d3+1', '知识': '1d3', '魅力': '1d3-1', '信仰力': '1d3', '魔力': '1d3+2' }, skills: ['隐匿(初级)', '先发制人(初级)', '烹饪(初级)']}\n};\nconst backgroundData = {\n    origin: { \n        '凡人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '学者', class: '魔术师', level: 1, skills: ['文献调查(初级)'] }, 6: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 7: { name: '农民', skills: ['生产业:农业(初级)', '强健(初级)'] }, 8: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '骑士', class: '战士', level: 1, skills: ['骑乘(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n        '矿人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 6: { name: '酒馆老板', class: '战士', level: 1, skills: ['观察(初级)'] }, 7: { name: '铁匠', skills: ['工匠:锻造(初级)', '手工(初级)'] }, 8: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '碎盾者', class: '战士', level: 1, skills: ['强击攻击·斩(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n    },\n    past: { 2: { name: '奴隶', skills: ['劳动(初级)'] }, 3: { name: '牢狱', skills: ['犯罪知识(初级)'] }, 4: { name: '战场', skills: ['沉着冷静(初级)'] }, 5: { name: '神殿', skills: ['神学(初级)'] }, 6: { name: '孤儿', skills: ['忍耐(初级)'] }, 7: { name: '平顺', skills: ['幸运(初级)'] }, 8: { name: '贫困', skills: ['生存术(初级)'] }, 9: { name: '学校', skills: ['博识(初级)'] }, 10: { name: '深闺', skills: ['无偏见(初级)'] }, 11: { name: '奢华', skills: ['鉴定(初级)'] }, 12: { name: '宫廷', skills: ['礼仪(初级)'] }},\n    encounter: { 2: '宿敌', 3: '上司', 4: '后辈', 5: '交易对象', 6: '下属', 7: '家人', 8: '挚友', 9: '前辈', 10: '未婚夫/妻', 11: '劲敌', 12: '师父' }\n};\nbackgroundData.origin['森人'] = backgroundData.origin['凡人']; backgroundData.origin['蜥蜴人'] = backgroundData.origin['凡人']; backgroundData.origin['圃人'] = backgroundData.origin['凡人'];\nconst character = {\n    name: '', gender: '', age: '', oc_details: '', race: '凡人',\n    background: { origin: null, past: null, encounter: null },\n    attributes: { '力量': 0, '敏捷': 0, '感知': 0, '知识': 0, '魅力': 0, '信仰力': 0, '魔力': 0, '潜力': 0 },\n    skills: [], classes: {}, money: 0, _lastAttributesForChart: '',\n};\n// --- END MODIFIED DATA ---\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    gsap.registerPlugin(TextPlugin);\n    mermaid.initialize({ startOnLoad: true, theme: 'base', themeVariables: {\n        '--mermaid-font-family': \"'Vollkorn', 'Noto Serif SC', serif\",\n        primaryColor: '#f7e9d7', primaryTextColor: '#3d3d3d', lineColor: '#8b7355', textColor: '#4a3c2c',\n    }});\n    \n    const $ = (s) => document.querySelector(s);\n    const roll1D6 = () => Math.floor(Math.random() * 6) + 1;\n    const roll1D3 = () => {\n        const d6 = roll1D6();\n        if (d6 <= 2) return { d6, d3: 1 };\n        if (d6 <= 4) return { d6, d3: 2 };\n        return { d6, d3: 3 };\n    };\n    const rollDiceString = (diceString) => { const p=diceString.split('*');const d=p[0];const m=parseInt(p[1])||1;if(!d.includes('d'))return 0;const[n,s]=d.split('d').map(Number);let t=0;for(let i=0;i<n;i++){t+=Math.floor(Math.random()*s)+1;}return t*m; };\n    const formatAge = (ageValue) => { if (!ageValue && ageValue !== 0) return ageValue; const num = Number(ageValue); if (isNaN(num)) return ageValue; if (Math.abs(num) >= 1_000_000) return num.toExponential(2); return ageValue; };\n    const debounce = (func, delay) => { let timeout; return function(...args) { clearTimeout(timeout); timeout = setTimeout(() => func.apply(this, args), delay); }; };\n    const diceUnicode = ['\\u2680', '\\u2681', '\\u2682', '\\u2683', '\\u2684', '\\u2685'];\n\n    const DOM = {\n        nameInput: $('#char-name-input'), genderInput: $('#char-gender-input'), ageInput: $('#char-age-input'),\n        ocDetailsInput: $('#oc-details-input'), raceSelect: $('#char-race-select'), attributesContainer: $('#attributes-container'),\n        skillsContainer: $('#skills-and-desc-container'), radarChart: $('#radar-chart'), summarySheet: $('#character-summary'),\n        diceOverlay: $('#dice-overlay'), diceContainer: $('#dice-container'), diceResultText: $('#dice-result-text'),\n        backgroundDisplay: $('#background-display'), bgOrigin: $('#bg-origin'), bgPast: $('#bg-past'), bgEncounter: $('#bg-encounter'),\n        skipAnimationBtn: $('#skip-animation-btn'),\n        submitBtn: $('#submit-btn'),\n        validationMessage: $('#validation-message'),\n    };\n    \n    const dicePool = []; const MAX_DICE = 6;\n    let currentAnimation = null; let textAnimation = null; let isSkipping = false;\n    let currentValidationMessage = '';\n    \n    function validateAndToggleButton() {\n        let newMessage = '';\n        if (!character.age || String(character.age).trim() === '') {\n            newMessage = '请填写您的冒险者年龄。';\n        } else if (!character.gender || !character.gender.trim()) {\n            newMessage = '请设定冒险者的性别。';\n        } else if (!character.background.origin) {\n            newMessage = '请投骰决定您的冒险者经历。';\n        } else if (Object.values(character.attributes).every(val => val === 0)) {\n            newMessage = '请投骰决定您的能力值。';\n        }\n\n        if (newMessage === currentValidationMessage) return;\n        currentValidationMessage = newMessage;\n\n        if (newMessage) {\n            DOM.submitBtn.disabled = true;\n            DOM.validationMessage.textContent = newMessage;\n            gsap.fromTo(DOM.validationMessage, { autoAlpha: 0, scale: 0.8 }, { autoAlpha: 1, scale: 1, duration: 0.4, ease: 'elastic.out(1, 0.75)' });\n        } else {\n            DOM.submitBtn.disabled = false;\n            gsap.to(DOM.validationMessage, { autoAlpha: 0, duration: 0.3 });\n        }\n    }\n    function updateCharacterDataFromDOM() { character.name = DOM.nameInput.value; character.gender = DOM.genderInput.value; character.age = DOM.ageInput.value; character.oc_details = DOM.ocDetailsInput.value; character.race = DOM.raceSelect.value; }\n    function renderSkills() { const uniqueSkills = [...new Set(character.skills)]; DOM.skillsContainer.innerHTML = `<p><strong>天赋与习得技能:</strong></p><ul>${uniqueSkills.map(s => `<li>- ${s}</li>`).join('')}</ul>`; }\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key}`).value = value; }); }\n    function renderSummary() {\n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '?';\n        const originText = `出身:${character.background.origin ? character.background.origin.name : '?'}`;\n        const pastText = `来历:${character.background.past ? character.background.past.name : '?'}`;\n        const encounterText = `邂逅:${character.background.encounter || '?'}`;\n        let summary = `### 《哥布林杀手TRPG》冒险者登记卡\\n` + `**姓名:** ${finalName} | **种族:** ${character.race} | **性别:** ${character.gender || '?'} | **年龄:** ${formattedAge}\\n` + `**经历:** ${originText} / ${pastText} / ${encounterText}\\n` + `**初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n` + `**初始技能:** ${uniqueSkills.join(', ') || '无'}\\n`; if (character.oc_details) { summary += `**身体特征与补充:** ${character.oc_details}\\n`; } summary += `---\\n**能力值:**\\n`; summary += Object.entries(character.attributes).map(([key, value]) => `- ${key}: ${value}`).join('\\n'); summary += `\\n**持有资金:** ${character.money} 银币`;\n        DOM.summarySheet.value = summary.replace(/### /g, '').replace(/\\*\\*/g, '').replace(/---/g, '\\n────────────────────\\n').replace(/- /g, '  ');\n        DOM.summarySheet.setAttribute('data-raw', summary);\n    }\n    async function renderRadarChartIfNeeded() { const currentAttributesString = JSON.stringify(character.attributes); if (currentAttributesString === character._lastAttributesForChart) return; DOM.radarChart.classList.add('loading'); const radarSyntax = `radar-beta\\ntitle 能力值分布\\naxis a[\"力量 ${character.attributes['力量']}\"]\\naxis b[\"敏捷 ${character.attributes['敏捷']}\"]\\naxis c[\"感知 ${character.attributes['感知']}\"]\\naxis d[\"知识 ${character.attributes['知识']}\"]\\naxis e[\"魅力 ${character.attributes['魅力']}\"]\\naxis f[\"信仰 ${character.attributes['信仰力']}\"]\\naxis g[\"魔力 ${character.attributes['魔力']}\"]\\naxis h[\"潜力 ${character.attributes['潜力']}\"]\\ncurve current[\"能力\"]{${character.attributes['力量']},${character.attributes['敏捷']},${character.attributes['感知']},${character.attributes['知识']},${character.attributes['魅力']},${character.attributes['信仰力']},${character.attributes['魔力']},${character.attributes['潜力']}}\\nmax 10\\nmin 0`; DOM.radarChart.innerHTML = radarSyntax; DOM.radarChart.removeAttribute('data-processed'); try { await mermaid.run({ nodes: [DOM.radarChart] }); character._lastAttributesForChart = currentAttributesString; } catch(e) { console.error(\"Mermaid rendering error:\", e); } finally { DOM.radarChart.classList.remove('loading'); } }\n    async function updateUI(forceFullUpdate = false) { updateCharacterDataFromDOM(); if(forceFullUpdate) { character._lastAttributesForChart = ''; character.skills = []; character.classes = {}; character.money = 100; if(raceData[character.race].skills) character.skills.push(...raceData[character.race].skills); if (character.background.origin) { if (character.background.origin.skills) character.skills.push(...character.background.origin.skills); if (character.background.origin.class) character.classes[character.background.origin.class] = character.background.origin.level; if(character.background.origin.money) character.money += rollDiceString(character.background.origin.money); } if (character.background.past && character.background.past.skills) { character.skills.push(...character.background.past.skills); } } renderAttributes(); renderSkills(); renderSummary(); await renderRadarChartIfNeeded(); validateAndToggleButton(); }\n\n    const masterTl = gsap.timeline({ delay: 0.2 });\n    const title = $('#main-title');\n    title.innerHTML = title.textContent.split('').map(char => `<span class=\"title-char\">${char}</span>`).join('');\n    gsap.set(\".gsap-header-item, .gsap-content-item\", { autoAlpha: 0, y: 20 });\n    masterTl.to(\".title-char\", { autoAlpha: 1, y: 0, duration: 0.7, ease: \"power3.out\", stagger: 0.1 }).to(\"#wax-seal\", { autoAlpha: 1, scale: 1, duration: 0.6, ease: \"elastic.out(1, 0.7)\" }, \"-=0.5\");\n    document.querySelectorAll('.gs-creator-step').forEach((step, index) => { const stepTl = gsap.timeline(); stepTl.to(step.querySelector('.gsap-header-item'), { autoAlpha: 1, y: 0, duration: 0.6, ease: 'power2.out' }).to(step.querySelectorAll('.gsap-content-item'), { autoAlpha: 1, y: 0, duration: 0.5, ease: 'power2.out', stagger: 0.1 }, '-=0.4'); masterTl.add(stepTl, `-=${index === 0 ? 0.2 : 0.7}`); });\n    const pipPositions = { 1: [ { left: '50%', top: '50%' } ], 2: [ { left: '25%', top: '25%' }, { left: '75%', top: '75%' } ], 3: [ { left: '25%', top: '25%' }, { left: '50%', top: '50%' }, { left: '75%', top: '75%' } ], 4: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 5: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '50%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 6: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '50%' }, { left: '75%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ]};\n    function setupCube(cubeEl) { const size = 'calc(var(--dice-size) / 2)'; gsap.set(cubeEl.querySelector('.face-front'),  { transform: `rotateY(0deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-back'),   { transform: `rotateY(180deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-right'),  { transform: `rotateY(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-left'),   { transform: `rotateY(-90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-top'),   { transform: `rotateX(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-bottom'), { transform: `rotateX(-90deg) translateZ(${size})` }); const faces = cubeEl.querySelectorAll('.dice-face'); faces.forEach(face => { const faceNum = face.getAttribute('data-face'); const pips = face.querySelectorAll('.pip'); const positions = pipPositions[faceNum]; if (!pips.length || !positions) return; pips.forEach((pip, index) => { const pos = positions[index]; gsap.set(pip, { left: pos.left, top: pos.top, xPercent: -50, yPercent: -50 }); }); }); }\n    function getRotationForFace(faceValue) { switch (faceValue) { case 1: return { x: 0, y: 0 }; case 6: return { x: 0, y: 180 }; case 3: return { x: 0, y: -90 }; case 4: return { x: 0, y: 90 }; case 2: return { x: -90, y: 0 }; case 5: return { x: 90,  y: 0 }; default: return { x: 0, y: 0 }; } }\n    async function animateText(element, text) { if(isSkipping) {element.innerHTML = text.replace(/\\n/g, '<br>'); return;} return new Promise(resolve => { if (textAnimation && textAnimation.isActive()) textAnimation.kill(); element.innerHTML = ''; textAnimation = gsap.to(element, { duration: text.length * 0.05, text: { value: text.replace(/\\n/g, '<br>'), newClass: \"typed-cursor\" }, ease: \"none\", onComplete: () => { gsap.delayedCall(0.7, () => { element.querySelector('.typed-cursor')?.remove(); resolve(); }); } }); }); }\n    function initDicePool() { const diceTemplate = document.querySelector('[data-id_template=\"dice-cube\"]'); if (!diceTemplate) return; for (let i = 0; i < MAX_DICE; i++) { const dieIconElement = document.createElement('div'); dieIconElement.className = 'dice-icon'; const newCube = diceTemplate.cloneNode(true); dieIconElement.appendChild(newCube); DOM.diceContainer.appendChild(dieIconElement); setupCube(newCube); dicePool.push(dieIconElement); } }\n    async function animateRoll(numDice, preCalculatedRolls, textToShowDuringRoll = \"投掷中...\") { return new Promise(resolve => { if (currentAnimation && currentAnimation.isActive()) currentAnimation.kill(); dicePool.forEach(die => die.style.display = 'none'); const activeDice = dicePool.slice(0, numDice); animateText(DOM.diceResultText, textToShowDuringRoll); activeDice.forEach(die => { die.style.display = 'flex'; die.className = 'dice-icon'; }); const masterTl = gsap.timeline({ onComplete: () => { if(isSkipping) DOM.diceResultText.innerHTML = ''; resolve(preCalculatedRolls); }}); currentAnimation = masterTl; activeDice.forEach((dieElement, i) => { const dieCube = dieElement.querySelector('.dice-cube'); const visualRoll = preCalculatedRolls[i]; const targetRotation = getRotationForFace(visualRoll); const dieTimeline = gsap.timeline(); dieTimeline.to(dieCube, { rotationX: `+=${gsap.utils.random(720, 1080)}`, rotationY: `+=${gsap.utils.random(720, 1080)}`, duration: 1.8, ease: \"power2.in\" }).to(dieCube, { rotationX: targetRotation.x, rotationY: targetRotation.y, duration: 0.7, ease: \"power4.out\" }); masterTl.add(dieTimeline, 0); }); }); }\n    \n    const debouncedUpdate = debounce(updateUI, 400);\n    [DOM.nameInput, DOM.genderInput, DOM.ageInput, DOM.ocDetailsInput].forEach(el => el.addEventListener('input', debouncedUpdate));\n    \n    DOM.skipAnimationBtn.addEventListener('click', () => {\n        isSkipping = true;\n        if (currentAnimation && currentAnimation.isActive()) currentAnimation.progress(1);\n        if (textAnimation && textAnimation.isActive()) textAnimation.progress(1);\n    });\n\n    $('#roll-background-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const rolls = [roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6()];\n        await animateRoll(6, rolls, '投掷 经历... (2d6 x 3)');\n        \n        const sums = { origin: rolls[0] + rolls[1], past: rolls[2] + rolls[3], encounter: rolls[4] + rolls[5] };\n        \n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `出身: ${rolls[0]} + ${rolls[1]} = ${sums.origin}\\n(${backgroundData.origin[character.race][sums.origin].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `来历: ${rolls[2]} + ${rolls[3]} = ${sums.past}\\n(${backgroundData.past[sums.past].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(4, 6), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `邂逅: ${rolls[4]} + ${rolls[5]} = ${sums.encounter}\\n(${backgroundData.encounter[sums.encounter]})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        character.background.origin = backgroundData.origin[character.race][sums.origin];\n        character.background.past = backgroundData.past[sums.past];\n        character.background.encounter = backgroundData.encounter[sums.encounter];\n        DOM.bgOrigin.textContent = character.background.origin.name;\n        DOM.bgPast.textContent = character.background.past.name;\n        DOM.bgEncounter.textContent = character.background.encounter;\n        DOM.backgroundDisplay.style.display = 'block';\n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        updateUI(true);\n    });\n\n    $('#roll-attributes-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const attrRolls = raceData[character.race].attr_rolls;\n        const allCalculatedRolls = [];\n\n        // Prepare race-based attributes\n        for (const attr in attrRolls) {\n            const formula = attrRolls[attr];\n            const modifier = parseInt(formula.split('d3')[1] || '0');\n            const { d6, d3 } = roll1D3();\n            const finalValue = Math.max(0, d3 + modifier);\n            character.attributes[attr] = finalValue;\n            allCalculatedRolls.push({ attr, formula, d6, d3, modifier, finalValue });\n        }\n        \n        // Prepare \"Potential\" attribute\n        const potentialValue = Math.floor(Math.random() * 3) + 1;\n        const d6ForPotential = (potentialValue * 2) - 1; // Map 1,2,3 to d6 faces 1,3,5 for animation\n        character.attributes['潜力'] = potentialValue;\n        allCalculatedRolls.push({\n            attr: '潜力',\n            formula: '1-3', // Just a descriptor\n            d6: d6ForPotential,\n            finalValue: potentialValue\n        });\n        \n        // Animate all rolls sequentially\n        for (const roll of allCalculatedRolls) {\n            await animateRoll(1, [roll.d6], `投掷 ${roll.attr}...`);\n            if (isSkipping) break;\n\n            gsap.to(dicePool[0], { className: 'dice-icon highlight', duration: 0.3 });\n            \n            let resultText;\n            if (roll.attr === '潜力') {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.finalValue}`;\n            } else {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.d3} ${roll.modifier >= 0 ? '+' : ''} ${roll.modifier} = ${roll.finalValue}`;\n            }\n            await animateText(DOM.diceResultText, resultText);\n            \n            await updateUI();\n            \n            if (isSkipping) break;\n            \n            await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        await updateUI();\n    });\n\n    DOM.raceSelect.addEventListener('change', () => {\n        DOM.backgroundDisplay.style.display = 'none';\n        character.background = { origin: null, past: null, encounter: null };\n        Object.keys(character.attributes).forEach(k => character.attributes[k] = 0);\n        updateUI(true);\n    });\n\n    $('#submit-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        await updateUI(true);\n        \n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '未设定';\n        \n        const finalCharacterObject={ NAME:finalName, GENDER:character.gender||'未设定', AGE:formattedAge, RACE:character.race, ORIGIN: character.background.origin ? character.background.origin.name : '未知', PAST: character.background.past ? character.background.past.name : '未知', ENCOUNTER: character.background.encounter || '未知', SKILLS: uniqueSkills, OC_DETAILS:character.oc_details||'无', ...character.attributes, MONEY:character.money };\n        \n        const slashCommand=`/send <START>\\nAdmin:\\n这是一个TRPG开局，请为 User 生成一段详尽的背景故事。\\n\\n# 故事核心要求\\n请严格根据以下【角色完整设定】，撰写一段从角色童年到现在的成长故事。故事需要清晰地阐述是什么关键事件或心路历程，最终让他/她确立了要成为一名冒险者的志向。请在故事中自然地融入角色的种族、出身背景、技能和性格特点。\\n\\n# 角色完整设定\\n---\\n## 基础信息\\n- **姓名:** ${finalName}\\n- **性别:** ${character.gender||'未设定'}\\n- **年龄:** ${formattedAge}\\n- **种族:** ${character.race}\\n\\n## 经历\\n- **出身:** ${character.background.origin ? character.background.origin.name : '未知'}\\n- **来历:** ${character.background.past ? character.background.past.name : '未知'}\\n- **邂逅:** ${character.background.encounter || '未知'}\\n\\n## 背景与技能\\n- **初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n- **初始技能:** ${uniqueSkills.join(', ')||'无'}\\n\\n## 补充设定 (OC)\\n- **额外补充:** ${character.oc_details||'无'}\\n\\n## 能力值\\n- **力量:** ${character.attributes['力量']}\\n- **敏捷:** ${character.attributes['敏捷']}\\n- **感知:** ${character.attributes['感知']}\\n- **知识:** ${character.attributes['知识']}\\n- **魅力:** ${character.attributes['魅力']}\\n- **信仰力:** ${character.attributes['信仰力']}\\n- **魔力:** ${character.attributes['魔力']}\\n\\n## 初始资产\\n- **资金:** ${character.money} 银币\\n\\|\\n/trigger`; \n        \n        try {\n            if (typeof insertOrAssignVariables === 'function') {\n                await insertOrAssignVariables(finalCharacterObject);\n            } else {\n                console.log(\"SillyTavern Function 'insertOrAssignVariables' not found. Variables:\", finalCharacterObject);\n            }\n            if (typeof triggerSlash === 'function') {\n                await triggerSlash(slashCommand, 'Send');\n            } else { \n                console.log(\"SillyTavern Function 'triggerSlash' not found. Command will be copied to clipboard.\");\n                navigator.clipboard.writeText(slashCommand).then(() => {\n                    alert('角色指令已复制到剪贴板！');\n                });\n            }\n        } catch (error) {\n            console.error('与SillyTavern交互失败:', error);\n            alert('与SillyTavern交互失败，请查看浏览器控制台。');\n        }\n\n        e.target.innerHTML = \"契约成立！\";\n    });\n    \n    initDicePool();\n    Object.keys(raceData).forEach(key => DOM.raceSelect.add(new Option(key, key)));\n    Object.keys(character.attributes).forEach(key => {\n        const pointControl = document.createElement('div');\n        pointControl.className = 'point-control';\n        pointControl.innerHTML = `<span class=\"label\">${key}</span><input type=\"text\" id=\"attr-${key.replace(/\\s/g, '')}\" readonly value=\"0\">`; // ID santized just in case\n        DOM.attributesContainer.appendChild(pointControl);\n    });\n    // A small fix for renderAttributes to handle sanitized IDs\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key.replace(/\\s/g, '')}`).value = value; }); }\n    updateUI(true);\n});\n</script>\n\n</body>\n</html>\n```"
  },
  {
    "role": "user",
    "content": "```\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>哥布林杀手TRPG - 冒险者契约</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/gsap.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/TextPlugin.min.js\" defer></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.min.js\" defer></script>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Noto+Serif+SC:wght@400;700&family=Vollkorn:wght@400;700&family=Courier+Prime&display=swap\" rel=\"stylesheet\">\n\n    <style>\n        :root {\n            --leather-bg: #5a3a2a;\n            --dark-leather-bg: #3b2a1a;\n            --parchment-bg: #f5f5dc;\n            --parchment-bg-gradient: linear-gradient(165deg, #f7e9d7, #e6d5c3);\n            --text-color: #3d3d3d;\n            --heading-color: #4a3c2c;\n            --border-color: #7a5a4a;\n            --font-main: 'Vollkorn', 'Noto Serif SC', serif;\n            --font-display: 'Cinzel', 'Noto Serif SC', serif;\n            --font-code: 'Courier Prime', 'Courier New', monospace;\n            --dice-size: 5rem; \n        }\n\n        html { height: 100%; }\n        body {\n            background-color: #3a2e20;\n            font-family: var(--font-main);\n            color: var(--text-color);\n            margin: 0; padding: 20px;\n            box-sizing: border-box;\n            display: flex;\n            align-items: center; justify-content: center;\n            min-height: 100%;\n        }\n        *, *:before, *:after { box-sizing: inherit; }\n\n        .creator-wrapper {\n            width: 100%; max-width: 900px;\n            margin: 0;\n            background: var(--parchment-bg-gradient);\n            border: 12px solid #8b7355;\n            border-radius: 8px;\n            box-shadow: 0 0 40px rgba(139, 115, 85, 0.3), inset 0 0 30px rgba(255, 255, 255, 0.4);\n            position: relative;\n            overflow: hidden;\n            padding: 25px;\n            display: flex; flex-direction: column;\n            max-height: 95vh;\n        }\n\n        .border-flow, .inner-border { position: absolute; pointer-events: none; }\n        .border-flow { top: 0; left: 0; right: 0; bottom: 0; background: linear-gradient(90deg, rgba(139,115,85,0.1) 1px, transparent 1px), linear-gradient(0deg, rgba(139,115,85,0.1) 1px, transparent 1px); background-size: 20px 20px; animation: borderFlow 15s linear infinite; }\n        .inner-border { top: 5px; left: 5px; right: 5px; bottom: 5px; border: 3px solid rgba(139,115,85,0.3); border-radius: 5px; }\n        @keyframes borderFlow { from { background-position: 0 0; } to { background-position: 20px 20px; } }\n\n        .creator-header {\n            text-align: center;\n            padding: 10px;\n            margin-bottom: 25px;\n            border-bottom: 2px solid rgba(139, 115, 85, 0.3);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 15px;\n        }\n        .creator-header h1 {\n            font-family: var(--font-display);\n            font-size: clamp(24px, 5vw, 32px);\n            margin: 0;\n            font-weight: 700;\n            letter-spacing: 3px;\n            color: var(--heading-color);\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.1);\n        }\n        \n        .title-char {\n            display: inline-block;\n            opacity: 0;\n            transform: translateY(30px);\n        }\n\n        .wax-seal {\n            width: 45px;\n            height: 45px;\n            display: inline-block;\n            background-color: #c0392b;\n            border-radius: 50%;\n            position: relative;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.4), inset 0 -2px 3px rgba(0,0,0,0.3);\n            opacity: 0;\n            transform: scale(0.5);\n            font-family: 'Cinzel', serif;\n            color: #e7a49c;\n            text-align: center;\n            font-size: 24px;\n            line-height: 45px;\n            font-weight: 700;\n        }\n        .wax-seal::before {\n            content: 'GS';\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.3);\n        }\n\n        .creator-scroll-content { overflow-y: auto; padding: 10px 20px 10px 10px; }\n        .creator-scroll-content::-webkit-scrollbar { width: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-track { background: rgba(139, 115, 85, 0.1); border-radius: 10px; }\n        .creator-scroll-content::-webkit-scrollbar-thumb { background-color: #a89072; border-radius: 10px; border: 2px solid #f7e9d7; }\n        \n        .gs-creator-step { margin-bottom: 40px; overflow: hidden; }\n        .gs-creator-step h3 { font-family: var(--font-display); font-size: 1.5em; font-weight: 700; border-bottom: 1.5px solid var(--border-color); padding-bottom: 8px; margin-bottom: 20px; color: var(--heading-color); text-align: left; }\n        \n        .layout-grid { display: grid; grid-template-columns: 1fr; gap: 25px; align-items: flex-start; }\n        @media (min-width: 768px) {\n            .layout-grid { grid-template-columns: 1fr 280px; }\n        }\n\n        .form-container { text-align: left; }\n        .gs-form-group { margin-bottom: 16px; }\n        .gs-form-group label { display: block; margin-bottom: 6px; font-weight: bold; color: var(--heading-color); }\n        .form-input, .form-select, .form-textarea { width: 100%; padding: 10px; background-color: rgba(255, 255, 255, 0.5); border: 1px solid #a58e72; border-radius: 4px; color: #3d3d3d; font-family: var(--font-main); font-size: 1em; transition: all 0.2s ease-in-out; box-shadow: inset 1px 1px 2px rgba(0,0,0,0.1); }\n        .form-input:focus, .form-select:focus, .form-textarea:focus { outline: none; border-color: #8b7355; background-color: #fff; box-shadow: 0 0 5px rgba(139, 115, 85, 0.5); }\n        .form-textarea { resize: vertical; min-height: 100px; }\n\n        .grid-cols-2 {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 16px;\n        }\n        @media (min-width: 480px) {\n            .grid-cols-2 {\n                grid-template-columns: repeat(2, 1fr);\n            }\n        }\n\n        #attributes-container .point-control { display: flex; align-items: center; justify-content: space-between; margin-bottom: 8px; padding: 6px 8px; background: rgba(0,0,0,0.03); border-left: 3px solid rgba(139,115,85,0.2); border-radius: 4px; }\n        #attributes-container .label { font-weight: bold; color: var(--heading-color); }\n        #attributes-container input[readonly] { width: 40px; text-align: center; font-weight: bold; font-size: 1.2em; font-family: var(--font-display); color: #a02c2c; border: none; background-color: transparent; box-shadow: none; padding: 0; }\n        \n        .attributes-grid {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 0 16px;\n        }\n        @media (min-width: 480px) {\n            .attributes-grid {\n                grid-template-columns: 1fr 1fr;\n            }\n        }\n        \n        .skills-display p { background-color: rgba(0,0,0,0.05); border-left: 3px solid var(--border-color); padding: 10px 15px; margin-top: 10px; font-size: 0.95em; border-radius: 0 4px 4px 0; }\n        .skills-display strong { color: #8b5b4b; font-family: var(--font-display); }\n        .skills-display ul { list-style: none; padding-left: 0; margin-top: 8px; font-size: 0.9em; }\n        .skills-display li { margin-bottom: 4px; }\n\n        #character-summary { background-color: #e9e4d9; font-family: var(--font-code); line-height: 1.6; height: 250px; color: #2c2a2a; }\n        \n        .gs-button { width: 100%; background-color: #8b7355; color: var(--parchment-bg); border: 2px solid var(--dark-leather-bg); border-radius: 5px; padding: 12px 20px; font-family: var(--font-display); font-size: 1.2em; font-weight: 700; cursor: pointer; margin-top: 10px; transition: all 0.3s ease; box-shadow: 0 3px 5px rgba(0,0,0,0.3); }\n        .gs-button:hover { background-color: #a0886c; transform: translateY(-2px); box-shadow: 0 5px 8px rgba(0,0,0,0.3); }\n        .gs-button:disabled { background-color: #9e9e9e; border-color: #757575; cursor: not-allowed; transform: none; box-shadow: none; opacity: 0.6; }\n        .action-button { background-color: #6d5b4b; font-size: 1em; padding: 10px 15px; margin-top: 0; margin-bottom: 10px; width: auto; }\n        \n        .background-display { margin-top: 15px; padding: 15px; border: 1px dashed var(--border-color); border-radius: 5px; background: rgba(0,0,0,0.02); }\n        .background-display p { margin: 0 0 8px; }\n        .background-display span { font-weight: bold; color: var(--heading-color); }\n        \n        #radar-chart-container { \n            max-width: 100%;\n        }\n        @media (min-width: 768px) {\n            #radar-chart-container {\n                position: sticky;\n                top: 0;\n                padding-top: 45px;\n            }\n        }\n\n        pre.mermaid { \n            font-family: var(--font-main); \n            background: rgba(0,0,0,0.02); \n            border: 1px solid rgba(139,115,85,0.1); \n            padding: 10px; \n            border-radius: 5px; \n            overflow: auto;\n            transition: opacity 0.3s ease-in-out;\n        }\n        pre.mermaid.loading { opacity: 0.5; pointer-events: none; }\n\n        pre.mermaid > svg {\n            max-width: 100%;\n            height: auto;\n        }\n\n        #dice-overlay {\n            position: fixed; top: 0; left: 0; width: 100%; height: 100%;\n            background: rgba(0,0,0,0.8); backdrop-filter: blur(5px);\n            display: none; align-items: center; justify-content: center; flex-direction: column;\n            z-index: 100;\n            color: #fff; text-shadow: 0 0 10px #000;\n        }\n\n        .dice-container {\n            display: flex; flex-wrap: wrap; justify-content: center;\n            gap: 2rem; margin-bottom: 2rem;\n            max-width: 600px;\n        }\n        \n        .dice-icon {\n            width: var(--dice-size); height: var(--dice-size);\n            perspective: 800px;\n            transform-style: preserve-3d;\n            display: none;\n        }\n        .dice-icon.highlight {\n            transform: scale(1.15);\n            filter: drop-shadow(0 0 15px #FFEB3B);\n            transition: transform 0.3s ease, filter 0.3s ease;\n        }\n\n        .dice-cube {\n            width: 100%; height: 100%;\n            position: relative;\n            transform-style: preserve-3d;\n            transform: translateZ(calc(var(--dice-size) / -2));\n        }\n        \n        .dice-face {\n            position: absolute;\n            width: var(--dice-size); height: var(--dice-size);\n            background-color: rgba(255, 255, 255, 0.98);\n            border: 1.5px solid #857e72;\n            border-radius: 12%;\n        }\n\n        .pips-container {\n            width: 100%; height: 100%;\n            position: relative; \n        }\n        .pip {\n            width: 22%; height: 22%; \n            background-color: #3d352e;\n            border-radius: 50%;\n            box-shadow: inset 0 1px 3px rgba(0,0,0,0.5);\n            position: absolute; \n        }\n        \n        #dice-result-text { \n            font-family: var(--font-display); \n            font-size: 2.2em;\n            color: #FFEB3B; \n            text-shadow: 0 0 12px #FFEB3B; \n            min-height: 2em;\n            line-height: 1.2;\n            text-align: center; \n        }\n        \n        #skip-animation-btn {\n            position: absolute;\n            bottom: 30px;\n            font-size: 1em;\n            padding: 8px 20px;\n            width: auto;\n            background-color: rgba(0,0,0,0.3);\n            border-color: rgba(255,255,255,0.5);\n            color: rgba(255,255,255,0.8);\n        }\n        #skip-animation-btn:hover {\n            background-color: rgba(0,0,0,0.5);\n            color: #fff;\n        }\n\n        .typed-cursor {\n            opacity: 1;\n            animation: typed-blink 0.7s infinite;\n        }\n        @keyframes typed-blink{\n            0% { opacity: 1; }\n            50% { opacity: 0; }\n            100% { opacity: 1; }\n        }\n        \n        .validation-message {\n            text-align: center;\n            color: #b71c1c;\n            font-size: 0.9em;\n            font-weight: bold;\n            margin-top: -5px;\n            margin-bottom: 10px;\n            height: 1.2em;\n            opacity: 0;\n            will-change: transform, opacity;\n        }\n\n        #credits-screen {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            pointer-events: none;\n            opacity: 0;\n        }\n\n        #credits-screen p {\n            font-family: var(--font-display);\n            font-size: 2em;\n            color: #f5f5dc;\n            text-shadow: 0 0 8px rgba(245, 245, 220, 0.7);\n        }\n    </style>\n</head>\n<body>\n\n<div class=\"creator-wrapper\">\n    <div class=\"border-flow\"></div>\n    <div class=\"inner-border\"></div>\n    <header class=\"creator-header\">\n        <h1 id=\"main-title\">冒险者契约登记</h1>\n        <div id=\"wax-seal\" class=\"wax-seal\"></div>\n    </header>\n\n    <div class=\"creator-scroll-content\">\n        <div class=\"gs-creator-container\">\n            <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第一步：身份确认</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-name-input\">姓名</label><input id=\"char-name-input\" type=\"text\" placeholder=\"可留空，默认为 {{user}}\" class=\"form-input\"></div>\n                    <div class=\"grid-cols-2 gsap-content-item\">\n                        <div class=\"gs-form-group\"><label for=\"char-gender-input\">性别</label><input id=\"char-gender-input\" type=\"text\" placeholder=\"例如: 男性/女性/双性/无性/……\" class=\"form-input\"></div>\n                        <div class=\"gs-form-group\"><label for=\"char-age-input\">年龄</label><input id=\"char-age-input\" type=\"number\" placeholder=\"可参照种族说明\" class=\"form-input\"></div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"char-race-select\">种族</label><select id=\"char-race-select\" class=\"form-select\"></select></div>\n                    <div class=\"gs-form-group gsap-content-item\">\n                        <label>经历 (出身/来历/邂逅)</label>\n                        <button id=\"roll-background-btn\" class=\"gs-button action-button\">🎲 投骰决定经历</button>\n                        <div id=\"background-display\" class=\"background-display\" style=\"display: none;\">\n                            <p>出身: <span id=\"bg-origin\"></span></p>\n                            <p>来历: <span id=\"bg-past\"></span></p>\n                            <p>邂逅: <span id=\"bg-encounter\"></span></p>\n                        </div>\n                    </div>\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"oc-details-input\">身体特征与补充</label><textarea id=\"oc-details-input\" placeholder=\"发色、瞳色、体型、性格、背景故事构思...\" class=\"form-textarea\"></textarea></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第二步：能力值与技能</h3>\n                <div class=\"layout-grid\">\n                    <div class=\"form-container gsap-content-item\">\n                        <button id=\"roll-attributes-btn\" class=\"gs-button action-button\">🎲 投骰决定能力值</button>\n                        <div id=\"attributes-container\" class=\"attributes-grid\"></div>\n                        <div id=\"skills-and-desc-container\" class=\"skills-display\"></div>\n                    </div>\n                    <div id=\"radar-chart-container\" class=\"gsap-content-item\"><pre class=\"mermaid\" id=\"radar-chart\"></pre></div>\n                </div>\n            </div>\n             <div class=\"gs-creator-step\">\n                <h3 class=\"gsap-header-item\">第三步：完成登记</h3>\n                <div class=\"form-container\">\n                    <div class=\"gs-form-group gsap-content-item\"><label for=\"character-summary\">角色卡预览</label><textarea id=\"character-summary\" rows=\"12\" readonly class=\"form-textarea\"></textarea></div>\n                    <button id=\"submit-btn\" class=\"gs-button gsap-content-item\" disabled>确认登记，开始冒险</button>\n                    <div id=\"validation-message\" class=\"validation-message\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div id=\"credits-screen\">\n    <p>作者 𝙀𝙡𝙖𝙞𝙣𝙖𝙙𝙚𝙨</p>\n</div>\n\n<div id=\"dice-overlay\">\n    <div class=\"dice-container\" id=\"dice-container\"></div>\n    <div id=\"dice-result-text\"></div>\n    <button id=\"skip-animation-btn\" class=\"gs-button\">跳过动画</button>\n</div>\n\n<div id=\"dice-templates\" style=\"display:none;\">\n    <div class=\"dice-cube\" data-id_template=\"dice-cube\">\n        <div class=\"dice-face face-front\" data-face=\"1\"><div class=\"pips-container\"><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-back\" data-face=\"6\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-right\" data-face=\"3\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-left\" data-face=\"4\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-top\" data-face=\"2\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n        <div class=\"dice-face face-bottom\" data-face=\"5\"><div class=\"pips-container\"><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span><span class=\"pip\"></span></div></div>\n    </div>\n</div>\n\n<script>\n// --- MODIFIED DATA ---\nconst raceData = {\n    '凡人': { attr_rolls: { '力量': '1d3+1', '敏捷': '1d3', '感知': '1d3', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3+2', '魔力': '1d3' }, skills: ['过载行动(初级)', '武器:投掷武器(初级)', '长距离移动(初级)']},\n    '矿人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3', '感知': '1d3+2', '知识': '1d3-1', '魅力': '1d3+1', '信仰力': '1d3+1', '魔力': '1d3-1' }, skills: ['治愈适性(初级)', '夜视(初级)', '锻造(初级)']},\n    '森人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+1', '感知': '1d3+1', '知识': '1d3+1', '魅力': '1d3', '信仰力': '1d3-1', '魔力': '1d3+1' }, skills: ['武器:弩弓(初级)', '夜视(初级)', '精灵宠儿(初级)']},\n    '蜥蜴人': { attr_rolls: { '力量': '1d3+2', '敏捷': '1d3+1', '感知': '1d3', '知识': '1d3', '魅力': '1d3+1', '信仰力': '1d3', '魔力': '1d3' }, skills: ['免疫强化(初级)', '夜视(初级)', '龙族血统(初级)']},\n    '圃人': { attr_rolls: { '力量': '1d3-1', '敏捷': '1d3+2', '感知': '1d3+1', '知识': '1d3', '魅力': '1d3-1', '信仰力': '1d3', '魔力': '1d3+2' }, skills: ['隐匿(初级)', '先发制人(初级)', '烹饪(初级)']}\n};\nconst backgroundData = {\n    origin: { \n        '凡人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '学者', class: '魔术师', level: 1, skills: ['文献调查(初级)'] }, 6: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 7: { name: '农民', skills: ['生产业:农业(初级)', '强健(初级)'] }, 8: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '骑士', class: '战士', level: 1, skills: ['骑乘(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n        '矿人': { 2: { name: '冒险者', class: '任意', level: 1 }, 3: { name: '无赖', class: '武道家', level: 1, skills: ['演艺(初级)'] }, 4: { name: '猎人', class: '斥候', level: 1, skills: ['怪物知识(初级)'] }, 5: { name: '商人', skills: ['交涉(初级)'], money: '2d6*10' }, 6: { name: '酒馆老板', class: '战士', level: 1, skills: ['观察(初级)'] }, 7: { name: '铁匠', skills: ['工匠:锻造(初级)', '手工(初级)'] }, 8: { name: '工匠', skills: ['工匠(初级)', '手工(初级)'] }, 9: { name: '士兵', class: '斥候', level: 1, skills: ['第六感(初级)'] }, 10: { name: '碎盾者', class: '战士', level: 1, skills: ['强击攻击·斩(初级)'] }, 11: { name: '神官', class: '神官', level: 1, skills: ['祈祷(初级)'] }, 12: { name: '贵族', skills: ['统率(初级)'], money: '2d6*50' }},\n    },\n    past: { 2: { name: '奴隶', skills: ['劳动(初级)'] }, 3: { name: '牢狱', skills: ['犯罪知识(初级)'] }, 4: { name: '战场', skills: ['沉着冷静(初级)'] }, 5: { name: '神殿', skills: ['神学(初级)'] }, 6: { name: '孤儿', skills: ['忍耐(初级)'] }, 7: { name: '平顺', skills: ['幸运(初级)'] }, 8: { name: '贫困', skills: ['生存术(初级)'] }, 9: { name: '学校', skills: ['博识(初级)'] }, 10: { name: '深闺', skills: ['无偏见(初级)'] }, 11: { name: '奢华', skills: ['鉴定(初级)'] }, 12: { name: '宫廷', skills: ['礼仪(初级)'] }},\n    encounter: { 2: '宿敌', 3: '上司', 4: '后辈', 5: '交易对象', 6: '下属', 7: '家人', 8: '挚友', 9: '前辈', 10: '未婚夫/妻', 11: '劲敌', 12: '师父' }\n};\nbackgroundData.origin['森人'] = backgroundData.origin['凡人']; backgroundData.origin['蜥蜴人'] = backgroundData.origin['凡人']; backgroundData.origin['圃人'] = backgroundData.origin['凡人'];\nconst character = {\n    name: '', gender: '', age: '', oc_details: '', race: '凡人',\n    background: { origin: null, past: null, encounter: null },\n    attributes: { '力量': 0, '敏捷': 0, '感知': 0, '知识': 0, '魅力': 0, '信仰力': 0, '魔力': 0, '潜力': 0 },\n    skills: [], classes: {}, money: 0, _lastAttributesForChart: '',\n};\n// --- END MODIFIED DATA ---\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    gsap.registerPlugin(TextPlugin);\n    mermaid.initialize({ startOnLoad: true, theme: 'base', themeVariables: {\n        '--mermaid-font-family': \"'Vollkorn', 'Noto Serif SC', serif\",\n        primaryColor: '#f7e9d7', primaryTextColor: '#3d3d3d', lineColor: '#8b7355', textColor: '#4a3c2c',\n    }});\n    \n    const $ = (s) => document.querySelector(s);\n    const roll1D6 = () => Math.floor(Math.random() * 6) + 1;\n    const roll1D3 = () => {\n        const d6 = roll1D6();\n        if (d6 <= 2) return { d6, d3: 1 };\n        if (d6 <= 4) return { d6, d3: 2 };\n        return { d6, d3: 3 };\n    };\n    const rollDiceString = (diceString) => { const p=diceString.split('*');const d=p[0];const m=parseInt(p[1])||1;if(!d.includes('d'))return 0;const[n,s]=d.split('d').map(Number);let t=0;for(let i=0;i<n;i++){t+=Math.floor(Math.random()*s)+1;}return t*m; };\n    const formatAge = (ageValue) => { if (!ageValue && ageValue !== 0) return ageValue; const num = Number(ageValue); if (isNaN(num)) return ageValue; if (Math.abs(num) >= 1_000_000) return num.toExponential(2); return ageValue; };\n    const debounce = (func, delay) => { let timeout; return function(...args) { clearTimeout(timeout); timeout = setTimeout(() => func.apply(this, args), delay); }; };\n    const diceUnicode = ['\\u2680', '\\u2681', '\\u2682', '\\u2683', '\\u2684', '\\u2685'];\n\n    const DOM = {\n        nameInput: $('#char-name-input'), genderInput: $('#char-gender-input'), ageInput: $('#char-age-input'),\n        ocDetailsInput: $('#oc-details-input'), raceSelect: $('#char-race-select'), attributesContainer: $('#attributes-container'),\n        skillsContainer: $('#skills-and-desc-container'), radarChart: $('#radar-chart'), summarySheet: $('#character-summary'),\n        diceOverlay: $('#dice-overlay'), diceContainer: $('#dice-container'), diceResultText: $('#dice-result-text'),\n        backgroundDisplay: $('#background-display'), bgOrigin: $('#bg-origin'), bgPast: $('#bg-past'), bgEncounter: $('#bg-encounter'),\n        skipAnimationBtn: $('#skip-animation-btn'),\n        submitBtn: $('#submit-btn'),\n        validationMessage: $('#validation-message'),\n    };\n    \n    const dicePool = []; const MAX_DICE = 6;\n    let currentAnimation = null; let textAnimation = null; let isSkipping = false;\n    let currentValidationMessage = '';\n    \n    function validateAndToggleButton() {\n        let newMessage = '';\n        if (!character.age || String(character.age).trim() === '') {\n            newMessage = '请填写您的冒险者年龄。';\n        } else if (!character.gender || !character.gender.trim()) {\n            newMessage = '请设定冒险者的性别。';\n        } else if (!character.background.origin) {\n            newMessage = '请投骰决定您的冒险者经历。';\n        } else if (Object.values(character.attributes).every(val => val === 0)) {\n            newMessage = '请投骰决定您的能力值。';\n        }\n\n        if (newMessage === currentValidationMessage) return;\n        currentValidationMessage = newMessage;\n\n        if (newMessage) {\n            DOM.submitBtn.disabled = true;\n            DOM.validationMessage.textContent = newMessage;\n            gsap.fromTo(DOM.validationMessage, { autoAlpha: 0, scale: 0.8 }, { autoAlpha: 1, scale: 1, duration: 0.4, ease: 'elastic.out(1, 0.75)' });\n        } else {\n            DOM.submitBtn.disabled = false;\n            gsap.to(DOM.validationMessage, { autoAlpha: 0, duration: 0.3 });\n        }\n    }\n    function updateCharacterDataFromDOM() { character.name = DOM.nameInput.value; character.gender = DOM.genderInput.value; character.age = DOM.ageInput.value; character.oc_details = DOM.ocDetailsInput.value; character.race = DOM.raceSelect.value; }\n    function renderSkills() { const uniqueSkills = [...new Set(character.skills)]; DOM.skillsContainer.innerHTML = `<p><strong>天赋与习得技能:</strong></p><ul>${uniqueSkills.map(s => `<li>- ${s}</li>`).join('')}</ul>`; }\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key}`).value = value; }); }\n    function renderSummary() {\n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '?';\n        const originText = `出身:${character.background.origin ? character.background.origin.name : '?'}`;\n        const pastText = `来历:${character.background.past ? character.background.past.name : '?'}`;\n        const encounterText = `邂逅:${character.background.encounter || '?'}`;\n        let summary = `### 《哥布林杀手TRPG》冒险者登记卡\\n` + `**姓名:** ${finalName} | **种族:** ${character.race} | **性别:** ${character.gender || '?'} | **年龄:** ${formattedAge}\\n` + `**经历:** ${originText} / ${pastText} / ${encounterText}\\n` + `**初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n` + `**初始技能:** ${uniqueSkills.join(', ') || '无'}\\n`; if (character.oc_details) { summary += `**身体特征与补充:** ${character.oc_details}\\n`; } summary += `---\\n**能力值:**\\n`; summary += Object.entries(character.attributes).map(([key, value]) => `- ${key}: ${value}`).join('\\n'); summary += `\\n**持有资金:** ${character.money} 银币`;\n        DOM.summarySheet.value = summary.replace(/### /g, '').replace(/\\*\\*/g, '').replace(/---/g, '\\n────────────────────\\n').replace(/- /g, '  ');\n        DOM.summarySheet.setAttribute('data-raw', summary);\n    }\n    async function renderRadarChartIfNeeded() { const currentAttributesString = JSON.stringify(character.attributes); if (currentAttributesString === character._lastAttributesForChart) return; DOM.radarChart.classList.add('loading'); const radarSyntax = `radar-beta\\ntitle 能力值分布\\naxis a[\"力量 ${character.attributes['力量']}\"]\\naxis b[\"敏捷 ${character.attributes['敏捷']}\"]\\naxis c[\"感知 ${character.attributes['感知']}\"]\\naxis d[\"知识 ${character.attributes['知识']}\"]\\naxis e[\"魅力 ${character.attributes['魅力']}\"]\\naxis f[\"信仰 ${character.attributes['信仰力']}\"]\\naxis g[\"魔力 ${character.attributes['魔力']}\"]\\naxis h[\"潜力 ${character.attributes['潜力']}\"]\\ncurve current[\"能力\"]{${character.attributes['力量']},${character.attributes['敏捷']},${character.attributes['感知']},${character.attributes['知识']},${character.attributes['魅力']},${character.attributes['信仰力']},${character.attributes['魔力']},${character.attributes['潜力']}}\\nmax 10\\nmin 0`; DOM.radarChart.innerHTML = radarSyntax; DOM.radarChart.removeAttribute('data-processed'); try { await mermaid.run({ nodes: [DOM.radarChart] }); character._lastAttributesForChart = currentAttributesString; } catch(e) { console.error(\"Mermaid rendering error:\", e); } finally { DOM.radarChart.classList.remove('loading'); } }\n    async function updateUI(forceFullUpdate = false) { updateCharacterDataFromDOM(); if(forceFullUpdate) { character._lastAttributesForChart = ''; character.skills = []; character.classes = {}; character.money = 100; if(raceData[character.race].skills) character.skills.push(...raceData[character.race].skills); if (character.background.origin) { if (character.background.origin.skills) character.skills.push(...character.background.origin.skills); if (character.background.origin.class) character.classes[character.background.origin.class] = character.background.origin.level; if(character.background.origin.money) character.money += rollDiceString(character.background.origin.money); } if (character.background.past && character.background.past.skills) { character.skills.push(...character.background.past.skills); } } renderAttributes(); renderSkills(); renderSummary(); await renderRadarChartIfNeeded(); validateAndToggleButton(); }\n\n    const masterTl = gsap.timeline({ delay: 0.2 });\n    const title = $('#main-title');\n    title.innerHTML = title.textContent.split('').map(char => `<span class=\"title-char\">${char}</span>`).join('');\n    gsap.set(\".gsap-header-item, .gsap-content-item\", { autoAlpha: 0, y: 20 });\n    masterTl.to(\".title-char\", { autoAlpha: 1, y: 0, duration: 0.7, ease: \"power3.out\", stagger: 0.1 }).to(\"#wax-seal\", { autoAlpha: 1, scale: 1, duration: 0.6, ease: \"elastic.out(1, 0.7)\" }, \"-=0.5\");\n    document.querySelectorAll('.gs-creator-step').forEach((step, index) => { const stepTl = gsap.timeline(); stepTl.to(step.querySelector('.gsap-header-item'), { autoAlpha: 1, y: 0, duration: 0.6, ease: 'power2.out' }).to(step.querySelectorAll('.gsap-content-item'), { autoAlpha: 1, y: 0, duration: 0.5, ease: 'power2.out', stagger: 0.1 }, '-=0.4'); masterTl.add(stepTl, `-=${index === 0 ? 0.2 : 0.7}`); });\n    const pipPositions = { 1: [ { left: '50%', top: '50%' } ], 2: [ { left: '25%', top: '25%' }, { left: '75%', top: '75%' } ], 3: [ { left: '25%', top: '25%' }, { left: '50%', top: '50%' }, { left: '75%', top: '75%' } ], 4: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 5: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '50%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ], 6: [ { left: '25%', top: '25%' }, { left: '75%', top: '25%' }, { left: '25%', top: '50%' }, { left: '75%', top: '50%' }, { left: '25%', top: '75%' }, { left: '75%', top: '75%' } ]};\n    function setupCube(cubeEl) { const size = 'calc(var(--dice-size) / 2)'; gsap.set(cubeEl.querySelector('.face-front'),  { transform: `rotateY(0deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-back'),   { transform: `rotateY(180deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-right'),  { transform: `rotateY(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-left'),   { transform: `rotateY(-90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-top'),   { transform: `rotateX(90deg) translateZ(${size})` }); gsap.set(cubeEl.querySelector('.face-bottom'), { transform: `rotateX(-90deg) translateZ(${size})` }); const faces = cubeEl.querySelectorAll('.dice-face'); faces.forEach(face => { const faceNum = face.getAttribute('data-face'); const pips = face.querySelectorAll('.pip'); const positions = pipPositions[faceNum]; if (!pips.length || !positions) return; pips.forEach((pip, index) => { const pos = positions[index]; gsap.set(pip, { left: pos.left, top: pos.top, xPercent: -50, yPercent: -50 }); }); }); }\n    function getRotationForFace(faceValue) { switch (faceValue) { case 1: return { x: 0, y: 0 }; case 6: return { x: 0, y: 180 }; case 3: return { x: 0, y: -90 }; case 4: return { x: 0, y: 90 }; case 2: return { x: -90, y: 0 }; case 5: return { x: 90,  y: 0 }; default: return { x: 0, y: 0 }; } }\n    async function animateText(element, text) { if(isSkipping) {element.innerHTML = text.replace(/\\n/g, '<br>'); return;} return new Promise(resolve => { if (textAnimation && textAnimation.isActive()) textAnimation.kill(); element.innerHTML = ''; textAnimation = gsap.to(element, { duration: text.length * 0.05, text: { value: text.replace(/\\n/g, '<br>'), newClass: \"typed-cursor\" }, ease: \"none\", onComplete: () => { gsap.delayedCall(0.7, () => { element.querySelector('.typed-cursor')?.remove(); resolve(); }); } }); }); }\n    function initDicePool() { const diceTemplate = document.querySelector('[data-id_template=\"dice-cube\"]'); if (!diceTemplate) return; for (let i = 0; i < MAX_DICE; i++) { const dieIconElement = document.createElement('div'); dieIconElement.className = 'dice-icon'; const newCube = diceTemplate.cloneNode(true); dieIconElement.appendChild(newCube); DOM.diceContainer.appendChild(dieIconElement); setupCube(newCube); dicePool.push(dieIconElement); } }\n    async function animateRoll(numDice, preCalculatedRolls, textToShowDuringRoll = \"投掷中...\") { return new Promise(resolve => { if (currentAnimation && currentAnimation.isActive()) currentAnimation.kill(); dicePool.forEach(die => die.style.display = 'none'); const activeDice = dicePool.slice(0, numDice); animateText(DOM.diceResultText, textToShowDuringRoll); activeDice.forEach(die => { die.style.display = 'flex'; die.className = 'dice-icon'; }); const masterTl = gsap.timeline({ onComplete: () => { if(isSkipping) DOM.diceResultText.innerHTML = ''; resolve(preCalculatedRolls); }}); currentAnimation = masterTl; activeDice.forEach((dieElement, i) => { const dieCube = dieElement.querySelector('.dice-cube'); const visualRoll = preCalculatedRolls[i]; const targetRotation = getRotationForFace(visualRoll); const dieTimeline = gsap.timeline(); dieTimeline.to(dieCube, { rotationX: `+=${gsap.utils.random(720, 1080)}`, rotationY: `+=${gsap.utils.random(720, 1080)}`, duration: 1.8, ease: \"power2.in\" }).to(dieCube, { rotationX: targetRotation.x, rotationY: targetRotation.y, duration: 0.7, ease: \"power4.out\" }); masterTl.add(dieTimeline, 0); }); }); }\n    \n    const debouncedUpdate = debounce(updateUI, 400);\n    [DOM.nameInput, DOM.genderInput, DOM.ageInput, DOM.ocDetailsInput].forEach(el => el.addEventListener('input', debouncedUpdate));\n    \n    DOM.skipAnimationBtn.addEventListener('click', () => {\n        isSkipping = true;\n        if (currentAnimation && currentAnimation.isActive()) currentAnimation.progress(1);\n        if (textAnimation && textAnimation.isActive()) textAnimation.progress(1);\n    });\n\n    $('#roll-background-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const rolls = [roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6(), roll1D6()];\n        await animateRoll(6, rolls, '投掷 经历... (2d6 x 3)');\n        \n        const sums = { origin: rolls[0] + rolls[1], past: rolls[2] + rolls[3], encounter: rolls[4] + rolls[5] };\n        \n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `出身: ${rolls[0]} + ${rolls[1]} = ${sums.origin}\\n(${backgroundData.origin[character.race][sums.origin].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(0, 2), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `来历: ${rolls[2]} + ${rolls[3]} = ${sums.past}\\n(${backgroundData.past[sums.past].name})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        if (!isSkipping) {\n            gsap.to(dicePool.slice(2, 4), { className: 'dice-icon', duration: 0.3 });\n            gsap.to(dicePool.slice(4, 6), { className: 'dice-icon highlight', duration: 0.3 });\n            await animateText(DOM.diceResultText, `邂逅: ${rolls[4]} + ${rolls[5]} = ${sums.encounter}\\n(${backgroundData.encounter[sums.encounter]})`);\n            if(!isSkipping) await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        character.background.origin = backgroundData.origin[character.race][sums.origin];\n        character.background.past = backgroundData.past[sums.past];\n        character.background.encounter = backgroundData.encounter[sums.encounter];\n        DOM.bgOrigin.textContent = character.background.origin.name;\n        DOM.bgPast.textContent = character.background.past.name;\n        DOM.bgEncounter.textContent = character.background.encounter;\n        DOM.backgroundDisplay.style.display = 'block';\n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        updateUI(true);\n    });\n\n    $('#roll-attributes-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        DOM.diceOverlay.style.display = 'flex';\n        isSkipping = false;\n\n        const attrRolls = raceData[character.race].attr_rolls;\n        const allCalculatedRolls = [];\n\n        // Prepare race-based attributes\n        for (const attr in attrRolls) {\n            const formula = attrRolls[attr];\n            const modifier = parseInt(formula.split('d3')[1] || '0');\n            const { d6, d3 } = roll1D3();\n            const finalValue = Math.max(0, d3 + modifier);\n            character.attributes[attr] = finalValue;\n            allCalculatedRolls.push({ attr, formula, d6, d3, modifier, finalValue });\n        }\n        \n        // Prepare \"Potential\" attribute\n        const potentialValue = Math.floor(Math.random() * 3) + 1;\n        const d6ForPotential = (potentialValue * 2) - 1; // Map 1,2,3 to d6 faces 1,3,5 for animation\n        character.attributes['潜力'] = potentialValue;\n        allCalculatedRolls.push({\n            attr: '潜力',\n            formula: '1-3', // Just a descriptor\n            d6: d6ForPotential,\n            finalValue: potentialValue\n        });\n        \n        // Animate all rolls sequentially\n        for (const roll of allCalculatedRolls) {\n            await animateRoll(1, [roll.d6], `投掷 ${roll.attr}...`);\n            if (isSkipping) break;\n\n            gsap.to(dicePool[0], { className: 'dice-icon highlight', duration: 0.3 });\n            \n            let resultText;\n            if (roll.attr === '潜力') {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.finalValue}`;\n            } else {\n                resultText = `${roll.attr}: ${diceUnicode[roll.d6 - 1]}(${roll.d6}) → ${roll.d3} ${roll.modifier >= 0 ? '+' : ''} ${roll.modifier} = ${roll.finalValue}`;\n            }\n            await animateText(DOM.diceResultText, resultText);\n            \n            await updateUI();\n            \n            if (isSkipping) break;\n            \n            await new Promise(r => setTimeout(r, 1500));\n        }\n        \n        DOM.diceOverlay.style.display = 'none';\n        e.target.disabled = false;\n        await updateUI();\n    });\n\n    DOM.raceSelect.addEventListener('change', () => {\n        DOM.backgroundDisplay.style.display = 'none';\n        character.background = { origin: null, past: null, encounter: null };\n        Object.keys(character.attributes).forEach(k => character.attributes[k] = 0);\n        updateUI(true);\n    });\n\n    $('#submit-btn').addEventListener('click', async (e) => {\n        e.target.disabled = true;\n        await updateUI(true);\n        \n        const uniqueSkills = [...new Set(character.skills)];\n        const finalName = character.name.trim() || '{{user}}';\n        const formattedAge = formatAge(character.age) || '未设定';\n        \n        const finalCharacterObject={ NAME:finalName, GENDER:character.gender||'未设定', AGE:formattedAge, RACE:character.race, ORIGIN: character.background.origin ? character.background.origin.name : '未知', PAST: character.background.past ? character.background.past.name : '未知', ENCOUNTER: character.background.encounter || '未知', SKILLS: uniqueSkills, OC_DETAILS:character.oc_details||'无', ...character.attributes, MONEY:character.money };\n        \n        const slashCommand=`/send <START>\\nAdmin:\\n这是一个TRPG开局，请为 User 生成一段详尽的背景故事。\\n\\n# 故事核心要求\\n请严格根据以下【角色完整设定】，撰写一段从角色童年到现在的成长故事。故事需要清晰地阐述是什么关键事件或心路历程，最终让他/她确立了要成为一名冒险者的志向。请在故事中自然地融入角色的种族、出身背景、技能和性格特点。\\n\\n# 角色完整设定\\n---\\n## 基础信息\\n- **姓名:** ${finalName}\\n- **性别:** ${character.gender||'未设定'}\\n- **年龄:** ${formattedAge}\\n- **种族:** ${character.race}\\n\\n## 经历\\n- **出身:** ${character.background.origin ? character.background.origin.name : '未知'}\\n- **来历:** ${character.background.past ? character.background.past.name : '未知'}\\n- **邂逅:** ${character.background.encounter || '未知'}\\n\\n## 背景与技能\\n- **初始职业:** ${Object.keys(character.classes).length > 0 ? Object.entries(character.classes).map(([c, l]) => `${c} ${l}级`).join(', ') : '无'}\\n- **初始技能:** ${uniqueSkills.join(', ')||'无'}\\n\\n## 补充设定 (OC)\\n- **额外补充:** ${character.oc_details||'无'}\\n\\n## 能力值\\n- **力量:** ${character.attributes['力量']}\\n- **敏捷:** ${character.attributes['敏捷']}\\n- **感知:** ${character.attributes['感知']}\\n- **知识:** ${character.attributes['知识']}\\n- **魅力:** ${character.attributes['魅力']}\\n- **信仰力:** ${character.attributes['信仰力']}\\n- **魔力:** ${character.attributes['魔力']}\\n\\n## 初始资产\\n- **资金:** ${character.money} 银币\\n\\|\\n/trigger`; \n        \n        try {\n            if (typeof insertOrAssignVariables === 'function') {\n                await insertOrAssignVariables(finalCharacterObject);\n            } else {\n                console.log(\"SillyTavern Function 'insertOrAssignVariables' not found. Variables:\", finalCharacterObject);\n            }\n            if (typeof triggerSlash === 'function') {\n                await triggerSlash(slashCommand, 'Send');\n            } else { \n                console.log(\"SillyTavern Function 'triggerSlash' not found. Command will be copied to clipboard.\");\n                navigator.clipboard.writeText(slashCommand).then(() => {\n                    alert('角色指令已复制到剪贴板！');\n                });\n            }\n        } catch (error) {\n            console.error('与SillyTavern交互失败:', error);\n            alert('与SillyTavern交互失败，请查看浏览器控制台。');\n        }\n\n        e.target.innerHTML = \"契约成立！\";\n    });\n    \n    initDicePool();\n    Object.keys(raceData).forEach(key => DOM.raceSelect.add(new Option(key, key)));\n    Object.keys(character.attributes).forEach(key => {\n        const pointControl = document.createElement('div');\n        pointControl.className = 'point-control';\n        pointControl.innerHTML = `<span class=\"label\">${key}</span><input type=\"text\" id=\"attr-${key.replace(/\\s/g, '')}\" readonly value=\"0\">`; // ID santized just in case\n        DOM.attributesContainer.appendChild(pointControl);\n    });\n    // A small fix for renderAttributes to handle sanitized IDs\n    function renderAttributes() { Object.entries(character.attributes).forEach(([key, value]) => { $(`#attr-${key.replace(/\\s/g, '')}`).value = value; }); }\n    updateUI(true);\n});\n</script>\n\n</body>\n</html>\n```"
  }
]