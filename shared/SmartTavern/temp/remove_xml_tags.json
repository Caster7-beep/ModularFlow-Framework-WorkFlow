[
    {
        "id": "remove_xml_tags_rule",
        "name": "Remove XML Tags",
        "enabled": false,
        "find_regex": "<([a-zA-Z0-9]+)>(.|\n)*?</\\1>",
        "replace_regex": "",
        "targets": [
            "user",
            "assistant",
            "world_book",
            "preset",
            "assistant_thinking"
        ],
        "placement": "before_format",
        "views": [
            "user_view",
            "assistant_view"
        ],
        "description": "Removes XML tags and their content, affecting only the user_view."
    },
    {
        "id": "53a86be21-aaa329111a-45b5-88c1-4209d4d232f1a11",
        "name": "Áä∂ÊÄÅÊ†è",
        "enabled": false,
        "find_regex": "<StatusPlaceHolderImpl/>",
        "replace_regex": "```html\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Âú£Â•≥ÂßêÂ¶πÁöÑÁä∂ÊÄÅ</title>\n    <style>\n        @import url('https://fonts.googleapis.com/css2?family=Noto+Serif+SC:wght@400;700&display=swap');\n        :root {\n            --bg-color-light: #f8f6f2;\n            --card-color-light: #ffffff;\n            --text-color-light: #5c5c5c;\n            --header-color-light: #8f7a66;\n            --border-color-light: #e0d9d1;\n            --section-header-bg-light: #fdfaf7;\n            --progress-bar-bg-light: #ece6e0;\n\n            --bg-color-dark: #2c2c2e;\n            --card-color-dark: #3a3a3c;\n            --text-color-dark: #dcdcdc;\n            --header-color-dark: #c8bcae;\n            --border-color-dark: #515154;\n            --section-header-bg-dark: #444446;\n            --progress-bar-bg-dark: #202020;\n\n            --kokoro-accent: #E57373;\n            --tsuyu-accent: #64B5F6;\n            --lover-color: #ff6b6b;\n\n            --anim-speed: 0.3s;\n        }\n        body {\n            font-family: 'Noto Serif SC', serif;\n            background-color: transparent!important;\n            margin: 0;\n            padding: 8px;\n            color: var(--text-color);\n            box-sizing: border-box;\n        }\n        .status-card, body, .progress-bar-value, .indicator-icon {\n            transition: background-color var(--anim-speed) ease, color var(--anim-speed) ease, border-color var(--anim-speed) ease;\n        }\n        body.light-theme {\n            --bg-color: var(--bg-color-light);\n            --card-color: var(--card-color-light);\n            --text-color: var(--text-color-light);\n            --header-color: var(--header-color-light);\n            --border-color: var(--border-color-light);\n            --section-header-bg: var(--section-header-bg-light);\n            --progress-bar-bg: var(--progress-bar-bg-light);\n        }\n        body.dark-theme {\n            --bg-color: var(--bg-color-dark);\n            --card-color: var(--card-color-dark);\n            --text-color: var(--text-color-dark);\n            --header-color: var(--header-color-dark);\n            --border-color: var(--border-color-dark);\n            --section-header-bg: var(--section-header-bg-dark);\n            --progress-bar-bg: var(--progress-bar-bg-dark);\n        }\n        .status-card {\n            background-color: var(--card-color);\n            border-radius: 12px;\n            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08); /* A bit softer shadow */\n            border: 1px solid var(--border-color);\n            overflow: hidden;\n            max-width: 400px;\n            margin: auto;\n            position: relative;\n        }\n        .theme-toggle {\n            position: absolute;\n            top: 13px; /* vertically aligned header text */\n            left: 13px;\n            cursor: pointer;\n            font-size: 1.6em;\n            user-select: none;\n            transition: transform var(--anim-speed) ease;\n        }\n        .card-header {\n            padding: 12px 18px;\n            border-bottom: 1px solid var(--border-color);\n        }\n        .card-header h2 {\n            margin: 0;\n            font-size: 1.1em;\n            font-weight: 700;\n            color: var(--header-color);\n            text-align: center;\n        }\n        .unfolded-section {\n            padding: 8px 16px;\n        }\n        .card-body {\n            padding: 8px;\n            display: flex;\n            flex-direction: column;\n            gap: 8px;\n        }\n        .section-header {\n            background-color: var(--section-header-bg);\n            padding: 10px 15px;\n            cursor: pointer;\n            border-radius: 8px;\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            font-weight: normal;\n            font-size: 1.1em;\n            user-select: none;\n            transition: background-color var(--anim-speed) ease, border-radius var(--anim-speed) ease;\n        }\n        .section-header:hover {\n           opacity: 0.8;\n        }\n        .section-header.expanded-header {\n            border-bottom-left-radius: 0;\n            border-bottom-right-radius: 0;\n        }\n        .indicator-icon {\n            transition: transform var(--anim-speed) ease;\n        }\n        .section-header.expanded-header .indicator-icon {\n            transform: rotate(180deg);\n        }\n        .section-content {\n            overflow: hidden;\n            max-height: 0px;\n            padding-left: 15px;\n            padding-right: 15px;\n            background-color: var(--card-color);\n            border: 1px solid var(--border-color);\n            border-top: none;\n            border-bottom-left-radius: 8px;\n            border-bottom-right-radius: 8px;\n            transition: max-height 0.4s ease-out, padding var(--anim-speed) ease;\n        }\n        .section-content.expanded {\n            padding-top: 15px;\n            padding-bottom: 15px;\n            max-height: 500px;\n        }\n        .property {\n            display: grid;\n            grid-template-columns: auto 1fr;\n            gap: 8px 16px;\n            align-items: center;\n            font-size: 0.9em;\n            padding: 8px 0;\n            border-bottom: 1px dashed var(--border-color);\n        }\n        .property:last-child {\n            border-bottom: none;\n        }\n        .property-name {\n            font-weight: normal;\n            color: var(--header-color);\n        }\n        .full-width-property {\n             grid-template-columns: 1fr;\n             gap: 4px;\n        }\n        .full-width-property .value-main {\n            text-align: left;\n            width: 100%;\n        }\n        .property-value-container {\n            word-break: break-word; /* Allows long text to wrap */\n            display: flex;\n            justify-content: flex-end;\n        }\n        .value-main {\n            font-weight: bold;\n            text-align: right;\n        }\n        .progress-bar-container {\n            grid-column: 1 / -1;\n            width: 100%;\n            background-color: var(--progress-bar-bg);\n            border-radius: 5px;\n            height: 6px;\n            overflow: hidden;\n            margin-top: 4px;\n        }\n        .progress-bar-value {\n            height: 100%;\n            width: 0%;\n            border-radius: 5px;\n            transition: width 0.5s ease-out, background-color var(--anim-speed) ease;\n        }\n    </style>\n</head>\n<body class=\"light-theme\">\n<div class=\"status-card\" id=\"status-card\">\n    <div class=\"theme-toggle\" id=\"theme-toggle\">üçÄ</div>\n    <div class=\"card-header\">\n        <h2>Â°ûË•øËéâ‰∫öÂ∞èÈïáÁ∫™‰∫ã</h2>\n    </div>\n\n    <div class=\"unfolded-section\">\n        <div class=\"property\">\n            <div class=\"property-name\">ÂΩìÂâçÊó•Êúü</div>\n            <div class=\"property-value-container\"><span class=\"value-main\" id=\"global-date\">---</span></div>\n        </div>\n        <div class=\"property\">\n            <div class=\"property-name\">ÂΩìÂâçÊó∂Èó¥</div>\n            <div class=\"property-value-container\"><span class=\"value-main\" id=\"global-time\">---</span></div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"section\">\n            <div class=\"section-header\" onclick=\"toggleSection(this)\">\n                <span>ÂøÉ (Kokoro)</span>\n                <span class=\"indicator-icon\">‚ñº</span>\n            </div>\n            <div class=\"section-content\">\n                 <div class=\"property\">\n                    <div class=\"property-name\">ÊÅã‰∫∫Áä∂ÊÄÅ</div>\n                    <div class=\"property-value-container\"><span class=\"value-main\" id=\"kokoro-lover-status\">--</span></div>\n                </div>\n                <div class=\"property\">\n                    <div class=\"property-name\">Â•ΩÊÑüÂ∫¶</div>\n                    <div class=\"property-value-container\"><span class=\"value-main\" id=\"kokoro-affection\">0</span></div>\n                     <div class=\"progress-bar-container\">\n                        <div id=\"kokoro-affection-bar\" class=\"progress-bar-value\"></div>\n                    </div>\n                </div>\n                <div class=\"property\">\n                    <div class=\"property-name\">ÈÜãÊÑèÂÄº</div>\n                    <div class=\"property-value-container\"><span class=\"value-main\" id=\"kokoro-jealousy\">0</span></div>\n                    <div class=\"progress-bar-container\">\n                        <div id=\"kokoro-jealousy-bar\" class=\"progress-bar-value\"></div>\n                    </div>\n                </div>\n                <div class=\"property\">\n                    <div class=\"property-name\">ÂÅ∑Ë∑ë/Ë¢´ÊäìÂåÖ</div>\n                    <div class=\"property-value-container\"><span class=\"value-main\" id=\"kokoro-sneak-status\">0 / 0</span></div>\n                </div>\n                 <div class=\"property full-width-property\">\n                    <div class=\"property-name\">ÂΩìÂâç‰ΩçÁΩÆ</div>\n                    <div class=\"property-value-container\"><span class=\"value-main\" id=\"kokoro-location\">--</span></div>\n                </div>\n                 <div class=\"property full-width-property\">\n                    <div class=\"property-name\">ÁùÄË£Ö</div>\n                    <div class=\"property-value-container\"><span class=\"value-main\" id=\"kokoro-outfit\">--</span></div>\n                </div>\n                 <div class=\"property full-width-property\">\n                    <div class=\"property-name\">ÂÜÖÂøÉÊâÄÊÉ≥</div>\n                    <div class=\"property-value-container\"><span class=\"value-main\" id=\"kokoro-thoughts\">--</span></div>\n                </div>\n            </div>\n        </div>\n        <div class=\"section\">\n            <div class=\"section-header\" onclick=\"toggleSection(this)\">\n                <span>Èú≤ (Tsuyu)</span>\n                 <span class=\"indicator-icon\">‚ñº</span>\n            </div>\n            <div class=\"section-content\">\n                 <div class=\"property\">\n                    <div class=\"property-name\">ÊÅã‰∫∫Áä∂ÊÄÅ</div>\n                    <div class=\"property-value-container\"><span class=\"value-main\" id=\"tsuyu-lover-status\">--</span></div>\n                </div>\n                <div class=\"property\">\n                    <div class=\"property-name\">Â•ΩÊÑüÂ∫¶</div>\n                    <div class=\"property-value-container\"><span class=\"value-main\" id=\"tsuyu-affection\">0</span></div>\n                     <div class=\"progress-bar-container\">\n                        <div id=\"tsuyu-affection-bar\" class=\"progress-bar-value\"></div>\n                    </div>\n                </div>\n                 <div class=\"property\">\n                    <div class=\"property-name\">ÂÅ∑Ë∑ë/Ë¢´ÊäìÂåÖ</div>\n                    <div class=\"property-value-container\"><span class=\"value-main\" id=\"tsuyu-sneak-status\">0 / 0</span></div>\n                </div>\n                <div class=\"property full-width-property\">\n                    <div class=\"property-name\">ÂΩìÂâç‰ΩçÁΩÆ</div>\n                    <div class=\"property-value-container\"><span class=\"value-main\" id=\"tsuyu-location\">--</span></div>\n                </div>\n                <div class=\"property full-width-property\">\n                    <div class=\"property-name\">ÁùÄË£Ö</div>\n                    <div class=\"property-value-container\"><span class=\"value-main\" id=\"tsuyu-outfit\">--</span></div>\n                </div>\n                <div class=\"property full-width-property\">\n                    <div class=\"property-name\">ÂÜÖÂøÉÊâÄÊÉ≥</div>\n                    <div class=\"property-value-container\"><span class=\"value-main\" id=\"tsuyu-thoughts\">--</span></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<script>\n    function SafeGetValue(obj, path, defaultValue = [\"N/A\", \"\"]) {\n        let keys = Array.isArray(path) ? path : path.split('.');\n        let current = obj;\n        for (let i = 0; i < keys.length; i++) {\n        if (current === undefined || current === null || typeof current !== 'object' || !current.hasOwnProperty(keys[i])) {\n            return defaultValue;\n        }\n        current = current[keys[i]];\n        }\n        if (current === undefined || current === null) {\n        return defaultValue;\n        }\n        return current;\n    }\n\n    function parseVariable(variableData, defaultValue = 'N/A') {\n        let rawContent = Array.isArray(variableData) ? variableData[0] : variableData;\n        rawContent = (rawContent === undefined || rawContent === null) ? '' : String(rawContent);\n\n        const parts = rawContent.split('->');\n        let numericStr = parts[0].trim();\n        let displayStr = parts.length > 1 ? parts[1].trim() : parts[0].trim();\n\n        const num = parseFloat(numericStr);\n        return {\n            numericValue: isNaN(num) ? 0 : num,\n            displayValue: (displayStr === '' || displayStr === 'N/A') ? (isNaN(num) ? defaultValue : numericStr) : displayStr\n        };\n    }\n\n    function updateProgressBar(barId, valueMainId, variableData, min, max, color) {\n        const progressBar = document.getElementById(barId);\n        const valueMainDisplay = document.getElementById(valueMainId);\n        if (!valueMainDisplay) return;\n\n        const { numericValue, displayValue } = parseVariable(variableData);\n\n        valueMainDisplay.innerText = displayValue;\n\n        if (!progressBar) return;\n        const boundedValue = Math.max(min, Math.min(max, numericValue));\n        const range = max - min;\n        const percentage = range === 0 ? (boundedValue >= max ? 100 : 0) : ((boundedValue - min) / range) * 100;\n\n        progressBar.style.width = `${Math.max(0, Math.min(100, percentage))}%`;\n        if(color) {\n            progressBar.style.backgroundColor = color;\n        }\n    }\n\n    function updateValue(elementId, variableData, defaultValue = '--') {\n         const element = document.getElementById(elementId);\n         if(element) {\n             element.innerText = parseVariable(variableData, defaultValue).displayValue;\n         }\n     }\n\n      function updateAndCombineValues(elementId, var1Data, var2Data, separator = ' / ', defaultValue = '0') {\n         const element = document.getElementById(elementId);\n         if (!element) return;\n         const val1 = parseVariable(var1Data, defaultValue).displayValue;\n         const val2 = parseVariable(var2Data, defaultValue).displayValue;\n         element.innerText = `${val1}${separator}${val2}`;\n    }\n\n    async function initDisplay() {\n        try {\n            const messages = await getChatMessages(getCurrentMessageId());\n            if (!messages || messages.length === 0 || !messages[0].data) return;\n\n            const gameData = messages[0].data;\n            const characterData = gameData.display_data || gameData.stat_data;\n            if (!characterData) return;\n\n            if (characterData.hasOwnProperty('ÂÖ®Â±Ä')) {\n                 updateValue('global-date', SafeGetValue(characterData, 'ÂÖ®Â±Ä.Êó•Êúü'));\n                 updateValue('global-time', SafeGetValue(characterData, 'ÂÖ®Â±Ä.Êó∂Èó¥'));\n            }\n\n            if (characterData.hasOwnProperty('ÂøÉ')) {\n                updateProgressBar('kokoro-affection-bar', 'kokoro-affection', SafeGetValue(characterData, 'ÂøÉ.Â•ΩÊÑüÂ∫¶'), 0, 100, 'var(--kokoro-accent)');\n                updateProgressBar('kokoro-jealousy-bar', 'kokoro-jealousy', SafeGetValue(characterData, 'ÂøÉ.ÈÜãÊÑèÂÄº'), 0, 90, 'var(--kokoro-accent)');\n                updateAndCombineValues('kokoro-sneak-status', SafeGetValue(characterData, 'ÂøÉ.ÂÅ∑Ë∑ëÊ¨°Êï∞'), SafeGetValue(characterData, 'ÂøÉ.Ë¢´ÊäìÂåÖÊ¨°Êï∞'));\n\n\n                 let isLoverKokoroRaw = SafeGetValue(characterData, 'ÂøÉ.ÊÅã‰∫∫', [false]);\n                 const isLoverKokoro = Array.isArray(isLoverKokoroRaw) ? isLoverKokoroRaw[0] : isLoverKokoroRaw;\n                 const kokoroLoverStatusEl = document.getElementById('kokoro-lover-status');\n                 if(kokoroLoverStatusEl){\n                     kokoroLoverStatusEl.innerText = isLoverKokoro ? '‚ù§Ô∏é ÊÅã‰∫∫' : 'ÈùíÊ¢ÖÁ´πÈ©¨';\n                     kokoroLoverStatusEl.style.color = isLoverKokoro ? 'var(--lover-color)' : 'inherit';\n                 }\n\n                 updateValue('kokoro-location', SafeGetValue(characterData, 'ÂøÉ.ÂΩìÂâç‰ΩçÁΩÆ'));\n                 updateValue('kokoro-outfit', SafeGetValue(characterData, 'ÂøÉ.ÁùÄË£Ö'));\n                 updateValue('kokoro-thoughts', SafeGetValue(characterData, 'ÂøÉ.ÂÜÖÂøÉÊâÄÊÉ≥'));\n            }\n\n            if (characterData.hasOwnProperty('Èú≤')) {\n                 updateProgressBar('tsuyu-affection-bar', 'tsuyu-affection', SafeGetValue(characterData, 'Èú≤.Â•ΩÊÑüÂ∫¶'), 0, 100, 'var(--tsuyu-accent)');\n                 updateAndCombineValues('tsuyu-sneak-status', SafeGetValue(characterData, 'Èú≤.ÂÅ∑Ë∑ëÊ¨°Êï∞'), SafeGetValue(characterData, 'Èú≤.Ë¢´ÊäìÂåÖÊ¨°Êï∞'));\n\n\n                 let isLoverTsuyuRaw = SafeGetValue(characterData, 'Èú≤.ÊÅã‰∫∫', [false]);\n                 const isLoverTsuyu = Array.isArray(isLoverTsuyuRaw) ? isLoverTsuyuRaw[0] : isLoverTsuyuRaw;\n                 const tsuyuLoverStatusEl = document.getElementById('tsuyu-lover-status');\n                  if(tsuyuLoverStatusEl){\n                     tsuyuLoverStatusEl.innerText = isLoverTsuyu ? '‚ù§Ô∏é ÊÅã‰∫∫' : 'ÂÆû‰π†‰øÆË°å';\n                     tsuyuLoverStatusEl.style.color = isLoverTsuyu ? 'var(--lover-color)' : 'inherit';\n                  }\n\n                 updateValue('tsuyu-location', SafeGetValue(characterData, 'Èú≤.ÂΩìÂâç‰ΩçÁΩÆ'));\n                 updateValue('tsuyu-outfit', SafeGetValue(characterData, 'Èú≤.ÁùÄË£Ö'));\n                 updateValue('tsuyu-thoughts', SafeGetValue(characterData, 'Èú≤.ÂÜÖÂøÉÊâÄÊÉ≥'));\n            }\n        document.body.style.opacity = '1';\n        } catch (error) {\n             const card = document.getElementById('status-card');\n             if(card) card.innerHTML = `<p style='color:red; padding:10px;'>Áä∂ÊÄÅÊ†èÂä†ËΩΩÂá∫Èîô: ${error.message}</p>`;\n        }\n    }\n        function toggleSection(element) {\n        const content = element.nextElementSibling;\n        if (!content) return;\n        const isExpanded = content.classList.contains('expanded');\n                element.classList.toggle('expanded-header', !isExpanded);\n        content.classList.toggle('expanded', !isExpanded);\n    }\n        function toggleTheme() {\n        const bodyClass = document.body.classList;\n        if(bodyClass.contains('dark-theme')){\n            bodyClass.remove('dark-theme');\n            bodyClass.add('light-theme');\n        } else {\n            bodyClass.remove('light-theme');\n            bodyClass.add('dark-theme');\n        }\n    }\n        document.addEventListener('DOMContentLoaded', () => {\n        document.body.style.opacity = '0'; // Hide until loaded\n        document.getElementById('theme-toggle').addEventListener('click', toggleTheme);\n        initDisplay();\n    });\n</script>\n</body>\n</html>\n```",
        "targets": [
            "assistant"
        ],
        "placement": "after_macro",
        "views": [
            "user_view"
        ],
        "max_depth": 5,
        "description": "‰ªÖÂØπMarkdownÂÜÖÂÆπÁîüÊïà"
    }
]